
bin/audio_experiment.axf:     file format elf32-littlearm


Disassembly of section .text:

0000c000 <g_am_pfnVectors>:
    c000:	00 10 00 10 d5 d9 00 00 cd d9 00 00 f9 c7 00 00     ................
    c010:	f9 c7 00 00 f9 c7 00 00 f9 c7 00 00 00 00 00 00     ................
	...
    c02c:	d1 d9 00 00 d1 d9 00 00 00 00 00 00 d1 d9 00 00     ................
    c03c:	d1 d9 00 00 d1 d9 00 00 d1 d9 00 00 d1 d9 00 00     ................
    c04c:	d1 d9 00 00 d1 d9 00 00 d1 d9 00 00 d1 d9 00 00     ................
    c05c:	d1 d9 00 00 d1 d9 00 00 d1 d9 00 00 d1 d9 00 00     ................
    c06c:	d1 d9 00 00 d1 d9 00 00 65 db 00 00 1d db 00 00     ........e.......
    c07c:	d1 d9 00 00 d1 d9 00 00 d1 d9 00 00 d1 d9 00 00     ................
    c08c:	89 db 00 00 d1 d9 00 00 d1 d9 00 00 d1 d9 00 00     ................
    c09c:	d1 d9 00 00 d1 d9 00 00 d1 d9 00 00 d1 d9 00 00     ................
    c0ac:	d1 d9 00 00 d1 d9 00 00 d1 d9 00 00 d1 d9 00 00     ................
    c0bc:	d1 d9 00 00 d1 d9 00 00 d1 d9 00 00 d1 d9 00 00     ................
    c0cc:	d1 d9 00 00                                         ....

0000c0d0 <__Patchable>:
	...

0000c100 <memcpy>:
    c100:	4684      	mov	ip, r0
    c102:	ea41 0300 	orr.w	r3, r1, r0
    c106:	f013 0303 	ands.w	r3, r3, #3
    c10a:	d16d      	bne.n	c1e8 <memcpy+0xe8>
    c10c:	3a40      	subs	r2, #64	; 0x40
    c10e:	d341      	bcc.n	c194 <memcpy+0x94>
    c110:	f851 3b04 	ldr.w	r3, [r1], #4
    c114:	f840 3b04 	str.w	r3, [r0], #4
    c118:	f851 3b04 	ldr.w	r3, [r1], #4
    c11c:	f840 3b04 	str.w	r3, [r0], #4
    c120:	f851 3b04 	ldr.w	r3, [r1], #4
    c124:	f840 3b04 	str.w	r3, [r0], #4
    c128:	f851 3b04 	ldr.w	r3, [r1], #4
    c12c:	f840 3b04 	str.w	r3, [r0], #4
    c130:	f851 3b04 	ldr.w	r3, [r1], #4
    c134:	f840 3b04 	str.w	r3, [r0], #4
    c138:	f851 3b04 	ldr.w	r3, [r1], #4
    c13c:	f840 3b04 	str.w	r3, [r0], #4
    c140:	f851 3b04 	ldr.w	r3, [r1], #4
    c144:	f840 3b04 	str.w	r3, [r0], #4
    c148:	f851 3b04 	ldr.w	r3, [r1], #4
    c14c:	f840 3b04 	str.w	r3, [r0], #4
    c150:	f851 3b04 	ldr.w	r3, [r1], #4
    c154:	f840 3b04 	str.w	r3, [r0], #4
    c158:	f851 3b04 	ldr.w	r3, [r1], #4
    c15c:	f840 3b04 	str.w	r3, [r0], #4
    c160:	f851 3b04 	ldr.w	r3, [r1], #4
    c164:	f840 3b04 	str.w	r3, [r0], #4
    c168:	f851 3b04 	ldr.w	r3, [r1], #4
    c16c:	f840 3b04 	str.w	r3, [r0], #4
    c170:	f851 3b04 	ldr.w	r3, [r1], #4
    c174:	f840 3b04 	str.w	r3, [r0], #4
    c178:	f851 3b04 	ldr.w	r3, [r1], #4
    c17c:	f840 3b04 	str.w	r3, [r0], #4
    c180:	f851 3b04 	ldr.w	r3, [r1], #4
    c184:	f840 3b04 	str.w	r3, [r0], #4
    c188:	f851 3b04 	ldr.w	r3, [r1], #4
    c18c:	f840 3b04 	str.w	r3, [r0], #4
    c190:	3a40      	subs	r2, #64	; 0x40
    c192:	d2bd      	bcs.n	c110 <memcpy+0x10>
    c194:	3230      	adds	r2, #48	; 0x30
    c196:	d311      	bcc.n	c1bc <memcpy+0xbc>
    c198:	f851 3b04 	ldr.w	r3, [r1], #4
    c19c:	f840 3b04 	str.w	r3, [r0], #4
    c1a0:	f851 3b04 	ldr.w	r3, [r1], #4
    c1a4:	f840 3b04 	str.w	r3, [r0], #4
    c1a8:	f851 3b04 	ldr.w	r3, [r1], #4
    c1ac:	f840 3b04 	str.w	r3, [r0], #4
    c1b0:	f851 3b04 	ldr.w	r3, [r1], #4
    c1b4:	f840 3b04 	str.w	r3, [r0], #4
    c1b8:	3a10      	subs	r2, #16
    c1ba:	d2ed      	bcs.n	c198 <memcpy+0x98>
    c1bc:	320c      	adds	r2, #12
    c1be:	d305      	bcc.n	c1cc <memcpy+0xcc>
    c1c0:	f851 3b04 	ldr.w	r3, [r1], #4
    c1c4:	f840 3b04 	str.w	r3, [r0], #4
    c1c8:	3a04      	subs	r2, #4
    c1ca:	d2f9      	bcs.n	c1c0 <memcpy+0xc0>
    c1cc:	3204      	adds	r2, #4
    c1ce:	d008      	beq.n	c1e2 <memcpy+0xe2>
    c1d0:	07d2      	lsls	r2, r2, #31
    c1d2:	bf1c      	itt	ne
    c1d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
    c1d8:	f800 3b01 	strbne.w	r3, [r0], #1
    c1dc:	d301      	bcc.n	c1e2 <memcpy+0xe2>
    c1de:	880b      	ldrh	r3, [r1, #0]
    c1e0:	8003      	strh	r3, [r0, #0]
    c1e2:	4660      	mov	r0, ip
    c1e4:	4770      	bx	lr
    c1e6:	bf00      	nop
    c1e8:	2a08      	cmp	r2, #8
    c1ea:	d313      	bcc.n	c214 <memcpy+0x114>
    c1ec:	078b      	lsls	r3, r1, #30
    c1ee:	d08d      	beq.n	c10c <memcpy+0xc>
    c1f0:	f010 0303 	ands.w	r3, r0, #3
    c1f4:	d08a      	beq.n	c10c <memcpy+0xc>
    c1f6:	f1c3 0304 	rsb	r3, r3, #4
    c1fa:	1ad2      	subs	r2, r2, r3
    c1fc:	07db      	lsls	r3, r3, #31
    c1fe:	bf1c      	itt	ne
    c200:	f811 3b01 	ldrbne.w	r3, [r1], #1
    c204:	f800 3b01 	strbne.w	r3, [r0], #1
    c208:	d380      	bcc.n	c10c <memcpy+0xc>
    c20a:	f831 3b02 	ldrh.w	r3, [r1], #2
    c20e:	f820 3b02 	strh.w	r3, [r0], #2
    c212:	e77b      	b.n	c10c <memcpy+0xc>
    c214:	3a04      	subs	r2, #4
    c216:	d3d9      	bcc.n	c1cc <memcpy+0xcc>
    c218:	3a01      	subs	r2, #1
    c21a:	f811 3b01 	ldrb.w	r3, [r1], #1
    c21e:	f800 3b01 	strb.w	r3, [r0], #1
    c222:	d2f9      	bcs.n	c218 <memcpy+0x118>
    c224:	780b      	ldrb	r3, [r1, #0]
    c226:	7003      	strb	r3, [r0, #0]
    c228:	784b      	ldrb	r3, [r1, #1]
    c22a:	7043      	strb	r3, [r0, #1]
    c22c:	788b      	ldrb	r3, [r1, #2]
    c22e:	7083      	strb	r3, [r0, #2]
    c230:	4660      	mov	r0, ip
    c232:	4770      	bx	lr

0000c234 <__aeabi_d2f>:
    c234:	ea4f 0241 	mov.w	r2, r1, lsl #1
    c238:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    c23c:	bf24      	itt	cs
    c23e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    c242:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    c246:	d90d      	bls.n	c264 <__aeabi_d2f+0x30>
    c248:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    c24c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    c250:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    c254:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    c258:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    c25c:	bf08      	it	eq
    c25e:	f020 0001 	biceq.w	r0, r0, #1
    c262:	4770      	bx	lr
    c264:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    c268:	d121      	bne.n	c2ae <__aeabi_d2f+0x7a>
    c26a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    c26e:	bfbc      	itt	lt
    c270:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    c274:	4770      	bxlt	lr
    c276:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    c27a:	ea4f 5252 	mov.w	r2, r2, lsr #21
    c27e:	f1c2 0218 	rsb	r2, r2, #24
    c282:	f1c2 0c20 	rsb	ip, r2, #32
    c286:	fa10 f30c 	lsls.w	r3, r0, ip
    c28a:	fa20 f002 	lsr.w	r0, r0, r2
    c28e:	bf18      	it	ne
    c290:	f040 0001 	orrne.w	r0, r0, #1
    c294:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    c298:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    c29c:	fa03 fc0c 	lsl.w	ip, r3, ip
    c2a0:	ea40 000c 	orr.w	r0, r0, ip
    c2a4:	fa23 f302 	lsr.w	r3, r3, r2
    c2a8:	ea4f 0343 	mov.w	r3, r3, lsl #1
    c2ac:	e7cc      	b.n	c248 <__aeabi_d2f+0x14>
    c2ae:	ea7f 5362 	mvns.w	r3, r2, asr #21
    c2b2:	d107      	bne.n	c2c4 <__aeabi_d2f+0x90>
    c2b4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    c2b8:	bf1e      	ittt	ne
    c2ba:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    c2be:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    c2c2:	4770      	bxne	lr
    c2c4:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    c2c8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    c2cc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    c2d0:	4770      	bx	lr
    c2d2:	bf00      	nop

0000c2d4 <main>:
#if AM_AEP_MEMCPY_TEST
#include "am_memcpy_ringbuff_test.h"
#endif // AM_AEP_MEMCPY_TEST

int main(void)
{
    c2d4:	b570      	push	{r4, r5, r6, lr}
    am_app_AEP_sys_init();
    c2d6:	f001 fbb7 	bl	da48 <am_app_AEP_sys_init>

    SEGGER_SYSVIEW_Conf(); // initialize SystemView
    c2da:	f002 fedd 	bl	f098 <SEGGER_SYSVIEW_Conf>
    SEGGER_SYSVIEW_Start(); // start SystemView
    c2de:	f002 fcd9 	bl	ec94 <SEGGER_SYSVIEW_Start>
    SEGGER_SYSVIEW_OnIdle();          /* Tells SystemView that System is currently in "Idle"*/
    c2e2:	f002 f92d 	bl	e540 <SEGGER_SYSVIEW_OnIdle>
    //
    // Print the banner.
    //
    DebugLog("Starting audio test\r\n\n");
    c2e6:	481a      	ldr	r0, [pc, #104]	; (c350 <main+0x7c>)
    c2e8:	4e1a      	ldr	r6, [pc, #104]	; (c354 <main+0x80>)
            g_ui32TimerCount = 0;
            am_devices_led_toggle(am_bsp_psLEDs, 0);
        }

#if AM_AEP_MEMCPY_TEST
        am_memcpy_test(&mono_16b_USP1602[11], &g_pui8MemcpyBuff[1], ui32CpyLen);
    c2ea:	4d1b      	ldr	r5, [pc, #108]	; (c358 <main+0x84>)
    c2ec:	4c1b      	ldr	r4, [pc, #108]	; (c35c <main+0x88>)
    DebugLog("Starting audio test\r\n\n");
    c2ee:	f001 fba5 	bl	da3c <DebugLog>
    c2f2:	e01d      	b.n	c330 <main+0x5c>
        am_memcpy_test(&mono_16b_USP1602[11], &g_pui8MemcpyBuff[1], ui32CpyLen);
    c2f4:	f249 4245 	movw	r2, #37957	; 0x9445
    c2f8:	4629      	mov	r1, r5
    c2fa:	4620      	mov	r0, r4
    c2fc:	f001 fc7e 	bl	dbfc <am_memcpy_test>

        am_fast_memcpy_test(&mono_16b_USP1602[11], &g_pui8FastMemcpyBuff[1], ui32CpyLen);
    c300:	f249 4245 	movw	r2, #37957	; 0x9445
    c304:	4916      	ldr	r1, [pc, #88]	; (c360 <main+0x8c>)
    c306:	4620      	mov	r0, r4
    c308:	f001 fc8a 	bl	dc20 <am_fast_memcpy_test>

        if(am_memcpy_verify(&mono_16b_USP1602[11], &g_pui8MemcpyBuff[1], ui32CpyLen) && am_memcpy_verify(&mono_16b_USP1602[11], &g_pui8FastMemcpyBuff[1], ui32CpyLen))
    c30c:	f249 4245 	movw	r2, #37957	; 0x9445
    c310:	4629      	mov	r1, r5
    c312:	4620      	mov	r0, r4
    c314:	f001 fc9e 	bl	dc54 <am_memcpy_verify>
    c318:	f249 4245 	movw	r2, #37957	; 0x9445
    c31c:	4910      	ldr	r1, [pc, #64]	; (c360 <main+0x8c>)
    c31e:	b190      	cbz	r0, c346 <main+0x72>
    c320:	4620      	mov	r0, r4
    c322:	f001 fc97 	bl	dc54 <am_memcpy_verify>
            am_devices_led_on(am_bsp_psLEDs, 2);
    c326:	2102      	movs	r1, #2
        if(am_memcpy_verify(&mono_16b_USP1602[11], &g_pui8MemcpyBuff[1], ui32CpyLen) && am_memcpy_verify(&mono_16b_USP1602[11], &g_pui8FastMemcpyBuff[1], ui32CpyLen))
    c328:	b168      	cbz	r0, c346 <main+0x72>
            am_devices_led_on(am_bsp_psLEDs, 2);
    c32a:	480e      	ldr	r0, [pc, #56]	; (c364 <main+0x90>)
    c32c:	f001 faf8 	bl	d920 <am_devices_led_on>
        if (g_ui32TimerCount >=1000)
    c330:	6833      	ldr	r3, [r6, #0]
    c332:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
    c336:	d3dd      	bcc.n	c2f4 <main+0x20>
            g_ui32TimerCount = 0;
    c338:	2300      	movs	r3, #0
            am_devices_led_toggle(am_bsp_psLEDs, 0);
    c33a:	4619      	mov	r1, r3
    c33c:	4809      	ldr	r0, [pc, #36]	; (c364 <main+0x90>)
            g_ui32TimerCount = 0;
    c33e:	6033      	str	r3, [r6, #0]
            am_devices_led_toggle(am_bsp_psLEDs, 0);
    c340:	f001 fb1c 	bl	d97c <am_devices_led_toggle>
    c344:	e7d6      	b.n	c2f4 <main+0x20>
        else
        {
            am_devices_led_off(am_bsp_psLEDs, 2);
    c346:	2102      	movs	r1, #2
    c348:	4806      	ldr	r0, [pc, #24]	; (c364 <main+0x90>)
    c34a:	f001 faff 	bl	d94c <am_devices_led_off>
    c34e:	e7fe      	b.n	c34e <main+0x7a>
    c350:	00010164 	.word	0x00010164
    c354:	10001154 	.word	0x10001154
    c358:	100125c9 	.word	0x100125c9
    c35c:	0001030b 	.word	0x0001030b
    c360:	10025e4d 	.word	0x10025e4d
    c364:	10001010 	.word	0x10001010

0000c368 <am_hal_pdm_fifo_flush>:
uint32_t
am_hal_pdm_fifo_flush(void *pHandle)
{
    am_hal_pdm_state_t *pState = (am_hal_pdm_state_t *) pHandle;
    uint32_t ui32Module = pState->ui32Module;
    AM_HAL_PDM_HANDLE_CHECK(pHandle);
    c368:	6803      	ldr	r3, [r0, #0]
    c36a:	4a06      	ldr	r2, [pc, #24]	; (c384 <am_hal_pdm_fifo_flush+0x1c>)
    c36c:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    c370:	4293      	cmp	r3, r2
    c372:	d104      	bne.n	c37e <am_hal_pdm_fifo_flush+0x16>

    PDMn(ui32Module)->FIFOFLUSH = 1;
    c374:	4b04      	ldr	r3, [pc, #16]	; (c388 <am_hal_pdm_fifo_flush+0x20>)
    c376:	2201      	movs	r2, #1
    c378:	611a      	str	r2, [r3, #16]

    return AM_HAL_STATUS_SUCCESS;
    c37a:	2000      	movs	r0, #0
    c37c:	4770      	bx	lr
    AM_HAL_PDM_HANDLE_CHECK(pHandle);
    c37e:	2002      	movs	r0, #2
}
    c380:	4770      	bx	lr
    c382:	bf00      	nop
    c384:	01f956e2 	.word	0x01f956e2
    c388:	50011000 	.word	0x50011000

0000c38c <am_hal_pdm_interrupt_clear>:
    uint32_t ui32Module = pState->ui32Module;

    //
    // Check the handle.
    //
    AM_HAL_PDM_HANDLE_CHECK(pHandle);
    c38c:	6803      	ldr	r3, [r0, #0]
    c38e:	4a05      	ldr	r2, [pc, #20]	; (c3a4 <am_hal_pdm_interrupt_clear+0x18>)
    c390:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    c394:	4293      	cmp	r3, r2

    PDMn(ui32Module)->INTCLR = ui32IntMask;
    c396:	bf03      	ittte	eq
    c398:	4b03      	ldreq	r3, [pc, #12]	; (c3a8 <am_hal_pdm_interrupt_clear+0x1c>)

    return AM_HAL_STATUS_SUCCESS;
    c39a:	2000      	moveq	r0, #0
    PDMn(ui32Module)->INTCLR = ui32IntMask;
    c39c:	f8c3 1208 	streq.w	r1, [r3, #520]	; 0x208
    AM_HAL_PDM_HANDLE_CHECK(pHandle);
    c3a0:	2002      	movne	r0, #2
}
    c3a2:	4770      	bx	lr
    c3a4:	01f956e2 	.word	0x01f956e2
    c3a8:	50011000 	.word	0x50011000

0000c3ac <am_hal_pdm_interrupt_status_get>:
    uint32_t ui32Module = pState->ui32Module;

    //
    // Check the handle.
    //
    AM_HAL_PDM_HANDLE_CHECK(pHandle);
    c3ac:	6803      	ldr	r3, [r0, #0]
    c3ae:	480c      	ldr	r0, [pc, #48]	; (c3e0 <am_hal_pdm_interrupt_status_get+0x34>)
    c3b0:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    c3b4:	4283      	cmp	r3, r0
    c3b6:	d110      	bne.n	c3da <am_hal_pdm_interrupt_status_get+0x2e>

    //
    // If requested, only return the interrupts that are enabled.
    //
    if ( bEnabledOnly )
    c3b8:	b92a      	cbnz	r2, c3c6 <am_hal_pdm_interrupt_status_get+0x1a>
        *pui32Status = PDMn(ui32Module)->INTSTAT;
        *pui32Status &= PDMn(ui32Module)->INTEN;
    }
    else
    {
        *pui32Status = PDMn(ui32Module)->INTSTAT;
    c3ba:	4b0a      	ldr	r3, [pc, #40]	; (c3e4 <am_hal_pdm_interrupt_status_get+0x38>)
    c3bc:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
    c3c0:	600b      	str	r3, [r1, #0]
    }

    return AM_HAL_STATUS_SUCCESS;
    c3c2:	4610      	mov	r0, r2
    c3c4:	4770      	bx	lr
        *pui32Status = PDMn(ui32Module)->INTSTAT;
    c3c6:	4a07      	ldr	r2, [pc, #28]	; (c3e4 <am_hal_pdm_interrupt_status_get+0x38>)
    c3c8:	f8d2 3204 	ldr.w	r3, [r2, #516]	; 0x204
    c3cc:	600b      	str	r3, [r1, #0]
        *pui32Status &= PDMn(ui32Module)->INTEN;
    c3ce:	f8d2 2200 	ldr.w	r2, [r2, #512]	; 0x200
    c3d2:	4013      	ands	r3, r2
    c3d4:	600b      	str	r3, [r1, #0]
    return AM_HAL_STATUS_SUCCESS;
    c3d6:	2000      	movs	r0, #0
    c3d8:	4770      	bx	lr
    AM_HAL_PDM_HANDLE_CHECK(pHandle);
    c3da:	2002      	movs	r0, #2
}
    c3dc:	4770      	bx	lr
    c3de:	bf00      	nop
    c3e0:	01f956e2 	.word	0x01f956e2
    c3e4:	50011000 	.word	0x50011000

0000c3e8 <am_hal_gpio_pinconfig>:
    uint32_t ui32Padreg, ui32AltPadCfg, ui32GPCfg;
    uint32_t ui32Funcsel, ui32PowerSw;
    bool bClearEnable = false;

#ifdef AM_HAL_ENABLE_API_VALIDATION
    if ( ui32Pin > 49 )
    c3e8:	2831      	cmp	r0, #49	; 0x31
    c3ea:	f200 80c2 	bhi.w	c572 <am_hal_gpio_pinconfig+0x18a>
{
    c3ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ui32GPCfg = ui32Padreg = ui32AltPadCfg = 0;

    //
    // Get the requested function and/or power switch.
    //
    ui32Funcsel = bfGpioCfg.uFuncSel;
    c3f2:	f001 0207 	and.w	r2, r1, #7
    ui32Padreg |= ui32Funcsel << PADREG_FLD_FNSEL_S;

    //
    // Check for invalid configuration requests.
    //
    if ( bfGpioCfg.ePullup != AM_HAL_GPIO_PIN_PULLUP_NONE )
    c3f6:	f011 07e0 	ands.w	r7, r1, #224	; 0xe0
{
    c3fa:	b087      	sub	sp, #28
    ui32Padreg |= ui32Funcsel << PADREG_FLD_FNSEL_S;
    c3fc:	ea4f 03c2 	mov.w	r3, r2, lsl #3
    ui32PowerSw = bfGpioCfg.ePowerSw;
    c400:	f3c1 04c1 	ubfx	r4, r1, #3, #2
    if ( bfGpioCfg.ePullup != AM_HAL_GPIO_PIN_PULLUP_NONE )
    c404:	d011      	beq.n	c42a <am_hal_gpio_pinconfig+0x42>
        ui32Padreg |= (0x1 << PADREG_FLD_PULLUP_S);

        //
        // Check for specific pullup or pulldown settings.
        //
        if ( (bfGpioCfg.ePullup >= AM_HAL_GPIO_PIN_PULLUP_1_5K) &&
    c406:	f3c1 1642 	ubfx	r6, r1, #5, #3
    c40a:	1db5      	adds	r5, r6, #6
    c40c:	f005 0507 	and.w	r5, r5, #7
    c410:	2d03      	cmp	r5, #3
        ui32Padreg |= (0x1 << PADREG_FLD_PULLUP_S);
    c412:	f043 0301 	orr.w	r3, r3, #1
        if ( (bfGpioCfg.ePullup >= AM_HAL_GPIO_PIN_PULLUP_1_5K) &&
    c416:	f200 80ae 	bhi.w	c576 <am_hal_gpio_pinconfig+0x18e>
             (bfGpioCfg.ePullup <= AM_HAL_GPIO_PIN_PULLUP_24K) )
        {
            ui32Padreg |= ((bfGpioCfg.ePullup - AM_HAL_GPIO_PIN_PULLUP_1_5K) <<
                           PADREG_FLD_76_S);
#ifdef AM_HAL_ENABLE_API_VALIDATION
            if ( !(g_ui8Bit76Capabilities[ui32Pin] & CAP_PUP) )
    c41a:	4d85      	ldr	r5, [pc, #532]	; (c630 <am_hal_gpio_pinconfig+0x248>)
    c41c:	5c2d      	ldrb	r5, [r5, r0]
    c41e:	07ef      	lsls	r7, r5, #31
    c420:	f140 80b4 	bpl.w	c58c <am_hal_gpio_pinconfig+0x1a4>
            ui32Padreg |= ((bfGpioCfg.ePullup - AM_HAL_GPIO_PIN_PULLUP_1_5K) <<
    c424:	3e02      	subs	r6, #2
    c426:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
    }

    //
    // Check if requesting a power switch pin
    //
    if ( ui32PowerSw != AM_HAL_GPIO_PIN_POWERSW_NONE )
    c42a:	2c00      	cmp	r4, #0
    c42c:	f040 8096 	bne.w	c55c <am_hal_gpio_pinconfig+0x174>
    }

    //
    // Depending on the selected pin and FNSEL, determine if INPEN needs to be set.
    //
    ui32Padreg |= (g_ui8Inpen[ui32Pin] & (1 << ui32Funcsel)) ? (1 << PADREG_FLD_INPEN_S) : 0;
    c430:	4d80      	ldr	r5, [pc, #512]	; (c634 <am_hal_gpio_pinconfig+0x24c>)

    //
    // Configure ui32GpCfg based on whether nCE requested.
    //
    if ( g_ui8nCEpins[ui32Pin] == ui32Funcsel )
    c432:	4c81      	ldr	r4, [pc, #516]	; (c638 <am_hal_gpio_pinconfig+0x250>)
    ui32Padreg |= (g_ui8Inpen[ui32Pin] & (1 << ui32Funcsel)) ? (1 << PADREG_FLD_INPEN_S) : 0;
    c434:	5c2d      	ldrb	r5, [r5, r0]
    if ( g_ui8nCEpins[ui32Pin] == ui32Funcsel )
    c436:	5c24      	ldrb	r4, [r4, r0]
    ui32Padreg |= (g_ui8Inpen[ui32Pin] & (1 << ui32Funcsel)) ? (1 << PADREG_FLD_INPEN_S) : 0;
    c438:	4115      	asrs	r5, r2
    c43a:	006d      	lsls	r5, r5, #1
    c43c:	f005 0502 	and.w	r5, r5, #2
    if ( g_ui8nCEpins[ui32Pin] == ui32Funcsel )
    c440:	4294      	cmp	r4, r2
    ui32Padreg |= (g_ui8Inpen[ui32Pin] & (1 << ui32Funcsel)) ? (1 << PADREG_FLD_INPEN_S) : 0;
    c442:	ea45 0503 	orr.w	r5, r5, r3
    if ( g_ui8nCEpins[ui32Pin] == ui32Funcsel )
    c446:	f000 80b0 	beq.w	c5aa <am_hal_gpio_pinconfig+0x1c2>
        //  [INTD(1):OUTCFG(2):INCFG(1)].
        // Bit0 of eIntDir maps to GPIOCFG.INTD  (b3).
        // Bit1 of eIntDir maps to GPIOCFG.INCFG (b0).
        //
        ui32GPCfg |= (bfGpioCfg.eGPOutcfg << GPIOCFG_FLD_OUTCFG_S)              |
                     (((bfGpioCfg.eIntDir >> 0) & 0x1) << GPIOCFG_FLD_INTD_S)   |
    c44a:	f3c1 3341 	ubfx	r3, r1, #13, #2
                     (((bfGpioCfg.eIntDir >> 1) & 0x1) << GPIOCFG_FLD_INCFG_S);

        if ( (bfGpioCfg.eGPOutcfg == AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL) ||
    c44e:	f3c1 2407 	ubfx	r4, r1, #8, #8
                     (((bfGpioCfg.eIntDir >> 1) & 0x1) << GPIOCFG_FLD_INCFG_S);
    c452:	105a      	asrs	r2, r3, #1
        ui32GPCfg |= (bfGpioCfg.eGPOutcfg << GPIOCFG_FLD_OUTCFG_S)              |
    c454:	f3c1 2681 	ubfx	r6, r1, #10, #2
                     (((bfGpioCfg.eIntDir >> 0) & 0x1) << GPIOCFG_FLD_INTD_S)   |
    c458:	00db      	lsls	r3, r3, #3
        if ( (bfGpioCfg.eGPOutcfg == AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL) ||
    c45a:	f004 070c 	and.w	r7, r4, #12
                     (((bfGpioCfg.eIntDir >> 0) & 0x1) << GPIOCFG_FLD_INTD_S)   |
    c45e:	ea42 0646 	orr.w	r6, r2, r6, lsl #1
    c462:	f003 0308 	and.w	r3, r3, #8
        ui32Padreg |= (bfGpioCfg.eGPInput << PADREG_FLD_INPEN_S);
    c466:	f3c1 3200 	ubfx	r2, r1, #12, #1
        if ( (bfGpioCfg.eGPOutcfg == AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL) ||
    c46a:	2f04      	cmp	r7, #4
                     (((bfGpioCfg.eIntDir >> 0) & 0x1) << GPIOCFG_FLD_INTD_S)   |
    c46c:	ea46 0603 	orr.w	r6, r6, r3
        ui32Padreg |= (bfGpioCfg.eGPInput << PADREG_FLD_INPEN_S);
    c470:	ea45 0542 	orr.w	r5, r5, r2, lsl #1
        if ( (bfGpioCfg.eGPOutcfg == AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL) ||
    c474:	f000 8093 	beq.w	c59e <am_hal_gpio_pinconfig+0x1b6>
    ui32B = *((uint32_t*)cfg2);
    c478:	4b70      	ldr	r3, [pc, #448]	; (c63c <am_hal_gpio_pinconfig+0x254>)
        if ( (bfGpioCfg.eGPOutcfg == AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL) ||
    c47a:	681b      	ldr	r3, [r3, #0]
    c47c:	1acb      	subs	r3, r1, r3
    c47e:	fab3 f383 	clz	r3, r3
    c482:	095b      	lsrs	r3, r3, #5
        //  use when GPIO interrupts are not in use and can be used when no
        //  eIntDir setting is provided.
        // If eIntDir is provided, eGPRdZero is ignored and can only be
        //  achieved via the AM_HAL_GPIO_PIN_INTDIR_NONE setting.
        //
        if ( bfGpioCfg.eIntDir == 0 )
    c484:	f014 0f60 	tst.w	r4, #96	; 0x60
        {
            ui32GPCfg &= ~(1 << GPIOCFG_FLD_INCFG_S);
            ui32GPCfg |= (bfGpioCfg.eGPRdZero << GPIOCFG_FLD_INCFG_S);
    c488:	bf04      	itt	eq
    c48a:	f3c1 32c0 	ubfxeq	r2, r1, #15, #1
    c48e:	f362 0600 	bfieq	r6, r2, #0, #1
    c492:	ea4f 0e80 	mov.w	lr, r0, lsl #2
        }
    }

    switch ( bfGpioCfg.eDriveStrength )
    c496:	f3c1 2101 	ubfx	r1, r1, #8, #2
    c49a:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
    c49e:	2902      	cmp	r1, #2
    c4a0:	f00c 0c18 	and.w	ip, ip, #24
    c4a4:	f000 80a7 	beq.w	c5f6 <am_hal_gpio_pinconfig+0x20e>
    c4a8:	f200 809e 	bhi.w	c5e8 <am_hal_gpio_pinconfig+0x200>
    c4ac:	2901      	cmp	r1, #1
    c4ae:	f040 8098 	bne.w	c5e2 <am_hal_gpio_pinconfig+0x1fa>
            ui32AltPadCfg |= (0 << 0);
            break;
        case AM_HAL_GPIO_PIN_DRIVESTRENGTH_4MA:
            ui32Padreg    |= (1 << PADREG_FLD_DRVSTR_S);
            ui32AltPadCfg |= (0 << 0);
            break;
    c4b2:	2200      	movs	r2, #0
            ui32Padreg    |= (1 << PADREG_FLD_DRVSTR_S);
    c4b4:	f045 0504 	orr.w	r5, r5, #4
            break;
    c4b8:	9203      	str	r2, [sp, #12]
    c4ba:	4604      	mov	r4, r0
    uint32_t ui32GPCfgClearMask, ui32PadClearMask;
    uint32_t ui32GPCfgShft, ui32PadShft;

    ui32GPCfgAddr       = (uint32_t)&GPIO->CFGA       + ((ui32Pin & ~0x7) >> 1);
    ui32PadregAddr      = (uint32_t)&GPIO->PADREGA    + (ui32Pin & ~0x3);
    ui32AltpadAddr      = (uint32_t)&GPIO->ALTPADCFGA + (ui32Pin & ~0x3);
    c4bc:	4a60      	ldr	r2, [pc, #384]	; (c640 <am_hal_gpio_pinconfig+0x258>)
    c4be:	4961      	ldr	r1, [pc, #388]	; (c644 <am_hal_gpio_pinconfig+0x25c>)
    ui32GPCfgAddr       = (uint32_t)&GPIO->CFGA       + ((ui32Pin & ~0x7) >> 1);
    c4c0:	4861      	ldr	r0, [pc, #388]	; (c648 <am_hal_gpio_pinconfig+0x260>)
    c4c2:	9302      	str	r3, [sp, #8]
    ui32GPCfgShft       = ((ui32Pin & 0x7) << 2);
    c4c4:	f00e 0e1c 	and.w	lr, lr, #28
    ui32PadShft         = ((ui32Pin & 0x3) << 3);
    ui32GPCfgClearMask  = ~((uint32_t)0xF  << ui32GPCfgShft);
    c4c8:	f04f 080f 	mov.w	r8, #15
    ui32PadClearMask    = ~((uint32_t)0xFF << ui32PadShft);
    c4cc:	27ff      	movs	r7, #255	; 0xff
    ui32AltpadAddr      = (uint32_t)&GPIO->ALTPADCFGA + (ui32Pin & ~0x3);
    c4ce:	e9cd 2100 	strd	r2, r1, [sp]
    ui32GPCfgClearMask  = ~((uint32_t)0xF  << ui32GPCfgShft);
    c4d2:	fa08 f80e 	lsl.w	r8, r8, lr
    ui32PadClearMask    = ~((uint32_t)0xFF << ui32PadShft);
    c4d6:	fa07 f70c 	lsl.w	r7, r7, ip
    //
    // Get the new values into their rightful bit positions.
    //
    ui32Padreg    <<= ui32PadShft;
    ui32AltPadCfg <<= ui32PadShft;
    ui32GPCfg     <<= ui32GPCfgShft;
    c4da:	fa06 f60e 	lsl.w	r6, r6, lr
    ui32Padreg    <<= ui32PadShft;
    c4de:	fa05 f50c 	lsl.w	r5, r5, ip
    ui32GPCfgAddr       = (uint32_t)&GPIO->CFGA       + ((ui32Pin & ~0x7) >> 1);
    c4e2:	ea00 0954 	and.w	r9, r0, r4, lsr #1

    AM_CRITICAL_BEGIN
    c4e6:	f003 f837 	bl	f558 <am_hal_interrupt_master_disable>
    ui32PadregAddr      = (uint32_t)&GPIO->PADREGA    + (ui32Pin & ~0x3);
    c4ea:	f024 0b03 	bic.w	fp, r4, #3

    if ( bClearEnable )
    c4ee:	9b02      	ldr	r3, [sp, #8]
    AM_CRITICAL_BEGIN
    c4f0:	9005      	str	r0, [sp, #20]
    ui32PadregAddr      = (uint32_t)&GPIO->PADREGA    + (ui32Pin & ~0x3);
    c4f2:	f10b 4a80 	add.w	sl, fp, #1073741824	; 0x40000000
    ui32GPCfgClearMask  = ~((uint32_t)0xF  << ui32GPCfgShft);
    c4f6:	ea6f 0808 	mvn.w	r8, r8
    ui32PadClearMask    = ~((uint32_t)0xFF << ui32PadShft);
    c4fa:	43ff      	mvns	r7, r7
    ui32PadregAddr      = (uint32_t)&GPIO->PADREGA    + (ui32Pin & ~0x3);
    c4fc:	f50a 3a80 	add.w	sl, sl, #65536	; 0x10000
    if ( bClearEnable )
    c500:	e9dd 2100 	ldrd	r2, r1, [sp]
    c504:	b14b      	cbz	r3, c51a <am_hal_gpio_pinconfig+0x132>
    {
        //
        // We're configuring a mode that requires clearing the Enable bit.
        //
        am_hal_gpio_output_tristate_disable(ui32Pin);
    c506:	f004 031f 	and.w	r3, r4, #31
    c50a:	f04f 0c01 	mov.w	ip, #1
    c50e:	0964      	lsrs	r4, r4, #5
    c510:	484e      	ldr	r0, [pc, #312]	; (c64c <am_hal_gpio_pinconfig+0x264>)
    c512:	fa0c f303 	lsl.w	r3, ip, r3
    c516:	f840 3024 	str.w	r3, [r0, r4, lsl #2]
    }

    GPIO->PADKEY = GPIO_PADKEY_PADKEY_Key;
    c51a:	4b4d      	ldr	r3, [pc, #308]	; (c650 <am_hal_gpio_pinconfig+0x268>)
    c51c:	2073      	movs	r0, #115	; 0x73
    c51e:	6618      	str	r0, [r3, #96]	; 0x60

    AM_REGVAL(ui32PadregAddr)  = (AM_REGVAL(ui32PadregAddr) & ui32PadClearMask)   | ui32Padreg;
    c520:	f8da 0000 	ldr.w	r0, [sl]
    c524:	4038      	ands	r0, r7
    c526:	4305      	orrs	r5, r0
    c528:	f8ca 5000 	str.w	r5, [sl]
    AM_REGVAL(ui32GPCfgAddr)   = (AM_REGVAL(ui32GPCfgAddr)  & ui32GPCfgClearMask) | ui32GPCfg;
    c52c:	f859 0001 	ldr.w	r0, [r9, r1]
    c530:	ea00 0808 	and.w	r8, r0, r8
    c534:	ea48 0606 	orr.w	r6, r8, r6
    c538:	f849 6001 	str.w	r6, [r9, r1]
    AM_REGVAL(ui32AltpadAddr)  = (AM_REGVAL(ui32AltpadAddr) & ui32PadClearMask)   | ui32AltPadCfg;
    c53c:	f85b 1002 	ldr.w	r1, [fp, r2]
    c540:	400f      	ands	r7, r1
    c542:	9903      	ldr	r1, [sp, #12]

    GPIO->PADKEY = 0;
    c544:	2400      	movs	r4, #0
    AM_REGVAL(ui32AltpadAddr)  = (AM_REGVAL(ui32AltpadAddr) & ui32PadClearMask)   | ui32AltPadCfg;
    c546:	430f      	orrs	r7, r1
    c548:	f84b 7002 	str.w	r7, [fp, r2]
    GPIO->PADKEY = 0;
    c54c:	661c      	str	r4, [r3, #96]	; 0x60

    AM_CRITICAL_END
    c54e:	9805      	ldr	r0, [sp, #20]
    c550:	f003 f806 	bl	f560 <am_hal_interrupt_master_set>

    return AM_HAL_STATUS_SUCCESS;
    c554:	4620      	mov	r0, r4

} // am_hal_gpio_pinconfig()
    c556:	b007      	add	sp, #28
    c558:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        if ( (ui32PowerSw == AM_HAL_GPIO_PIN_POWERSW_VDD)  &&
    c55c:	2c01      	cmp	r4, #1
    c55e:	d017      	beq.n	c590 <am_hal_gpio_pinconfig+0x1a8>
        else if ( (ui32PowerSw == AM_HAL_GPIO_PIN_POWERSW_VSS)  &&
    c560:	2c02      	cmp	r4, #2
    c562:	d11e      	bne.n	c5a2 <am_hal_gpio_pinconfig+0x1ba>
                  (g_ui8Bit76Capabilities[ui32Pin] & CAP_VSS) )
    c564:	4c32      	ldr	r4, [pc, #200]	; (c630 <am_hal_gpio_pinconfig+0x248>)
        else if ( (ui32PowerSw == AM_HAL_GPIO_PIN_POWERSW_VSS)  &&
    c566:	5c24      	ldrb	r4, [r4, r0]
    c568:	0764      	lsls	r4, r4, #29
    c56a:	d51a      	bpl.n	c5a2 <am_hal_gpio_pinconfig+0x1ba>
            ui32Padreg |= 0x2 << PADREG_FLD_76_S;
    c56c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    c570:	e75e      	b.n	c430 <am_hal_gpio_pinconfig+0x48>
        return AM_HAL_STATUS_INVALID_ARG;
    c572:	2006      	movs	r0, #6
} // am_hal_gpio_pinconfig()
    c574:	4770      	bx	lr
        else if ( bfGpioCfg.ePullup == AM_HAL_GPIO_PIN_PULLDOWN )
    c576:	2fc0      	cmp	r7, #192	; 0xc0
    c578:	d042      	beq.n	c600 <am_hal_gpio_pinconfig+0x218>
        else if ( bfGpioCfg.ePullup == AM_HAL_GPIO_PIN_PULLUP_WEAK )
    c57a:	2f20      	cmp	r7, #32
    c57c:	f47f af55 	bne.w	c42a <am_hal_gpio_pinconfig+0x42>
            if ( g_ui8Bit76Capabilities[ui32Pin] & (CAP_PUP | CAP_PDN) )
    c580:	4d2b      	ldr	r5, [pc, #172]	; (c630 <am_hal_gpio_pinconfig+0x248>)
    c582:	5c2d      	ldrb	r5, [r5, r0]
    c584:	f015 0f09 	tst.w	r5, #9
    c588:	f43f af4f 	beq.w	c42a <am_hal_gpio_pinconfig+0x42>
                return AM_HAL_GPIO_ERR_PULLUP;
    c58c:	4831      	ldr	r0, [pc, #196]	; (c654 <am_hal_gpio_pinconfig+0x26c>)
    c58e:	e7e2      	b.n	c556 <am_hal_gpio_pinconfig+0x16e>
             (g_ui8Bit76Capabilities[ui32Pin] & CAP_VDD) )
    c590:	4c27      	ldr	r4, [pc, #156]	; (c630 <am_hal_gpio_pinconfig+0x248>)
        if ( (ui32PowerSw == AM_HAL_GPIO_PIN_POWERSW_VDD)  &&
    c592:	5c24      	ldrb	r4, [r4, r0]
    c594:	07a5      	lsls	r5, r4, #30
    c596:	d504      	bpl.n	c5a2 <am_hal_gpio_pinconfig+0x1ba>
            ui32Padreg |= 0x1 << PADREG_FLD_76_S;
    c598:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    c59c:	e748      	b.n	c430 <am_hal_gpio_pinconfig+0x48>
            bClearEnable = true;
    c59e:	2301      	movs	r3, #1
    c5a0:	e770      	b.n	c484 <am_hal_gpio_pinconfig+0x9c>
            return AM_HAL_GPIO_ERR_PWRSW;
    c5a2:	482d      	ldr	r0, [pc, #180]	; (c658 <am_hal_gpio_pinconfig+0x270>)
} // am_hal_gpio_pinconfig()
    c5a4:	b007      	add	sp, #28
    c5a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        if ( bfGpioCfg.uIOMnum > IOMNUM_MAX )
    c5aa:	f3c1 4302 	ubfx	r3, r1, #16, #3
    c5ae:	2b07      	cmp	r3, #7
    c5b0:	d02b      	beq.n	c60a <am_hal_gpio_pinconfig+0x222>
            if ( g_ui8NCEtable[ui32Pin][ui32Outcfg] == ui8CEtbl )
    c5b2:	4c2a      	ldr	r4, [pc, #168]	; (c65c <am_hal_gpio_pinconfig+0x274>)
        ui8CEtbl = (bfGpioCfg.uIOMnum << 4) | bfGpioCfg.uNCE;
    c5b4:	f3c1 42c1 	ubfx	r2, r1, #19, #2
            if ( g_ui8NCEtable[ui32Pin][ui32Outcfg] == ui8CEtbl )
    c5b8:	f814 6020 	ldrb.w	r6, [r4, r0, lsl #2]
        ui8CEtbl = (bfGpioCfg.uIOMnum << 4) | bfGpioCfg.uNCE;
    c5bc:	ea42 1303 	orr.w	r3, r2, r3, lsl #4
            if ( g_ui8NCEtable[ui32Pin][ui32Outcfg] == ui8CEtbl )
    c5c0:	429e      	cmp	r6, r3
    c5c2:	d024      	beq.n	c60e <am_hal_gpio_pinconfig+0x226>
    c5c4:	ea4f 0e80 	mov.w	lr, r0, lsl #2
    c5c8:	eb04 020e 	add.w	r2, r4, lr
    c5cc:	7854      	ldrb	r4, [r2, #1]
    c5ce:	429c      	cmp	r4, r3
    c5d0:	d027      	beq.n	c622 <am_hal_gpio_pinconfig+0x23a>
    c5d2:	7894      	ldrb	r4, [r2, #2]
    c5d4:	429c      	cmp	r4, r3
    c5d6:	d026      	beq.n	c626 <am_hal_gpio_pinconfig+0x23e>
    c5d8:	78d2      	ldrb	r2, [r2, #3]
    c5da:	429a      	cmp	r2, r3
    c5dc:	d025      	beq.n	c62a <am_hal_gpio_pinconfig+0x242>
            return AM_HAL_GPIO_ERR_INVCEPIN;
    c5de:	4820      	ldr	r0, [pc, #128]	; (c660 <am_hal_gpio_pinconfig+0x278>)
    c5e0:	e7b9      	b.n	c556 <am_hal_gpio_pinconfig+0x16e>
    switch ( bfGpioCfg.eDriveStrength )
    c5e2:	2200      	movs	r2, #0
    c5e4:	9203      	str	r2, [sp, #12]
    c5e6:	e768      	b.n	c4ba <am_hal_gpio_pinconfig+0xd2>
    c5e8:	2701      	movs	r7, #1
    c5ea:	fa07 f20c 	lsl.w	r2, r7, ip
            ui32Padreg    |= (1 << PADREG_FLD_DRVSTR_S);
    c5ee:	f045 0504 	orr.w	r5, r5, #4
    c5f2:	9203      	str	r2, [sp, #12]
            break;
    c5f4:	e761      	b.n	c4ba <am_hal_gpio_pinconfig+0xd2>
    c5f6:	2701      	movs	r7, #1
    c5f8:	fa07 f20c 	lsl.w	r2, r7, ip
    c5fc:	9203      	str	r2, [sp, #12]
            break;
    c5fe:	e75c      	b.n	c4ba <am_hal_gpio_pinconfig+0xd2>
            if ( ui32Pin != 20 )
    c600:	2814      	cmp	r0, #20
    c602:	f43f af12 	beq.w	c42a <am_hal_gpio_pinconfig+0x42>
                return AM_HAL_GPIO_ERR_PULLDOWN;
    c606:	4817      	ldr	r0, [pc, #92]	; (c664 <am_hal_gpio_pinconfig+0x27c>)
    c608:	e7a5      	b.n	c556 <am_hal_gpio_pinconfig+0x16e>
            return AM_HAL_GPIO_ERR_INVCE;   // Invalid CE specified
    c60a:	4817      	ldr	r0, [pc, #92]	; (c668 <am_hal_gpio_pinconfig+0x280>)
    c60c:	e7a3      	b.n	c556 <am_hal_gpio_pinconfig+0x16e>
        for ( ui32Outcfg = 0; ui32Outcfg < 4; ui32Outcfg++ )
    c60e:	2600      	movs	r6, #0
    c610:	ea4f 0e80 	mov.w	lr, r0, lsl #2
                     (bfGpioCfg.eCEpol << GPIOCFG_FLD_INTD_S)   |
    c614:	f3c1 5340 	ubfx	r3, r1, #21, #1
        ui32GPCfg |= (ui32Outcfg       << GPIOCFG_FLD_OUTCFG_S) |
    c618:	0076      	lsls	r6, r6, #1
                     (bfGpioCfg.eCEpol << GPIOCFG_FLD_INTD_S)   |
    c61a:	ea46 06c3 	orr.w	r6, r6, r3, lsl #3
    bool bClearEnable = false;
    c61e:	2300      	movs	r3, #0
    c620:	e739      	b.n	c496 <am_hal_gpio_pinconfig+0xae>
        for ( ui32Outcfg = 0; ui32Outcfg < 4; ui32Outcfg++ )
    c622:	2601      	movs	r6, #1
    c624:	e7f6      	b.n	c614 <am_hal_gpio_pinconfig+0x22c>
    c626:	2602      	movs	r6, #2
    c628:	e7f4      	b.n	c614 <am_hal_gpio_pinconfig+0x22c>
    c62a:	2603      	movs	r6, #3
    c62c:	e7f2      	b.n	c614 <am_hal_gpio_pinconfig+0x22c>
    c62e:	bf00      	nop
    c630:	00010188 	.word	0x00010188
    c634:	000101bc 	.word	0x000101bc
    c638:	000102b8 	.word	0x000102b8
    c63c:	0001017c 	.word	0x0001017c
    c640:	400100e0 	.word	0x400100e0
    c644:	40010040 	.word	0x40010040
    c648:	7ffffffc 	.word	0x7ffffffc
    c64c:	400100b4 	.word	0x400100b4
    c650:	40010000 	.word	0x40010000
    c654:	08000100 	.word	0x08000100
    c658:	08000102 	.word	0x08000102
    c65c:	000101f0 	.word	0x000101f0
    c660:	08000104 	.word	0x08000104
    c664:	08000101 	.word	0x08000101
    c668:	08000103 	.word	0x08000103

0000c66c <am_hal_gpio_state_read>:
{
    uint32_t ui32ReadValue = 0xFFFFFFFF;
    uint32_t ui32BaseAddr, ui32Shift;

#ifdef AM_HAL_ENABLE_API_VALIDATION
    if ( pui32ReadState == NULL )
    c66c:	b1a2      	cbz	r2, c698 <am_hal_gpio_state_read+0x2c>
    {
        return AM_HAL_STATUS_INVALID_ARG;
    }

    if ( ui32Pin >= AM_HAL_GPIO_MAX_PADS )
    c66e:	2831      	cmp	r0, #49	; 0x31
    c670:	d814      	bhi.n	c69c <am_hal_gpio_state_read+0x30>
    //
    ui32BaseAddr = ((ui32Pin & 0x20) >> (3 + 2));   // 0 or 1
    ui32Shift    = ui32Pin & 0x1F;
    //ui32Mask     = 1 << ui32Shift;

    switch ( eReadType )
    c672:	2901      	cmp	r1, #1
    ui32BaseAddr = ((ui32Pin & 0x20) >> (3 + 2));   // 0 or 1
    c674:	ea4f 1350 	mov.w	r3, r0, lsr #5
    ui32Shift    = ui32Pin & 0x1F;
    c678:	f000 001f 	and.w	r0, r0, #31
    switch ( eReadType )
    c67c:	d013      	beq.n	c6a6 <am_hal_gpio_state_read+0x3a>
    c67e:	d31c      	bcc.n	c6ba <am_hal_gpio_state_read+0x4e>
    c680:	2902      	cmp	r1, #2
    c682:	d109      	bne.n	c698 <am_hal_gpio_state_read+0x2c>
        case AM_HAL_GPIO_OUTPUT_READ:
            ui32ReadValue = AM_REGVAL(&GPIO->WTA + ui32BaseAddr);
            ui32ReadValue = (ui32ReadValue >> ui32Shift) & 0x01;
            break;
        case AM_HAL_GPIO_ENABLE_READ:
            ui32ReadValue = AM_REGVAL(&GPIO->ENA + ui32BaseAddr);
    c684:	4912      	ldr	r1, [pc, #72]	; (c6d0 <am_hal_gpio_state_read+0x64>)
    c686:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
            ui32ReadValue = (ui32ReadValue >> ui32Shift) & 0x01;
    c68a:	fa23 f000 	lsr.w	r0, r3, r0
    c68e:	f000 0001 	and.w	r0, r0, #1
            break;
        default:
            return AM_HAL_STATUS_INVALID_ARG;
    }

    *pui32ReadState = ui32ReadValue;
    c692:	6010      	str	r0, [r2, #0]

    return AM_HAL_STATUS_SUCCESS;
    c694:	2000      	movs	r0, #0
    c696:	4770      	bx	lr
            return AM_HAL_STATUS_INVALID_ARG;
    c698:	2006      	movs	r0, #6
} // am_hal_gpio_state_read()
    c69a:	4770      	bx	lr
        *pui32ReadState = ui32ReadValue;
    c69c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    c6a0:	6013      	str	r3, [r2, #0]
        return AM_HAL_STATUS_OUT_OF_RANGE;
    c6a2:	2005      	movs	r0, #5
    c6a4:	4770      	bx	lr
            ui32ReadValue = AM_REGVAL(&GPIO->WTA + ui32BaseAddr);
    c6a6:	490b      	ldr	r1, [pc, #44]	; (c6d4 <am_hal_gpio_state_read+0x68>)
    c6a8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
            ui32ReadValue = (ui32ReadValue >> ui32Shift) & 0x01;
    c6ac:	fa23 f000 	lsr.w	r0, r3, r0
    c6b0:	f000 0001 	and.w	r0, r0, #1
    *pui32ReadState = ui32ReadValue;
    c6b4:	6010      	str	r0, [r2, #0]
    return AM_HAL_STATUS_SUCCESS;
    c6b6:	2000      	movs	r0, #0
    c6b8:	4770      	bx	lr
            ui32ReadValue = AM_REGVAL(&GPIO->RDA + ui32BaseAddr);
    c6ba:	4907      	ldr	r1, [pc, #28]	; (c6d8 <am_hal_gpio_state_read+0x6c>)
    c6bc:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
            ui32ReadValue = (ui32ReadValue >> ui32Shift) & 0x01;
    c6c0:	fa23 f000 	lsr.w	r0, r3, r0
    c6c4:	f000 0001 	and.w	r0, r0, #1
    *pui32ReadState = ui32ReadValue;
    c6c8:	6010      	str	r0, [r2, #0]
    return AM_HAL_STATUS_SUCCESS;
    c6ca:	2000      	movs	r0, #0
    c6cc:	4770      	bx	lr
    c6ce:	bf00      	nop
    c6d0:	400100a0 	.word	0x400100a0
    c6d4:	40010088 	.word	0x40010088
    c6d8:	40010080 	.word	0x40010080

0000c6dc <am_hal_gpio_state_write>:
{
    uint32_t ui32Mask, ui32Off;
    uint32_t ui32Return = AM_HAL_STATUS_SUCCESS;

#ifdef AM_HAL_ENABLE_API_VALIDATION
    if ( ui32Pin >= AM_HAL_GPIO_MAX_PADS )
    c6dc:	2831      	cmp	r0, #49	; 0x31
    c6de:	d819      	bhi.n	c714 <am_hal_gpio_state_write+0x38>
    {
        return AM_HAL_STATUS_OUT_OF_RANGE;
    }

    if ( eWriteType > AM_HAL_GPIO_OUTPUT_TRISTATE_TOGGLE )
    c6e0:	2905      	cmp	r1, #5
    c6e2:	d815      	bhi.n	c710 <am_hal_gpio_state_write+0x34>
{
    c6e4:	b570      	push	{r4, r5, r6, lr}
    {
        return AM_HAL_STATUS_INVALID_ARG;
    }
#endif // AM_HAL_ENABLE_API_VALIDATION

    ui32Mask = (uint32_t)0x1 << (ui32Pin % 32);
    c6e6:	f000 031f 	and.w	r3, r0, #31
{
    c6ea:	b082      	sub	sp, #8
    ui32Off  = (ui32Pin & 0x20) >> 3;   // 0 or 4
    c6ec:	08c0      	lsrs	r0, r0, #3
    ui32Mask = (uint32_t)0x1 << (ui32Pin % 32);
    c6ee:	2201      	movs	r2, #1
    c6f0:	460d      	mov	r5, r1
    ui32Off  = (ui32Pin & 0x20) >> 3;   // 0 or 4
    c6f2:	f000 0404 	and.w	r4, r0, #4
    ui32Mask = (uint32_t)0x1 << (ui32Pin % 32);
    c6f6:	fa02 f603 	lsl.w	r6, r2, r3

    AM_CRITICAL_BEGIN;
    c6fa:	f002 ff2d 	bl	f558 <am_hal_interrupt_master_disable>

    ui32Off /= 4;   // 0 or 1 for ptr arithmetic
    switch ( eWriteType )
    c6fe:	1e69      	subs	r1, r5, #1
    AM_CRITICAL_BEGIN;
    c700:	9001      	str	r0, [sp, #4]
    switch ( eWriteType )
    c702:	2904      	cmp	r1, #4
    c704:	d81b      	bhi.n	c73e <am_hal_gpio_state_write+0x62>
    c706:	e8df f001 	tbb	[pc, r1]
    c70a:	1217      	.short	0x1217
    c70c:	070f      	.short	0x070f
    c70e:	1d          	.byte	0x1d
    c70f:	00          	.byte	0x00
        return AM_HAL_STATUS_INVALID_ARG;
    c710:	2006      	movs	r0, #6
    }

    AM_CRITICAL_END;

    return ui32Return;
} // am_hal_gpio_state_write()
    c712:	4770      	bx	lr
        return AM_HAL_STATUS_OUT_OF_RANGE;
    c714:	2005      	movs	r0, #5
    c716:	4770      	bx	lr
            AM_REGVAL(&GPIO->ENSA + ui32Off) = ui32Mask;
    c718:	4b0d      	ldr	r3, [pc, #52]	; (c750 <am_hal_gpio_state_write+0x74>)
    c71a:	50e6      	str	r6, [r4, r3]
    AM_CRITICAL_END;
    c71c:	9801      	ldr	r0, [sp, #4]
    c71e:	f002 ff1f 	bl	f560 <am_hal_interrupt_master_set>
    return ui32Return;
    c722:	2000      	movs	r0, #0
} // am_hal_gpio_state_write()
    c724:	b002      	add	sp, #8
    c726:	bd70      	pop	{r4, r5, r6, pc}
            AM_REGVAL(&GPIO->ENCA + ui32Off) = ui32Mask;
    c728:	4b0a      	ldr	r3, [pc, #40]	; (c754 <am_hal_gpio_state_write+0x78>)
    c72a:	50e6      	str	r6, [r4, r3]
            break;
    c72c:	e7f6      	b.n	c71c <am_hal_gpio_state_write+0x40>
            AM_REGVAL(&GPIO->WTA + ui32Off) ^= ui32Mask;
    c72e:	4a0a      	ldr	r2, [pc, #40]	; (c758 <am_hal_gpio_state_write+0x7c>)
    c730:	58a3      	ldr	r3, [r4, r2]
    c732:	4073      	eors	r3, r6
    c734:	50a3      	str	r3, [r4, r2]
            break;
    c736:	e7f1      	b.n	c71c <am_hal_gpio_state_write+0x40>
            AM_REGVAL(&GPIO->WTSA + ui32Off) = ui32Mask;
    c738:	4b08      	ldr	r3, [pc, #32]	; (c75c <am_hal_gpio_state_write+0x80>)
    c73a:	50e6      	str	r6, [r4, r3]
            break;
    c73c:	e7ee      	b.n	c71c <am_hal_gpio_state_write+0x40>
            AM_REGVAL(&GPIO->WTCA + ui32Off) = ui32Mask;
    c73e:	4b08      	ldr	r3, [pc, #32]	; (c760 <am_hal_gpio_state_write+0x84>)
    c740:	50e6      	str	r6, [r4, r3]
            break;
    c742:	e7eb      	b.n	c71c <am_hal_gpio_state_write+0x40>
            AM_REGVAL(&GPIO->ENCA + ui32Off) ^= ui32Mask;
    c744:	4a03      	ldr	r2, [pc, #12]	; (c754 <am_hal_gpio_state_write+0x78>)
    c746:	58a3      	ldr	r3, [r4, r2]
    c748:	4073      	eors	r3, r6
    c74a:	50a3      	str	r3, [r4, r2]
            break;
    c74c:	e7e6      	b.n	c71c <am_hal_gpio_state_write+0x40>
    c74e:	bf00      	nop
    c750:	400100a8 	.word	0x400100a8
    c754:	400100b4 	.word	0x400100b4
    c758:	40010088 	.word	0x40010088
    c75c:	40010090 	.word	0x40010090
    c760:	40010098 	.word	0x40010098

0000c764 <am_hal_gpio_interrupt_enable>:
// Enable GPIO interrupts.
//
//*****************************************************************************
uint32_t
am_hal_gpio_interrupt_enable(uint64_t ui64InterruptMask)
{
    c764:	b530      	push	{r4, r5, lr}
#ifdef AM_HAL_ENABLE_API_VALIDATION
    //
    // Check parameters
    //
    if ( ui64InterruptMask &  ~(((uint64_t)1 << AM_HAL_GPIO_MAX_PADS) - 1) )
    c766:	4b11      	ldr	r3, [pc, #68]	; (c7ac <am_hal_gpio_interrupt_enable+0x48>)
    c768:	2200      	movs	r2, #0
    c76a:	ea02 0400 	and.w	r4, r2, r0
    c76e:	ea03 0501 	and.w	r5, r3, r1
    c772:	ea54 0305 	orrs.w	r3, r4, r5
{
    c776:	b083      	sub	sp, #12
    if ( ui64InterruptMask &  ~(((uint64_t)1 << AM_HAL_GPIO_MAX_PADS) - 1) )
    c778:	d115      	bne.n	c7a6 <am_hal_gpio_interrupt_enable+0x42>
    c77a:	460d      	mov	r5, r1
    c77c:	4604      	mov	r4, r0
#endif // AM_HAL_ENABLE_API_VALIDATION

    //
    // Enable the interrupts.
    //
    AM_CRITICAL_BEGIN
    c77e:	f002 feeb 	bl	f558 <am_hal_interrupt_master_disable>

    GPIO->INT0EN |= (uint32_t)(ui64InterruptMask & 0xFFFFFFFF);
    c782:	4b0b      	ldr	r3, [pc, #44]	; (c7b0 <am_hal_gpio_interrupt_enable+0x4c>)
    AM_CRITICAL_BEGIN
    c784:	9001      	str	r0, [sp, #4]
    GPIO->INT0EN |= (uint32_t)(ui64InterruptMask & 0xFFFFFFFF);
    c786:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    c78a:	4322      	orrs	r2, r4
    c78c:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
    GPIO->INT1EN |= (uint32_t)(ui64InterruptMask >> 32);
    c790:	f8d3 2210 	ldr.w	r2, [r3, #528]	; 0x210
    c794:	432a      	orrs	r2, r5
    c796:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210

    AM_CRITICAL_END
    c79a:	9801      	ldr	r0, [sp, #4]
    c79c:	f002 fee0 	bl	f560 <am_hal_interrupt_master_set>

    //
    // Return the status.
    //
    return AM_HAL_STATUS_SUCCESS;
    c7a0:	2000      	movs	r0, #0

} // am_hal_gpio_interrupt_enable()
    c7a2:	b003      	add	sp, #12
    c7a4:	bd30      	pop	{r4, r5, pc}
        return AM_HAL_STATUS_OUT_OF_RANGE;
    c7a6:	2005      	movs	r0, #5
} // am_hal_gpio_interrupt_enable()
    c7a8:	b003      	add	sp, #12
    c7aa:	bd30      	pop	{r4, r5, pc}
    c7ac:	fffc0000 	.word	0xfffc0000
    c7b0:	40010000 	.word	0x40010000

0000c7b4 <am_hal_gpio_interrupt_clear>:
// Clear GPIO interrupts.
//
//*****************************************************************************
uint32_t
am_hal_gpio_interrupt_clear(uint64_t ui64InterruptMask)
{
    c7b4:	b530      	push	{r4, r5, lr}
#ifdef AM_HAL_ENABLE_API_VALIDATION
    //
    // Check parameters
    //
    if ( ui64InterruptMask &  ~(((uint64_t)1 << AM_HAL_GPIO_MAX_PADS) - 1) )
    c7b6:	4b0e      	ldr	r3, [pc, #56]	; (c7f0 <am_hal_gpio_interrupt_clear+0x3c>)
    c7b8:	2200      	movs	r2, #0
    c7ba:	ea02 0400 	and.w	r4, r2, r0
    c7be:	ea03 0501 	and.w	r5, r3, r1
    c7c2:	ea54 0305 	orrs.w	r3, r4, r5
{
    c7c6:	b083      	sub	sp, #12
    if ( ui64InterruptMask &  ~(((uint64_t)1 << AM_HAL_GPIO_MAX_PADS) - 1) )
    c7c8:	d10f      	bne.n	c7ea <am_hal_gpio_interrupt_clear+0x36>
    c7ca:	460d      	mov	r5, r1
    c7cc:	4604      	mov	r4, r0
#endif // AM_HAL_ENABLE_API_VALIDATION

    //
    // Clear the interrupts.
    //
    AM_CRITICAL_BEGIN
    c7ce:	f002 fec3 	bl	f558 <am_hal_interrupt_master_disable>

    GPIO->INT0CLR = (uint32_t)(ui64InterruptMask & 0xFFFFFFFF);
    c7d2:	4b08      	ldr	r3, [pc, #32]	; (c7f4 <am_hal_gpio_interrupt_clear+0x40>)
    AM_CRITICAL_BEGIN
    c7d4:	9001      	str	r0, [sp, #4]
    GPIO->INT0CLR = (uint32_t)(ui64InterruptMask & 0xFFFFFFFF);
    c7d6:	f8c3 4208 	str.w	r4, [r3, #520]	; 0x208
    GPIO->INT1CLR = (uint32_t)(ui64InterruptMask >> 32);
    c7da:	f8c3 5218 	str.w	r5, [r3, #536]	; 0x218

    AM_CRITICAL_END
    c7de:	9801      	ldr	r0, [sp, #4]
    c7e0:	f002 febe 	bl	f560 <am_hal_interrupt_master_set>

    //
    // Return the status.
    //
    return AM_HAL_STATUS_SUCCESS;
    c7e4:	2000      	movs	r0, #0

} // am_hal_gpio_interrupt_clear()
    c7e6:	b003      	add	sp, #12
    c7e8:	bd30      	pop	{r4, r5, pc}
        return AM_HAL_STATUS_OUT_OF_RANGE;
    c7ea:	2005      	movs	r0, #5
} // am_hal_gpio_interrupt_clear()
    c7ec:	b003      	add	sp, #12
    c7ee:	bd30      	pop	{r4, r5, pc}
    c7f0:	fffc0000 	.word	0xfffc0000
    c7f4:	40010000 	.word	0x40010000

0000c7f8 <HardFault_Handler>:
HardFault_Handler(void)
#else // AM_CMSIS_REGS
am_fault_isr(void)
#endif // AM_CMSIS_REGS
{
    __asm("    push    {r0,lr}");       // Always pushes to MSP stack
    c7f8:	b501      	push	{r0, lr}
    __asm("    tst     lr, #4");        // Check if we should use MSP or PSP
    c7fa:	f01e 0f04 	tst.w	lr, #4
    __asm("    itet    eq");            // Instrs executed when: eq,ne,eq
    c7fe:	bf0a      	itet	eq
    __asm("    mrseq   r0, msp");       //    bit2=0 indicating MSP stack
    c800:	f3ef 8008 	mrseq	r0, MSP
    __asm("    mrsne   r0, psp");       // e: bit2=1 indicating PSP stack
    c804:	f3ef 8009 	mrsne	r0, PSP
    __asm("    addseq  r0, r0, #8");    // t: bit2=0, adjust for pushes to MSP stack
    c808:	f110 0008 	addseq.w	r0, r0, #8
    __asm("    bl      am_util_faultisr_collect_data");
    c80c:	f000 f806 	bl	c81c <am_util_faultisr_collect_data>
    __asm("    pop     {r0,pc}");       // Restore from MSP stack
    c810:	bd01      	pop	{r0, pc}
    c812:	bf00      	nop

0000c814 <getStackedReg>:
}

uint32_t __attribute__((naked))
getStackedReg(uint32_t regnum, uint32_t u32SP)
{
    __asm("    lsls    r0, r0, #2");
    c814:	0080      	lsls	r0, r0, #2
    __asm("    adds    r0, r1");
    c816:	1840      	adds	r0, r0, r1
    __asm("    ldr     r0, [r0]");
    c818:	6800      	ldr	r0, [r0, #0]
    __asm("    bx      lr");
    c81a:	4770      	bx	lr

0000c81c <am_util_faultisr_collect_data>:
// HardFault_Handler() was called.
//
//*****************************************************************************
void
am_util_faultisr_collect_data(uint32_t u32IsrSP)
{
    c81c:	b500      	push	{lr}
    volatile am_fault_t sFaultData;
    am_hal_mcuctrl_fault_t sHalFaultData = {0};
    c81e:	2300      	movs	r3, #0
{
    c820:	b093      	sub	sp, #76	; 0x4c
    am_hal_mcuctrl_fault_t sHalFaultData = {0};
    c822:	e9cd 3300 	strd	r3, r3, [sp]
    c826:	e9cd 3302 	strd	r3, r3, [sp, #8]
    c82a:	e9cd 3304 	strd	r3, r3, [sp, #16]
    // a breakpoint at the end of the routine.  If the printing is not used,
    // we'll get a compiler warning; so to avoid that warning, we'll use it
    // in a dummy assignment here.
    //
    sFaultData.u32CFSR = u32Mask;       // Avoid compiler warning
    sFaultData.u32CFSR = AM_REGVAL(AM_REG_SYSCTRL_CFSR_O);
    c82e:	4a27      	ldr	r2, [pc, #156]	; (c8cc <am_util_faultisr_collect_data+0xb0>)
    sFaultData.u32CFSR = u32Mask;       // Avoid compiler warning
    c830:	9310      	str	r3, [sp, #64]	; 0x40
    sFaultData.u32CFSR = AM_REGVAL(AM_REG_SYSCTRL_CFSR_O);
    c832:	6813      	ldr	r3, [r2, #0]
    c834:	9310      	str	r3, [sp, #64]	; 0x40
    sFaultData.u8MMSR  = (sFaultData.u32CFSR >> 0)  & 0xff;
    c836:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c838:	b2db      	uxtb	r3, r3
    c83a:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
    sFaultData.u8BFSR  = (sFaultData.u32CFSR >> 8)  & 0xff;
    c83e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c840:	f3c3 2307 	ubfx	r3, r3, #8, #8
    c844:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
    sFaultData.u16UFSR = (sFaultData.u32CFSR >> 16) & 0xffff;
    c848:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c84a:	0c1b      	lsrs	r3, r3, #16
    c84c:	f8ad 3046 	strh.w	r3, [sp, #70]	; 0x46

    //
    // The address of the location that caused the fault.  e.g. if accessing an
    // invalid data location caused the fault, that address will appear here.
    //
    sFaultData.u32BFAR = AM_REGVAL(AM_REG_SYSCTRL_BFAR_O);
    c850:	6913      	ldr	r3, [r2, #16]
    c852:	930f      	str	r3, [sp, #60]	; 0x3c

    //
    // The address of the instruction that caused the fault is the stacked PC
    // if BFSR bit1 is set.
    //
    sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
    c854:	f89d 2045 	ldrb.w	r2, [sp, #69]	; 0x45
    c858:	0792      	lsls	r2, r2, #30
{
    c85a:	4603      	mov	r3, r0
    sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
    c85c:	d430      	bmi.n	c8c0 <am_util_faultisr_collect_data+0xa4>
    c85e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff

    //
    // Get the stacked registers.
    // Note - the address of the instruction that caused the fault is u32PC.
    //
    sFaultData.u32R0  = getStackedReg(0, u32IsrSP);
    c862:	4619      	mov	r1, r3
    c864:	2000      	movs	r0, #0
    sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
    c866:	920e      	str	r2, [sp, #56]	; 0x38
    sFaultData.u32R0  = getStackedReg(0, u32IsrSP);
    c868:	f7ff ffd4 	bl	c814 <getStackedReg>
    c86c:	4602      	mov	r2, r0
    sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
    c86e:	2001      	movs	r0, #1
    sFaultData.u32R0  = getStackedReg(0, u32IsrSP);
    c870:	9206      	str	r2, [sp, #24]
    sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
    c872:	f7ff ffcf 	bl	c814 <getStackedReg>
    c876:	4602      	mov	r2, r0
    sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
    c878:	2002      	movs	r0, #2
    sFaultData.u32R1  = getStackedReg(1, u32IsrSP);
    c87a:	9207      	str	r2, [sp, #28]
    sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
    c87c:	f7ff ffca 	bl	c814 <getStackedReg>
    c880:	4602      	mov	r2, r0
    sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
    c882:	2003      	movs	r0, #3
    sFaultData.u32R2  = getStackedReg(2, u32IsrSP);
    c884:	9208      	str	r2, [sp, #32]
    sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
    c886:	f7ff ffc5 	bl	c814 <getStackedReg>
    c88a:	4602      	mov	r2, r0
    sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
    c88c:	2004      	movs	r0, #4
    sFaultData.u32R3  = getStackedReg(3, u32IsrSP);
    c88e:	9209      	str	r2, [sp, #36]	; 0x24
    sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
    c890:	f7ff ffc0 	bl	c814 <getStackedReg>
    c894:	4602      	mov	r2, r0
    sFaultData.u32LR  = getStackedReg(5, u32IsrSP);
    c896:	2005      	movs	r0, #5
    sFaultData.u32R12 = getStackedReg(4, u32IsrSP);
    c898:	920a      	str	r2, [sp, #40]	; 0x28
    sFaultData.u32LR  = getStackedReg(5, u32IsrSP);
    c89a:	f7ff ffbb 	bl	c814 <getStackedReg>
    c89e:	4602      	mov	r2, r0
    sFaultData.u32PC  = getStackedReg(6, u32IsrSP);
    c8a0:	2006      	movs	r0, #6
    sFaultData.u32LR  = getStackedReg(5, u32IsrSP);
    c8a2:	920b      	str	r2, [sp, #44]	; 0x2c
    sFaultData.u32PC  = getStackedReg(6, u32IsrSP);
    c8a4:	f7ff ffb6 	bl	c814 <getStackedReg>
    c8a8:	4602      	mov	r2, r0
    sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
    c8aa:	2007      	movs	r0, #7
    sFaultData.u32PC  = getStackedReg(6, u32IsrSP);
    c8ac:	920c      	str	r2, [sp, #48]	; 0x30
    sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
    c8ae:	f7ff ffb1 	bl	c814 <getStackedReg>

    //
    // Use the HAL MCUCTRL functions to read the fault data.
    //
#if AM_APOLLO3_MCUCTRL
    am_hal_mcuctrl_info_get(AM_HAL_MCUCTRL_INFO_FAULT_STATUS, &sHalFaultData);
    c8b2:	4669      	mov	r1, sp
    sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
    c8b4:	4603      	mov	r3, r0
    am_hal_mcuctrl_info_get(AM_HAL_MCUCTRL_INFO_FAULT_STATUS, &sHalFaultData);
    c8b6:	2002      	movs	r0, #2
    sFaultData.u32PSR = getStackedReg(7, u32IsrSP);
    c8b8:	930d      	str	r3, [sp, #52]	; 0x34
    am_hal_mcuctrl_info_get(AM_HAL_MCUCTRL_INFO_FAULT_STATUS, &sHalFaultData);
    c8ba:	f002 feab 	bl	f614 <am_hal_mcuctrl_info_get>
    c8be:	e7fe      	b.n	c8be <am_util_faultisr_collect_data+0xa2>
    sFaultData.u32FaultAddr = (sFaultData.u8BFSR & 0x02) ? getStackedReg(6, u32IsrSP) : 0xffffffff;
    c8c0:	4601      	mov	r1, r0
    c8c2:	2006      	movs	r0, #6
    c8c4:	f7ff ffa6 	bl	c814 <getStackedReg>
    c8c8:	4602      	mov	r2, r0
    c8ca:	e7ca      	b.n	c862 <am_util_faultisr_collect_data+0x46>
    c8cc:	e000ed28 	.word	0xe000ed28

0000c8d0 <uint64_to_str>:
// written).
//
//*****************************************************************************
static int
uint64_to_str(uint64_t ui64Val, char *pcBuf)
{
    c8d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c8d4:	b097      	sub	sp, #92	; 0x5c
    c8d6:	4682      	mov	sl, r0
    c8d8:	468b      	mov	fp, r1
    char tbuf[25];
    int ix = 0, iNumDig = 0;
    c8da:	2300      	movs	r3, #0
{
    c8dc:	920d      	str	r2, [sp, #52]	; 0x34
    c8de:	469c      	mov	ip, r3
    c8e0:	e9cd ab00 	strd	sl, fp, [sp]
    c8e4:	4606      	mov	r6, r0
    c8e6:	460f      	mov	r7, r1
    c8e8:	e00b      	b.n	c902 <uint64_to_str+0x32>
        //
        // Get modulus
        //
        uMod = ui64Val - (u64Tmp * 10);

        tbuf[ix++] = uMod + '0';
    c8ea:	f80b 2c01 	strb.w	r2, [fp, #-1]
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    c8ee:	4619      	mov	r1, r3
    c8f0:	2200      	movs	r2, #0
    c8f2:	e9cd 1200 	strd	r1, r2, [sp]
        ui64Val = u64Tmp;
    } while ( ui64Val );
    c8f6:	2b00      	cmp	r3, #0
    c8f8:	f000 80a5 	beq.w	ca46 <uint64_to_str+0x176>
    c8fc:	e9dd 6700 	ldrd	r6, r7, [sp]
{
    c900:	46f4      	mov	ip, lr
        q64 += (q64 >> 4);
    c902:	2300      	movs	r3, #0
    c904:	2400      	movs	r4, #0
    c906:	e9cd 3402 	strd	r3, r4, [sp, #8]
        q64 += (q64 >> 8);
    c90a:	e9cd 3404 	strd	r3, r4, [sp, #16]
        q64 += (q64 >> 16);
    c90e:	e9cd 3406 	strd	r3, r4, [sp, #24]
        q64 += (q64 >> 32);
    c912:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
        q64 >>= 3;
    c916:	4698      	mov	r8, r3
        q32 = (ui32Val>>1) + (ui32Val>>2);
    c918:	08b3      	lsrs	r3, r6, #2
    c91a:	eb03 0356 	add.w	r3, r3, r6, lsr #1
        q32 += (q32 >> 4);
    c91e:	eb03 1313 	add.w	r3, r3, r3, lsr #4
        q32 += (q32 >> 8);
    c922:	eb03 2313 	add.w	r3, r3, r3, lsr #8
        q64 >>= 3;
    c926:	46a1      	mov	r9, r4
        q32 += (q32 >> 16);
    c928:	eb03 4313 	add.w	r3, r3, r3, lsr #16
        q32 >>= 3;
    c92c:	08da      	lsrs	r2, r3, #3
        return q64 + ((r64 + 6) >> 4);
    c92e:	4644      	mov	r4, r8
    c930:	464d      	mov	r5, r9
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    c932:	4633      	mov	r3, r6
        q64 = (ui64Val>>1) + (ui64Val>>2);
    c934:	08b0      	lsrs	r0, r6, #2
        return q64 + ((r64 + 6) >> 4);
    c936:	e9cd 4508 	strd	r4, r5, [sp, #32]
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    c93a:	3306      	adds	r3, #6
        r32 = ui32Val - q32*10;
    c93c:	eb02 0482 	add.w	r4, r2, r2, lsl #2
    c940:	f10c 0e01 	add.w	lr, ip, #1
        tbuf[ix++] = uMod + '0';
    c944:	ae0f      	add	r6, sp, #60	; 0x3c
    c946:	4476      	add	r6, lr
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    c948:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
        q64 = (ui64Val>>1) + (ui64Val>>2);
    c94c:	ea40 7087 	orr.w	r0, r0, r7, lsl #30
    if ( ui64Val >> 32 )
    c950:	463c      	mov	r4, r7
        q64 = (ui64Val>>1) + (ui64Val>>2);
    c952:	08b9      	lsrs	r1, r7, #2
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    c954:	eb02 1313 	add.w	r3, r2, r3, lsr #4
        tbuf[ix++] = uMod + '0';
    c958:	46b3      	mov	fp, r6
    c95a:	4637      	mov	r7, r6
    c95c:	9e00      	ldr	r6, [sp, #0]
        uMod = ui64Val - (u64Tmp * 10);
    c95e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
    if ( ui64Val >> 32 )
    c962:	2500      	movs	r5, #0
        uMod = ui64Val - (u64Tmp * 10);
    c964:	eba6 0242 	sub.w	r2, r6, r2, lsl #1
    if ( ui64Val >> 32 )
    c968:	ea54 0a05 	orrs.w	sl, r4, r5
        tbuf[ix++] = uMod + '0';
    c96c:	f102 0230 	add.w	r2, r2, #48	; 0x30
    if ( ui64Val >> 32 )
    c970:	d0bb      	beq.n	c8ea <uint64_to_str+0x1a>
        q64 = (ui64Val>>1) + (ui64Val>>2);
    c972:	e9dd 2300 	ldrd	r2, r3, [sp]
    c976:	085b      	lsrs	r3, r3, #1
    c978:	ea4f 0232 	mov.w	r2, r2, rrx
    c97c:	eb12 0a00 	adds.w	sl, r2, r0
    c980:	eb43 0b01 	adc.w	fp, r3, r1
        q64 += (q64 >> 4);
    c984:	ea4f 131a 	mov.w	r3, sl, lsr #4
    c988:	ea43 730b 	orr.w	r3, r3, fp, lsl #28
    c98c:	9302      	str	r3, [sp, #8]
    c98e:	ea4f 131b 	mov.w	r3, fp, lsr #4
    c992:	9303      	str	r3, [sp, #12]
    c994:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    c998:	eb12 020a 	adds.w	r2, r2, sl
    c99c:	eb43 030b 	adc.w	r3, r3, fp
        q64 += (q64 >> 8);
    c9a0:	0a11      	lsrs	r1, r2, #8
    c9a2:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
    c9a6:	9104      	str	r1, [sp, #16]
    c9a8:	0a19      	lsrs	r1, r3, #8
    c9aa:	9105      	str	r1, [sp, #20]
    c9ac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    c9b0:	1880      	adds	r0, r0, r2
    c9b2:	4159      	adcs	r1, r3
    c9b4:	460b      	mov	r3, r1
        q64 += (q64 >> 16);
    c9b6:	0c01      	lsrs	r1, r0, #16
    c9b8:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    c9bc:	9106      	str	r1, [sp, #24]
    c9be:	0c19      	lsrs	r1, r3, #16
    c9c0:	9107      	str	r1, [sp, #28]
        q64 += (q64 >> 8);
    c9c2:	4602      	mov	r2, r0
        q64 += (q64 >> 16);
    c9c4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    c9c8:	1880      	adds	r0, r0, r2
    c9ca:	4159      	adcs	r1, r3
        q64 += (q64 >> 32);
    c9cc:	e9cd 150a 	strd	r1, r5, [sp, #40]	; 0x28
        q64 += (q64 >> 16);
    c9d0:	4602      	mov	r2, r0
    c9d2:	460b      	mov	r3, r1
        q64 += (q64 >> 32);
    c9d4:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    c9d8:	1880      	adds	r0, r0, r2
    c9da:	4159      	adcs	r1, r3
        q64 >>= 3;
    c9dc:	ea4f 08d0 	mov.w	r8, r0, lsr #3
    c9e0:	ea48 7841 	orr.w	r8, r8, r1, lsl #29
    c9e4:	ea4f 09d1 	mov.w	r9, r1, lsr #3
        return q64 + ((r64 + 6) >> 4);
    c9e8:	e9dd ab00 	ldrd	sl, fp, [sp]
        r64 = ui64Val - q64*10;
    c9ec:	ea4f 0189 	mov.w	r1, r9, lsl #2
    c9f0:	ea4f 0288 	mov.w	r2, r8, lsl #2
    c9f4:	eb12 0008 	adds.w	r0, r2, r8
    c9f8:	ea41 7398 	orr.w	r3, r1, r8, lsr #30
    c9fc:	eb43 0109 	adc.w	r1, r3, r9
        return q64 + ((r64 + 6) >> 4);
    ca00:	f11a 0a06 	adds.w	sl, sl, #6
    ca04:	f14b 0b00 	adc.w	fp, fp, #0
        r64 = ui64Val - q64*10;
    ca08:	1802      	adds	r2, r0, r0
    ca0a:	eb41 0301 	adc.w	r3, r1, r1
        return q64 + ((r64 + 6) >> 4);
    ca0e:	ebba 0002 	subs.w	r0, sl, r2
    ca12:	eb6b 0103 	sbc.w	r1, fp, r3
    ca16:	0903      	lsrs	r3, r0, #4
    ca18:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
    ca1c:	9308      	str	r3, [sp, #32]
    ca1e:	090b      	lsrs	r3, r1, #4
    ca20:	9309      	str	r3, [sp, #36]	; 0x24
    ca22:	e9dd ab08 	ldrd	sl, fp, [sp, #32]
    ca26:	eb1a 0a08 	adds.w	sl, sl, r8
    ca2a:	eb4b 0b09 	adc.w	fp, fp, r9
    ca2e:	4653      	mov	r3, sl
    ca30:	465c      	mov	r4, fp
    ca32:	e9cd 3400 	strd	r3, r4, [sp]
        uMod = ui64Val - (u64Tmp * 10);
    ca36:	eb0a 038a 	add.w	r3, sl, sl, lsl #2
    ca3a:	eba6 0643 	sub.w	r6, r6, r3, lsl #1
        tbuf[ix++] = uMod + '0';
    ca3e:	3630      	adds	r6, #48	; 0x30
    ca40:	f807 6c01 	strb.w	r6, [r7, #-1]
    ca44:	e75a      	b.n	c8fc <uint64_to_str+0x2c>
    iNumDig = ix;

    //
    // Now, reverse the buffer when saving to the caller's buffer.
    //
    if ( pcBuf )
    ca46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    ca48:	4660      	mov	r0, ip
    ca4a:	b16a      	cbz	r2, ca68 <uint64_to_str+0x198>
    ca4c:	465b      	mov	r3, fp
    ca4e:	3a01      	subs	r2, #1
    {
        while ( ix-- )
        {
            *pcBuf++ = tbuf[ix];
    ca50:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
    ca54:	f802 1f01 	strb.w	r1, [r2, #1]!
        while ( ix-- )
    ca58:	a90f      	add	r1, sp, #60	; 0x3c
    ca5a:	4299      	cmp	r1, r3
    ca5c:	d1f8      	bne.n	ca50 <uint64_to_str+0x180>
        }

        //
        // Terminate the caller's buffer
        //
        *pcBuf = 0x00;
    ca5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ca60:	4403      	add	r3, r0
    ca62:	461a      	mov	r2, r3
    ca64:	2300      	movs	r3, #0
    ca66:	7053      	strb	r3, [r2, #1]
    }

    return iNumDig;
}
    ca68:	4670      	mov	r0, lr
    ca6a:	b017      	add	sp, #92	; 0x5c
    ca6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ca70 <am_util_stdio_printf_init>:
    g_pfnCharPrint = pfnCharPrint;
    ca70:	4b01      	ldr	r3, [pc, #4]	; (ca78 <am_util_stdio_printf_init+0x8>)
    ca72:	6018      	str	r0, [r3, #0]
}
    ca74:	4770      	bx	lr
    ca76:	bf00      	nop
    ca78:	10002698 	.word	0x10002698

0000ca7c <am_util_stdio_vsprintf>:
//! @return uint32_t representing the number of characters printed.
//
//******************************************************************************
uint32_t
am_util_stdio_vsprintf(char *pcBuf, const char *pcFmt, va_list pArgs)
{
    ca7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca80:	b09b      	sub	sp, #108	; 0x6c
    ca82:	4682      	mov	sl, r0
    ca84:	4689      	mov	r9, r1
    ca86:	9201      	str	r2, [sp, #4]
    char *pcStr;
    uint64_t ui64Val;
    int64_t i64Val;
    uint32_t ui32NumChars, ui32CharCnt = 0;
    ca88:	f04f 0b00 	mov.w	fp, #0
    int iWidth, iVal, iPrecision;
    uint8_t ui8CharSpecifier, ui8PadChar;
    bool bLower, bLongLong, bNeg;
    uint32_t ui32strlen = 0;

    while ( *pcFmt != 0x0 )
    ca8c:	f899 3000 	ldrb.w	r3, [r9]
    ca90:	b1bb      	cbz	r3, cac2 <am_util_stdio_vsprintf+0x46>
    {
        iPrecision = 6;             // printf() default precision for %f is 6

        if ( *pcFmt != '%' )
    ca92:	2b25      	cmp	r3, #37	; 0x25
    ca94:	f109 0501 	add.w	r5, r9, #1
    ca98:	d01c      	beq.n	cad4 <am_util_stdio_vsprintf+0x58>
    ca9a:	f10b 0201 	add.w	r2, fp, #1
        {
            //
            // Accumulate the string portion of the format specification.
            //
            if ( pcBuf )
    ca9e:	f1ba 0f00 	cmp.w	sl, #0
    caa2:	f000 8091 	beq.w	cbc8 <am_util_stdio_vsprintf+0x14c>
            {
                // If '\n', convert to '\r\n'
                if ( *pcFmt == '\n'  &&  g_bTxtXlate )
    caa6:	2b0a      	cmp	r3, #10
    caa8:	f10a 0101 	add.w	r1, sl, #1
    caac:	f000 808f 	beq.w	cbce <am_util_stdio_vsprintf+0x152>
                {
                    *pcBuf++ = '\r';
                    ++ui32CharCnt;
                }
                *pcBuf++ = *pcFmt;
    cab0:	f88a 3000 	strb.w	r3, [sl]
    cab4:	4693      	mov	fp, r2
    cab6:	468a      	mov	sl, r1
            }

            ++pcFmt;
    cab8:	46a9      	mov	r9, r5
    while ( *pcFmt != 0x0 )
    caba:	f899 3000 	ldrb.w	r3, [r9]
    cabe:	2b00      	cmp	r3, #0
    cac0:	d1e7      	bne.n	ca92 <am_util_stdio_vsprintf+0x16>
    } // while ()

    //
    // Terminate the string
    //
    if ( pcBuf )
    cac2:	f1ba 0f00 	cmp.w	sl, #0
    cac6:	d001      	beq.n	cacc <am_util_stdio_vsprintf+0x50>
    {
        *pcBuf = 0x0;
    cac8:	f88a 3000 	strb.w	r3, [sl]
    }

    return (ui32CharCnt);
}
    cacc:	4658      	mov	r0, fp
    cace:	b01b      	add	sp, #108	; 0x6c
    cad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        if ( *pcFmt == '0' )
    cad4:	f899 3001 	ldrb.w	r3, [r9, #1]
    cad8:	2b30      	cmp	r3, #48	; 0x30
    cada:	bf03      	ittte	eq
    cadc:	f899 3002 	ldrbeq.w	r3, [r9, #2]
            ++pcFmt;
    cae0:	f109 0502 	addeq.w	r5, r9, #2
            ui8PadChar = '0';
    cae4:	f04f 0830 	moveq.w	r8, #48	; 0x30
        ui8PadChar = ' ';
    cae8:	f04f 0820 	movne.w	r8, #32
    if ( *pcStr == '-')
    caec:	2b2d      	cmp	r3, #45	; 0x2d
    caee:	d07e      	beq.n	cbee <am_util_stdio_vsprintf+0x172>
    uint32_t ui32Val = 0, uCnt = 0;
    caf0:	2100      	movs	r1, #0
    bool bNeg = false;
    caf2:	460e      	mov	r6, r1
    if ( *pcStr == '-')
    caf4:	462a      	mov	r2, r5
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    caf6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
    cafa:	2809      	cmp	r0, #9
    cafc:	f04f 0400 	mov.w	r4, #0
    cb00:	d80f      	bhi.n	cb22 <am_util_stdio_vsprintf+0xa6>
        ui32Val *= 10;
    cb02:	eb04 0484 	add.w	r4, r4, r4, lsl #2
        ui32Val += (*pcStr - '0');
    cb06:	eb03 0444 	add.w	r4, r3, r4, lsl #1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cb0a:	f812 3f01 	ldrb.w	r3, [r2, #1]!
    cb0e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
    cb12:	2809      	cmp	r0, #9
        ui32Val += (*pcStr - '0');
    cb14:	f1a4 0430 	sub.w	r4, r4, #48	; 0x30
        ++uCnt;
    cb18:	f101 0101 	add.w	r1, r1, #1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cb1c:	d9f1      	bls.n	cb02 <am_util_stdio_vsprintf+0x86>
    cb1e:	5c6b      	ldrb	r3, [r5, r1]
    cb20:	186a      	adds	r2, r5, r1
    return bNeg ? -ui32Val : ui32Val;
    cb22:	b106      	cbz	r6, cb26 <am_util_stdio_vsprintf+0xaa>
    cb24:	4264      	negs	r4, r4
        if ( ( *pcFmt != 's' )  &&  ( iWidth < 0 ) )
    cb26:	2b73      	cmp	r3, #115	; 0x73
        iWidth = decstr_to_int(pcFmt, &ui32NumChars);
    cb28:	4621      	mov	r1, r4
    cb2a:	f102 0901 	add.w	r9, r2, #1
        if ( ( *pcFmt != 's' )  &&  ( iWidth < 0 ) )
    cb2e:	f000 8167 	beq.w	ce00 <am_util_stdio_vsprintf+0x384>
    cb32:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
    cb36:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
        if (*pcFmt == '.')
    cb3a:	2b2e      	cmp	r3, #46	; 0x2e
    cb3c:	910e      	str	r1, [sp, #56]	; 0x38
    cb3e:	f000 813b 	beq.w	cdb8 <am_util_stdio_vsprintf+0x33c>
        iPrecision = 6;             // printf() default precision for %f is 6
    cb42:	2506      	movs	r5, #6
        if ( *pcFmt == 'l' )
    cb44:	2b6c      	cmp	r3, #108	; 0x6c
    cb46:	d157      	bne.n	cbf8 <am_util_stdio_vsprintf+0x17c>
            if ( *pcFmt == 'l' )    // "ll" (long long)
    cb48:	7853      	ldrb	r3, [r2, #1]
    cb4a:	2b6c      	cmp	r3, #108	; 0x6c
    cb4c:	f000 808e 	beq.w	cc6c <am_util_stdio_vsprintf+0x1f0>
        switch ( *pcFmt )
    cb50:	f1a3 0246 	sub.w	r2, r3, #70	; 0x46
    cb54:	f109 0901 	add.w	r9, r9, #1
    cb58:	2a32      	cmp	r2, #50	; 0x32
    cb5a:	f200 8123 	bhi.w	cda4 <am_util_stdio_vsprintf+0x328>
    cb5e:	e8df f012 	tbh	[pc, r2, lsl #1]
    cb62:	00c2      	.short	0x00c2
    cb64:	01210121 	.word	0x01210121
    cb68:	01210121 	.word	0x01210121
    cb6c:	01210121 	.word	0x01210121
    cb70:	01210121 	.word	0x01210121
    cb74:	01210121 	.word	0x01210121
    cb78:	01210121 	.word	0x01210121
    cb7c:	01210121 	.word	0x01210121
    cb80:	01210121 	.word	0x01210121
    cb84:	01990121 	.word	0x01990121
    cb88:	01210121 	.word	0x01210121
    cb8c:	01210121 	.word	0x01210121
    cb90:	01210121 	.word	0x01210121
    cb94:	01210121 	.word	0x01210121
    cb98:	01210121 	.word	0x01210121
    cb9c:	01b60113 	.word	0x01b60113
    cba0:	00c20121 	.word	0x00c20121
    cba4:	01210121 	.word	0x01210121
    cba8:	012101b6 	.word	0x012101b6
    cbac:	01210121 	.word	0x01210121
    cbb0:	01210121 	.word	0x01210121
    cbb4:	01210121 	.word	0x01210121
    cbb8:	01210121 	.word	0x01210121
    cbbc:	0121014e 	.word	0x0121014e
    cbc0:	01210235 	.word	0x01210235
    cbc4:	024e0121 	.word	0x024e0121
    cbc8:	4693      	mov	fp, r2
            ++pcFmt;
    cbca:	46a9      	mov	r9, r5
    cbcc:	e775      	b.n	caba <am_util_stdio_vsprintf+0x3e>
                if ( *pcFmt == '\n'  &&  g_bTxtXlate )
    cbce:	48a6      	ldr	r0, [pc, #664]	; (ce68 <am_util_stdio_vsprintf+0x3ec>)
    cbd0:	7800      	ldrb	r0, [r0, #0]
    cbd2:	2800      	cmp	r0, #0
    cbd4:	f43f af6c 	beq.w	cab0 <am_util_stdio_vsprintf+0x34>
                    *pcBuf++ = '\r';
    cbd8:	4650      	mov	r0, sl
    cbda:	230d      	movs	r3, #13
    cbdc:	f800 3b02 	strb.w	r3, [r0], #2
    cbe0:	468a      	mov	sl, r1
    cbe2:	f899 3000 	ldrb.w	r3, [r9]
    cbe6:	f10b 0202 	add.w	r2, fp, #2
    cbea:	4601      	mov	r1, r0
    cbec:	e760      	b.n	cab0 <am_util_stdio_vsprintf+0x34>
        uCnt++;
    cbee:	2101      	movs	r1, #1
        bNeg = true;
    cbf0:	460e      	mov	r6, r1
        pcStr++;
    cbf2:	186a      	adds	r2, r5, r1
    cbf4:	786b      	ldrb	r3, [r5, #1]
    cbf6:	e77e      	b.n	caf6 <am_util_stdio_vsprintf+0x7a>
        switch ( *pcFmt )
    cbf8:	f1a3 0246 	sub.w	r2, r3, #70	; 0x46
    cbfc:	2a32      	cmp	r2, #50	; 0x32
    cbfe:	f200 80d1 	bhi.w	cda4 <am_util_stdio_vsprintf+0x328>
    cc02:	e8df f012 	tbh	[pc, r2, lsl #1]
    cc06:	0070      	.short	0x0070
    cc08:	00cf00cf 	.word	0x00cf00cf
    cc0c:	00cf00cf 	.word	0x00cf00cf
    cc10:	00cf00cf 	.word	0x00cf00cf
    cc14:	00cf00cf 	.word	0x00cf00cf
    cc18:	00cf00cf 	.word	0x00cf00cf
    cc1c:	00cf00cf 	.word	0x00cf00cf
    cc20:	00cf00cf 	.word	0x00cf00cf
    cc24:	00cf00cf 	.word	0x00cf00cf
    cc28:	014700cf 	.word	0x014700cf
    cc2c:	00cf00cf 	.word	0x00cf00cf
    cc30:	00cf00cf 	.word	0x00cf00cf
    cc34:	00cf00cf 	.word	0x00cf00cf
    cc38:	00cf00cf 	.word	0x00cf00cf
    cc3c:	00cf00cf 	.word	0x00cf00cf
    cc40:	016400c1 	.word	0x016400c1
    cc44:	007000cf 	.word	0x007000cf
    cc48:	00cf00cf 	.word	0x00cf00cf
    cc4c:	00cf0164 	.word	0x00cf0164
    cc50:	00cf00cf 	.word	0x00cf00cf
    cc54:	00cf00cf 	.word	0x00cf00cf
    cc58:	00cf00cf 	.word	0x00cf00cf
    cc5c:	00cf00cf 	.word	0x00cf00cf
    cc60:	00cf00fc 	.word	0x00cf00fc
    cc64:	00cf01e3 	.word	0x00cf01e3
    cc68:	01fa00cf 	.word	0x01fa00cf
    cc6c:	7893      	ldrb	r3, [r2, #2]
    cc6e:	f1a3 0146 	sub.w	r1, r3, #70	; 0x46
    cc72:	f102 0903 	add.w	r9, r2, #3
    cc76:	2932      	cmp	r1, #50	; 0x32
    cc78:	f200 8094 	bhi.w	cda4 <am_util_stdio_vsprintf+0x328>
    cc7c:	e8df f011 	tbh	[pc, r1, lsl #1]
    cc80:	00920033 	.word	0x00920033
    cc84:	00920092 	.word	0x00920092
    cc88:	00920092 	.word	0x00920092
    cc8c:	00920092 	.word	0x00920092
    cc90:	00920092 	.word	0x00920092
    cc94:	00920092 	.word	0x00920092
    cc98:	00920092 	.word	0x00920092
    cc9c:	00920092 	.word	0x00920092
    cca0:	00920092 	.word	0x00920092
    cca4:	00920414 	.word	0x00920414
    cca8:	00920092 	.word	0x00920092
    ccac:	00920092 	.word	0x00920092
    ccb0:	00920092 	.word	0x00920092
    ccb4:	00920092 	.word	0x00920092
    ccb8:	00840092 	.word	0x00840092
    ccbc:	00920222 	.word	0x00920222
    ccc0:	00920033 	.word	0x00920033
    ccc4:	02220092 	.word	0x02220092
    ccc8:	00920092 	.word	0x00920092
    cccc:	00920092 	.word	0x00920092
    ccd0:	00920092 	.word	0x00920092
    ccd4:	00920092 	.word	0x00920092
    ccd8:	00bf0092 	.word	0x00bf0092
    ccdc:	02160092 	.word	0x02160092
    cce0:	00920092 	.word	0x00920092
    cce4:	0412      	.short	0x0412
                if ( pcBuf )
    cce6:	f1ba 0f00 	cmp.w	sl, #0
    ccea:	f43f aecf 	beq.w	ca8c <am_util_stdio_vsprintf+0x10>
                    float fValue = va_arg(pArgs, double);
    ccee:	9b01      	ldr	r3, [sp, #4]
    ccf0:	3307      	adds	r3, #7
    ccf2:	f023 0307 	bic.w	r3, r3, #7
    ccf6:	e9d3 0100 	ldrd	r0, r1, [r3]
    ccfa:	3308      	adds	r3, #8
    ccfc:	9301      	str	r3, [sp, #4]
    ccfe:	f7ff fa99 	bl	c234 <__aeabi_d2f>
    cd02:	ee07 0a90 	vmov	s15, r0
    if (fValue == 0.0f)
    cd06:	eef5 7a40 	vcmp.f32	s15, #0.0
                    *(uint32_t*)pcBuf = 20;
    cd0a:	2314      	movs	r3, #20
    if (fValue == 0.0f)
    cd0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    *(uint32_t*)pcBuf = 20;
    cd10:	f8ca 3000 	str.w	r3, [sl]
    if (fValue == 0.0f)
    cd14:	f000 843e 	beq.w	d594 <am_util_stdio_vsprintf+0xb18>
    iExp2 = ((unFloatValue.I32 >> 23) & 0x000000FF) - 127;
    cd18:	f3c0 51c7 	ubfx	r1, r0, #23, #8
    cd1c:	f1a1 027f 	sub.w	r2, r1, #127	; 0x7f
    cd20:	4603      	mov	r3, r0
    if (iExp2 >= 31)
    cd22:	2a1e      	cmp	r2, #30
    i32Significand = (unFloatValue.I32 & 0x00FFFFFF) | 0x00800000;
    cd24:	f3c0 0016 	ubfx	r0, r0, #0, #23
    cd28:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    if (iExp2 >= 31)
    cd2c:	f300 844a 	bgt.w	d5c4 <am_util_stdio_vsprintf+0xb48>
    else if (iExp2 < -23)
    cd30:	f112 0f17 	cmn.w	r2, #23
    cd34:	f2c0 8479 	blt.w	d62a <am_util_stdio_vsprintf+0xbae>
    else if (iExp2 >= 23)
    cd38:	2a16      	cmp	r2, #22
    cd3a:	f10a 0701 	add.w	r7, sl, #1
    cd3e:	f340 836f 	ble.w	d420 <am_util_stdio_vsprintf+0x9a4>
        i32IntPart = i32Significand << (iExp2 - 23);
    cd42:	3996      	subs	r1, #150	; 0x96
    if (unFloatValue.I32 < 0)
    cd44:	2b00      	cmp	r3, #0
        i32IntPart = i32Significand << (iExp2 - 23);
    cd46:	fa00 f001 	lsl.w	r0, r0, r1
    if (unFloatValue.I32 < 0)
    cd4a:	f2c0 844d 	blt.w	d5e8 <am_util_stdio_vsprintf+0xb6c>
    cd4e:	4656      	mov	r6, sl
    i32FracPart = 0;
    cd50:	2400      	movs	r4, #0
    if (i32IntPart == 0)
    cd52:	2800      	cmp	r0, #0
    cd54:	f040 843c 	bne.w	d5d0 <am_util_stdio_vsprintf+0xb54>
    cd58:	1c7a      	adds	r2, r7, #1
        *pcBuf++ = '0';
    cd5a:	f04f 0330 	mov.w	r3, #48	; 0x30
    cd5e:	7033      	strb	r3, [r6, #0]
    *pcBuf++ = '.';
    cd60:	232e      	movs	r3, #46	; 0x2e
    cd62:	703b      	strb	r3, [r7, #0]
    if (i32FracPart == 0)
    cd64:	2c00      	cmp	r4, #0
    cd66:	f040 83d8 	bne.w	d51a <am_util_stdio_vsprintf+0xa9e>
        *pcBuf++ = '0';
    cd6a:	1cba      	adds	r2, r7, #2
    cd6c:	f04f 0330 	mov.w	r3, #48	; 0x30
    cd70:	707b      	strb	r3, [r7, #1]
    cd72:	eba2 010a 	sub.w	r1, r2, sl
    *pcBuf = 0x00;
    cd76:	2300      	movs	r3, #0
                    if ( iVal < 0 )
    cd78:	4299      	cmp	r1, r3
    *pcBuf = 0x00;
    cd7a:	7013      	strb	r3, [r2, #0]
                    if ( iVal < 0 )
    cd7c:	f2c0 841e 	blt.w	d5bc <am_util_stdio_vsprintf+0xb40>
    cd80:	460b      	mov	r3, r1
                    ui32CharCnt += iVal;
    cd82:	449b      	add	fp, r3
                    pcBuf += iVal;
    cd84:	449a      	add	sl, r3
    cd86:	e681      	b.n	ca8c <am_util_stdio_vsprintf+0x10>
                ui8CharSpecifier = va_arg(pArgs, uint32_t);
    cd88:	9a01      	ldr	r2, [sp, #4]
    cd8a:	1d13      	adds	r3, r2, #4
                if ( pcBuf )
    cd8c:	f1ba 0f00 	cmp.w	sl, #0
    cd90:	d004      	beq.n	cd9c <am_util_stdio_vsprintf+0x320>
                ui8CharSpecifier = va_arg(pArgs, uint32_t);
    cd92:	6812      	ldr	r2, [r2, #0]
    cd94:	f88a 2000 	strb.w	r2, [sl]
                    *pcBuf++ = ui8CharSpecifier;
    cd98:	f10a 0a01 	add.w	sl, sl, #1
                ++ui32CharCnt;
    cd9c:	f10b 0b01 	add.w	fp, fp, #1
                ui8CharSpecifier = va_arg(pArgs, uint32_t);
    cda0:	9301      	str	r3, [sp, #4]
                break;
    cda2:	e673      	b.n	ca8c <am_util_stdio_vsprintf+0x10>
                if ( pcBuf )
    cda4:	f1ba 0f00 	cmp.w	sl, #0
    cda8:	d003      	beq.n	cdb2 <am_util_stdio_vsprintf+0x336>
                    *pcBuf++ = *pcFmt;
    cdaa:	f88a 3000 	strb.w	r3, [sl]
    cdae:	f10a 0a01 	add.w	sl, sl, #1
                ++ui32CharCnt;
    cdb2:	f10b 0b01 	add.w	fp, fp, #1
                break;
    cdb6:	e669      	b.n	ca8c <am_util_stdio_vsprintf+0x10>
    if ( *pcStr == '-')
    cdb8:	7851      	ldrb	r1, [r2, #1]
    cdba:	292d      	cmp	r1, #45	; 0x2d
    cdbc:	f000 821a 	beq.w	d1f4 <am_util_stdio_vsprintf+0x778>
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cdc0:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    cdc4:	2b09      	cmp	r3, #9
    cdc6:	f200 8305 	bhi.w	d3d4 <am_util_stdio_vsprintf+0x958>
    bool bNeg = false;
    cdca:	2600      	movs	r6, #0
    uint32_t ui32Val = 0, uCnt = 0;
    cdcc:	4632      	mov	r2, r6
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cdce:	4648      	mov	r0, r9
        uCnt++;
    cdd0:	2300      	movs	r3, #0
        ui32Val *= 10;
    cdd2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
        ui32Val += (*pcStr - '0');
    cdd6:	eb01 0343 	add.w	r3, r1, r3, lsl #1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cdda:	f810 1f01 	ldrb.w	r1, [r0, #1]!
    cdde:	f1a1 0530 	sub.w	r5, r1, #48	; 0x30
    cde2:	2d09      	cmp	r5, #9
        ui32Val += (*pcStr - '0');
    cde4:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
        ++uCnt;
    cde8:	f102 0201 	add.w	r2, r2, #1
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    cdec:	d9f1      	bls.n	cdd2 <am_util_stdio_vsprintf+0x356>
    return bNeg ? -ui32Val : ui32Val;
    cdee:	b106      	cbz	r6, cdf2 <am_util_stdio_vsprintf+0x376>
    cdf0:	425b      	negs	r3, r3
            pcFmt += ui32NumChars;
    cdf2:	444a      	add	r2, r9
            iPrecision = decstr_to_int(pcFmt, &ui32NumChars);
    cdf4:	461d      	mov	r5, r3
    cdf6:	f102 0901 	add.w	r9, r2, #1
    cdfa:	7813      	ldrb	r3, [r2, #0]
    cdfc:	e6a2      	b.n	cb44 <am_util_stdio_vsprintf+0xc8>
        switch ( *pcFmt )
    cdfe:	990e      	ldr	r1, [sp, #56]	; 0x38
                pcStr = va_arg(pArgs, char *);
    ce00:	9b01      	ldr	r3, [sp, #4]
    ce02:	681f      	ldr	r7, [r3, #0]
    ce04:	1d1a      	adds	r2, r3, #4
    if ( !pcBuf )
    ce06:	b38f      	cbz	r7, ce6c <am_util_stdio_vsprintf+0x3f0>
    while ( *pcBuf++ )
    ce08:	7838      	ldrb	r0, [r7, #0]
    ce0a:	1c7b      	adds	r3, r7, #1
    ce0c:	461c      	mov	r4, r3
    ce0e:	2800      	cmp	r0, #0
    ce10:	f000 835c 	beq.w	d4cc <am_util_stdio_vsprintf+0xa50>
    ce14:	1be6      	subs	r6, r4, r7
    ce16:	f814 5b01 	ldrb.w	r5, [r4], #1
    ce1a:	2d00      	cmp	r5, #0
    ce1c:	d1fa      	bne.n	ce14 <am_util_stdio_vsprintf+0x398>
                if ( iWidth > 0 )
    ce1e:	2900      	cmp	r1, #0
    ce20:	dd02      	ble.n	ce28 <am_util_stdio_vsprintf+0x3ac>
                    if ( ui32strlen < iWidth )
    ce22:	428e      	cmp	r6, r1
    ce24:	f0c0 8356 	bcc.w	d4d4 <am_util_stdio_vsprintf+0xa58>
    ce28:	465c      	mov	r4, fp
    ce2a:	1be4      	subs	r4, r4, r7
    ce2c:	4657      	mov	r7, sl
                        *pcBuf++ = *pcStr;
    ce2e:	4655      	mov	r5, sl
    ce30:	eb04 0b03 	add.w	fp, r4, r3
                    if ( pcBuf )
    ce34:	b15f      	cbz	r7, ce4e <am_util_stdio_vsprintf+0x3d2>
                        *pcBuf++ = *pcStr;
    ce36:	7028      	strb	r0, [r5, #0]
                while (*pcStr != 0x0)
    ce38:	f813 0b01 	ldrb.w	r0, [r3], #1
                        *pcBuf++ = *pcStr;
    ce3c:	3701      	adds	r7, #1
                while (*pcStr != 0x0)
    ce3e:	2800      	cmp	r0, #0
    ce40:	f000 81c5 	beq.w	d1ce <am_util_stdio_vsprintf+0x752>
                        *pcBuf++ = *pcStr;
    ce44:	463d      	mov	r5, r7
    ce46:	eb04 0b03 	add.w	fp, r4, r3
                    if ( pcBuf )
    ce4a:	2f00      	cmp	r7, #0
    ce4c:	d1f3      	bne.n	ce36 <am_util_stdio_vsprintf+0x3ba>
    ce4e:	46ba      	mov	sl, r7
    ce50:	eb04 0b03 	add.w	fp, r4, r3
                while (*pcStr != 0x0)
    ce54:	f813 0b01 	ldrb.w	r0, [r3], #1
    ce58:	2800      	cmp	r0, #0
    ce5a:	d1f9      	bne.n	ce50 <am_util_stdio_vsprintf+0x3d4>
                if ( iWidth )
    ce5c:	2900      	cmp	r1, #0
    ce5e:	f040 81ba 	bne.w	d1d6 <am_util_stdio_vsprintf+0x75a>
                pcStr = va_arg(pArgs, char *);
    ce62:	9201      	str	r2, [sp, #4]
    ce64:	e612      	b.n	ca8c <am_util_stdio_vsprintf+0x10>
    ce66:	bf00      	nop
    ce68:	10001048 	.word	0x10001048
                if ( iWidth > 0 )
    ce6c:	2900      	cmp	r1, #0
    ce6e:	f340 838a 	ble.w	d586 <am_util_stdio_vsprintf+0xb0a>
        return ui32RetVal;
    ce72:	463e      	mov	r6, r7
    if ( i32NumChars <= 0 )
    ce74:	2900      	cmp	r1, #0
    ce76:	f300 8304 	bgt.w	d482 <am_util_stdio_vsprintf+0xa06>
    ce7a:	465c      	mov	r4, fp
    ce7c:	2300      	movs	r3, #0
                        pcBuf += pcBuf ? iWidth : 0;
    ce7e:	f1ba 0f00 	cmp.w	sl, #0
    ce82:	d000      	beq.n	ce86 <am_util_stdio_vsprintf+0x40a>
    ce84:	449a      	add	sl, r3
                while (*pcStr != 0x0)
    ce86:	7838      	ldrb	r0, [r7, #0]
    ce88:	2800      	cmp	r0, #0
    ce8a:	f000 83f3 	beq.w	d674 <am_util_stdio_vsprintf+0xbf8>
                        iWidth = 0;
    ce8e:	2100      	movs	r1, #0
    ce90:	1c7b      	adds	r3, r7, #1
    ce92:	e7ca      	b.n	ce2a <am_util_stdio_vsprintf+0x3ae>
        bLower = bLongLong = false;
    ce94:	2500      	movs	r5, #0
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    ce96:	9b01      	ldr	r3, [sp, #4]
    ce98:	681a      	ldr	r2, [r3, #0]
                                      va_arg(pArgs, uint32_t);
    ce9a:	3304      	adds	r3, #4
    ce9c:	9301      	str	r3, [sp, #4]
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    ce9e:	2300      	movs	r3, #0
                if ( iWidth )
    cea0:	2c00      	cmp	r4, #0
    cea2:	f040 80bd 	bne.w	d020 <am_util_stdio_vsprintf+0x5a4>
    if ( ui64Val == 0 )
    cea6:	ea52 0103 	orrs.w	r1, r2, r3
    ceaa:	f040 80dd 	bne.w	d068 <am_util_stdio_vsprintf+0x5ec>
    if (pcBuf)
    ceae:	f1ba 0f00 	cmp.w	sl, #0
    ceb2:	f000 828d 	beq.w	d3d0 <am_util_stdio_vsprintf+0x954>
            *pcBuf++ = tbuf[ix];
    ceb6:	f10a 0501 	add.w	r5, sl, #1
    ceba:	f04f 0330 	mov.w	r3, #48	; 0x30
    cebe:	f88a 3000 	strb.w	r3, [sl]
    cec2:	2001      	movs	r0, #1
    cec4:	46aa      	mov	sl, r5
        *pcBuf = 0;
    cec6:	2300      	movs	r3, #0
    cec8:	702b      	strb	r3, [r5, #0]
                ui32CharCnt += iVal;
    ceca:	4483      	add	fp, r0
                break;
    cecc:	e5de      	b.n	ca8c <am_util_stdio_vsprintf+0x10>
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
    cece:	9b01      	ldr	r3, [sp, #4]
    ced0:	6818      	ldr	r0, [r3, #0]
                                     va_arg(pArgs, int32_t);
    ced2:	3304      	adds	r3, #4
    ced4:	9301      	str	r3, [sp, #4]
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
    ced6:	17c1      	asrs	r1, r0, #31
                if ( i64Val < 0 )
    ced8:	2800      	cmp	r0, #0
    ceda:	f171 0300 	sbcs.w	r3, r1, #0
    cede:	f2c0 8194 	blt.w	d20a <am_util_stdio_vsprintf+0x78e>
                    ui64Val = i64Val;
    cee2:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
                if ( iWidth )
    cee6:	2c00      	cmp	r4, #0
    cee8:	d065      	beq.n	cfb6 <am_util_stdio_vsprintf+0x53a>
    int iNDigits = ui64Val ? 0 : 1;
    ceea:	4603      	mov	r3, r0
    ceec:	430b      	orrs	r3, r1
    return ndigits_in_u64((uint64_t) i64Val);
    ceee:	460c      	mov	r4, r1
    cef0:	4603      	mov	r3, r0
    int iNDigits = ui64Val ? 0 : 1;
    cef2:	bf0c      	ite	eq
    cef4:	f04f 0e01 	moveq.w	lr, #1
    cef8:	f04f 0e00 	movne.w	lr, #0
    while ( ui64Val )
    cefc:	4323      	orrs	r3, r4
    cefe:	f000 8396 	beq.w	d62e <am_util_stdio_vsprintf+0xbb2>
                    bNeg = false;
    cf02:	2300      	movs	r3, #0
    cf04:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
    cf08:	e9cd 0102 	strd	r0, r1, [sp, #8]
    cf0c:	e9cd ba11 	strd	fp, sl, [sp, #68]	; 0x44
    cf10:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
        q64 = (ui64Val>>1) + (ui64Val>>2);
    cf14:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
        q64 += (q64 >> 4);
    cf18:	2300      	movs	r3, #0
    cf1a:	2400      	movs	r4, #0
    cf1c:	e9cd 3408 	strd	r3, r4, [sp, #32]
        q64 += (q64 >> 8);
    cf20:	e9cd 3406 	strd	r3, r4, [sp, #24]
        q64 += (q64 >> 16);
    cf24:	e9cd 3404 	strd	r3, r4, [sp, #16]
        q64 += (q64 >> 32);
    cf28:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
        q32 = (ui32Val>>1) + (ui32Val>>2);
    cf2c:	0843      	lsrs	r3, r0, #1
    cf2e:	eb03 0390 	add.w	r3, r3, r0, lsr #2
        q32 += (q32 >> 4);
    cf32:	eb03 1313 	add.w	r3, r3, r3, lsr #4
        q32 += (q32 >> 8);
    cf36:	eb03 2313 	add.w	r3, r3, r3, lsr #8
        q32 += (q32 >> 16);
    cf3a:	eb03 4313 	add.w	r3, r3, r3, lsr #16
        q32 >>= 3;
    cf3e:	08db      	lsrs	r3, r3, #3
        q32 = (ui32Val>>1) + (ui32Val>>2);
    cf40:	4602      	mov	r2, r0
        r32 = ui32Val - q32*10;
    cf42:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
        q64 = (ui64Val>>1) + (ui64Val>>2);
    cf46:	0886      	lsrs	r6, r0, #2
    if ( ui64Val >> 32 )
    cf48:	460c      	mov	r4, r1
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cf4a:	3206      	adds	r2, #6
    if ( ui64Val >> 32 )
    cf4c:	2500      	movs	r5, #0
        q64 = (ui64Val>>1) + (ui64Val>>2);
    cf4e:	ea46 7681 	orr.w	r6, r6, r1, lsl #30
    cf52:	088f      	lsrs	r7, r1, #2
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cf54:	eba2 024c 	sub.w	r2, r2, ip, lsl #1
    if ( ui64Val >> 32 )
    cf58:	ea54 0105 	orrs.w	r1, r4, r5
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cf5c:	eb03 1312 	add.w	r3, r3, r2, lsr #4
    if ( ui64Val >> 32 )
    cf60:	f040 80ba 	bne.w	d0d8 <am_util_stdio_vsprintf+0x65c>
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cf64:	4619      	mov	r1, r3
    cf66:	2200      	movs	r2, #0
        ++iNDigits;
    cf68:	f10e 0e01 	add.w	lr, lr, #1
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    cf6c:	e9cd 1202 	strd	r1, r2, [sp, #8]
    while ( ui64Val )
    cf70:	2b00      	cmp	r3, #0
    cf72:	d1cf      	bne.n	cf14 <am_util_stdio_vsprintf+0x498>
                    iWidth -= ndigits_in_i64(ui64Val);
    cf74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cf76:	eba3 0e0e 	sub.w	lr, r3, lr
                    if ( bNeg )
    cf7a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    cf7c:	e9dd 8b10 	ldrd	r8, fp, [sp, #64]	; 0x40
    cf80:	e9dd a912 	ldrd	sl, r9, [sp, #72]	; 0x48
    cf84:	b13b      	cbz	r3, cf96 <am_util_stdio_vsprintf+0x51a>
                        if ( ui8PadChar == '0' )
    cf86:	f1b8 0f30 	cmp.w	r8, #48	; 0x30
                        --iWidth;
    cf8a:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
                        if ( ui8PadChar == '0' )
    cf8e:	f000 82a3 	beq.w	d4d8 <am_util_stdio_vsprintf+0xa5c>
    cf92:	2301      	movs	r3, #1
    cf94:	930f      	str	r3, [sp, #60]	; 0x3c
    if ( i32NumChars <= 0 )
    cf96:	f1be 0f00 	cmp.w	lr, #0
    cf9a:	f300 821e 	bgt.w	d3da <am_util_stdio_vsprintf+0x95e>
    cf9e:	2200      	movs	r2, #0
                    pcBuf += pcBuf ? iWidth : 0;
    cfa0:	f1ba 0f00 	cmp.w	sl, #0
    cfa4:	f000 82fc 	beq.w	d5a0 <am_util_stdio_vsprintf+0xb24>
                    if ( bNeg  &&  (ui8PadChar == ' ') )
    cfa8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
                    pcBuf += pcBuf ? iWidth : 0;
    cfaa:	4492      	add	sl, r2
                    if ( bNeg  &&  (ui8PadChar == ' ') )
    cfac:	b11b      	cbz	r3, cfb6 <am_util_stdio_vsprintf+0x53a>
    cfae:	f1b8 0f20 	cmp.w	r8, #32
    cfb2:	f000 8132 	beq.w	d21a <am_util_stdio_vsprintf+0x79e>
                iVal = uint64_to_str(ui64Val, pcBuf);
    cfb6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
    cfba:	4652      	mov	r2, sl
    cfbc:	f7ff fc88 	bl	c8d0 <uint64_to_str>
                if ( pcBuf )
    cfc0:	f1ba 0f00 	cmp.w	sl, #0
    cfc4:	d081      	beq.n	ceca <am_util_stdio_vsprintf+0x44e>
                    pcBuf += iVal;
    cfc6:	4482      	add	sl, r0
                ui32CharCnt += iVal;
    cfc8:	4483      	add	fp, r0
    cfca:	e55f      	b.n	ca8c <am_util_stdio_vsprintf+0x10>
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    cfcc:	9a01      	ldr	r2, [sp, #4]
    cfce:	6813      	ldr	r3, [r2, #0]
                                      va_arg(pArgs, uint32_t);
    cfd0:	3204      	adds	r2, #4
    cfd2:	9201      	str	r2, [sp, #4]
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    cfd4:	4619      	mov	r1, r3
    cfd6:	2200      	movs	r2, #0
    cfd8:	e9cd 120c 	strd	r1, r2, [sp, #48]	; 0x30
                if ( iWidth )
    cfdc:	2c00      	cmp	r4, #0
    cfde:	f040 8127 	bne.w	d230 <am_util_stdio_vsprintf+0x7b4>
                iVal = uint64_to_str(ui64Val, pcBuf);
    cfe2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
    cfe6:	4652      	mov	r2, sl
    cfe8:	f7ff fc72 	bl	c8d0 <uint64_to_str>
                if ( pcBuf )
    cfec:	f1ba 0f00 	cmp.w	sl, #0
    cff0:	d1e9      	bne.n	cfc6 <am_util_stdio_vsprintf+0x54a>
    cff2:	f04f 0a00 	mov.w	sl, #0
                ui32CharCnt += iVal;
    cff6:	4483      	add	fp, r0
    cff8:	e548      	b.n	ca8c <am_util_stdio_vsprintf+0x10>
                bLower = true;
    cffa:	2501      	movs	r5, #1
    cffc:	e74b      	b.n	ce96 <am_util_stdio_vsprintf+0x41a>
        bLower = bLongLong = false;
    cffe:	2300      	movs	r3, #0
                bLower = true;
    d000:	2501      	movs	r5, #1
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    d002:	2b00      	cmp	r3, #0
    d004:	f43f af47 	beq.w	ce96 <am_util_stdio_vsprintf+0x41a>
    d008:	9b01      	ldr	r3, [sp, #4]
    d00a:	3307      	adds	r3, #7
    d00c:	f023 0307 	bic.w	r3, r3, #7
    d010:	f103 0208 	add.w	r2, r3, #8
    d014:	9201      	str	r2, [sp, #4]
    d016:	e9d3 2300 	ldrd	r2, r3, [r3]
                if ( iWidth )
    d01a:	2c00      	cmp	r4, #0
    d01c:	f43f af43 	beq.w	cea6 <am_util_stdio_vsprintf+0x42a>
    int iDigits = ui64Val ? 0 : 1;
    d020:	ea52 0103 	orrs.w	r1, r2, r3
    d024:	bf0c      	ite	eq
    d026:	2401      	moveq	r4, #1
    d028:	2400      	movne	r4, #0
    while ( ui64Val )
    d02a:	ea52 0103 	orrs.w	r1, r2, r3
    d02e:	d00c      	beq.n	d04a <am_util_stdio_vsprintf+0x5ce>
    d030:	4610      	mov	r0, r2
    d032:	4619      	mov	r1, r3
        ui64Val >>= 4;
    d034:	0906      	lsrs	r6, r0, #4
    d036:	ea46 7601 	orr.w	r6, r6, r1, lsl #28
    d03a:	090f      	lsrs	r7, r1, #4
    d03c:	4630      	mov	r0, r6
    d03e:	4639      	mov	r1, r7
    while ( ui64Val )
    d040:	ea50 0601 	orrs.w	r6, r0, r1
        ++iDigits;
    d044:	f104 0401 	add.w	r4, r4, #1
    while ( ui64Val )
    d048:	d1f4      	bne.n	d034 <am_util_stdio_vsprintf+0x5b8>
                    iWidth -= ndigits_in_hex(ui64Val);
    d04a:	990e      	ldr	r1, [sp, #56]	; 0x38
    d04c:	1b09      	subs	r1, r1, r4
    if ( i32NumChars <= 0 )
    d04e:	2900      	cmp	r1, #0
    d050:	f300 81a1 	bgt.w	d396 <am_util_stdio_vsprintf+0x91a>
    d054:	2000      	movs	r0, #0
                    pcBuf += pcBuf ? iWidth : 0;
    d056:	f1ba 0f00 	cmp.w	sl, #0
    d05a:	f000 81b5 	beq.w	d3c8 <am_util_stdio_vsprintf+0x94c>
    if ( ui64Val == 0 )
    d05e:	ea52 0103 	orrs.w	r1, r2, r3
    d062:	4482      	add	sl, r0
    d064:	f43f af23 	beq.w	ceae <am_util_stdio_vsprintf+0x432>
    d068:	2d00      	cmp	r5, #0
    d06a:	bf14      	ite	ne
    d06c:	2527      	movne	r5, #39	; 0x27
    d06e:	2507      	moveq	r5, #7
    if ( i32NumChars <= 0 )
    d070:	af15      	add	r7, sp, #84	; 0x54
    int iNumDig, ix = 0;
    d072:	2600      	movs	r6, #0
    d074:	f8cd 9008 	str.w	r9, [sp, #8]
        ui64Val >>= 4;
    d078:	0914      	lsrs	r4, r2, #4
        cCh = ui64Val & 0xf;
    d07a:	f002 020f 	and.w	r2, r2, #15
        ui64Val >>= 4;
    d07e:	ea4f 1813 	mov.w	r8, r3, lsr #4
            cCh += bLower ? 0x27 : 0x7;
    d082:	18a8      	adds	r0, r5, r2
        if ( cCh > 9 )
    d084:	2a09      	cmp	r2, #9
        ui64Val >>= 4;
    d086:	46c6      	mov	lr, r8
    d088:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
        tbuf[ix++] = cCh + '0';
    d08c:	f100 0030 	add.w	r0, r0, #48	; 0x30
    d090:	f102 0c30 	add.w	ip, r2, #48	; 0x30
    d094:	f106 0901 	add.w	r9, r6, #1
        if ( cCh > 9 )
    d098:	d978      	bls.n	d18c <am_util_stdio_vsprintf+0x710>
        ui64Val >>= 4;
    d09a:	4622      	mov	r2, r4
    d09c:	4643      	mov	r3, r8
    while ( ui64Val )
    d09e:	ea52 0103 	orrs.w	r1, r2, r3
        tbuf[ix++] = cCh + '0';
    d0a2:	f807 0b01 	strb.w	r0, [r7], #1
    while ( ui64Val )
    d0a6:	d07a      	beq.n	d19e <am_util_stdio_vsprintf+0x722>
    if ( i32NumChars <= 0 )
    d0a8:	464e      	mov	r6, r9
    d0aa:	e7e5      	b.n	d078 <am_util_stdio_vsprintf+0x5fc>
                ui64Val = bLongLong ? va_arg(pArgs, uint64_t) :
    d0ac:	9b01      	ldr	r3, [sp, #4]
    d0ae:	3307      	adds	r3, #7
    d0b0:	f023 0307 	bic.w	r3, r3, #7
    d0b4:	f103 0208 	add.w	r2, r3, #8
    d0b8:	9201      	str	r2, [sp, #4]
    d0ba:	e9d3 2300 	ldrd	r2, r3, [r3]
    d0be:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
    d0c2:	e78b      	b.n	cfdc <am_util_stdio_vsprintf+0x560>
                i64Val = bLongLong ? va_arg(pArgs, int64_t) :
    d0c4:	9b01      	ldr	r3, [sp, #4]
    d0c6:	3307      	adds	r3, #7
    d0c8:	f023 0307 	bic.w	r3, r3, #7
    d0cc:	f103 0208 	add.w	r2, r3, #8
    d0d0:	9201      	str	r2, [sp, #4]
    d0d2:	e9d3 0100 	ldrd	r0, r1, [r3]
    d0d6:	e6ff      	b.n	ced8 <am_util_stdio_vsprintf+0x45c>
        q64 = (ui64Val>>1) + (ui64Val>>2);
    d0d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    d0dc:	085b      	lsrs	r3, r3, #1
    d0de:	ea4f 0232 	mov.w	r2, r2, rrx
    d0e2:	1990      	adds	r0, r2, r6
    d0e4:	eb43 0107 	adc.w	r1, r3, r7
        q64 += (q64 >> 4);
    d0e8:	0903      	lsrs	r3, r0, #4
    d0ea:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
    d0ee:	9308      	str	r3, [sp, #32]
    d0f0:	090b      	lsrs	r3, r1, #4
    d0f2:	9309      	str	r3, [sp, #36]	; 0x24
    d0f4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    d0f8:	1812      	adds	r2, r2, r0
    d0fa:	414b      	adcs	r3, r1
        q64 += (q64 >> 8);
    d0fc:	0a11      	lsrs	r1, r2, #8
    d0fe:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
    d102:	9106      	str	r1, [sp, #24]
    d104:	0a19      	lsrs	r1, r3, #8
    d106:	9107      	str	r1, [sp, #28]
    d108:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    d10c:	1880      	adds	r0, r0, r2
    d10e:	4159      	adcs	r1, r3
    d110:	460b      	mov	r3, r1
        q64 += (q64 >> 16);
    d112:	0c01      	lsrs	r1, r0, #16
    d114:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    d118:	9104      	str	r1, [sp, #16]
    d11a:	0c19      	lsrs	r1, r3, #16
    d11c:	9105      	str	r1, [sp, #20]
        q64 += (q64 >> 8);
    d11e:	4602      	mov	r2, r0
        q64 += (q64 >> 16);
    d120:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    d124:	1880      	adds	r0, r0, r2
    d126:	4159      	adcs	r1, r3
        q64 += (q64 >> 32);
    d128:	e9cd 150a 	strd	r1, r5, [sp, #40]	; 0x28
        q64 += (q64 >> 16);
    d12c:	4602      	mov	r2, r0
    d12e:	460b      	mov	r3, r1
        q64 += (q64 >> 32);
    d130:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    d134:	1880      	adds	r0, r0, r2
    d136:	4159      	adcs	r1, r3
        q64 >>= 3;
    d138:	ea4f 08d0 	mov.w	r8, r0, lsr #3
    d13c:	ea48 7841 	orr.w	r8, r8, r1, lsl #29
    d140:	ea4f 09d1 	mov.w	r9, r1, lsr #3
        return q64 + ((r64 + 6) >> 4);
    d144:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
        r64 = ui64Val - q64*10;
    d148:	ea4f 0489 	mov.w	r4, r9, lsl #2
    d14c:	ea4f 0288 	mov.w	r2, r8, lsl #2
    d150:	ea44 7398 	orr.w	r3, r4, r8, lsr #30
    d154:	eb12 0408 	adds.w	r4, r2, r8
    d158:	eb43 0509 	adc.w	r5, r3, r9
        return q64 + ((r64 + 6) >> 4);
    d15c:	3006      	adds	r0, #6
    d15e:	f141 0100 	adc.w	r1, r1, #0
        r64 = ui64Val - q64*10;
    d162:	1922      	adds	r2, r4, r4
    d164:	eb45 0305 	adc.w	r3, r5, r5
        return q64 + ((r64 + 6) >> 4);
    d168:	1a80      	subs	r0, r0, r2
    d16a:	eb61 0103 	sbc.w	r1, r1, r3
    d16e:	ea4f 1a10 	mov.w	sl, r0, lsr #4
    d172:	ea4a 7a01 	orr.w	sl, sl, r1, lsl #28
    d176:	eb1a 0308 	adds.w	r3, sl, r8
    d17a:	ea4f 1b11 	mov.w	fp, r1, lsr #4
    d17e:	eb4b 0409 	adc.w	r4, fp, r9
        ++iNDigits;
    d182:	f10e 0e01 	add.w	lr, lr, #1
        return q64 + ((r64 + 6) >> 4);
    d186:	e9cd 3402 	strd	r3, r4, [sp, #8]
    d18a:	e6c3      	b.n	cf14 <am_util_stdio_vsprintf+0x498>
        ui64Val >>= 4;
    d18c:	4622      	mov	r2, r4
    d18e:	4643      	mov	r3, r8
    while ( ui64Val )
    d190:	ea52 0103 	orrs.w	r1, r2, r3
        tbuf[ix++] = cCh + '0';
    d194:	f106 0901 	add.w	r9, r6, #1
    d198:	f807 cb01 	strb.w	ip, [r7], #1
    while ( ui64Val )
    d19c:	d184      	bne.n	d0a8 <am_util_stdio_vsprintf+0x62c>
    d19e:	464d      	mov	r5, r9
    d1a0:	4628      	mov	r0, r5
    d1a2:	f8dd 9008 	ldr.w	r9, [sp, #8]
    if (pcBuf)
    d1a6:	f1ba 0f00 	cmp.w	sl, #0
    d1aa:	f43f af22 	beq.w	cff2 <am_util_stdio_vsprintf+0x576>
    d1ae:	ab15      	add	r3, sp, #84	; 0x54
    d1b0:	eb0a 0405 	add.w	r4, sl, r5
    d1b4:	442b      	add	r3, r5
    d1b6:	f10a 32ff 	add.w	r2, sl, #4294967295	; 0xffffffff
            *pcBuf++ = tbuf[ix];
    d1ba:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
    d1be:	f802 1f01 	strb.w	r1, [r2, #1]!
        while (ix--)
    d1c2:	a915      	add	r1, sp, #84	; 0x54
    d1c4:	4299      	cmp	r1, r3
    d1c6:	d1f8      	bne.n	d1ba <am_util_stdio_vsprintf+0x73e>
    d1c8:	4455      	add	r5, sl
    d1ca:	46a2      	mov	sl, r4
    d1cc:	e67b      	b.n	cec6 <am_util_stdio_vsprintf+0x44a>
    d1ce:	46ba      	mov	sl, r7
                if ( iWidth )
    d1d0:	2900      	cmp	r1, #0
    d1d2:	f43f ae46 	beq.w	ce62 <am_util_stdio_vsprintf+0x3e6>
                    iWidth = -iWidth;
    d1d6:	4249      	negs	r1, r1
                    if ( ui32strlen < iWidth )
    d1d8:	42b1      	cmp	r1, r6
    d1da:	f67f ae42 	bls.w	ce62 <am_util_stdio_vsprintf+0x3e6>
                        iWidth -= ui32strlen;
    d1de:	1b89      	subs	r1, r1, r6
    if ( i32NumChars <= 0 )
    d1e0:	2900      	cmp	r1, #0
    d1e2:	f300 8163 	bgt.w	d4ac <am_util_stdio_vsprintf+0xa30>
    d1e6:	2100      	movs	r1, #0
                        pcBuf += pcBuf ? iWidth : 0;
    d1e8:	f1ba 0f00 	cmp.w	sl, #0
    d1ec:	f43f ae39 	beq.w	ce62 <am_util_stdio_vsprintf+0x3e6>
    d1f0:	448a      	add	sl, r1
    d1f2:	e636      	b.n	ce62 <am_util_stdio_vsprintf+0x3e6>
    d1f4:	7891      	ldrb	r1, [r2, #2]
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    d1f6:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    d1fa:	2b09      	cmp	r3, #9
        pcStr++;
    d1fc:	f102 0002 	add.w	r0, r2, #2
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    d200:	f200 8234 	bhi.w	d66c <am_util_stdio_vsprintf+0xbf0>
        bNeg = true;
    d204:	2601      	movs	r6, #1
        uCnt++;
    d206:	4632      	mov	r2, r6
    d208:	e5e2      	b.n	cdd0 <am_util_stdio_vsprintf+0x354>
                    ui64Val = -i64Val;          // Get absolute value
    d20a:	4240      	negs	r0, r0
    d20c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    d210:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
                if ( iWidth )
    d214:	2c00      	cmp	r4, #0
    d216:	f040 80fa 	bne.w	d40e <am_util_stdio_vsprintf+0x992>
                        if ( pcBuf )
    d21a:	f1ba 0f00 	cmp.w	sl, #0
    d21e:	d004      	beq.n	d22a <am_util_stdio_vsprintf+0x7ae>
                            *pcBuf++ = '-';
    d220:	232d      	movs	r3, #45	; 0x2d
    d222:	f88a 3000 	strb.w	r3, [sl]
    d226:	f10a 0a01 	add.w	sl, sl, #1
                        ++ui32CharCnt;
    d22a:	f10b 0b01 	add.w	fp, fp, #1
    d22e:	e6c2      	b.n	cfb6 <am_util_stdio_vsprintf+0x53a>
    int iNDigits = ui64Val ? 0 : 1;
    d230:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
    d234:	4603      	mov	r3, r0
    d236:	430b      	orrs	r3, r1
    while ( ui64Val )
    d238:	460c      	mov	r4, r1
    d23a:	4603      	mov	r3, r0
    int iNDigits = ui64Val ? 0 : 1;
    d23c:	bf0c      	ite	eq
    d23e:	f04f 0e01 	moveq.w	lr, #1
    d242:	f04f 0e00 	movne.w	lr, #0
    while ( ui64Val )
    d246:	4323      	orrs	r3, r4
    d248:	d03c      	beq.n	d2c4 <am_util_stdio_vsprintf+0x848>
    d24a:	e9cd 0102 	strd	r0, r1, [sp, #8]
    d24e:	e9cd ba10 	strd	fp, sl, [sp, #64]	; 0x40
    d252:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
    d256:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
        q64 = (ui64Val>>1) + (ui64Val>>2);
    d25a:	e9dd 5602 	ldrd	r5, r6, [sp, #8]
        q64 += (q64 >> 4);
    d25e:	2300      	movs	r3, #0
    d260:	2400      	movs	r4, #0
        q64 = (ui64Val>>1) + (ui64Val>>2);
    d262:	08a8      	lsrs	r0, r5, #2
        q64 += (q64 >> 4);
    d264:	e9cd 3408 	strd	r3, r4, [sp, #32]
        q64 += (q64 >> 8);
    d268:	e9cd 3406 	strd	r3, r4, [sp, #24]
        q64 += (q64 >> 16);
    d26c:	e9cd 3404 	strd	r3, r4, [sp, #16]
        q64 += (q64 >> 32);
    d270:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
        q64 = (ui64Val>>1) + (ui64Val>>2);
    d274:	ea40 7086 	orr.w	r0, r0, r6, lsl #30
        q32 = (ui32Val>>1) + (ui32Val>>2);
    d278:	462c      	mov	r4, r5
        q64 = (ui64Val>>1) + (ui64Val>>2);
    d27a:	08b1      	lsrs	r1, r6, #2
        q32 = (ui32Val>>1) + (ui32Val>>2);
    d27c:	086e      	lsrs	r6, r5, #1
    d27e:	eb06 0694 	add.w	r6, r6, r4, lsr #2
        q32 += (q32 >> 4);
    d282:	eb06 1616 	add.w	r6, r6, r6, lsr #4
    if ( ui64Val >> 32 )
    d286:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        q32 += (q32 >> 8);
    d28a:	eb06 2616 	add.w	r6, r6, r6, lsr #8
        q32 += (q32 >> 16);
    d28e:	eb06 4616 	add.w	r6, r6, r6, lsr #16
        q32 >>= 3;
    d292:	08f6      	lsrs	r6, r6, #3
        r32 = ui32Val - q32*10;
    d294:	eb06 0c86 	add.w	ip, r6, r6, lsl #2
    if ( ui64Val >> 32 )
    d298:	461c      	mov	r4, r3
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    d29a:	1d97      	adds	r7, r2, #6
    if ( ui64Val >> 32 )
    d29c:	2500      	movs	r5, #0
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    d29e:	eba7 074c 	sub.w	r7, r7, ip, lsl #1
    if ( ui64Val >> 32 )
    d2a2:	ea54 0305 	orrs.w	r3, r4, r5
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    d2a6:	eb06 1617 	add.w	r6, r6, r7, lsr #4
    if ( ui64Val >> 32 )
    d2aa:	d118      	bne.n	d2de <am_util_stdio_vsprintf+0x862>
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    d2ac:	4633      	mov	r3, r6
    d2ae:	2400      	movs	r4, #0
        ++iNDigits;
    d2b0:	f10e 0e01 	add.w	lr, lr, #1
        return (uint64_t)(q32 + ((r32 + 6) >> 4));
    d2b4:	e9cd 3402 	strd	r3, r4, [sp, #8]
    while ( ui64Val )
    d2b8:	2e00      	cmp	r6, #0
    d2ba:	d1ce      	bne.n	d25a <am_util_stdio_vsprintf+0x7de>
    d2bc:	e9dd 8b0f 	ldrd	r8, fp, [sp, #60]	; 0x3c
    d2c0:	e9dd a911 	ldrd	sl, r9, [sp, #68]	; 0x44
                    iWidth -= ndigits_in_u64(ui64Val);
    d2c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d2c6:	eba3 030e 	sub.w	r3, r3, lr
    if ( i32NumChars <= 0 )
    d2ca:	2b00      	cmp	r3, #0
    d2cc:	f300 80c7 	bgt.w	d45e <am_util_stdio_vsprintf+0x9e2>
    d2d0:	2200      	movs	r2, #0
                    pcBuf += pcBuf ? iWidth : 0;
    d2d2:	f1ba 0f00 	cmp.w	sl, #0
    d2d6:	f000 8190 	beq.w	d5fa <am_util_stdio_vsprintf+0xb7e>
    d2da:	4492      	add	sl, r2
    d2dc:	e681      	b.n	cfe2 <am_util_stdio_vsprintf+0x566>
        q64 = (ui64Val>>1) + (ui64Val>>2);
    d2de:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
    d2e2:	087f      	lsrs	r7, r7, #1
    d2e4:	ea4f 0636 	mov.w	r6, r6, rrx
    d2e8:	1982      	adds	r2, r0, r6
    d2ea:	eb41 0307 	adc.w	r3, r1, r7
        q64 += (q64 >> 4);
    d2ee:	0911      	lsrs	r1, r2, #4
    d2f0:	ea41 7103 	orr.w	r1, r1, r3, lsl #28
    d2f4:	9108      	str	r1, [sp, #32]
    d2f6:	0919      	lsrs	r1, r3, #4
    d2f8:	9109      	str	r1, [sp, #36]	; 0x24
    d2fa:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
    d2fe:	1880      	adds	r0, r0, r2
    d300:	4159      	adcs	r1, r3
    d302:	460b      	mov	r3, r1
        q64 += (q64 >> 8);
    d304:	0a01      	lsrs	r1, r0, #8
    d306:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
    d30a:	9106      	str	r1, [sp, #24]
    d30c:	0a19      	lsrs	r1, r3, #8
    d30e:	9107      	str	r1, [sp, #28]
        q64 += (q64 >> 4);
    d310:	4602      	mov	r2, r0
        q64 += (q64 >> 8);
    d312:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    d316:	1880      	adds	r0, r0, r2
    d318:	4159      	adcs	r1, r3
    d31a:	460b      	mov	r3, r1
        q64 += (q64 >> 16);
    d31c:	0c01      	lsrs	r1, r0, #16
    d31e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    d322:	9104      	str	r1, [sp, #16]
    d324:	0c19      	lsrs	r1, r3, #16
    d326:	9105      	str	r1, [sp, #20]
        q64 += (q64 >> 8);
    d328:	4602      	mov	r2, r0
        q64 += (q64 >> 16);
    d32a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    d32e:	1880      	adds	r0, r0, r2
    d330:	4159      	adcs	r1, r3
        q64 += (q64 >> 32);
    d332:	e9cd 150a 	strd	r1, r5, [sp, #40]	; 0x28
        q64 += (q64 >> 16);
    d336:	4602      	mov	r2, r0
    d338:	460b      	mov	r3, r1
        q64 += (q64 >> 32);
    d33a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    d33e:	1880      	adds	r0, r0, r2
    d340:	4159      	adcs	r1, r3
        q64 >>= 3;
    d342:	ea4f 08d0 	mov.w	r8, r0, lsr #3
    d346:	ea48 7841 	orr.w	r8, r8, r1, lsl #29
    d34a:	ea4f 09d1 	mov.w	r9, r1, lsr #3
        return q64 + ((r64 + 6) >> 4);
    d34e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
        r64 = ui64Val - q64*10;
    d352:	ea4f 0489 	mov.w	r4, r9, lsl #2
    d356:	ea4f 0288 	mov.w	r2, r8, lsl #2
    d35a:	ea44 7398 	orr.w	r3, r4, r8, lsr #30
    d35e:	eb12 0408 	adds.w	r4, r2, r8
    d362:	eb43 0509 	adc.w	r5, r3, r9
        return q64 + ((r64 + 6) >> 4);
    d366:	3006      	adds	r0, #6
    d368:	f141 0100 	adc.w	r1, r1, #0
        r64 = ui64Val - q64*10;
    d36c:	1922      	adds	r2, r4, r4
    d36e:	eb45 0305 	adc.w	r3, r5, r5
        return q64 + ((r64 + 6) >> 4);
    d372:	1a80      	subs	r0, r0, r2
    d374:	eb61 0103 	sbc.w	r1, r1, r3
    d378:	ea4f 1a10 	mov.w	sl, r0, lsr #4
    d37c:	ea4a 7a01 	orr.w	sl, sl, r1, lsl #28
    d380:	eb1a 0308 	adds.w	r3, sl, r8
    d384:	ea4f 1b11 	mov.w	fp, r1, lsr #4
    d388:	eb4b 0409 	adc.w	r4, fp, r9
        ++iNDigits;
    d38c:	f10e 0e01 	add.w	lr, lr, #1
        return q64 + ((r64 + 6) >> 4);
    d390:	e9cd 3402 	strd	r3, r4, [sp, #8]
    d394:	e761      	b.n	d25a <am_util_stdio_vsprintf+0x7de>
    while ( i32NumChars-- )
    d396:	3901      	subs	r1, #1
    d398:	4656      	mov	r6, sl
    int32_t i32Cnt = 0;
    d39a:	2000      	movs	r0, #0
    d39c:	1e4f      	subs	r7, r1, #1
    d39e:	1c44      	adds	r4, r0, #1
        if ( pcBuf )
    d3a0:	b156      	cbz	r6, d3b8 <am_util_stdio_vsprintf+0x93c>
            *pcBuf++ = cPadChar;
    d3a2:	46bc      	mov	ip, r7
    d3a4:	460f      	mov	r7, r1
    d3a6:	f886 8000 	strb.w	r8, [r6]
    d3aa:	4620      	mov	r0, r4
    d3ac:	4661      	mov	r1, ip
    d3ae:	3601      	adds	r6, #1
    while ( i32NumChars-- )
    d3b0:	2f00      	cmp	r7, #0
    d3b2:	d1f3      	bne.n	d39c <am_util_stdio_vsprintf+0x920>
    d3b4:	4483      	add	fp, r0
    d3b6:	e64e      	b.n	d056 <am_util_stdio_vsprintf+0x5da>
    d3b8:	2900      	cmp	r1, #0
    d3ba:	f000 8126 	beq.w	d60a <am_util_stdio_vsprintf+0xb8e>
    d3be:	3902      	subs	r1, #2
    d3c0:	3002      	adds	r0, #2
    d3c2:	2f00      	cmp	r7, #0
    d3c4:	d1ea      	bne.n	d39c <am_util_stdio_vsprintf+0x920>
    d3c6:	e7f5      	b.n	d3b4 <am_util_stdio_vsprintf+0x938>
    if ( ui64Val == 0 )
    d3c8:	ea52 0103 	orrs.w	r1, r2, r3
    d3cc:	f47f ae4c 	bne.w	d068 <am_util_stdio_vsprintf+0x5ec>
    d3d0:	2001      	movs	r0, #1
    d3d2:	e60e      	b.n	cff2 <am_util_stdio_vsprintf+0x576>
    uint32_t ui32Val = 0, uCnt = 0;
    d3d4:	2200      	movs	r2, #0
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    d3d6:	4613      	mov	r3, r2
    d3d8:	e50b      	b.n	cdf2 <am_util_stdio_vsprintf+0x376>
    while ( i32NumChars-- )
    d3da:	f10e 33ff 	add.w	r3, lr, #4294967295	; 0xffffffff
    d3de:	4650      	mov	r0, sl
    int32_t i32Cnt = 0;
    d3e0:	2200      	movs	r2, #0
    d3e2:	1e5c      	subs	r4, r3, #1
    d3e4:	1c51      	adds	r1, r2, #1
        if ( pcBuf )
    d3e6:	b150      	cbz	r0, d3fe <am_util_stdio_vsprintf+0x982>
            *pcBuf++ = cPadChar;
    d3e8:	4625      	mov	r5, r4
    d3ea:	461c      	mov	r4, r3
    d3ec:	f880 8000 	strb.w	r8, [r0]
    d3f0:	460a      	mov	r2, r1
    d3f2:	462b      	mov	r3, r5
    d3f4:	3001      	adds	r0, #1
    while ( i32NumChars-- )
    d3f6:	2c00      	cmp	r4, #0
    d3f8:	d1f3      	bne.n	d3e2 <am_util_stdio_vsprintf+0x966>
    d3fa:	4493      	add	fp, r2
    d3fc:	e5d0      	b.n	cfa0 <am_util_stdio_vsprintf+0x524>
    d3fe:	2b00      	cmp	r3, #0
    d400:	f000 8110 	beq.w	d624 <am_util_stdio_vsprintf+0xba8>
    d404:	3b02      	subs	r3, #2
    d406:	3202      	adds	r2, #2
    d408:	2c00      	cmp	r4, #0
    d40a:	d1ea      	bne.n	d3e2 <am_util_stdio_vsprintf+0x966>
    d40c:	e7f5      	b.n	d3fa <am_util_stdio_vsprintf+0x97e>
    int iNDigits = ui64Val ? 0 : 1;
    d40e:	4603      	mov	r3, r0
    d410:	430b      	orrs	r3, r1
    d412:	bf0c      	ite	eq
    d414:	f04f 0e01 	moveq.w	lr, #1
    d418:	f04f 0e00 	movne.w	lr, #0
                    bNeg = true;
    d41c:	2301      	movs	r3, #1
    d41e:	e571      	b.n	cf04 <am_util_stdio_vsprintf+0x488>
    else if (iExp2 >= 0)
    d420:	2a00      	cmp	r2, #0
    d422:	f2c0 80f5 	blt.w	d610 <am_util_stdio_vsprintf+0xb94>
        i32FracPart = (i32Significand << (iExp2 + 1)) & 0x00FFFFFF;
    d426:	f1a1 047e 	sub.w	r4, r1, #126	; 0x7e
    d42a:	fa00 f404 	lsl.w	r4, r0, r4
        i32IntPart = i32Significand >> (23 - iExp2);
    d42e:	f1c2 0217 	rsb	r2, r2, #23
    if (unFloatValue.I32 < 0)
    d432:	2b00      	cmp	r3, #0
        i32FracPart = (i32Significand << (iExp2 + 1)) & 0x00FFFFFF;
    d434:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
        i32IntPart = i32Significand >> (23 - iExp2);
    d438:	fa40 f002 	asr.w	r0, r0, r2
    if (unFloatValue.I32 < 0)
    d43c:	f2c0 80d5 	blt.w	d5ea <am_util_stdio_vsprintf+0xb6e>
    d440:	4656      	mov	r6, sl
            uint64_to_str(i32IntPart, pcBuf);
    d442:	4632      	mov	r2, r6
    d444:	17c1      	asrs	r1, r0, #31
    d446:	f7ff fa43 	bl	c8d0 <uint64_to_str>
        while (*pcBuf)    // Get to end of new string
    d44a:	7833      	ldrb	r3, [r6, #0]
    d44c:	b90b      	cbnz	r3, d452 <am_util_stdio_vsprintf+0x9d6>
    d44e:	e100      	b.n	d652 <am_util_stdio_vsprintf+0xbd6>
    d450:	463e      	mov	r6, r7
    d452:	7873      	ldrb	r3, [r6, #1]
            pcBuf++;
    d454:	1c77      	adds	r7, r6, #1
        while (*pcBuf)    // Get to end of new string
    d456:	2b00      	cmp	r3, #0
    d458:	d1fa      	bne.n	d450 <am_util_stdio_vsprintf+0x9d4>
    d45a:	1cb2      	adds	r2, r6, #2
    d45c:	e480      	b.n	cd60 <am_util_stdio_vsprintf+0x2e4>
    while ( i32NumChars-- )
    d45e:	3b01      	subs	r3, #1
    d460:	4650      	mov	r0, sl
    int32_t i32Cnt = 0;
    d462:	2200      	movs	r2, #0
    d464:	1c51      	adds	r1, r2, #1
    d466:	1e5c      	subs	r4, r3, #1
        if ( pcBuf )
    d468:	2800      	cmp	r0, #0
    d46a:	d042      	beq.n	d4f2 <am_util_stdio_vsprintf+0xa76>
            *pcBuf++ = cPadChar;
    d46c:	4625      	mov	r5, r4
    d46e:	f880 8000 	strb.w	r8, [r0]
    d472:	461c      	mov	r4, r3
    d474:	460a      	mov	r2, r1
    d476:	462b      	mov	r3, r5
    d478:	3001      	adds	r0, #1
    while ( i32NumChars-- )
    d47a:	2c00      	cmp	r4, #0
    d47c:	d1f2      	bne.n	d464 <am_util_stdio_vsprintf+0x9e8>
    d47e:	4493      	add	fp, r2
    d480:	e727      	b.n	d2d2 <am_util_stdio_vsprintf+0x856>
    d482:	1e48      	subs	r0, r1, #1
    d484:	4654      	mov	r4, sl
    int32_t i32Cnt = 0;
    d486:	2300      	movs	r3, #0
    d488:	1c59      	adds	r1, r3, #1
    d48a:	1e45      	subs	r5, r0, #1
        if ( pcBuf )
    d48c:	b3bc      	cbz	r4, d4fe <am_util_stdio_vsprintf+0xa82>
            *pcBuf++ = cPadChar;
    d48e:	f884 8000 	strb.w	r8, [r4]
    d492:	460b      	mov	r3, r1
    d494:	3401      	adds	r4, #1
    d496:	4601      	mov	r1, r0
    while ( i32NumChars-- )
    d498:	4628      	mov	r0, r5
    d49a:	2900      	cmp	r1, #0
    d49c:	d1f4      	bne.n	d488 <am_util_stdio_vsprintf+0xa0c>
    d49e:	eb0b 0403 	add.w	r4, fp, r3
    d4a2:	e4ec      	b.n	ce7e <am_util_stdio_vsprintf+0x402>
                bLongLong = true;
    d4a4:	2301      	movs	r3, #1
    d4a6:	e5ab      	b.n	d000 <am_util_stdio_vsprintf+0x584>
        bLower = bLongLong = false;
    d4a8:	2500      	movs	r5, #0
    d4aa:	e5ad      	b.n	d008 <am_util_stdio_vsprintf+0x58c>
    while ( i32NumChars-- )
    d4ac:	1e4b      	subs	r3, r1, #1
    d4ae:	4654      	mov	r4, sl
    int32_t i32Cnt = 0;
    d4b0:	2100      	movs	r1, #0
    d4b2:	1c48      	adds	r0, r1, #1
    d4b4:	1e5d      	subs	r5, r3, #1
        if ( pcBuf )
    d4b6:	b34c      	cbz	r4, d50c <am_util_stdio_vsprintf+0xa90>
            *pcBuf++ = cPadChar;
    d4b8:	f884 8000 	strb.w	r8, [r4]
    d4bc:	4601      	mov	r1, r0
    d4be:	3401      	adds	r4, #1
    d4c0:	4618      	mov	r0, r3
    while ( i32NumChars-- )
    d4c2:	462b      	mov	r3, r5
    d4c4:	2800      	cmp	r0, #0
    d4c6:	d1f4      	bne.n	d4b2 <am_util_stdio_vsprintf+0xa36>
    d4c8:	448b      	add	fp, r1
    d4ca:	e68d      	b.n	d1e8 <am_util_stdio_vsprintf+0x76c>
                if ( iWidth > 0 )
    d4cc:	2900      	cmp	r1, #0
    d4ce:	f340 809a 	ble.w	d606 <am_util_stdio_vsprintf+0xb8a>
                    if ( ui32strlen < iWidth )
    d4d2:	4606      	mov	r6, r0
    d4d4:	1b89      	subs	r1, r1, r6
    d4d6:	e4cd      	b.n	ce74 <am_util_stdio_vsprintf+0x3f8>
                            if ( pcBuf )
    d4d8:	f1ba 0f00 	cmp.w	sl, #0
    d4dc:	d004      	beq.n	d4e8 <am_util_stdio_vsprintf+0xa6c>
                                *pcBuf++ = '-';
    d4de:	232d      	movs	r3, #45	; 0x2d
    d4e0:	f88a 3000 	strb.w	r3, [sl]
    d4e4:	f10a 0a01 	add.w	sl, sl, #1
                            ++ui32CharCnt;
    d4e8:	2301      	movs	r3, #1
    d4ea:	f10b 0b01 	add.w	fp, fp, #1
    d4ee:	930f      	str	r3, [sp, #60]	; 0x3c
    d4f0:	e551      	b.n	cf96 <am_util_stdio_vsprintf+0x51a>
    while ( i32NumChars-- )
    d4f2:	2b00      	cmp	r3, #0
    d4f4:	f000 80a1 	beq.w	d63a <am_util_stdio_vsprintf+0xbbe>
    d4f8:	3b02      	subs	r3, #2
    d4fa:	3202      	adds	r2, #2
    d4fc:	e7bd      	b.n	d47a <am_util_stdio_vsprintf+0x9fe>
    d4fe:	2800      	cmp	r0, #0
    d500:	f000 809e 	beq.w	d640 <am_util_stdio_vsprintf+0xbc4>
    d504:	4629      	mov	r1, r5
    d506:	3302      	adds	r3, #2
    d508:	1e85      	subs	r5, r0, #2
    d50a:	e7c5      	b.n	d498 <am_util_stdio_vsprintf+0xa1c>
    d50c:	2b00      	cmp	r3, #0
    d50e:	f000 809d 	beq.w	d64c <am_util_stdio_vsprintf+0xbd0>
    d512:	4628      	mov	r0, r5
    d514:	3102      	adds	r1, #2
    d516:	1e9d      	subs	r5, r3, #2
    d518:	e7d3      	b.n	d4c2 <am_util_stdio_vsprintf+0xa46>
        iMax = iBufSize - (pcBuf - pcBufInitial) - 1;
    d51a:	eba2 010a 	sub.w	r1, r2, sl
    d51e:	f1c1 0313 	rsb	r3, r1, #19
        iMax = (iMax > iPrecision) ? iPrecision : iMax;
    d522:	42ab      	cmp	r3, r5
    d524:	bfa8      	it	ge
    d526:	462b      	movge	r3, r5
        for (jx = 0; jx < iMax; jx++)
    d528:	2b00      	cmp	r3, #0
    d52a:	dd0d      	ble.n	d548 <am_util_stdio_vsprintf+0xacc>
    d52c:	18d1      	adds	r1, r2, r3
            i32FracPart *= 10;
    d52e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
    d532:	0064      	lsls	r4, r4, #1
            *pcBuf++ = (i32FracPart >> 24) + '0';
    d534:	1623      	asrs	r3, r4, #24
    d536:	3330      	adds	r3, #48	; 0x30
    d538:	f802 3b01 	strb.w	r3, [r2], #1
        for (jx = 0; jx < iMax; jx++)
    d53c:	4291      	cmp	r1, r2
            i32FracPart &= 0x00FFFFFF;
    d53e:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
        for (jx = 0; jx < iMax; jx++)
    d542:	d1f4      	bne.n	d52e <am_util_stdio_vsprintf+0xab2>
    d544:	eba2 010a 	sub.w	r1, r2, sl
        if ( ((i32FracPart * 10) >> 24) >= 5 )
    d548:	eb04 0484 	add.w	r4, r4, r4, lsl #2
    d54c:	f344 53c7 	sbfx	r3, r4, #23, #8
    d550:	2b04      	cmp	r3, #4
    d552:	f77f ac10 	ble.w	cd76 <am_util_stdio_vsprintf+0x2fa>
            pcBuftmp = pcBuf - 1;
    d556:	1e53      	subs	r3, r2, #1
            while ( pcBuftmp >= pcBufInitial )
    d558:	459a      	cmp	sl, r3
    d55a:	f63f ac0c 	bhi.w	cd76 <am_util_stdio_vsprintf+0x2fa>
    d55e:	f10a 35ff 	add.w	r5, sl, #4294967295	; 0xffffffff
    d562:	e005      	b.n	d570 <am_util_stdio_vsprintf+0xaf4>
                    *pcBuftmp = '0';
    d564:	f04f 0030 	mov.w	r0, #48	; 0x30
    d568:	7058      	strb	r0, [r3, #1]
            while ( pcBuftmp >= pcBufInitial )
    d56a:	429d      	cmp	r5, r3
    d56c:	f43f ac03 	beq.w	cd76 <am_util_stdio_vsprintf+0x2fa>
    d570:	461c      	mov	r4, r3
                if ( *pcBuftmp == '.' )
    d572:	f813 0901 	ldrb.w	r0, [r3], #-1
    d576:	282e      	cmp	r0, #46	; 0x2e
    d578:	d0f7      	beq.n	d56a <am_util_stdio_vsprintf+0xaee>
                else if ( *pcBuftmp == '9' )
    d57a:	2839      	cmp	r0, #57	; 0x39
    d57c:	d0f2      	beq.n	d564 <am_util_stdio_vsprintf+0xae8>
                    *pcBuftmp += 1;
    d57e:	3001      	adds	r0, #1
    d580:	7020      	strb	r0, [r4, #0]
    d582:	f7ff bbf8 	b.w	cd76 <am_util_stdio_vsprintf+0x2fa>
                while (*pcStr != 0x0)
    d586:	7838      	ldrb	r0, [r7, #0]
    d588:	2800      	cmp	r0, #0
    d58a:	d03c      	beq.n	d606 <am_util_stdio_vsprintf+0xb8a>
    d58c:	465c      	mov	r4, fp
        return ui32RetVal;
    d58e:	463e      	mov	r6, r7
    d590:	2301      	movs	r3, #1
    d592:	e44a      	b.n	ce2a <am_util_stdio_vsprintf+0x3ae>
        *(uint32_t*)pcBuf = 0x00 << 24 | ('0' << 16) | ('.' << 8) | ('0' << 0);
    d594:	4b39      	ldr	r3, [pc, #228]	; (d67c <am_util_stdio_vsprintf+0xc00>)
    d596:	f8ca 3000 	str.w	r3, [sl]
    d59a:	2303      	movs	r3, #3
    d59c:	f7ff bbf1 	b.w	cd82 <am_util_stdio_vsprintf+0x306>
                    if ( bNeg  &&  (ui8PadChar == ' ') )
    d5a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    d5a2:	b11b      	cbz	r3, d5ac <am_util_stdio_vsprintf+0xb30>
    d5a4:	f1b8 0f20 	cmp.w	r8, #32
    d5a8:	f43f ae3f 	beq.w	d22a <am_util_stdio_vsprintf+0x7ae>
                iVal = uint64_to_str(ui64Val, pcBuf);
    d5ac:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
    d5b0:	4652      	mov	r2, sl
    d5b2:	f7ff f98d 	bl	c8d0 <uint64_to_str>
                ui32CharCnt += iVal;
    d5b6:	4483      	add	fp, r0
    d5b8:	f7ff ba68 	b.w	ca8c <am_util_stdio_vsprintf+0x10>
                        if ( iVal == AM_FTOA_ERR_VAL_TOO_SMALL )
    d5bc:	1c4b      	adds	r3, r1, #1
    d5be:	d034      	beq.n	d62a <am_util_stdio_vsprintf+0xbae>
                        else if ( iVal == AM_FTOA_ERR_VAL_TOO_LARGE )
    d5c0:	3102      	adds	r1, #2
    d5c2:	d141      	bne.n	d648 <am_util_stdio_vsprintf+0xbcc>
                            u32PrntErrVal = (0x00 << 24) | ('#' << 16) |
    d5c4:	4b2e      	ldr	r3, [pc, #184]	; (d680 <am_util_stdio_vsprintf+0xc04>)
                        *(uint32_t*)pcBuf = u32PrntErrVal;
    d5c6:	f8ca 3000 	str.w	r3, [sl]
    d5ca:	2303      	movs	r3, #3
    d5cc:	f7ff bbd9 	b.w	cd82 <am_util_stdio_vsprintf+0x306>
        if (i32IntPart > 0)
    d5d0:	f73f af37 	bgt.w	d442 <am_util_stdio_vsprintf+0x9c6>
            uint64_to_str(-i32IntPart, pcBuf);
    d5d4:	4240      	negs	r0, r0
            *pcBuf++ = '-';
    d5d6:	232d      	movs	r3, #45	; 0x2d
    d5d8:	7033      	strb	r3, [r6, #0]
            uint64_to_str(-i32IntPart, pcBuf);
    d5da:	463a      	mov	r2, r7
    d5dc:	17c1      	asrs	r1, r0, #31
    d5de:	463e      	mov	r6, r7
    d5e0:	f7ff f976 	bl	c8d0 <uint64_to_str>
    d5e4:	3701      	adds	r7, #1
    d5e6:	e730      	b.n	d44a <am_util_stdio_vsprintf+0x9ce>
    i32FracPart = 0;
    d5e8:	2400      	movs	r4, #0
        *pcBuf++ = '-';
    d5ea:	4653      	mov	r3, sl
    d5ec:	222d      	movs	r2, #45	; 0x2d
    d5ee:	f803 2b02 	strb.w	r2, [r3], #2
    d5f2:	463e      	mov	r6, r7
    d5f4:	461f      	mov	r7, r3
    d5f6:	f7ff bbac 	b.w	cd52 <am_util_stdio_vsprintf+0x2d6>
                iVal = uint64_to_str(ui64Val, pcBuf);
    d5fa:	4652      	mov	r2, sl
    d5fc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
    d600:	f7ff f966 	bl	c8d0 <uint64_to_str>
    d604:	e4f5      	b.n	cff2 <am_util_stdio_vsprintf+0x576>
        return ui32RetVal;
    d606:	4606      	mov	r6, r0
    d608:	e428      	b.n	ce5c <am_util_stdio_vsprintf+0x3e0>
    d60a:	4620      	mov	r0, r4
    d60c:	44a3      	add	fp, r4
    d60e:	e522      	b.n	d056 <am_util_stdio_vsprintf+0x5da>
        i32FracPart = (i32Significand & 0x00FFFFFF) >> -(iExp2 + 1);
    d610:	43d2      	mvns	r2, r2
    if (unFloatValue.I32 < 0)
    d612:	2b00      	cmp	r3, #0
        i32FracPart = (i32Significand & 0x00FFFFFF) >> -(iExp2 + 1);
    d614:	fa40 f402 	asr.w	r4, r0, r2
    d618:	f10a 0202 	add.w	r2, sl, #2
    if (unFloatValue.I32 < 0)
    d61c:	db1d      	blt.n	d65a <am_util_stdio_vsprintf+0xbde>
    d61e:	4656      	mov	r6, sl
    d620:	f7ff bb9b 	b.w	cd5a <am_util_stdio_vsprintf+0x2de>
    d624:	460a      	mov	r2, r1
    d626:	448b      	add	fp, r1
    d628:	e4ba      	b.n	cfa0 <am_util_stdio_vsprintf+0x524>
                            u32PrntErrVal = (0x00 << 24) | ('0' << 16) |
    d62a:	4b14      	ldr	r3, [pc, #80]	; (d67c <am_util_stdio_vsprintf+0xc00>)
    d62c:	e7cb      	b.n	d5c6 <am_util_stdio_vsprintf+0xb4a>
                    iWidth -= ndigits_in_i64(ui64Val);
    d62e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d630:	eba3 0e0e 	sub.w	lr, r3, lr
                    bNeg = false;
    d634:	2300      	movs	r3, #0
    d636:	930f      	str	r3, [sp, #60]	; 0x3c
    d638:	e4ad      	b.n	cf96 <am_util_stdio_vsprintf+0x51a>
    d63a:	460a      	mov	r2, r1
    d63c:	448b      	add	fp, r1
    d63e:	e648      	b.n	d2d2 <am_util_stdio_vsprintf+0x856>
    d640:	460b      	mov	r3, r1
    d642:	eb0b 0401 	add.w	r4, fp, r1
    d646:	e41a      	b.n	ce7e <am_util_stdio_vsprintf+0x402>
                            u32PrntErrVal = (0x00 << 24) | ('?' << 16) |
    d648:	4b0e      	ldr	r3, [pc, #56]	; (d684 <am_util_stdio_vsprintf+0xc08>)
    d64a:	e7bc      	b.n	d5c6 <am_util_stdio_vsprintf+0xb4a>
    d64c:	4601      	mov	r1, r0
    d64e:	4483      	add	fp, r0
    d650:	e5ca      	b.n	d1e8 <am_util_stdio_vsprintf+0x76c>
        while (*pcBuf)    // Get to end of new string
    d652:	463a      	mov	r2, r7
    d654:	4637      	mov	r7, r6
    d656:	f7ff bb83 	b.w	cd60 <am_util_stdio_vsprintf+0x2e4>
        *pcBuf++ = '-';
    d65a:	4653      	mov	r3, sl
    d65c:	212d      	movs	r1, #45	; 0x2d
    d65e:	f803 1b03 	strb.w	r1, [r3], #3
    d662:	463e      	mov	r6, r7
    d664:	4617      	mov	r7, r2
    d666:	461a      	mov	r2, r3
    d668:	f7ff bb77 	b.w	cd5a <am_util_stdio_vsprintf+0x2de>
    while ( *pcStr >= '0'  &&  *pcStr <= '9' )
    d66c:	2300      	movs	r3, #0
        uCnt++;
    d66e:	2201      	movs	r2, #1
    d670:	f7ff bbbe 	b.w	cdf0 <am_util_stdio_vsprintf+0x374>
                pcStr = va_arg(pArgs, char *);
    d674:	9201      	str	r2, [sp, #4]
                        ui32CharCnt += iWidth;
    d676:	46a3      	mov	fp, r4
    d678:	f7ff ba08 	b.w	ca8c <am_util_stdio_vsprintf+0x10>
    d67c:	00302e30 	.word	0x00302e30
    d680:	00232e23 	.word	0x00232e23
    d684:	003f2e3f 	.word	0x003f2e3f

0000d688 <am_util_stdio_printf>:
//! @return uint32_t representing the number of characters printed.
//
// *****************************************************************************
uint32_t
am_util_stdio_printf(const char *pcFmt, ...)
{
    d688:	b40f      	push	{r0, r1, r2, r3}
    d68a:	b530      	push	{r4, r5, lr}
    uint32_t ui32NumChars;

    if (!g_pfnCharPrint)
    d68c:	4d0a      	ldr	r5, [pc, #40]	; (d6b8 <am_util_stdio_printf+0x30>)
    d68e:	682c      	ldr	r4, [r5, #0]
{
    d690:	b083      	sub	sp, #12
    if (!g_pfnCharPrint)
    d692:	b154      	cbz	r4, d6aa <am_util_stdio_printf+0x22>

    //
    // Convert to the desired string.
    //
    va_list pArgs;
    va_start(pArgs, pcFmt);
    d694:	ab07      	add	r3, sp, #28
    ui32NumChars = am_util_stdio_vsprintf(g_prfbuf, pcFmt, pArgs);
    d696:	461a      	mov	r2, r3
    d698:	9906      	ldr	r1, [sp, #24]
    d69a:	4808      	ldr	r0, [pc, #32]	; (d6bc <am_util_stdio_printf+0x34>)
    va_start(pArgs, pcFmt);
    d69c:	9301      	str	r3, [sp, #4]
    ui32NumChars = am_util_stdio_vsprintf(g_prfbuf, pcFmt, pArgs);
    d69e:	f7ff f9ed 	bl	ca7c <am_util_stdio_vsprintf>
    va_end(pArgs);

    //
    // This is where we print the buffer to the configured interface.
    //
    g_pfnCharPrint(g_prfbuf);
    d6a2:	682b      	ldr	r3, [r5, #0]
    ui32NumChars = am_util_stdio_vsprintf(g_prfbuf, pcFmt, pArgs);
    d6a4:	4604      	mov	r4, r0
    g_pfnCharPrint(g_prfbuf);
    d6a6:	4805      	ldr	r0, [pc, #20]	; (d6bc <am_util_stdio_printf+0x34>)
    d6a8:	4798      	blx	r3

    //
    // return the number of characters printed.
    //
    return ui32NumChars;
}
    d6aa:	4620      	mov	r0, r4
    d6ac:	b003      	add	sp, #12
    d6ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    d6b2:	b004      	add	sp, #16
    d6b4:	4770      	bx	lr
    d6b6:	bf00      	nop
    d6b8:	10002698 	.word	0x10002698
    d6bc:	1000104c 	.word	0x1000104c

0000d6c0 <am_app_utils_ring_buffer_init_all>:
void
am_app_utils_ring_buffer_init_all(am_app_utils_ring_buffer_t* ring_buffs, const am_app_utils_ringbuff_setup_t* setup_array, 
                                    uint32_t ui32BufferCount)
{
    uint32_t ringbuff = 0;
    for(ringbuff =0; ringbuff<ui32BufferCount; ringbuff++)
    d6c0:	b302      	cbz	r2, d704 <am_app_utils_ring_buffer_init_all+0x44>
{
    d6c2:	b4f0      	push	{r4, r5, r6, r7}
    d6c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
    d6c8:	b084      	sub	sp, #16
    d6ca:	4606      	mov	r6, r0
    d6cc:	460b      	mov	r3, r1
    d6ce:	eb01 0782 	add.w	r7, r1, r2, lsl #2
    d6d2:	ad01      	add	r5, sp, #4
    ring_buffs[setup.indx].ui32BufferHead_read = 0;
    d6d4:	2400      	movs	r4, #0
    d6d6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    d6da:	e885 0007 	stmia.w	r5, {r0, r1, r2}
    d6de:	9a01      	ldr	r2, [sp, #4]
    d6e0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
    d6e4:	eb06 0182 	add.w	r1, r6, r2, lsl #2
    d6e8:	330c      	adds	r3, #12
    d6ea:	608c      	str	r4, [r1, #8]
    ring_buffs[setup.indx].ui32BufferTail_write = 0;
    d6ec:	604c      	str	r4, [r1, #4]
    ring_buffs[setup.indx].ui32OverWriting = 0;
    d6ee:	60cc      	str	r4, [r1, #12]
    ring_buffs[setup.indx].ui32Capacity = setup.ui32ByteSize;
    d6f0:	9803      	ldr	r0, [sp, #12]
    d6f2:	6108      	str	r0, [r1, #16]
    for(ringbuff =0; ringbuff<ui32BufferCount; ringbuff++)
    d6f4:	42bb      	cmp	r3, r7
    ring_buffs[setup.indx].pui8Data = setup.pData;
    d6f6:	9902      	ldr	r1, [sp, #8]
    d6f8:	f846 1022 	str.w	r1, [r6, r2, lsl #2]
    for(ringbuff =0; ringbuff<ui32BufferCount; ringbuff++)
    d6fc:	d1eb      	bne.n	d6d6 <am_app_utils_ring_buffer_init_all+0x16>
    {
        am_app_utils_ring_buffer_init(ring_buffs,setup_array[ringbuff]);    
    }

}
    d6fe:	b004      	add	sp, #16
    d700:	bcf0      	pop	{r4, r5, r6, r7}
    d702:	4770      	bx	lr
    d704:	4770      	bx	lr
    d706:	bf00      	nop

0000d708 <am_app_utils_ring_buffer_push_fast>:

}

void
am_app_utils_ring_buffer_push_fast(am_app_utils_ring_buffer_t *psBuffer, void *pvSource, uint32_t ui32Bytes)
{
    d708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d70a:	460f      	mov	r7, r1
    uint32_t ui32CopyLen;
    uint32_t ui32TempLen;

    ui32CopyLen = ui32Bytes;

    if(am_app_utils_ring_buffer_empty(psBuffer))
    d70c:	6841      	ldr	r1, [r0, #4]
    d70e:	6883      	ldr	r3, [r0, #8]
    d710:	4299      	cmp	r1, r3
{
    d712:	4604      	mov	r4, r0
    d714:	4615      	mov	r5, r2
    if(am_app_utils_ring_buffer_empty(psBuffer))
    d716:	d030      	beq.n	d77a <am_app_utils_ring_buffer_push_fast+0x72>
        if(ui32CopyLen >= psBuffer->ui32Capacity)
            psBuffer->ui32OverWriting = 1;
    }
    else
    {
        if(((psBuffer->ui32BufferHead_read + psBuffer->ui32Capacity - psBuffer->ui32BufferTail_write) 
    d718:	68a3      	ldr	r3, [r4, #8]
    d71a:	6920      	ldr	r0, [r4, #16]
    d71c:	6862      	ldr	r2, [r4, #4]
            % psBuffer->ui32Capacity) <= ui32CopyLen)
    d71e:	6921      	ldr	r1, [r4, #16]
        if(((psBuffer->ui32BufferHead_read + psBuffer->ui32Capacity - psBuffer->ui32BufferTail_write) 
    d720:	4403      	add	r3, r0
    d722:	1a9b      	subs	r3, r3, r2
            % psBuffer->ui32Capacity) <= ui32CopyLen)
    d724:	fbb3 f2f1 	udiv	r2, r3, r1
    d728:	fb01 3312 	mls	r3, r1, r2, r3
        if(((psBuffer->ui32BufferHead_read + psBuffer->ui32Capacity - psBuffer->ui32BufferTail_write) 
    d72c:	42ab      	cmp	r3, r5
    d72e:	d801      	bhi.n	d734 <am_app_utils_ring_buffer_push_fast+0x2c>
            psBuffer->ui32OverWriting = 1;
    d730:	2301      	movs	r3, #1
    d732:	60e3      	str	r3, [r4, #12]

    }        
        
    while((psBuffer->ui32BufferTail_write + ui32CopyLen) >= psBuffer->ui32Capacity)
    d734:	6863      	ldr	r3, [r4, #4]
    d736:	6922      	ldr	r2, [r4, #16]
    d738:	442b      	add	r3, r5
    d73a:	4293      	cmp	r3, r2
    d73c:	d317      	bcc.n	d76e <am_app_utils_ring_buffer_push_fast+0x66>
    {
        ui32TempLen = psBuffer->ui32Capacity - psBuffer->ui32BufferTail_write;
    d73e:	6926      	ldr	r6, [r4, #16]
    d740:	6862      	ldr	r2, [r4, #4]
        memcpy((void*)&psBuffer->pui8Data[psBuffer->ui32BufferTail_write], (void*)pvSource, ui32TempLen);
    d742:	6820      	ldr	r0, [r4, #0]
    d744:	6863      	ldr	r3, [r4, #4]
        ui32TempLen = psBuffer->ui32Capacity - psBuffer->ui32BufferTail_write;
    d746:	1ab6      	subs	r6, r6, r2
        memcpy((void*)&psBuffer->pui8Data[psBuffer->ui32BufferTail_write], (void*)pvSource, ui32TempLen);
    d748:	4632      	mov	r2, r6
    d74a:	4418      	add	r0, r3
    d74c:	4639      	mov	r1, r7
    d74e:	f7fe fcd7 	bl	c100 <memcpy>
        psBuffer->ui32BufferTail_write = ((psBuffer->ui32BufferTail_write + ui32TempLen) % psBuffer->ui32Capacity);
    d752:	6863      	ldr	r3, [r4, #4]
    d754:	6921      	ldr	r1, [r4, #16]
    d756:	4433      	add	r3, r6
    d758:	fbb3 f2f1 	udiv	r2, r3, r1
    d75c:	fb01 3312 	mls	r3, r1, r2, r3
    d760:	6063      	str	r3, [r4, #4]
    while((psBuffer->ui32BufferTail_write + ui32CopyLen) >= psBuffer->ui32Capacity)
    d762:	6863      	ldr	r3, [r4, #4]
    d764:	6922      	ldr	r2, [r4, #16]
        ui32CopyLen -= ui32TempLen;
    d766:	1bad      	subs	r5, r5, r6
    while((psBuffer->ui32BufferTail_write + ui32CopyLen) >= psBuffer->ui32Capacity)
    d768:	442b      	add	r3, r5
    d76a:	4293      	cmp	r3, r2
    d76c:	d2e7      	bcs.n	d73e <am_app_utils_ring_buffer_push_fast+0x36>
    }
    configASSERT((psBuffer->ui32BufferTail_write + ui32CopyLen) < psBuffer->ui32Capacity);
    d76e:	6863      	ldr	r3, [r4, #4]
    d770:	6922      	ldr	r2, [r4, #16]
    d772:	442b      	add	r3, r5
    d774:	4293      	cmp	r3, r2
    d776:	d307      	bcc.n	d788 <am_app_utils_ring_buffer_push_fast+0x80>
    d778:	e7fe      	b.n	d778 <am_app_utils_ring_buffer_push_fast+0x70>
    if(am_app_utils_ring_buffer_empty(psBuffer))
    d77a:	68c3      	ldr	r3, [r0, #12]
    d77c:	2b00      	cmp	r3, #0
    d77e:	d1cb      	bne.n	d718 <am_app_utils_ring_buffer_push_fast+0x10>
        if(ui32CopyLen >= psBuffer->ui32Capacity)
    d780:	6903      	ldr	r3, [r0, #16]
    d782:	4293      	cmp	r3, r2
    d784:	d8d6      	bhi.n	d734 <am_app_utils_ring_buffer_push_fast+0x2c>
    d786:	e7d3      	b.n	d730 <am_app_utils_ring_buffer_push_fast+0x28>
    
    memcpy((void*)&psBuffer->pui8Data[psBuffer->ui32BufferTail_write], (void*)pvSource, ui32CopyLen);
    d788:	6863      	ldr	r3, [r4, #4]
    d78a:	6820      	ldr	r0, [r4, #0]
    d78c:	462a      	mov	r2, r5
    d78e:	4418      	add	r0, r3
    d790:	4639      	mov	r1, r7
    d792:	f7fe fcb5 	bl	c100 <memcpy>
    psBuffer->ui32BufferTail_write = ((psBuffer->ui32BufferTail_write + ui32CopyLen) % psBuffer->ui32Capacity);
    d796:	6863      	ldr	r3, [r4, #4]
    d798:	6922      	ldr	r2, [r4, #16]
    d79a:	441d      	add	r5, r3
    d79c:	fbb5 f3f2 	udiv	r3, r5, r2
    d7a0:	fb02 5513 	mls	r5, r2, r3, r5
    d7a4:	6065      	str	r5, [r4, #4]
    

}
    d7a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000d7a8 <sysFastMemCopy>:
 *     (len) < 16 ? memcpy(pDst,pSrc,len) : sysFastMemCopy(pDst,pSrc,len);
 *
 *****************************************************************************/
 
void sysFastMemCopy( uint8_t *pDest, uint8_t *pSrc, uint32_t len )
{
    d7a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t longWord2;
    uint32_t methodSelect;
     
    // Determine the number of bytes in the first word of src and dest
    srcCnt = 4 - ( (uint32_t) pSrc & 0x03 );
    destCnt = 4 - ( (uint32_t) pDest & 0x03 );
    d7ac:	f000 0403 	and.w	r4, r0, #3
    d7b0:	f1c4 0504 	rsb	r5, r4, #4
        *pDest++ = *pSrc++;
    d7b4:	780b      	ldrb	r3, [r1, #0]
    d7b6:	7003      	strb	r3, [r0, #0]
    srcCnt = 4 - ( (uint32_t) pSrc & 0x03 );
    d7b8:	f001 0403 	and.w	r4, r1, #3
    for ( i = 0; i < len; i++ )
    d7bc:	2d01      	cmp	r5, #1
    srcCnt = 4 - ( (uint32_t) pSrc & 0x03 );
    d7be:	f1c4 0404 	rsb	r4, r4, #4
    for ( i = 0; i < len; i++ )
    d7c2:	d009      	beq.n	d7d8 <sysFastMemCopy+0x30>
        *pDest++ = *pSrc++;
    d7c4:	784b      	ldrb	r3, [r1, #1]
    d7c6:	7043      	strb	r3, [r0, #1]
    for ( i = 0; i < len; i++ )
    d7c8:	2d02      	cmp	r5, #2
    d7ca:	d005      	beq.n	d7d8 <sysFastMemCopy+0x30>
        *pDest++ = *pSrc++;
    d7cc:	788b      	ldrb	r3, [r1, #2]
    d7ce:	7083      	strb	r3, [r0, #2]
    for ( i = 0; i < len; i++ )
    d7d0:	2d04      	cmp	r5, #4
        *pDest++ = *pSrc++;
    d7d2:	bf04      	itt	eq
    d7d4:	78cb      	ldrbeq	r3, [r1, #3]
    d7d6:	70c3      	strbeq	r3, [r0, #3]
     
    // Pick the initial long destination word to copy to
    pLongDest = (uint32_t*) ( pDest + destCnt );
     
    // Pick the initial source word to start our algorithm at
    if ( srcCnt <= destCnt )
    d7d8:	42ac      	cmp	r4, r5
    {
        // Advance to pSrc at the start of the next full word
        pLongSrc = (uint32_t*) ( pSrc + srcCnt );
    d7da:	bf98      	it	ls
    d7dc:	190b      	addls	r3, r1, r4
        // Set pSrc to the start of the first full word
        pLongSrc = (uint32_t*) ( pSrc + srcCnt - 4 );
    }
     
    // There are 4 different longWord copy methods
    methodSelect = ( srcCnt - destCnt ) & 0x03;
    d7de:	eba4 0405 	sub.w	r4, r4, r5
    newLen = len - destCnt;
    d7e2:	eba2 0605 	sub.w	r6, r2, r5
        pLongSrc = (uint32_t*) ( pSrc + srcCnt - 4 );
    d7e6:	bf88      	it	hi
    d7e8:	f021 0303 	bichi.w	r3, r1, #3
     
    // Just copy one-to-one
    if ( methodSelect == 0 )
    d7ec:	f014 0403 	ands.w	r4, r4, #3
    longLen = newLen / 4;
    d7f0:	ea4f 0796 	mov.w	r7, r6, lsr #2
    pLongDest = (uint32_t*) ( pDest + destCnt );
    d7f4:	4428      	add	r0, r5
    endLen = newLen & 0x03;
    d7f6:	f006 0603 	and.w	r6, r6, #3
    if ( methodSelect == 0 )
    d7fa:	d11a      	bne.n	d832 <sysFastMemCopy+0x8a>
    {
        // Just copy the specified number of long words
        while ( longLen-- > 0 )
    d7fc:	b157      	cbz	r7, d814 <sysFastMemCopy+0x6c>
    d7fe:	00bf      	lsls	r7, r7, #2
    d800:	eb03 0c07 	add.w	ip, r3, r7
    d804:	1f04      	subs	r4, r0, #4
        {
            *pLongDest++ = *pLongSrc++;
    d806:	f853 5b04 	ldr.w	r5, [r3], #4
    d80a:	f844 5f04 	str.w	r5, [r4, #4]!
        while ( longLen-- > 0 )
    d80e:	459c      	cmp	ip, r3
    d810:	d1f9      	bne.n	d806 <sysFastMemCopy+0x5e>
    d812:	4438      	add	r0, r7
            longWord1 = longWord2;
        }
    }
     
    // Copy any remaining bytes
    if ( endLen != 0 )
    d814:	b15e      	cbz	r6, d82e <sysFastMemCopy+0x86>
    {
        // The trailing bytes will be copied next
        pDest = (uint8_t*) pLongDest;
         
        // Determine where the trailing source bytes are located
        pSrc += len - endLen;
    d816:	1b92      	subs	r2, r2, r6
    d818:	188b      	adds	r3, r1, r2
    for ( i = 0; i < len; i++ )
    d81a:	2e01      	cmp	r6, #1
        *pDest++ = *pSrc++;
    d81c:	5c8a      	ldrb	r2, [r1, r2]
    d81e:	7002      	strb	r2, [r0, #0]
    for ( i = 0; i < len; i++ )
    d820:	d005      	beq.n	d82e <sysFastMemCopy+0x86>
        *pDest++ = *pSrc++;
    d822:	785a      	ldrb	r2, [r3, #1]
    d824:	7042      	strb	r2, [r0, #1]
    for ( i = 0; i < len; i++ )
    d826:	2e03      	cmp	r6, #3
        *pDest++ = *pSrc++;
    d828:	bf04      	itt	eq
    d82a:	789b      	ldrbeq	r3, [r3, #2]
    d82c:	7083      	strbeq	r3, [r0, #2]
         
        // Copy the remaining bytes
        manualCopy( pDest, pSrc, endLen );
    }
}
    d82e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    else if ( methodSelect == 1 )
    d832:	2c01      	cmp	r4, #1
    d834:	f103 0504 	add.w	r5, r3, #4
    d838:	f8d3 c000 	ldr.w	ip, [r3]
    d83c:	d015      	beq.n	d86a <sysFastMemCopy+0xc2>
    else if ( methodSelect == 2 )
    d83e:	2c02      	cmp	r4, #2
    d840:	d027      	beq.n	d892 <sysFastMemCopy+0xea>
        while ( longLen-- > 0 )
    d842:	2f00      	cmp	r7, #0
    d844:	d0e6      	beq.n	d814 <sysFastMemCopy+0x6c>
    d846:	3701      	adds	r7, #1
    d848:	00bf      	lsls	r7, r7, #2
    d84a:	443b      	add	r3, r7
    pLongDest = (uint32_t*) ( pDest + destCnt );
    d84c:	4680      	mov	r8, r0
            longWord2 = *pLongSrc++;
    d84e:	f855 eb04 	ldr.w	lr, [r5], #4
            *pLongDest++ = ( longWord1 >> 8 ) | ( longWord2 << 24 );
    d852:	ea4f 640e 	mov.w	r4, lr, lsl #24
    d856:	ea44 241c 	orr.w	r4, r4, ip, lsr #8
        while ( longLen-- > 0 )
    d85a:	429d      	cmp	r5, r3
            *pLongDest++ = ( longWord1 >> 8 ) | ( longWord2 << 24 );
    d85c:	f848 4b04 	str.w	r4, [r8], #4
            longWord1 = longWord2;
    d860:	46f4      	mov	ip, lr
        while ( longLen-- > 0 )
    d862:	d1f4      	bne.n	d84e <sysFastMemCopy+0xa6>
    d864:	3f04      	subs	r7, #4
    d866:	4438      	add	r0, r7
    d868:	e7d4      	b.n	d814 <sysFastMemCopy+0x6c>
        while ( longLen-- > 0 )
    d86a:	2f00      	cmp	r7, #0
    d86c:	d0d2      	beq.n	d814 <sysFastMemCopy+0x6c>
    d86e:	3701      	adds	r7, #1
    d870:	00bf      	lsls	r7, r7, #2
    d872:	eb03 0807 	add.w	r8, r3, r7
    d876:	f1a0 0e04 	sub.w	lr, r0, #4
            longWord2 = *pLongSrc++;
    d87a:	f855 3b04 	ldr.w	r3, [r5], #4
            *pLongDest++ = ( longWord1 >> 24 ) | ( longWord2 << 8 );
    d87e:	021c      	lsls	r4, r3, #8
    d880:	ea44 641c 	orr.w	r4, r4, ip, lsr #24
        while ( longLen-- > 0 )
    d884:	4545      	cmp	r5, r8
            *pLongDest++ = ( longWord1 >> 24 ) | ( longWord2 << 8 );
    d886:	f84e 4f04 	str.w	r4, [lr, #4]!
            longWord1 = longWord2;
    d88a:	469c      	mov	ip, r3
        while ( longLen-- > 0 )
    d88c:	d1f5      	bne.n	d87a <sysFastMemCopy+0xd2>
    d88e:	3f04      	subs	r7, #4
    d890:	e7e9      	b.n	d866 <sysFastMemCopy+0xbe>
        while ( longLen-- > 0 )
    d892:	2f00      	cmp	r7, #0
    d894:	d0be      	beq.n	d814 <sysFastMemCopy+0x6c>
    d896:	3701      	adds	r7, #1
    d898:	00bf      	lsls	r7, r7, #2
    d89a:	eb03 0807 	add.w	r8, r3, r7
    pLongDest = (uint32_t*) ( pDest + destCnt );
    d89e:	4686      	mov	lr, r0
            longWord2 = *pLongSrc++;
    d8a0:	f855 3b04 	ldr.w	r3, [r5], #4
            *pLongDest++ = ( longWord1 >> 16 ) | ( longWord2 << 16 );
    d8a4:	041c      	lsls	r4, r3, #16
    d8a6:	ea44 441c 	orr.w	r4, r4, ip, lsr #16
        while ( longLen-- > 0 )
    d8aa:	4545      	cmp	r5, r8
            *pLongDest++ = ( longWord1 >> 16 ) | ( longWord2 << 16 );
    d8ac:	f84e 4b04 	str.w	r4, [lr], #4
            longWord1 = longWord2;
    d8b0:	469c      	mov	ip, r3
        while ( longLen-- > 0 )
    d8b2:	d1f5      	bne.n	d8a0 <sysFastMemCopy+0xf8>
    d8b4:	e7d6      	b.n	d864 <sysFastMemCopy+0xbc>
    d8b6:	bf00      	nop

0000d8b8 <am_devices_led_array_init>:
void
am_devices_led_array_init(am_devices_led_t *psLEDs, uint32_t ui32NumLEDs)
{
    uint32_t i;

    if ( (psLEDs == NULL)                       ||
    d8b8:	b360      	cbz	r0, d914 <am_devices_led_array_init+0x5c>
    }

    //
    // Loop through the list of LEDs, configuring each one individually.
    //
    for ( i = 0; i < ui32NumLEDs; i++ )
    d8ba:	1e4b      	subs	r3, r1, #1
    d8bc:	2b1e      	cmp	r3, #30
    d8be:	d829      	bhi.n	d914 <am_devices_led_array_init+0x5c>
{
    d8c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        am_hal_gpio_pinconfig(psLED->ui32GPIONumber, g_AM_HAL_GPIO_TRISTATE);
    d8c4:	4f14      	ldr	r7, [pc, #80]	; (d918 <am_devices_led_array_init+0x60>)
        am_hal_gpio_pinconfig(psLED->ui32GPIONumber, g_AM_HAL_GPIO_OUTPUT);
    d8c6:	f8df 8054 	ldr.w	r8, [pc, #84]	; d91c <am_devices_led_array_init+0x64>
    d8ca:	4604      	mov	r4, r0
    d8cc:	eb00 06c1 	add.w	r6, r0, r1, lsl #3
    d8d0:	1d05      	adds	r5, r0, #4
    if ( (psLED == NULL)    ||
    d8d2:	b1c4      	cbz	r4, d906 <am_devices_led_array_init+0x4e>
         (psLED->ui32GPIONumber >= AM_HAL_GPIO_MAX_PADS) )
    d8d4:	f855 3c04 	ldr.w	r3, [r5, #-4]
    if ( (psLED == NULL)    ||
    d8d8:	2b31      	cmp	r3, #49	; 0x31
    d8da:	d814      	bhi.n	d906 <am_devices_led_array_init+0x4e>
    if ( AM_DEVICES_LED_POL_DIRECT_DRIVE_M & psLED->ui32Polarity )
    d8dc:	6862      	ldr	r2, [r4, #4]
        am_hal_gpio_pinconfig(psLED->ui32GPIONumber, g_AM_HAL_GPIO_TRISTATE);
    d8de:	4618      	mov	r0, r3
    if ( AM_DEVICES_LED_POL_DIRECT_DRIVE_M & psLED->ui32Polarity )
    d8e0:	0793      	lsls	r3, r2, #30
        am_hal_gpio_pinconfig(psLED->ui32GPIONumber, g_AM_HAL_GPIO_OUTPUT);
    d8e2:	bf4c      	ite	mi
    d8e4:	f8d8 1000 	ldrmi.w	r1, [r8]
        am_hal_gpio_pinconfig(psLED->ui32GPIONumber, g_AM_HAL_GPIO_TRISTATE);
    d8e8:	6839      	ldrpl	r1, [r7, #0]
    d8ea:	f7fe fd7d 	bl	c3e8 <am_hal_gpio_pinconfig>
        am_hal_gpio_state_write(psLED->ui32GPIONumber, AM_HAL_GPIO_OUTPUT_TRISTATE_DISABLE);
    d8ee:	2103      	movs	r1, #3
    d8f0:	f855 0c04 	ldr.w	r0, [r5, #-4]
    d8f4:	f7fe fef2 	bl	c6dc <am_hal_gpio_state_write>
                                AM_HAL_GPIO_OUTPUT_SET : AM_HAL_GPIO_OUTPUT_CLEAR);
    d8f8:	6861      	ldr	r1, [r4, #4]
        am_hal_gpio_state_write(psLED->ui32GPIONumber,
    d8fa:	f855 0c04 	ldr.w	r0, [r5, #-4]
    d8fe:	f001 0101 	and.w	r1, r1, #1
    d902:	f7fe feeb 	bl	c6dc <am_hal_gpio_state_write>
    d906:	3408      	adds	r4, #8
    for ( i = 0; i < ui32NumLEDs; i++ )
    d908:	42b4      	cmp	r4, r6
    d90a:	f105 0508 	add.w	r5, r5, #8
    d90e:	d1e0      	bne.n	d8d2 <am_devices_led_array_init+0x1a>
    {
        am_devices_led_init(psLEDs + i);
    }
}
    d910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d914:	4770      	bx	lr
    d916:	bf00      	nop
    d918:	00010184 	.word	0x00010184
    d91c:	00010180 	.word	0x00010180

0000d920 <am_devices_led_on>:
//
//*****************************************************************************
void
am_devices_led_on(am_devices_led_t *psLEDs, uint32_t ui32LEDNum)
{
    if ( (psLEDs == NULL)                       ||
    d920:	b170      	cbz	r0, d940 <am_devices_led_on+0x20>
    d922:	291e      	cmp	r1, #30
    d924:	d80c      	bhi.n	d940 <am_devices_led_on+0x20>
         (ui32LEDNum >= MAX_LEDS)               ||
         (psLEDs[ui32LEDNum].ui32GPIONumber >= AM_HAL_GPIO_MAX_PADS) )
    d926:	f850 3031 	ldr.w	r3, [r0, r1, lsl #3]
         (ui32LEDNum >= MAX_LEDS)               ||
    d92a:	2b31      	cmp	r3, #49	; 0x31
         (psLEDs[ui32LEDNum].ui32GPIONumber >= AM_HAL_GPIO_MAX_PADS) )
    d92c:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
         (ui32LEDNum >= MAX_LEDS)               ||
    d930:	d806      	bhi.n	d940 <am_devices_led_on+0x20>

#if AM_APOLLO3_GPIO
    //
    // Handle Direct Drive Versus 3-State (with pull-up or no buffer).
    //
    if ( AM_DEVICES_LED_POL_DIRECT_DRIVE_M & psLEDs[ui32LEDNum].ui32Polarity )
    d932:	6849      	ldr	r1, [r1, #4]
    d934:	078a      	lsls	r2, r1, #30
    d936:	d404      	bmi.n	d942 <am_devices_led_on+0x22>
    else
    {
        //
        // Turn on the output driver for the LED.
        //
        am_hal_gpio_state_write(psLEDs[ui32LEDNum].ui32GPIONumber,
    d938:	4618      	mov	r0, r3
    d93a:	2104      	movs	r1, #4
    d93c:	f7fe bece 	b.w	c6dc <am_hal_gpio_state_write>
        // Turn on the output driver for the LED.
        //
        am_hal_gpio_out_enable_bit_set(psLEDs[ui32LEDNum].ui32GPIONumber);
    }
#endif // AM_APOLLO3_GPIO
}
    d940:	4770      	bx	lr
        am_hal_gpio_state_write(psLEDs[ui32LEDNum].ui32GPIONumber,
    d942:	f001 0101 	and.w	r1, r1, #1
    d946:	4618      	mov	r0, r3
    d948:	f7fe bec8 	b.w	c6dc <am_hal_gpio_state_write>

0000d94c <am_devices_led_off>:
//
//*****************************************************************************
void
am_devices_led_off(am_devices_led_t *psLEDs, uint32_t ui32LEDNum)
{
    if ( (psLEDs == NULL)                       ||
    d94c:	b170      	cbz	r0, d96c <am_devices_led_off+0x20>
    d94e:	291e      	cmp	r1, #30
    d950:	d80c      	bhi.n	d96c <am_devices_led_off+0x20>
         (ui32LEDNum >= MAX_LEDS)               ||
         (psLEDs[ui32LEDNum].ui32GPIONumber >= AM_HAL_GPIO_MAX_PADS) )
    d952:	f850 3031 	ldr.w	r3, [r0, r1, lsl #3]
         (ui32LEDNum >= MAX_LEDS)               ||
    d956:	2b31      	cmp	r3, #49	; 0x31
         (psLEDs[ui32LEDNum].ui32GPIONumber >= AM_HAL_GPIO_MAX_PADS) )
    d958:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
         (ui32LEDNum >= MAX_LEDS)               ||
    d95c:	d806      	bhi.n	d96c <am_devices_led_off+0x20>

#if AM_APOLLO3_GPIO
    //
    // Handle Direct Drive Versus 3-State (with pull-up or no buffer).
    //
    if ( AM_DEVICES_LED_POL_DIRECT_DRIVE_M & psLEDs[ui32LEDNum].ui32Polarity )
    d95e:	6849      	ldr	r1, [r1, #4]
    d960:	078a      	lsls	r2, r1, #30
    d962:	d404      	bmi.n	d96e <am_devices_led_off+0x22>
    else
    {
        //
        // Turn off the output driver for the LED.
        //
        am_hal_gpio_state_write(psLEDs[ui32LEDNum].ui32GPIONumber,
    d964:	4618      	mov	r0, r3
    d966:	2103      	movs	r1, #3
    d968:	f7fe beb8 	b.w	c6dc <am_hal_gpio_state_write>
        // Turn off the output driver for the LED.
        //
        am_hal_gpio_out_enable_bit_clear(psLEDs[ui32LEDNum].ui32GPIONumber);
    }
#endif // AM_APOLLO3_GPIO
}
    d96c:	4770      	bx	lr
        am_hal_gpio_state_write(psLEDs[ui32LEDNum].ui32GPIONumber,
    d96e:	43c9      	mvns	r1, r1
    d970:	f001 0101 	and.w	r1, r1, #1
    d974:	4618      	mov	r0, r3
    d976:	f7fe beb1 	b.w	c6dc <am_hal_gpio_state_write>
    d97a:	bf00      	nop

0000d97c <am_devices_led_toggle>:
//
//*****************************************************************************
void
am_devices_led_toggle(am_devices_led_t *psLEDs, uint32_t ui32LEDNum)
{
    if ( (psLEDs == NULL)                       ||
    d97c:	b1e0      	cbz	r0, d9b8 <am_devices_led_toggle+0x3c>
    d97e:	291e      	cmp	r1, #30
    d980:	d81a      	bhi.n	d9b8 <am_devices_led_toggle+0x3c>
         (ui32LEDNum >= MAX_LEDS)               ||
         (psLEDs[ui32LEDNum].ui32GPIONumber >= AM_HAL_GPIO_MAX_PADS) )
    d982:	f850 3031 	ldr.w	r3, [r0, r1, lsl #3]
         (ui32LEDNum >= MAX_LEDS)               ||
    d986:	2b31      	cmp	r3, #49	; 0x31
         (psLEDs[ui32LEDNum].ui32GPIONumber >= AM_HAL_GPIO_MAX_PADS) )
    d988:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
         (ui32LEDNum >= MAX_LEDS)               ||
    d98c:	d814      	bhi.n	d9b8 <am_devices_led_toggle+0x3c>
{
    d98e:	b530      	push	{r4, r5, lr}

#if AM_APOLLO3_GPIO
    //
    // Handle Direct Drive Versus 3-State (with pull-up or no buffer).
    //
    if ( AM_DEVICES_LED_POL_DIRECT_DRIVE_M & psLEDs[ui32LEDNum].ui32Polarity )
    d990:	6852      	ldr	r2, [r2, #4]
    d992:	4604      	mov	r4, r0
    {
        am_hal_gpio_state_write(psLEDs[ui32LEDNum].ui32GPIONumber,
    d994:	4618      	mov	r0, r3
    if ( AM_DEVICES_LED_POL_DIRECT_DRIVE_M & psLEDs[ui32LEDNum].ui32Polarity )
    d996:	0793      	lsls	r3, r2, #30
{
    d998:	b083      	sub	sp, #12
    d99a:	460d      	mov	r5, r1
    if ( AM_DEVICES_LED_POL_DIRECT_DRIVE_M & psLEDs[ui32LEDNum].ui32Polarity )
    d99c:	d40d      	bmi.n	d9ba <am_devices_led_toggle+0x3e>
        uint32_t ui32Ret, ui32Value;

        //
        // Check to see if the LED pin is enabled.
        //
        ui32Ret = am_hal_gpio_state_read(psLEDs[ui32LEDNum].ui32GPIONumber,
    d99e:	aa01      	add	r2, sp, #4
    d9a0:	2102      	movs	r1, #2
    d9a2:	f7fe fe63 	bl	c66c <am_hal_gpio_state_read>
                                         AM_HAL_GPIO_ENABLE_READ, &ui32Value);

        if ( ui32Ret == AM_HAL_STATUS_SUCCESS )
    d9a6:	b958      	cbnz	r0, d9c0 <am_devices_led_toggle+0x44>
        {
            if ( ui32Value )
    d9a8:	9b01      	ldr	r3, [sp, #4]
    d9aa:	f854 0035 	ldr.w	r0, [r4, r5, lsl #3]
    d9ae:	b14b      	cbz	r3, d9c4 <am_devices_led_toggle+0x48>
            {
                //
                // If it was enabled, turn if off.
                //
                am_hal_gpio_state_write(psLEDs[ui32LEDNum].ui32GPIONumber,
    d9b0:	2103      	movs	r1, #3
    d9b2:	f7fe fe93 	bl	c6dc <am_hal_gpio_state_write>
    d9b6:	e003      	b.n	d9c0 <am_devices_led_toggle+0x44>
    d9b8:	4770      	bx	lr
        am_hal_gpio_state_write(psLEDs[ui32LEDNum].ui32GPIONumber,
    d9ba:	2102      	movs	r1, #2
    d9bc:	f7fe fe8e 	bl	c6dc <am_hal_gpio_state_write>
            //
            am_hal_gpio_out_enable_bit_set(psLEDs[ui32LEDNum].ui32GPIONumber);
        }
    }
#endif // AM_APOLLO3_GPIO
}
    d9c0:	b003      	add	sp, #12
    d9c2:	bd30      	pop	{r4, r5, pc}
                am_hal_gpio_state_write(psLEDs[ui32LEDNum].ui32GPIONumber,
    d9c4:	2104      	movs	r1, #4
    d9c6:	f7fe fe89 	bl	c6dc <am_hal_gpio_state_write>
    d9ca:	e7f9      	b.n	d9c0 <am_devices_led_toggle+0x44>

0000d9cc <NMI_Handler>:
#if AM_CMSIS_REGS
NMI_Handler(void)
#else // AM_CMSIS_REGS
am_nmi_isr(void)
#endif // AM_CMSIS_REGS
{
    d9cc:	e7fe      	b.n	d9cc <NMI_Handler>
    d9ce:	bf00      	nop

0000d9d0 <DebugMon_Handler>:
// for examination by a debugger.
//
//*****************************************************************************
void
am_default_isr(void)
{
    d9d0:	e7fe      	b.n	d9d0 <DebugMon_Handler>
    d9d2:	bf00      	nop

0000d9d4 <Reset_Handler>:
    __asm("    ldr    r0, =0xE000ED08\n"
    d9d4:	4811      	ldr	r0, [pc, #68]	; (da1c <zero_loop+0x12>)
    d9d6:	4912      	ldr	r1, [pc, #72]	; (da20 <zero_loop+0x16>)
    d9d8:	6001      	str	r1, [r0, #0]
    __asm("    ldr    sp, [r1]");
    d9da:	f8d1 d000 	ldr.w	sp, [r1]
    __asm("ldr  r0, =0xE000ED88\n"
    d9de:	4811      	ldr	r0, [pc, #68]	; (da24 <zero_loop+0x1a>)
    d9e0:	6801      	ldr	r1, [r0, #0]
    d9e2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    d9e6:	6001      	str	r1, [r0, #0]
    d9e8:	f3bf 8f4f 	dsb	sy
    d9ec:	f3bf 8f6f 	isb	sy
    __asm("    ldr     r0, =_init_data\n"
    d9f0:	480d      	ldr	r0, [pc, #52]	; (da28 <zero_loop+0x1e>)
    d9f2:	490e      	ldr	r1, [pc, #56]	; (da2c <zero_loop+0x22>)
    d9f4:	4a0e      	ldr	r2, [pc, #56]	; (da30 <zero_loop+0x26>)

0000d9f6 <copy_loop>:
    d9f6:	f850 3b04 	ldr.w	r3, [r0], #4
    d9fa:	f841 3b04 	str.w	r3, [r1], #4
    d9fe:	4291      	cmp	r1, r2
    da00:	dbf9      	blt.n	d9f6 <copy_loop>
    __asm("    ldr     r0, =_sbss\n"
    da02:	480c      	ldr	r0, [pc, #48]	; (da34 <zero_loop+0x2a>)
    da04:	490c      	ldr	r1, [pc, #48]	; (da38 <zero_loop+0x2e>)
    da06:	f04f 0200 	mov.w	r2, #0

0000da0a <zero_loop>:
    da0a:	4288      	cmp	r0, r1
    da0c:	bfb8      	it	lt
    da0e:	f840 2b04 	strlt.w	r2, [r0], #4
    da12:	dbfa      	blt.n	da0a <zero_loop>
    main();
    da14:	f7fe fc5e 	bl	c2d4 <main>
    __asm("    bkpt     ");
    da18:	be00      	bkpt	0x0000
    da1a:	0000      	.short	0x0000
    da1c:	e000ed08 	.word	0xe000ed08
    da20:	0000c000 	.word	0x0000c000
    da24:	e000ed88 	.word	0xe000ed88
    da28:	00023d48 	.word	0x00023d48
    da2c:	10001000 	.word	0x10001000
    da30:	10001048 	.word	0x10001048
    da34:	10001048 	.word	0x10001048
    da38:	10039840 	.word	0x10039840

0000da3c <DebugLog>:

//*****************************************************************************
// The stdio function for debug usage
//*****************************************************************************

void DebugLog(const char* s) { am_util_stdio_printf("%s", s); }
    da3c:	4601      	mov	r1, r0
    da3e:	4801      	ldr	r0, [pc, #4]	; (da44 <DebugLog+0x8>)
    da40:	f7ff be22 	b.w	d688 <am_util_stdio_printf>
    da44:	000102ec 	.word	0x000102ec

0000da48 <am_app_AEP_sys_init>:
void am_app_AEP_sys_init(void)
{
    //
    // Set the clock frequency.
    //
    am_hal_clkgen_control(AM_HAL_CLKGEN_CONTROL_SYSCLK_MAX, 0);
    da48:	2100      	movs	r1, #0
{
    da4a:	b538      	push	{r3, r4, r5, lr}
    am_hal_clkgen_control(AM_HAL_CLKGEN_CONTROL_SYSCLK_MAX, 0);
    da4c:	4608      	mov	r0, r1
    da4e:	f001 fbfb 	bl	f248 <am_hal_clkgen_control>
    
    //
    // Set the default cache configuration
    //
    am_hal_cachectrl_config(&am_hal_cachectrl_defaults);
    da52:	482b      	ldr	r0, [pc, #172]	; (db00 <am_app_AEP_sys_init+0xb8>)
    //
    // Turn the LEDs off
    //
    for (int ix = 0; ix < AM_BSP_NUM_LEDS; ix++) 
    {
        am_devices_led_off(am_bsp_psLEDs, ix);
    da54:	4d2b      	ldr	r5, [pc, #172]	; (db04 <am_app_AEP_sys_init+0xbc>)
    am_hal_cachectrl_config(&am_hal_cachectrl_defaults);
    da56:	f001 fbc3 	bl	f1e0 <am_hal_cachectrl_config>
    am_hal_cachectrl_enable();
    da5a:	f001 fbeb 	bl	f234 <am_hal_cachectrl_enable>
    am_bsp_low_power_init();
    da5e:	f001 fb5f 	bl	f120 <am_bsp_low_power_init>
    am_hal_gpio_pinconfig(AM_BSP_GPIO_BUTTON0, g_deepsleep_button0);
    da62:	4b29      	ldr	r3, [pc, #164]	; (db08 <am_app_AEP_sys_init+0xc0>)
    da64:	2010      	movs	r0, #16
    da66:	6819      	ldr	r1, [r3, #0]
    da68:	f7fe fcbe 	bl	c3e8 <am_hal_gpio_pinconfig>
    am_hal_gpio_interrupt_clear(AM_HAL_GPIO_BIT(AM_BSP_GPIO_BUTTON0));
    da6c:	2100      	movs	r1, #0
    da6e:	f44f 3080 	mov.w	r0, #65536	; 0x10000
    da72:	f7fe fe9f 	bl	c7b4 <am_hal_gpio_interrupt_clear>
    am_hal_gpio_interrupt_enable(AM_HAL_GPIO_BIT(AM_BSP_GPIO_BUTTON0));
    da76:	2100      	movs	r1, #0
    da78:	f44f 3080 	mov.w	r0, #65536	; 0x10000
    da7c:	f7fe fe72 	bl	c764 <am_hal_gpio_interrupt_enable>
    am_devices_led_array_init(am_bsp_psLEDs, AM_BSP_NUM_LEDS);
    da80:	2105      	movs	r1, #5
    da82:	4628      	mov	r0, r5
    da84:	f7ff ff18 	bl	d8b8 <am_devices_led_array_init>
    for (int ix = 0; ix < AM_BSP_NUM_LEDS; ix++) 
    da88:	2400      	movs	r4, #0
        am_devices_led_off(am_bsp_psLEDs, ix);
    da8a:	4621      	mov	r1, r4
    da8c:	4628      	mov	r0, r5
    for (int ix = 0; ix < AM_BSP_NUM_LEDS; ix++) 
    da8e:	3401      	adds	r4, #1
        am_devices_led_off(am_bsp_psLEDs, ix);
    da90:	f7ff ff5c 	bl	d94c <am_devices_led_off>
    for (int ix = 0; ix < AM_BSP_NUM_LEDS; ix++) 
    da94:	2c05      	cmp	r4, #5
    da96:	d1f8      	bne.n	da8a <am_app_AEP_sys_init+0x42>
    am_hal_clkgen_control(AM_HAL_CLKGEN_CONTROL_HFADJ_ENABLE, 0);
    da98:	2100      	movs	r1, #0
    da9a:	2008      	movs	r0, #8
    da9c:	f001 fbd4 	bl	f248 <am_hal_clkgen_control>
    am_hal_ctimer_clear(0, AM_HAL_CTIMER_TIMERA);
    daa0:	f64f 71ff 	movw	r1, #65535	; 0xffff
    daa4:	2000      	movs	r0, #0
    daa6:	f001 fc95 	bl	f3d4 <am_hal_ctimer_clear>
    am_hal_ctimer_config(0, &g_sTimer0);
    daaa:	4918      	ldr	r1, [pc, #96]	; (db0c <am_app_AEP_sys_init+0xc4>)
    daac:	2000      	movs	r0, #0
    daae:	f001 fc37 	bl	f320 <am_hal_ctimer_config>
    am_hal_ctimer_period_set(0, AM_HAL_CTIMER_TIMERA, ui32Period,
    dab2:	f241 7370 	movw	r3, #6000	; 0x1770
    dab6:	f642 62e0 	movw	r2, #12000	; 0x2ee0
    daba:	f64f 71ff 	movw	r1, #65535	; 0xffff
    dabe:	2000      	movs	r0, #0
    dac0:	f001 fc9c 	bl	f3fc <am_hal_ctimer_period_set>
    am_hal_ctimer_int_clear(AM_HAL_CTIMER_INT_TIMERA0);
    dac4:	2001      	movs	r0, #1
    dac6:	f001 fd03 	bl	f4d0 <am_hal_ctimer_int_clear>
    timerA0_init();

    //
    // Enable the timer Interrupt.
    //
    am_hal_ctimer_int_enable(AM_HAL_CTIMER_INT_TIMERA0);
    daca:	2001      	movs	r0, #1
    dacc:	f001 fcec 	bl	f4a8 <am_hal_ctimer_int_enable>
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    dad0:	4b0f      	ldr	r3, [pc, #60]	; (db10 <am_app_AEP_sys_init+0xc8>)
    dad2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    dad6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
    dada:	6019      	str	r1, [r3, #0]
    dadc:	601a      	str	r2, [r3, #0]
#endif  // AM_CMSIS_REGS

    //
    // Enable interrupts to the core.
    //
    am_hal_interrupt_master_enable();
    dade:	f001 fd37 	bl	f550 <am_hal_interrupt_master_enable>
    
   
    //
    // Initialize the printf interface for UART output
    //
    am_bsp_uart_printf_enable();
    dae2:	f001 fb4f 	bl	f184 <am_bsp_uart_printf_enable>
#if configUSE_RTT_DATA_OUTPUT 
    am_app_utils_rtt_init(g_rttRecorderBuff, RTT_BUFFER_LENGTH);
#endif
    am_hal_ctimer_start(0, AM_HAL_CTIMER_TIMERA);
    dae6:	f64f 71ff 	movw	r1, #65535	; 0xffff
    daea:	2000      	movs	r0, #0
    daec:	f001 fc48 	bl	f380 <am_hal_ctimer_start>

    am_app_utils_ring_buffer_init_all(am_sys_ring_buffers, g_SysRingBuffSetup, SYS_RINGBUFF_INIT_COUNT);
    daf0:	2201      	movs	r2, #1
    daf2:	4908      	ldr	r1, [pc, #32]	; (db14 <am_app_AEP_sys_init+0xcc>)
    daf4:	4808      	ldr	r0, [pc, #32]	; (db18 <am_app_AEP_sys_init+0xd0>)

}
    daf6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    am_app_utils_ring_buffer_init_all(am_sys_ring_buffers, g_SysRingBuffSetup, SYS_RINGBUFF_INIT_COUNT);
    dafa:	f7ff bde1 	b.w	d6c0 <am_app_utils_ring_buffer_init_all>
    dafe:	bf00      	nop
    db00:	00023c10 	.word	0x00023c10
    db04:	10001010 	.word	0x10001010
    db08:	000102fc 	.word	0x000102fc
    db0c:	10001000 	.word	0x10001000
    db10:	e000e100 	.word	0xe000e100
    db14:	000102f0 	.word	0x000102f0
    db18:	1001209c 	.word	0x1001209c

0000db1c <am_ctimer_isr>:
am_ctimer_isr(void)
{
    //
    // Increment count and set limit based on the number of LEDs available.
    //
    g_ui32TimerCount++;
    db1c:	4a0d      	ldr	r2, [pc, #52]	; (db54 <am_ctimer_isr+0x38>)
    if ( g_ui8DebounceFlag == 1)
    db1e:	490e      	ldr	r1, [pc, #56]	; (db58 <am_ctimer_isr+0x3c>)
    g_ui32TimerCount++;
    db20:	6813      	ldr	r3, [r2, #0]
    db22:	3301      	adds	r3, #1
    db24:	6013      	str	r3, [r2, #0]
    if ( g_ui8DebounceFlag == 1)
    db26:	780b      	ldrb	r3, [r1, #0]
    db28:	b2db      	uxtb	r3, r3
    db2a:	2b01      	cmp	r3, #1
    db2c:	d002      	beq.n	db34 <am_ctimer_isr+0x18>
    } 

    //
    // Clear TimerA0 Interrupt (write to clear).
    //
    am_hal_ctimer_int_clear(AM_HAL_CTIMER_INT_TIMERA0);
    db2e:	2001      	movs	r0, #1
    db30:	f001 bcce 	b.w	f4d0 <am_hal_ctimer_int_clear>
        g_ui32DebounceTimerCount++;
    db34:	4a09      	ldr	r2, [pc, #36]	; (db5c <am_ctimer_isr+0x40>)
    db36:	6810      	ldr	r0, [r2, #0]
    db38:	3001      	adds	r0, #1
    db3a:	6010      	str	r0, [r2, #0]
        if(g_ui32DebounceTimerCount > 300)
    db3c:	6812      	ldr	r2, [r2, #0]
    db3e:	f5b2 7f96 	cmp.w	r2, #300	; 0x12c
    db42:	d9f4      	bls.n	db2e <am_ctimer_isr+0x12>
            g_sysKeyValue = AM_APP_KEY_0;
    db44:	4806      	ldr	r0, [pc, #24]	; (db60 <am_ctimer_isr+0x44>)
            g_ui8DebounceFlag = 0;
    db46:	2200      	movs	r2, #0
            g_sysKeyValue = AM_APP_KEY_0;
    db48:	7003      	strb	r3, [r0, #0]
    am_hal_ctimer_int_clear(AM_HAL_CTIMER_INT_TIMERA0);
    db4a:	2001      	movs	r0, #1
            g_ui8DebounceFlag = 0;
    db4c:	700a      	strb	r2, [r1, #0]
    am_hal_ctimer_int_clear(AM_HAL_CTIMER_INT_TIMERA0);
    db4e:	f001 bcbf 	b.w	f4d0 <am_hal_ctimer_int_clear>
    db52:	bf00      	nop
    db54:	10001154 	.word	0x10001154
    db58:	10001158 	.word	0x10001158
    db5c:	10001150 	.word	0x10001150
    db60:	1000114c 	.word	0x1000114c

0000db64 <am_gpio_isr>:
void am_gpio_isr(void) 
{
    //
    // debounce.
    //
    if(g_ui8DebounceFlag == 0)
    db64:	4a06      	ldr	r2, [pc, #24]	; (db80 <am_gpio_isr+0x1c>)
    db66:	7813      	ldrb	r3, [r2, #0]
    db68:	f003 01ff 	and.w	r1, r3, #255	; 0xff
    db6c:	b91b      	cbnz	r3, db76 <am_gpio_isr+0x12>
    {
        g_ui8DebounceFlag = 1;
        g_ui32DebounceTimerCount = 0;
    db6e:	4b05      	ldr	r3, [pc, #20]	; (db84 <am_gpio_isr+0x20>)
        g_ui8DebounceFlag = 1;
    db70:	2001      	movs	r0, #1
    db72:	7010      	strb	r0, [r2, #0]
        g_ui32DebounceTimerCount = 0;
    db74:	6019      	str	r1, [r3, #0]
    }  
    //
    // Clear the GPIO Interrupt (write to clear).
    //
    am_hal_gpio_interrupt_clear(AM_HAL_GPIO_BIT(AM_BSP_GPIO_BUTTON0));
    db76:	f44f 3080 	mov.w	r0, #65536	; 0x10000
    db7a:	2100      	movs	r1, #0
    db7c:	f7fe be1a 	b.w	c7b4 <am_hal_gpio_interrupt_clear>
    db80:	10001158 	.word	0x10001158
    db84:	10001150 	.word	0x10001150

0000db88 <am_pdm_isr>:
//
// PDM interrupt handler.
//
//*****************************************************************************
void am_pdm_isr(void) 
{
    db88:	b510      	push	{r4, lr}
#endif
    uint32_t ui32Status;
    //
    // Read the interrupt status.
    //
    am_hal_pdm_interrupt_status_get(PDMHandle, &ui32Status, true);
    db8a:	4c17      	ldr	r4, [pc, #92]	; (dbe8 <am_pdm_isr+0x60>)
{
    db8c:	b082      	sub	sp, #8
    SEGGER_SYSVIEW_RecordEnterISR();
    db8e:	f000 fe75 	bl	e87c <SEGGER_SYSVIEW_RecordEnterISR>
    am_hal_pdm_interrupt_status_get(PDMHandle, &ui32Status, true);
    db92:	2201      	movs	r2, #1
    db94:	a901      	add	r1, sp, #4
    db96:	6820      	ldr	r0, [r4, #0]
    db98:	f7fe fc08 	bl	c3ac <am_hal_pdm_interrupt_status_get>
    am_hal_pdm_interrupt_clear(PDMHandle, ui32Status);
    db9c:	9901      	ldr	r1, [sp, #4]
    db9e:	6820      	ldr	r0, [r4, #0]
    dba0:	f7fe fbf4 	bl	c38c <am_hal_pdm_interrupt_clear>
    
    g_DebugValue++;
    dba4:	4a11      	ldr	r2, [pc, #68]	; (dbec <am_pdm_isr+0x64>)
    if (ui32Status & AM_HAL_PDM_INT_DCMP)
    dba6:	9901      	ldr	r1, [sp, #4]
    g_DebugValue++;
    dba8:	6813      	ldr	r3, [r2, #0]
    dbaa:	3301      	adds	r3, #1
    dbac:	6013      	str	r3, [r2, #0]
    if (ui32Status & AM_HAL_PDM_INT_DCMP)
    dbae:	070b      	lsls	r3, r1, #28
    dbb0:	d40d      	bmi.n	dbce <am_pdm_isr+0x46>
            am_app_utils_rtt_record((void*)g_ui32PCMDataBuff, PCM_FRAME_SIZE*PCM_DATA_BYTES); 
#endif /* USE_RTT_DATA_OUTPUT */ 

//        am_util_debug_printf("PDM DCMP interrupt, pick g_ui32PDMDataBuffer[5] = 0x%8x\n", g_ui32PDMDataBuffer[5]);
    }
    else if(ui32Status & (AM_HAL_PDM_INT_UNDFL | AM_HAL_PDM_INT_OVF))
    dbb2:	f011 0f06 	tst.w	r1, #6
    dbb6:	d103      	bne.n	dbc0 <am_pdm_isr+0x38>
    {
        am_hal_pdm_fifo_flush(PDMHandle);
    }

#if configUSE_SYSVIEW
    SEGGER_SYSVIEW_RecordExitISR(); //emit Exit ISR signal
    dbb8:	f000 fc38 	bl	e42c <SEGGER_SYSVIEW_RecordExitISR>
#endif

}
    dbbc:	b002      	add	sp, #8
    dbbe:	bd10      	pop	{r4, pc}
        am_hal_pdm_fifo_flush(PDMHandle);
    dbc0:	6820      	ldr	r0, [r4, #0]
    dbc2:	f7fe fbd1 	bl	c368 <am_hal_pdm_fifo_flush>
    SEGGER_SYSVIEW_RecordExitISR(); //emit Exit ISR signal
    dbc6:	f000 fc31 	bl	e42c <SEGGER_SYSVIEW_RecordExitISR>
}
    dbca:	b002      	add	sp, #8
    dbcc:	bd10      	pop	{r4, pc}
        PDMn(0)->DMATOTCOUNT = PCM_FRAME_SIZE*PCM_DATA_BYTES;  // FIFO unit in bytes
    dbce:	4b08      	ldr	r3, [pc, #32]	; (dbf0 <am_pdm_isr+0x68>)
        am_app_utils_ring_buffer_push_fast(&am_sys_ring_buffers[AM_APP_RINGBUFF_PCM], (void*)g_ui32PCMDataBuff, PCM_FRAME_SIZE*PCM_DATA_BYTES);
    dbd0:	4908      	ldr	r1, [pc, #32]	; (dbf4 <am_pdm_isr+0x6c>)
    dbd2:	4809      	ldr	r0, [pc, #36]	; (dbf8 <am_pdm_isr+0x70>)
        PDMn(0)->DMATOTCOUNT = PCM_FRAME_SIZE*PCM_DATA_BYTES;  // FIFO unit in bytes
    dbd4:	f44f 62a0 	mov.w	r2, #1280	; 0x500
    dbd8:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
        am_app_utils_ring_buffer_push_fast(&am_sys_ring_buffers[AM_APP_RINGBUFF_PCM], (void*)g_ui32PCMDataBuff, PCM_FRAME_SIZE*PCM_DATA_BYTES);
    dbdc:	f7ff fd94 	bl	d708 <am_app_utils_ring_buffer_push_fast>
    SEGGER_SYSVIEW_RecordExitISR(); //emit Exit ISR signal
    dbe0:	f000 fc24 	bl	e42c <SEGGER_SYSVIEW_RecordExitISR>
}
    dbe4:	b002      	add	sp, #8
    dbe6:	bd10      	pop	{r4, pc}
    dbe8:	100125c4 	.word	0x100125c4
    dbec:	1000115c 	.word	0x1000115c
    dbf0:	50011000 	.word	0x50011000
    dbf4:	100120c4 	.word	0x100120c4
    dbf8:	100120b0 	.word	0x100120b0

0000dbfc <am_memcpy_test>:
uint8_t g_pui8MemcpyBuff[80001];

uint8_t g_pui8FastMemcpyBuff[80001];

void am_memcpy_test(uint8_t* pSrc, uint8_t* pDst, uint32_t Len)
{
    dbfc:	b570      	push	{r4, r5, r6, lr}
    dbfe:	460c      	mov	r4, r1
    dc00:	4605      	mov	r5, r0
    dc02:	4616      	mov	r6, r2
    SEGGER_SYSVIEW_RecordVoid(34);
    dc04:	2022      	movs	r0, #34	; 0x22
    dc06:	f001 f8c7 	bl	ed98 <SEGGER_SYSVIEW_RecordVoid>

    memcpy(pDst, pSrc, Len);
    dc0a:	4632      	mov	r2, r6
    dc0c:	4629      	mov	r1, r5
    dc0e:	4620      	mov	r0, r4
    dc10:	f7fe fa76 	bl	c100 <memcpy>

    SEGGER_SYSVIEW_RecordEndCall(34);
    dc14:	2022      	movs	r0, #34	; 0x22
}
    dc16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    SEGGER_SYSVIEW_RecordEndCall(34);
    dc1a:	f000 becb 	b.w	e9b4 <SEGGER_SYSVIEW_RecordEndCall>
    dc1e:	bf00      	nop

0000dc20 <am_fast_memcpy_test>:

void am_fast_memcpy_test(uint8_t* pSrc, uint8_t* pDst, uint32_t Len)
{
    dc20:	b570      	push	{r4, r5, r6, lr}
    dc22:	4614      	mov	r4, r2
    dc24:	4606      	mov	r6, r0
    SEGGER_SYSVIEW_RecordVoid(33);
    dc26:	2021      	movs	r0, #33	; 0x21
{
    dc28:	460d      	mov	r5, r1
    SEGGER_SYSVIEW_RecordVoid(33);
    dc2a:	f001 f8b5 	bl	ed98 <SEGGER_SYSVIEW_RecordVoid>

    MEMCOPY(pDst, pSrc, Len);
    dc2e:	2c0f      	cmp	r4, #15
    dc30:	4622      	mov	r2, r4
    dc32:	4631      	mov	r1, r6
    dc34:	4628      	mov	r0, r5
    dc36:	d906      	bls.n	dc46 <am_fast_memcpy_test+0x26>
    dc38:	f7ff fdb6 	bl	d7a8 <sysFastMemCopy>

    SEGGER_SYSVIEW_RecordEndCall(33);
    dc3c:	2021      	movs	r0, #33	; 0x21
}
    dc3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    SEGGER_SYSVIEW_RecordEndCall(33);
    dc42:	f000 beb7 	b.w	e9b4 <SEGGER_SYSVIEW_RecordEndCall>
    MEMCOPY(pDst, pSrc, Len);
    dc46:	f7fe fa5b 	bl	c100 <memcpy>
    SEGGER_SYSVIEW_RecordEndCall(33);
    dc4a:	2021      	movs	r0, #33	; 0x21
}
    dc4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    SEGGER_SYSVIEW_RecordEndCall(33);
    dc50:	f000 beb0 	b.w	e9b4 <SEGGER_SYSVIEW_RecordEndCall>

0000dc54 <am_memcpy_verify>:

bool am_memcpy_verify(uint8_t* pCompBuff1, uint8_t* pCompBuff2, uint32_t compLen)
{
    uint32_t indx = 0;
    for(indx=0; indx<compLen; indx++)
    dc54:	b1ba      	cbz	r2, dc86 <am_memcpy_verify+0x32>
{
    dc56:	b410      	push	{r4}
    {
        if(pCompBuff1[indx] != pCompBuff2[indx])
    dc58:	780b      	ldrb	r3, [r1, #0]
    dc5a:	7804      	ldrb	r4, [r0, #0]
    dc5c:	429c      	cmp	r4, r3
    dc5e:	d10e      	bne.n	dc7e <am_memcpy_verify+0x2a>
    dc60:	4402      	add	r2, r0
    dc62:	3a01      	subs	r2, #1
    dc64:	e005      	b.n	dc72 <am_memcpy_verify+0x1e>
    dc66:	f810 4f01 	ldrb.w	r4, [r0, #1]!
    dc6a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
    dc6e:	429c      	cmp	r4, r3
    dc70:	d105      	bne.n	dc7e <am_memcpy_verify+0x2a>
    for(indx=0; indx<compLen; indx++)
    dc72:	4290      	cmp	r0, r2
    dc74:	d1f7      	bne.n	dc66 <am_memcpy_verify+0x12>
            return false;
    }
    return true;
    dc76:	2001      	movs	r0, #1
}
    dc78:	f85d 4b04 	ldr.w	r4, [sp], #4
    dc7c:	4770      	bx	lr
            return false;
    dc7e:	2000      	movs	r0, #0
}
    dc80:	f85d 4b04 	ldr.w	r4, [sp], #4
    dc84:	4770      	bx	lr
    return true;
    dc86:	2001      	movs	r0, #1
}
    dc88:	4770      	bx	lr
    dc8a:	bf00      	nop

0000dc8c <SEGGER_RTT_ReadNoLock>:
*    BufferSize   Size of the target application buffer.
*
*  Return value
*    Number of bytes that have been read.
*/
unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
    dc8c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SEGGER_RTT_BUFFER_DOWN* pRing;
#if SEGGER_RTT_MEMCPY_USE_BYTELOOP
  const char*             pSrc;
#endif
  //
  INIT();
    dc90:	4c38      	ldr	r4, [pc, #224]	; (dd74 <SEGGER_RTT_ReadNoLock+0xe8>)
    dc92:	7825      	ldrb	r5, [r4, #0]
unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
    dc94:	4681      	mov	r9, r0
    dc96:	460b      	mov	r3, r1
    dc98:	4692      	mov	sl, r2
  INIT();
    dc9a:	2d00      	cmp	r5, #0
    dc9c:	d048      	beq.n	dd30 <SEGGER_RTT_ReadNoLock+0xa4>
  pRing = &_SEGGER_RTT.aDown[BufferIndex];
  pBuffer = (unsigned char*)pData;
  RdOff = pRing->RdOff;
    dc9e:	ea4f 0849 	mov.w	r8, r9, lsl #1
    dca2:	eb08 0709 	add.w	r7, r8, r9
    dca6:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
    dcaa:	6f3e      	ldr	r6, [r7, #112]	; 0x70
  WrOff = pRing->WrOff;
    dcac:	f8d7 b06c 	ldr.w	fp, [r7, #108]	; 0x6c
  NumBytesRead = 0u;
  //
  // Read from current read position to wrap-around of buffer, first
  //
  if (RdOff > WrOff) {
    dcb0:	455e      	cmp	r6, fp
    dcb2:	d81e      	bhi.n	dcf2 <SEGGER_RTT_ReadNoLock+0x66>
    }
  }
  //
  // Read remaining items of buffer
  //
  NumBytesRem = WrOff - RdOff;
    dcb4:	ebab 0506 	sub.w	r5, fp, r6
  NumBytesRem = MIN(NumBytesRem, BufferSize);
    dcb8:	4555      	cmp	r5, sl
    dcba:	bf28      	it	cs
    dcbc:	4655      	movcs	r5, sl
  if (NumBytesRem > 0u) {
    dcbe:	b915      	cbnz	r5, dcc6 <SEGGER_RTT_ReadNoLock+0x3a>
  if (NumBytesRead) {
    pRing->RdOff = RdOff;
  }
  //
  return NumBytesRead;
}
    dcc0:	4628      	mov	r0, r5
    dcc2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  NumBytesRead = 0u;
    dcc6:	2700      	movs	r7, #0
    SEGGER_RTT_MEMCPY(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
    dcc8:	eb08 0209 	add.w	r2, r8, r9
    dccc:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
    dcd0:	4618      	mov	r0, r3
    dcd2:	6e51      	ldr	r1, [r2, #100]	; 0x64
    dcd4:	462a      	mov	r2, r5
    dcd6:	4431      	add	r1, r6
    dcd8:	f7fe fa12 	bl	c100 <memcpy>
    RdOff        += NumBytesRem;
    dcdc:	442e      	add	r6, r5
    NumBytesRead += NumBytesRem;
    dcde:	443d      	add	r5, r7
  if (NumBytesRead) {
    dce0:	2d00      	cmp	r5, #0
    dce2:	d0ed      	beq.n	dcc0 <SEGGER_RTT_ReadNoLock+0x34>
    pRing->RdOff = RdOff;
    dce4:	44c8      	add	r8, r9
    dce6:	eb04 04c8 	add.w	r4, r4, r8, lsl #3
}
    dcea:	4628      	mov	r0, r5
    pRing->RdOff = RdOff;
    dcec:	6726      	str	r6, [r4, #112]	; 0x70
}
    dcee:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    SEGGER_RTT_MEMCPY(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
    dcf2:	e9d7 1519 	ldrd	r1, r5, [r7, #100]	; 0x64
    NumBytesRem = pRing->SizeOfBuffer - RdOff;
    dcf6:	1bad      	subs	r5, r5, r6
    NumBytesRem = MIN(NumBytesRem, BufferSize);
    dcf8:	4555      	cmp	r5, sl
    dcfa:	bf28      	it	cs
    dcfc:	4655      	movcs	r5, sl
    SEGGER_RTT_MEMCPY(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
    dcfe:	462a      	mov	r2, r5
    dd00:	4431      	add	r1, r6
    dd02:	4618      	mov	r0, r3
    dd04:	f7fe f9fc 	bl	c100 <memcpy>
    if (RdOff == pRing->SizeOfBuffer) {
    dd08:	6eba      	ldr	r2, [r7, #104]	; 0x68
    RdOff        += NumBytesRem;
    dd0a:	442e      	add	r6, r5
    if (RdOff == pRing->SizeOfBuffer) {
    dd0c:	42b2      	cmp	r2, r6
    BufferSize   -= NumBytesRem;
    dd0e:	ebaa 0a05 	sub.w	sl, sl, r5
    dd12:	bf14      	ite	ne
    dd14:	ebab 0b06 	subne.w	fp, fp, r6
      RdOff = 0u;
    dd18:	2600      	moveq	r6, #0
  NumBytesRem = MIN(NumBytesRem, BufferSize);
    dd1a:	45d3      	cmp	fp, sl
    dd1c:	bf28      	it	cs
    dd1e:	46d3      	movcs	fp, sl
    SEGGER_RTT_MEMCPY(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
    dd20:	4603      	mov	r3, r0
  if (NumBytesRem > 0u) {
    dd22:	f1bb 0f00 	cmp.w	fp, #0
    dd26:	d0db      	beq.n	dce0 <SEGGER_RTT_ReadNoLock+0x54>
    pBuffer      += NumBytesRem;
    dd28:	442b      	add	r3, r5
    dd2a:	462f      	mov	r7, r5
    dd2c:	465d      	mov	r5, fp
    dd2e:	e7cb      	b.n	dcc8 <SEGGER_RTT_ReadNoLock+0x3c>
  strcpy(&p->acID[7], "RTT");
    dd30:	4911      	ldr	r1, [pc, #68]	; (dd78 <SEGGER_RTT_ReadNoLock+0xec>)
  strcpy(&p->acID[0], "SEGGER");
    dd32:	4a12      	ldr	r2, [pc, #72]	; (dd7c <SEGGER_RTT_ReadNoLock+0xf0>)
  strcpy(&p->acID[7], "RTT");
    dd34:	6808      	ldr	r0, [r1, #0]
    dd36:	f8c4 0007 	str.w	r0, [r4, #7]
  strcpy(&p->acID[0], "SEGGER");
    dd3a:	e892 0003 	ldmia.w	r2, {r0, r1}
  p->aUp[0].RdOff         = 0u;
    dd3e:	62a5      	str	r5, [r4, #40]	; 0x28
  p->aUp[0].sName         = "Terminal";
    dd40:	4a0f      	ldr	r2, [pc, #60]	; (dd80 <SEGGER_RTT_ReadNoLock+0xf4>)
  p->aUp[0].WrOff         = 0u;
    dd42:	6265      	str	r5, [r4, #36]	; 0x24
  p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
    dd44:	62e5      	str	r5, [r4, #44]	; 0x2c
  p->aDown[0].RdOff         = 0u;
    dd46:	6725      	str	r5, [r4, #112]	; 0x70
  p->aDown[0].WrOff         = 0u;
    dd48:	66e5      	str	r5, [r4, #108]	; 0x6c
  p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
    dd4a:	6765      	str	r5, [r4, #116]	; 0x74
  strcpy(&p->acID[0], "SEGGER");
    dd4c:	6020      	str	r0, [r4, #0]
  p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
    dd4e:	2503      	movs	r5, #3
  strcpy(&p->acID[0], "SEGGER");
    dd50:	80a1      	strh	r1, [r4, #4]
  p->aDown[0].pBuffer       = _acDownBuffer;
    dd52:	480c      	ldr	r0, [pc, #48]	; (dd84 <SEGGER_RTT_ReadNoLock+0xf8>)
  p->aUp[0].pBuffer       = _acUpBuffer;
    dd54:	490c      	ldr	r1, [pc, #48]	; (dd88 <SEGGER_RTT_ReadNoLock+0xfc>)
  p->aUp[0].sName         = "Terminal";
    dd56:	61a2      	str	r2, [r4, #24]
  p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
    dd58:	e9c4 5504 	strd	r5, r5, [r4, #16]
  p->aDown[0].sName         = "Terminal";
    dd5c:	6622      	str	r2, [r4, #96]	; 0x60
  p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
    dd5e:	f44f 6580 	mov.w	r5, #1024	; 0x400
  p->aUp[0].pBuffer       = _acUpBuffer;
    dd62:	61e1      	str	r1, [r4, #28]
  p->acID[6] = ' ';
    dd64:	2220      	movs	r2, #32
  p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
    dd66:	2110      	movs	r1, #16
  p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
    dd68:	6225      	str	r5, [r4, #32]
  p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
    dd6a:	e9c4 0119 	strd	r0, r1, [r4, #100]	; 0x64
  p->acID[6] = ' ';
    dd6e:	71a2      	strb	r2, [r4, #6]
    dd70:	e795      	b.n	dc9e <SEGGER_RTT_ReadNoLock+0x12>
    dd72:	bf00      	nop
    dd74:	100396d0 	.word	0x100396d0
    dd78:	00023b8c 	.word	0x00023b8c
    dd7c:	00023b90 	.word	0x00023b90
    dd80:	00023b80 	.word	0x00023b80
    dd84:	10001160 	.word	0x10001160
    dd88:	10001170 	.word	0x10001170

0000dd8c <SEGGER_RTT_WriteSkipNoLock>:
*    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
*    (2) For performance reasons this function does not call Init()
*        and may only be called after RTT has been initialized.
*        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
*/
unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
    dd8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  pData = (const char *)pBuffer;
  //
  // Get "to-host" ring buffer and copy some elements into local variables.
  //
  pRing = &_SEGGER_RTT.aUp[BufferIndex];
  RdOff = pRing->RdOff;
    dd90:	f8df 9090 	ldr.w	r9, [pc, #144]	; de24 <SEGGER_RTT_WriteSkipNoLock+0x98>
    dd94:	eb00 0440 	add.w	r4, r0, r0, lsl #1
    dd98:	eb09 04c4 	add.w	r4, r9, r4, lsl #3
unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
    dd9c:	4616      	mov	r6, r2
  RdOff = pRing->RdOff;
    dd9e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  WrOff = pRing->WrOff;
    dda0:	6a65      	ldr	r5, [r4, #36]	; 0x24
  //
  //    RdOff > WrOff -> Space until RdOff - 1 is free.
  //  AND
  //    WrOff + NumBytes < RdOff -> Data fits into buffer
  //
  if (RdOff <= WrOff) {
    dda2:	42ab      	cmp	r3, r5
    dda4:	d821      	bhi.n	ddea <SEGGER_RTT_WriteSkipNoLock+0x5e>
    //
    // Get space until WrOff will be at wrap around.
    //
    Avail = pRing->SizeOfBuffer - 1u - WrOff ;
    dda6:	6a27      	ldr	r7, [r4, #32]
    dda8:	1b7f      	subs	r7, r7, r5
    ddaa:	f107 3eff 	add.w	lr, r7, #4294967295	; 0xffffffff
    if (Avail >= NumBytes) {
    ddae:	4572      	cmp	r2, lr
    ddb0:	d930      	bls.n	de14 <SEGGER_RTT_WriteSkipNoLock+0x88>
      return 1;
    }
    //
    // If data did not fit into space until wrap around calculate complete space in buffer.
    //
    Avail += RdOff;
    ddb2:	4473      	add	r3, lr
    //
    // If there is still no space for the whole of this output, don't bother.
    //
    if (Avail >= NumBytes) {
    ddb4:	429a      	cmp	r2, r3
    ddb6:	d81c      	bhi.n	ddf2 <SEGGER_RTT_WriteSkipNoLock+0x66>
    ddb8:	3001      	adds	r0, #1
    ddba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
    ddbe:	eb09 09c0 	add.w	r9, r9, r0, lsl #3
      //
      //  OK, we have enough space in buffer. Copy in one or 2 chunks
      //
      Rem = pRing->SizeOfBuffer - WrOff;      // Space until end of buffer
      if (Rem > NumBytes) {
    ddc2:	4297      	cmp	r7, r2
    ddc4:	f8d9 0004 	ldr.w	r0, [r9, #4]
    ddc8:	4428      	add	r0, r5
    ddca:	d81c      	bhi.n	de06 <SEGGER_RTT_WriteSkipNoLock+0x7a>
          *pDst++ = *pData++;
        };
        pRing->WrOff = WrOff;
#else
        SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, Rem);
        SEGGER_RTT_MEMCPY(pRing->pBuffer, pData + Rem, NumBytes - Rem);
    ddcc:	1bd6      	subs	r6, r2, r7
    ddce:	4688      	mov	r8, r1
        SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, Rem);
    ddd0:	463a      	mov	r2, r7
    ddd2:	f7fe f995 	bl	c100 <memcpy>
        SEGGER_RTT_MEMCPY(pRing->pBuffer, pData + Rem, NumBytes - Rem);
    ddd6:	eb08 0107 	add.w	r1, r8, r7
    ddda:	f8d9 0004 	ldr.w	r0, [r9, #4]
    ddde:	4632      	mov	r2, r6
    dde0:	f7fe f98e 	bl	c100 <memcpy>
        pRing->WrOff = NumBytes - Rem;
    dde4:	6266      	str	r6, [r4, #36]	; 0x24
#endif
      }
      return 1;
    dde6:	2001      	movs	r0, #1
    dde8:	e004      	b.n	ddf4 <SEGGER_RTT_WriteSkipNoLock+0x68>
    }
  } else {
    Avail = RdOff - WrOff - 1u;
    ddea:	3b01      	subs	r3, #1
    ddec:	1b5b      	subs	r3, r3, r5
    if (Avail >= NumBytes) {
    ddee:	4293      	cmp	r3, r2
    ddf0:	d202      	bcs.n	ddf8 <SEGGER_RTT_WriteSkipNoLock+0x6c>
    }
  }
  //
  // If we reach this point no data has been written
  //
  return 0;
    ddf2:	2000      	movs	r0, #0
}
    ddf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
    ddf8:	3001      	adds	r0, #1
    ddfa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
    ddfe:	eb09 00c0 	add.w	r0, r9, r0, lsl #3
    de02:	6840      	ldr	r0, [r0, #4]
    de04:	4428      	add	r0, r5
      pRing->WrOff = WrOff + NumBytes;
    de06:	4435      	add	r5, r6
      SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
    de08:	f7fe f97a 	bl	c100 <memcpy>
      pRing->WrOff = WrOff + NumBytes;
    de0c:	6265      	str	r5, [r4, #36]	; 0x24
      return 1;
    de0e:	2001      	movs	r0, #1
}
    de10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
    de14:	3001      	adds	r0, #1
    de16:	eb00 0040 	add.w	r0, r0, r0, lsl #1
    de1a:	eb09 0cc0 	add.w	ip, r9, r0, lsl #3
    de1e:	f8dc 0004 	ldr.w	r0, [ip, #4]
    de22:	e7ef      	b.n	de04 <SEGGER_RTT_WriteSkipNoLock+0x78>
    de24:	100396d0 	.word	0x100396d0

0000de28 <SEGGER_RTT_ConfigUpBuffer>:
*  Additional information
*    Buffer 0 is configured on compile-time.
*    May only be called once per buffer.
*    Buffer name and flags can be reconfigured using the appropriate functions.
*/
int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags) {
    de28:	b4f0      	push	{r4, r5, r6, r7}
  int r;

  INIT();
    de2a:	4c2a      	ldr	r4, [pc, #168]	; (ded4 <SEGGER_RTT_ConfigUpBuffer+0xac>)
    de2c:	7826      	ldrb	r6, [r4, #0]
int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags) {
    de2e:	4605      	mov	r5, r0
    de30:	460f      	mov	r7, r1
  INIT();
    de32:	b346      	cbz	r6, de86 <SEGGER_RTT_ConfigUpBuffer+0x5e>
    de34:	6921      	ldr	r1, [r4, #16]
  if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
    de36:	428d      	cmp	r5, r1
    de38:	d248      	bcs.n	decc <SEGGER_RTT_ConfigUpBuffer+0xa4>
    SEGGER_RTT_LOCK();
    de3a:	f3ef 8611 	mrs	r6, BASEPRI
    de3e:	f04f 0120 	mov.w	r1, #32
    de42:	f381 8811 	msr	BASEPRI, r1
    if (BufferIndex > 0u) {
    de46:	b955      	cbnz	r5, de5e <SEGGER_RTT_ConfigUpBuffer+0x36>
    de48:	4628      	mov	r0, r5
      _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
      _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
      _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
      _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
    }
    _SEGGER_RTT.aUp[BufferIndex].Flags          = Flags;
    de4a:	4405      	add	r5, r0
    de4c:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
    de50:	9b04      	ldr	r3, [sp, #16]
    de52:	62e3      	str	r3, [r4, #44]	; 0x2c
    SEGGER_RTT_UNLOCK();
    de54:	f386 8811 	msr	BASEPRI, r6
    r =  0;
    de58:	2000      	movs	r0, #0
  } else {
    r = -1;
  }
  return r;
}
    de5a:	bcf0      	pop	{r4, r5, r6, r7}
    de5c:	4770      	bx	lr
      _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
    de5e:	1c69      	adds	r1, r5, #1
    de60:	eb01 0141 	add.w	r1, r1, r1, lsl #1
      _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
    de64:	0068      	lsls	r0, r5, #1
      _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
    de66:	00c9      	lsls	r1, r1, #3
      _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
    de68:	eb00 0c05 	add.w	ip, r0, r5
    de6c:	eb04 0ccc 	add.w	ip, r4, ip, lsl #3
      _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
    de70:	5067      	str	r7, [r4, r1]
      _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
    de72:	4421      	add	r1, r4
      _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
    de74:	f8cc 3020 	str.w	r3, [ip, #32]
      _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
    de78:	2300      	movs	r3, #0
      _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
    de7a:	604a      	str	r2, [r1, #4]
      _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
    de7c:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
      _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
    de80:	f8cc 3024 	str.w	r3, [ip, #36]	; 0x24
    de84:	e7e1      	b.n	de4a <SEGGER_RTT_ConfigUpBuffer+0x22>
  strcpy(&p->acID[7], "RTT");
    de86:	4814      	ldr	r0, [pc, #80]	; (ded8 <SEGGER_RTT_ConfigUpBuffer+0xb0>)
  strcpy(&p->acID[0], "SEGGER");
    de88:	4914      	ldr	r1, [pc, #80]	; (dedc <SEGGER_RTT_ConfigUpBuffer+0xb4>)
  strcpy(&p->acID[7], "RTT");
    de8a:	6800      	ldr	r0, [r0, #0]
    de8c:	f8c4 0007 	str.w	r0, [r4, #7]
  strcpy(&p->acID[0], "SEGGER");
    de90:	c903      	ldmia	r1, {r0, r1}
  p->aUp[0].RdOff         = 0u;
    de92:	62a6      	str	r6, [r4, #40]	; 0x28
  p->aUp[0].WrOff         = 0u;
    de94:	6266      	str	r6, [r4, #36]	; 0x24
  p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
    de96:	62e6      	str	r6, [r4, #44]	; 0x2c
  p->aDown[0].RdOff         = 0u;
    de98:	6726      	str	r6, [r4, #112]	; 0x70
  p->aDown[0].WrOff         = 0u;
    de9a:	66e6      	str	r6, [r4, #108]	; 0x6c
  p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
    de9c:	6766      	str	r6, [r4, #116]	; 0x74
  strcpy(&p->acID[0], "SEGGER");
    de9e:	6020      	str	r0, [r4, #0]
  p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
    dea0:	2603      	movs	r6, #3
  p->aUp[0].sName         = "Terminal";
    dea2:	480f      	ldr	r0, [pc, #60]	; (dee0 <SEGGER_RTT_ConfigUpBuffer+0xb8>)
  strcpy(&p->acID[0], "SEGGER");
    dea4:	80a1      	strh	r1, [r4, #4]
  p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
    dea6:	e9c4 6604 	strd	r6, r6, [r4, #16]
  p->acID[6] = ' ';
    deaa:	4631      	mov	r1, r6
  p->aUp[0].sName         = "Terminal";
    deac:	61a0      	str	r0, [r4, #24]
  p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
    deae:	f44f 6680 	mov.w	r6, #1024	; 0x400
  p->aDown[0].sName         = "Terminal";
    deb2:	6620      	str	r0, [r4, #96]	; 0x60
  p->aDown[0].pBuffer       = _acDownBuffer;
    deb4:	480b      	ldr	r0, [pc, #44]	; (dee4 <SEGGER_RTT_ConfigUpBuffer+0xbc>)
  p->aUp[0].pBuffer       = _acUpBuffer;
    deb6:	f8df c030 	ldr.w	ip, [pc, #48]	; dee8 <SEGGER_RTT_ConfigUpBuffer+0xc0>
  p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
    deba:	6226      	str	r6, [r4, #32]
  p->aDown[0].pBuffer       = _acDownBuffer;
    debc:	6660      	str	r0, [r4, #100]	; 0x64
  p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
    debe:	2610      	movs	r6, #16
  p->acID[6] = ' ';
    dec0:	2020      	movs	r0, #32
  p->aUp[0].pBuffer       = _acUpBuffer;
    dec2:	f8c4 c01c 	str.w	ip, [r4, #28]
  p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
    dec6:	66a6      	str	r6, [r4, #104]	; 0x68
  p->acID[6] = ' ';
    dec8:	71a0      	strb	r0, [r4, #6]
    deca:	e7b4      	b.n	de36 <SEGGER_RTT_ConfigUpBuffer+0xe>
    r = -1;
    decc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  return r;
    ded0:	e7c3      	b.n	de5a <SEGGER_RTT_ConfigUpBuffer+0x32>
    ded2:	bf00      	nop
    ded4:	100396d0 	.word	0x100396d0
    ded8:	00023b8c 	.word	0x00023b8c
    dedc:	00023b90 	.word	0x00023b90
    dee0:	00023b80 	.word	0x00023b80
    dee4:	10001160 	.word	0x10001160
    dee8:	10001170 	.word	0x10001170

0000deec <SEGGER_RTT_ConfigDownBuffer>:
*  Additional information
*    Buffer 0 is configured on compile-time.
*    May only be called once per buffer.
*    Buffer name and flags can be reconfigured using the appropriate functions.
*/
int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags) {
    deec:	b4f0      	push	{r4, r5, r6, r7}
  int r;

  INIT();
    deee:	4c27      	ldr	r4, [pc, #156]	; (df8c <SEGGER_RTT_ConfigDownBuffer+0xa0>)
    def0:	7826      	ldrb	r6, [r4, #0]
int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags) {
    def2:	4605      	mov	r5, r0
    def4:	460f      	mov	r7, r1
  INIT();
    def6:	b316      	cbz	r6, df3e <SEGGER_RTT_ConfigDownBuffer+0x52>
    def8:	6961      	ldr	r1, [r4, #20]
  if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
    defa:	428d      	cmp	r5, r1
    defc:	d242      	bcs.n	df84 <SEGGER_RTT_ConfigDownBuffer+0x98>
    SEGGER_RTT_LOCK();
    defe:	f3ef 8611 	mrs	r6, BASEPRI
    df02:	f04f 0120 	mov.w	r1, #32
    df06:	f381 8811 	msr	BASEPRI, r1
    if (BufferIndex > 0u) {
    df0a:	b955      	cbnz	r5, df22 <SEGGER_RTT_ConfigDownBuffer+0x36>
    df0c:	4629      	mov	r1, r5
      _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
      _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
      _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
      _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
    }
    _SEGGER_RTT.aDown[BufferIndex].Flags          = Flags;
    df0e:	440d      	add	r5, r1
    df10:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
    df14:	9b04      	ldr	r3, [sp, #16]
    df16:	6763      	str	r3, [r4, #116]	; 0x74
    SEGGER_RTT_UNLOCK();
    df18:	f386 8811 	msr	BASEPRI, r6
    r =  0;
    df1c:	2000      	movs	r0, #0
  } else {
    r = -1;
  }
  return r;
}
    df1e:	bcf0      	pop	{r4, r5, r6, r7}
    df20:	4770      	bx	lr
      _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
    df22:	0069      	lsls	r1, r5, #1
    df24:	1948      	adds	r0, r1, r5
    df26:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
      _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
    df2a:	f04f 0c00 	mov.w	ip, #0
      _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
    df2e:	e9c0 7218 	strd	r7, r2, [r0, #96]	; 0x60
      _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
    df32:	6683      	str	r3, [r0, #104]	; 0x68
      _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
    df34:	f8c0 c070 	str.w	ip, [r0, #112]	; 0x70
      _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
    df38:	f8c0 c06c 	str.w	ip, [r0, #108]	; 0x6c
    df3c:	e7e7      	b.n	df0e <SEGGER_RTT_ConfigDownBuffer+0x22>
  strcpy(&p->acID[7], "RTT");
    df3e:	4814      	ldr	r0, [pc, #80]	; (df90 <SEGGER_RTT_ConfigDownBuffer+0xa4>)
  strcpy(&p->acID[0], "SEGGER");
    df40:	4914      	ldr	r1, [pc, #80]	; (df94 <SEGGER_RTT_ConfigDownBuffer+0xa8>)
  strcpy(&p->acID[7], "RTT");
    df42:	6800      	ldr	r0, [r0, #0]
    df44:	f8c4 0007 	str.w	r0, [r4, #7]
  strcpy(&p->acID[0], "SEGGER");
    df48:	c903      	ldmia	r1, {r0, r1}
  p->aUp[0].RdOff         = 0u;
    df4a:	62a6      	str	r6, [r4, #40]	; 0x28
  p->aUp[0].WrOff         = 0u;
    df4c:	6266      	str	r6, [r4, #36]	; 0x24
  p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
    df4e:	62e6      	str	r6, [r4, #44]	; 0x2c
  p->aDown[0].RdOff         = 0u;
    df50:	6726      	str	r6, [r4, #112]	; 0x70
  p->aDown[0].WrOff         = 0u;
    df52:	66e6      	str	r6, [r4, #108]	; 0x6c
  p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
    df54:	6766      	str	r6, [r4, #116]	; 0x74
  strcpy(&p->acID[0], "SEGGER");
    df56:	6020      	str	r0, [r4, #0]
  p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
    df58:	2603      	movs	r6, #3
  p->aUp[0].sName         = "Terminal";
    df5a:	480f      	ldr	r0, [pc, #60]	; (df98 <SEGGER_RTT_ConfigDownBuffer+0xac>)
  strcpy(&p->acID[0], "SEGGER");
    df5c:	80a1      	strh	r1, [r4, #4]
  p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
    df5e:	e9c4 6604 	strd	r6, r6, [r4, #16]
  p->acID[6] = ' ';
    df62:	4631      	mov	r1, r6
  p->aUp[0].sName         = "Terminal";
    df64:	61a0      	str	r0, [r4, #24]
  p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
    df66:	f44f 6680 	mov.w	r6, #1024	; 0x400
  p->aDown[0].sName         = "Terminal";
    df6a:	6620      	str	r0, [r4, #96]	; 0x60
  p->aDown[0].pBuffer       = _acDownBuffer;
    df6c:	480b      	ldr	r0, [pc, #44]	; (df9c <SEGGER_RTT_ConfigDownBuffer+0xb0>)
  p->aUp[0].pBuffer       = _acUpBuffer;
    df6e:	f8df c030 	ldr.w	ip, [pc, #48]	; dfa0 <SEGGER_RTT_ConfigDownBuffer+0xb4>
  p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
    df72:	6226      	str	r6, [r4, #32]
  p->aDown[0].pBuffer       = _acDownBuffer;
    df74:	6660      	str	r0, [r4, #100]	; 0x64
  p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
    df76:	2610      	movs	r6, #16
  p->acID[6] = ' ';
    df78:	2020      	movs	r0, #32
  p->aUp[0].pBuffer       = _acUpBuffer;
    df7a:	f8c4 c01c 	str.w	ip, [r4, #28]
  p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
    df7e:	66a6      	str	r6, [r4, #104]	; 0x68
  p->acID[6] = ' ';
    df80:	71a0      	strb	r0, [r4, #6]
    df82:	e7ba      	b.n	defa <SEGGER_RTT_ConfigDownBuffer+0xe>
    r = -1;
    df84:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  return r;
    df88:	e7c9      	b.n	df1e <SEGGER_RTT_ConfigDownBuffer+0x32>
    df8a:	bf00      	nop
    df8c:	100396d0 	.word	0x100396d0
    df90:	00023b8c 	.word	0x00023b8c
    df94:	00023b90 	.word	0x00023b90
    df98:	00023b80 	.word	0x00023b80
    df9c:	10001160 	.word	0x10001160
    dfa0:	10001170 	.word	0x10001170

0000dfa4 <SEGGER_SYSVIEW_Init>:
*    to identify the SystemView channel.
*
*  Notes
*    The channel is configured by the macro SEGGER_SYSVIEW_RTT_CHANNEL.
*/
void SEGGER_SYSVIEW_Init(U32 SysFreq, U32 CPUFreq, const SEGGER_SYSVIEW_OS_API *pOSAPI, SEGGER_SYSVIEW_SEND_SYS_DESC_FUNC pfSendSysDesc) {
    dfa4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  _SYSVIEW_Globals.pfSendSysDesc    = pfSendSysDesc;
  _SYSVIEW_Globals.EnableState      = 0;
  _SYSVIEW_Globals.PacketCount      = 0;
#else // (SEGGER_SYSVIEW_POST_MORTEM_MODE == 1)
#if SEGGER_SYSVIEW_RTT_CHANNEL > 0
  SEGGER_RTT_ConfigUpBuffer   (SEGGER_SYSVIEW_RTT_CHANNEL, "SysView", &_UpBuffer[0],   sizeof(_UpBuffer),   SEGGER_RTT_MODE_NO_BLOCK_SKIP);
    dfa8:	4d12      	ldr	r5, [pc, #72]	; (dff4 <SEGGER_SYSVIEW_Init+0x50>)
void SEGGER_SYSVIEW_Init(U32 SysFreq, U32 CPUFreq, const SEGGER_SYSVIEW_OS_API *pOSAPI, SEGGER_SYSVIEW_SEND_SYS_DESC_FUNC pfSendSysDesc) {
    dfaa:	b083      	sub	sp, #12
  SEGGER_RTT_ConfigUpBuffer   (SEGGER_SYSVIEW_RTT_CHANNEL, "SysView", &_UpBuffer[0],   sizeof(_UpBuffer),   SEGGER_RTT_MODE_NO_BLOCK_SKIP);
    dfac:	2400      	movs	r4, #0
void SEGGER_SYSVIEW_Init(U32 SysFreq, U32 CPUFreq, const SEGGER_SYSVIEW_OS_API *pOSAPI, SEGGER_SYSVIEW_SEND_SYS_DESC_FUNC pfSendSysDesc) {
    dfae:	4680      	mov	r8, r0
    dfb0:	460f      	mov	r7, r1
    dfb2:	4691      	mov	r9, r2
    dfb4:	461e      	mov	r6, r3
  SEGGER_RTT_ConfigUpBuffer   (SEGGER_SYSVIEW_RTT_CHANNEL, "SysView", &_UpBuffer[0],   sizeof(_UpBuffer),   SEGGER_RTT_MODE_NO_BLOCK_SKIP);
    dfb6:	4629      	mov	r1, r5
    dfb8:	9400      	str	r4, [sp, #0]
    dfba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    dfbe:	4a0e      	ldr	r2, [pc, #56]	; (dff8 <SEGGER_SYSVIEW_Init+0x54>)
    dfc0:	2001      	movs	r0, #1
    dfc2:	f7ff ff31 	bl	de28 <SEGGER_RTT_ConfigUpBuffer>
  SEGGER_RTT_ConfigDownBuffer (SEGGER_SYSVIEW_RTT_CHANNEL, "SysView", &_DownBuffer[0], sizeof(_DownBuffer), SEGGER_RTT_MODE_NO_BLOCK_SKIP);
    dfc6:	4629      	mov	r1, r5
    dfc8:	9400      	str	r4, [sp, #0]
    dfca:	2308      	movs	r3, #8
    dfcc:	4a0b      	ldr	r2, [pc, #44]	; (dffc <SEGGER_SYSVIEW_Init+0x58>)
    dfce:	2001      	movs	r0, #1
    dfd0:	f7ff ff8c 	bl	deec <SEGGER_RTT_ConfigDownBuffer>
  //
  _SYSVIEW_Globals.DownChannel = _SYSVIEW_Globals.UpChannel;
  SEGGER_RTT_ConfigDownBuffer (_SYSVIEW_Globals.DownChannel, "SysView", &_DownBuffer[0], sizeof(_DownBuffer), SEGGER_RTT_MODE_NO_BLOCK_SKIP);
#endif
  _SYSVIEW_Globals.RAMBaseAddress   = SEGGER_SYSVIEW_ID_BASE;
  _SYSVIEW_Globals.LastTxTimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    dfd4:	4a0a      	ldr	r2, [pc, #40]	; (e000 <SEGGER_SYSVIEW_Init+0x5c>)
  _SYSVIEW_Globals.RAMBaseAddress   = SEGGER_SYSVIEW_ID_BASE;
    dfd6:	4b0b      	ldr	r3, [pc, #44]	; (e004 <SEGGER_SYSVIEW_Init+0x60>)
  _SYSVIEW_Globals.LastTxTimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    dfd8:	6812      	ldr	r2, [r2, #0]
  _SYSVIEW_Globals.pOSAPI           = pOSAPI;
    dfda:	f8c3 9020 	str.w	r9, [r3, #32]
  _SYSVIEW_Globals.RAMBaseAddress   = SEGGER_SYSVIEW_ID_BASE;
    dfde:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  _SYSVIEW_Globals.SysFreq          = SysFreq;
  _SYSVIEW_Globals.CPUFreq          = CPUFreq;
    dfe2:	e9c3 8701 	strd	r8, r7, [r3, #4]
  _SYSVIEW_Globals.pfSendSysDesc    = pfSendSysDesc;
    dfe6:	625e      	str	r6, [r3, #36]	; 0x24
  _SYSVIEW_Globals.LastTxTimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    dfe8:	e9c3 2103 	strd	r2, r1, [r3, #12]
  _SYSVIEW_Globals.EnableState      = 0;
    dfec:	701c      	strb	r4, [r3, #0]
#endif  // (SEGGER_SYSVIEW_POST_MORTEM_MODE == 1)
}
    dfee:	b003      	add	sp, #12
    dff0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    dff4:	00023b98 	.word	0x00023b98
    dff8:	100015a4 	.word	0x100015a4
    dffc:	10001570 	.word	0x10001570
    e000:	e0001004 	.word	0xe0001004
    e004:	1000157c 	.word	0x1000157c

0000e008 <SEGGER_SYSVIEW_SetRAMBase>:
*
*  Parameters
*    RAMBaseAddress - Lowest RAM Address. (i.e. 0x20000000 on most Cortex-M)
*/
void SEGGER_SYSVIEW_SetRAMBase(U32 RAMBaseAddress) {
  _SYSVIEW_Globals.RAMBaseAddress = RAMBaseAddress;
    e008:	4b01      	ldr	r3, [pc, #4]	; (e010 <SEGGER_SYSVIEW_SetRAMBase+0x8>)
    e00a:	6118      	str	r0, [r3, #16]
}
    e00c:	4770      	bx	lr
    e00e:	bf00      	nop
    e010:	1000157c 	.word	0x1000157c

0000e014 <SEGGER_SYSVIEW_SendModule>:
*/
void SEGGER_SYSVIEW_SendModule(U8 ModuleId) {
  SEGGER_SYSVIEW_MODULE* pModule;
  U32 n;

  if (_pFirstModule != 0) {
    e014:	4b64      	ldr	r3, [pc, #400]	; (e1a8 <SEGGER_SYSVIEW_SendModule+0x194>)
    e016:	681b      	ldr	r3, [r3, #0]
    e018:	2b00      	cmp	r3, #0
    e01a:	f000 80ac 	beq.w	e176 <SEGGER_SYSVIEW_SendModule+0x162>
void SEGGER_SYSVIEW_SendModule(U8 ModuleId) {
    e01e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    pModule = _pFirstModule;
    for (n = 0; n < ModuleId; n++) {
    e022:	2800      	cmp	r0, #0
    e024:	f000 80b6 	beq.w	e194 <SEGGER_SYSVIEW_SendModule+0x180>
      pModule = pModule->pNext;
    e028:	691b      	ldr	r3, [r3, #16]
      if (pModule == 0) {
    e02a:	2b00      	cmp	r3, #0
    e02c:	f000 80a1 	beq.w	e172 <SEGGER_SYSVIEW_SendModule+0x15e>
    for (n = 0; n < ModuleId; n++) {
    e030:	2200      	movs	r2, #0
    e032:	e003      	b.n	e03c <SEGGER_SYSVIEW_SendModule+0x28>
      pModule = pModule->pNext;
    e034:	691b      	ldr	r3, [r3, #16]
      if (pModule == 0) {
    e036:	2b00      	cmp	r3, #0
    e038:	f000 809b 	beq.w	e172 <SEGGER_SYSVIEW_SendModule+0x15e>
    for (n = 0; n < ModuleId; n++) {
    e03c:	3201      	adds	r2, #1
    e03e:	4282      	cmp	r2, r0
    e040:	d1f8      	bne.n	e034 <SEGGER_SYSVIEW_SendModule+0x20>
    e042:	b2d0      	uxtb	r0, r2
      }
    }
    if (pModule != 0) {
      U8* pPayload;
      U8* pPayloadStart;
      RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 2 * SEGGER_SYSVIEW_QUANTA_U32 + 1 + SEGGER_SYSVIEW_MAX_STRING_LEN);
    e044:	f3ef 8411 	mrs	r4, BASEPRI
    e048:	f04f 0120 	mov.w	r1, #32
    e04c:	f381 8811 	msr	BASEPRI, r1
      pPayload = pPayloadStart;
      //
      // Send module description
      // Send event offset and number of events
      //
      ENCODE_U32(pPayload, ModuleId);
    e050:	2a7f      	cmp	r2, #127	; 0x7f
    e052:	f240 80a7 	bls.w	e1a4 <SEGGER_SYSVIEW_SendModule+0x190>
    e056:	4955      	ldr	r1, [pc, #340]	; (e1ac <SEGGER_SYSVIEW_SendModule+0x198>)
    e058:	7108      	strb	r0, [r1, #4]
    e05a:	3105      	adds	r1, #5
    e05c:	2001      	movs	r0, #1
    e05e:	7008      	strb	r0, [r1, #0]
      ENCODE_U32(pPayload, (pModule->EventOffset));
    e060:	689a      	ldr	r2, [r3, #8]
    e062:	2a7f      	cmp	r2, #127	; 0x7f
      ENCODE_U32(pPayload, ModuleId);
    e064:	f101 0101 	add.w	r1, r1, #1
      ENCODE_U32(pPayload, (pModule->EventOffset));
    e068:	d906      	bls.n	e078 <SEGGER_SYSVIEW_SendModule+0x64>
    e06a:	f062 007f 	orn	r0, r2, #127	; 0x7f
    e06e:	09d2      	lsrs	r2, r2, #7
    e070:	2a7f      	cmp	r2, #127	; 0x7f
    e072:	f801 0b01 	strb.w	r0, [r1], #1
    e076:	d8f8      	bhi.n	e06a <SEGGER_SYSVIEW_SendModule+0x56>
    e078:	460d      	mov	r5, r1
    e07a:	f805 2b02 	strb.w	r2, [r5], #2
      pPayload = _EncodeStr(pPayload, pModule->sModule, SEGGER_SYSVIEW_MAX_STRING_LEN);
    e07e:	f8d3 c000 	ldr.w	ip, [r3]
  while(*(pText + Len) != 0) {
    e082:	f89c 3000 	ldrb.w	r3, [ip]
    e086:	2b00      	cmp	r3, #0
    e088:	f000 8081 	beq.w	e18e <SEGGER_SYSVIEW_SendModule+0x17a>
    e08c:	4660      	mov	r0, ip
  Len = 0;
    e08e:	2200      	movs	r2, #0
  while(*(pText + Len) != 0) {
    e090:	f810 3f01 	ldrb.w	r3, [r0, #1]!
    Len++;
    e094:	3201      	adds	r2, #1
  while(*(pText + Len) != 0) {
    e096:	2b00      	cmp	r3, #0
    e098:	d1fa      	bne.n	e090 <SEGGER_SYSVIEW_SendModule+0x7c>
    e09a:	f10c 0608 	add.w	r6, ip, #8
    e09e:	f101 000a 	add.w	r0, r1, #10
    e0a2:	4584      	cmp	ip, r0
    e0a4:	bf38      	it	cc
    e0a6:	42b5      	cmpcc	r5, r6
    e0a8:	bf2c      	ite	cs
    e0aa:	2601      	movcs	r6, #1
    e0ac:	2600      	movcc	r6, #0
    e0ae:	ea45 070c 	orr.w	r7, r5, ip
    e0b2:	2a80      	cmp	r2, #128	; 0x80
    e0b4:	4610      	mov	r0, r2
    e0b6:	bf28      	it	cs
    e0b8:	2080      	movcs	r0, #128	; 0x80
    e0ba:	f017 0f07 	tst.w	r7, #7
    e0be:	bf18      	it	ne
    e0c0:	2600      	movne	r6, #0
    *pPayload++ = Len; 
    e0c2:	7048      	strb	r0, [r1, #1]
    e0c4:	2e00      	cmp	r6, #0
    e0c6:	d057      	beq.n	e178 <SEGGER_SYSVIEW_SendModule+0x164>
    e0c8:	2a0c      	cmp	r2, #12
    e0ca:	d955      	bls.n	e178 <SEGGER_SYSVIEW_SendModule+0x164>
    e0cc:	2a00      	cmp	r2, #0
    e0ce:	bf14      	ite	ne
    e0d0:	4680      	movne	r8, r0
    e0d2:	f04f 0801 	moveq.w	r8, #1
    e0d6:	ea4f 0ad8 	mov.w	sl, r8, lsr #3
    e0da:	1c6a      	adds	r2, r5, #1
    e0dc:	f1ac 0908 	sub.w	r9, ip, #8
    e0e0:	46ae      	mov	lr, r5
    *pPayload++ = *pText++;
    e0e2:	e9f9 6702 	ldrd	r6, r7, [r9, #8]!
    e0e6:	3301      	adds	r3, #1
    e0e8:	4611      	mov	r1, r2
    e0ea:	459a      	cmp	sl, r3
    e0ec:	e8ee 6702 	strd	r6, r7, [lr], #8
    e0f0:	f101 0107 	add.w	r1, r1, #7
    e0f4:	f102 0208 	add.w	r2, r2, #8
    e0f8:	d8f3      	bhi.n	e0e2 <SEGGER_SYSVIEW_SendModule+0xce>
    e0fa:	f028 0307 	bic.w	r3, r8, #7
    e0fe:	4598      	cmp	r8, r3
    e100:	eb0c 0603 	add.w	r6, ip, r3
    e104:	eb05 0203 	add.w	r2, r5, r3
    e108:	d02d      	beq.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
    e10a:	f81c 1003 	ldrb.w	r1, [ip, r3]
    e10e:	54e9      	strb	r1, [r5, r3]
    n++;
    e110:	1c5d      	adds	r5, r3, #1
  while (n < Len) {
    e112:	4285      	cmp	r5, r0
    *pPayload++ = *pText++;
    e114:	f102 0101 	add.w	r1, r2, #1
  while (n < Len) {
    e118:	d225      	bcs.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
    n++;
    e11a:	1c9d      	adds	r5, r3, #2
    *pPayload++ = *pText++;
    e11c:	7871      	ldrb	r1, [r6, #1]
    e11e:	7051      	strb	r1, [r2, #1]
  while (n < Len) {
    e120:	42a8      	cmp	r0, r5
    *pPayload++ = *pText++;
    e122:	f102 0102 	add.w	r1, r2, #2
  while (n < Len) {
    e126:	d91e      	bls.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
    n++;
    e128:	1cdd      	adds	r5, r3, #3
    *pPayload++ = *pText++;
    e12a:	78b1      	ldrb	r1, [r6, #2]
    e12c:	7091      	strb	r1, [r2, #2]
  while (n < Len) {
    e12e:	42a8      	cmp	r0, r5
    *pPayload++ = *pText++;
    e130:	f102 0103 	add.w	r1, r2, #3
  while (n < Len) {
    e134:	d917      	bls.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
    n++;
    e136:	1d1d      	adds	r5, r3, #4
    *pPayload++ = *pText++;
    e138:	78f1      	ldrb	r1, [r6, #3]
    e13a:	70d1      	strb	r1, [r2, #3]
  while (n < Len) {
    e13c:	42a8      	cmp	r0, r5
    *pPayload++ = *pText++;
    e13e:	f102 0104 	add.w	r1, r2, #4
  while (n < Len) {
    e142:	d910      	bls.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
    n++;
    e144:	1d5d      	adds	r5, r3, #5
    *pPayload++ = *pText++;
    e146:	7931      	ldrb	r1, [r6, #4]
    e148:	7111      	strb	r1, [r2, #4]
  while (n < Len) {
    e14a:	42a8      	cmp	r0, r5
    *pPayload++ = *pText++;
    e14c:	f102 0105 	add.w	r1, r2, #5
  while (n < Len) {
    e150:	d909      	bls.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
    n++;
    e152:	3306      	adds	r3, #6
    *pPayload++ = *pText++;
    e154:	7971      	ldrb	r1, [r6, #5]
    e156:	7151      	strb	r1, [r2, #5]
  while (n < Len) {
    e158:	4298      	cmp	r0, r3
    *pPayload++ = *pText++;
    e15a:	f102 0106 	add.w	r1, r2, #6
  while (n < Len) {
    e15e:	d902      	bls.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
    *pPayload++ = *pText++;
    e160:	79b3      	ldrb	r3, [r6, #6]
    e162:	7193      	strb	r3, [r2, #6]
    e164:	1dd1      	adds	r1, r2, #7
      _SendPacket(pPayloadStart, pPayload, SYSVIEW_EVTID_MODULEDESC);
    e166:	2216      	movs	r2, #22
    e168:	4811      	ldr	r0, [pc, #68]	; (e1b0 <SEGGER_SYSVIEW_SendModule+0x19c>)
    e16a:	f000 f8b1 	bl	e2d0 <_SendPacket>
      RECORD_END();
    e16e:	f384 8811 	msr	BASEPRI, r4
    }
  }
}
    e172:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e176:	4770      	bx	lr
    e178:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
    *pPayload++ = Len; 
    e17c:	4629      	mov	r1, r5
    *pPayload++ = *pText++;
    e17e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    e182:	f801 3b01 	strb.w	r3, [r1], #1
  while (n < Len) {
    e186:	1b4b      	subs	r3, r1, r5
    e188:	4298      	cmp	r0, r3
    e18a:	d8f8      	bhi.n	e17e <SEGGER_SYSVIEW_SendModule+0x16a>
    e18c:	e7eb      	b.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
    *pPayload++ = Len; 
    e18e:	704b      	strb	r3, [r1, #1]
    e190:	4629      	mov	r1, r5
    e192:	e7e8      	b.n	e166 <SEGGER_SYSVIEW_SendModule+0x152>
      RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 2 * SEGGER_SYSVIEW_QUANTA_U32 + 1 + SEGGER_SYSVIEW_MAX_STRING_LEN);
    e194:	f3ef 8411 	mrs	r4, BASEPRI
    e198:	f04f 0120 	mov.w	r1, #32
    e19c:	f381 8811 	msr	BASEPRI, r1
      ENCODE_U32(pPayload, ModuleId);
    e1a0:	4903      	ldr	r1, [pc, #12]	; (e1b0 <SEGGER_SYSVIEW_SendModule+0x19c>)
    e1a2:	e75c      	b.n	e05e <SEGGER_SYSVIEW_SendModule+0x4a>
    e1a4:	4902      	ldr	r1, [pc, #8]	; (e1b0 <SEGGER_SYSVIEW_SendModule+0x19c>)
    e1a6:	e75a      	b.n	e05e <SEGGER_SYSVIEW_SendModule+0x4a>
    e1a8:	10002688 	.word	0x10002688
    e1ac:	100025a4 	.word	0x100025a4
    e1b0:	100025a8 	.word	0x100025a8

0000e1b4 <_HandleIncomingPacket>:
static void _HandleIncomingPacket(void) {
    e1b4:	b530      	push	{r4, r5, lr}
  Status = SEGGER_RTT_ReadNoLock(CHANNEL_ID_DOWN, &Cmd, 1);
    e1b6:	2201      	movs	r2, #1
static void _HandleIncomingPacket(void) {
    e1b8:	b083      	sub	sp, #12
  Status = SEGGER_RTT_ReadNoLock(CHANNEL_ID_DOWN, &Cmd, 1);
    e1ba:	f10d 0107 	add.w	r1, sp, #7
    e1be:	4610      	mov	r0, r2
    e1c0:	f7ff fd64 	bl	dc8c <SEGGER_RTT_ReadNoLock>
  if (Status > 0) {
    e1c4:	2800      	cmp	r0, #0
    e1c6:	dd13      	ble.n	e1f0 <_HandleIncomingPacket+0x3c>
    switch (Cmd) {
    e1c8:	f89d 3007 	ldrb.w	r3, [sp, #7]
    e1cc:	2b04      	cmp	r3, #4
    e1ce:	d04c      	beq.n	e26a <_HandleIncomingPacket+0xb6>
    e1d0:	d910      	bls.n	e1f4 <_HandleIncomingPacket+0x40>
    e1d2:	2b06      	cmp	r3, #6
    e1d4:	d032      	beq.n	e23c <_HandleIncomingPacket+0x88>
    e1d6:	d322      	bcc.n	e21e <_HandleIncomingPacket+0x6a>
    e1d8:	2b07      	cmp	r3, #7
    e1da:	d023      	beq.n	e224 <_HandleIncomingPacket+0x70>
    e1dc:	2b80      	cmp	r3, #128	; 0x80
    e1de:	d14d      	bne.n	e27c <_HandleIncomingPacket+0xc8>
      Status = SEGGER_RTT_ReadNoLock(CHANNEL_ID_DOWN, &Cmd, 1);
    e1e0:	2201      	movs	r2, #1
    e1e2:	f10d 0107 	add.w	r1, sp, #7
    e1e6:	4610      	mov	r0, r2
    e1e8:	f7ff fd50 	bl	dc8c <SEGGER_RTT_ReadNoLock>
      if (Status > 0) {
    e1ec:	2800      	cmp	r0, #0
    e1ee:	dc51      	bgt.n	e294 <_HandleIncomingPacket+0xe0>
}
    e1f0:	b003      	add	sp, #12
    e1f2:	bd30      	pop	{r4, r5, pc}
    switch (Cmd) {
    e1f4:	2b02      	cmp	r3, #2
    e1f6:	d005      	beq.n	e204 <_HandleIncomingPacket+0x50>
    e1f8:	d849      	bhi.n	e28e <_HandleIncomingPacket+0xda>
    e1fa:	2b01      	cmp	r3, #1
    e1fc:	d13e      	bne.n	e27c <_HandleIncomingPacket+0xc8>
      SEGGER_SYSVIEW_Start();
    e1fe:	f000 fd49 	bl	ec94 <SEGGER_SYSVIEW_Start>
      break;
    e202:	e7f5      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE);
    e204:	f3ef 8511 	mrs	r5, BASEPRI
    e208:	f04f 0120 	mov.w	r1, #32
    e20c:	f381 8811 	msr	BASEPRI, r1
  if (_SYSVIEW_Globals.EnableState) {
    e210:	4c2a      	ldr	r4, [pc, #168]	; (e2bc <_HandleIncomingPacket+0x108>)
    e212:	7823      	ldrb	r3, [r4, #0]
    e214:	2b00      	cmp	r3, #0
    e216:	d142      	bne.n	e29e <_HandleIncomingPacket+0xea>
  RECORD_END();
    e218:	f385 8811 	msr	BASEPRI, r5
    e21c:	e7e8      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
      SEGGER_SYSVIEW_GetSysDesc();
    e21e:	f000 fe63 	bl	eee8 <SEGGER_SYSVIEW_GetSysDesc>
      break;
    e222:	e7e5      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
*
*/
void SEGGER_SYSVIEW_SendModuleDescription(void) {
  SEGGER_SYSVIEW_MODULE* pModule;

  if (_pFirstModule != 0) {
    e224:	4b26      	ldr	r3, [pc, #152]	; (e2c0 <_HandleIncomingPacket+0x10c>)
    e226:	681c      	ldr	r4, [r3, #0]
    e228:	2c00      	cmp	r4, #0
    e22a:	d0e1      	beq.n	e1f0 <_HandleIncomingPacket+0x3c>
    pModule = _pFirstModule;
    do {
      if (pModule->pfSendModuleDesc) {
    e22c:	68e3      	ldr	r3, [r4, #12]
    e22e:	2b00      	cmp	r3, #0
    e230:	d03d      	beq.n	e2ae <_HandleIncomingPacket+0xfa>
        pModule->pfSendModuleDesc();
    e232:	4798      	blx	r3
      }
      pModule = pModule->pNext;
    e234:	6924      	ldr	r4, [r4, #16]
    } while (pModule);
    e236:	2c00      	cmp	r4, #0
    e238:	d1f8      	bne.n	e22c <_HandleIncomingPacket+0x78>
    e23a:	e7d9      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
*    Send the number of registered modules to the host.
*/
void SEGGER_SYSVIEW_SendNumModules(void) {
  U8* pPayload;
  U8* pPayloadStart;
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 2*SEGGER_SYSVIEW_QUANTA_U32);
    e23c:	f3ef 8411 	mrs	r4, BASEPRI
    e240:	f04f 0120 	mov.w	r1, #32
    e244:	f381 8811 	msr	BASEPRI, r1
  pPayload = pPayloadStart;
  ENCODE_U32(pPayload, _NumModules);
    e248:	4b1e      	ldr	r3, [pc, #120]	; (e2c4 <_HandleIncomingPacket+0x110>)
    e24a:	781b      	ldrb	r3, [r3, #0]
    e24c:	2b7f      	cmp	r3, #127	; 0x7f
    e24e:	d932      	bls.n	e2b6 <_HandleIncomingPacket+0x102>
    e250:	491d      	ldr	r1, [pc, #116]	; (e2c8 <_HandleIncomingPacket+0x114>)
    e252:	710b      	strb	r3, [r1, #4]
    e254:	3105      	adds	r1, #5
    e256:	2301      	movs	r3, #1
  _SendPacket(pPayloadStart, pPayload, SYSVIEW_EVTID_NUMMODULES);
    e258:	481c      	ldr	r0, [pc, #112]	; (e2cc <_HandleIncomingPacket+0x118>)
  ENCODE_U32(pPayload, _NumModules);
    e25a:	f801 3b01 	strb.w	r3, [r1], #1
  _SendPacket(pPayloadStart, pPayload, SYSVIEW_EVTID_NUMMODULES);
    e25e:	221b      	movs	r2, #27
    e260:	f000 f836 	bl	e2d0 <_SendPacket>
  RECORD_END();
    e264:	f384 8811 	msr	BASEPRI, r4
    e268:	e7c2      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
  if (_SYSVIEW_Globals.pOSAPI && _SYSVIEW_Globals.pOSAPI->pfSendTaskList) {
    e26a:	4b14      	ldr	r3, [pc, #80]	; (e2bc <_HandleIncomingPacket+0x108>)
    e26c:	6a1b      	ldr	r3, [r3, #32]
    e26e:	2b00      	cmp	r3, #0
    e270:	d0be      	beq.n	e1f0 <_HandleIncomingPacket+0x3c>
    e272:	685b      	ldr	r3, [r3, #4]
    e274:	2b00      	cmp	r3, #0
    e276:	d0bb      	beq.n	e1f0 <_HandleIncomingPacket+0x3c>
    _SYSVIEW_Globals.pOSAPI->pfSendTaskList();
    e278:	4798      	blx	r3
    e27a:	e7b9      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
      if (Cmd >= 128) { // Unknown extended command. Dummy read its parameter.
    e27c:	061b      	lsls	r3, r3, #24
    e27e:	d5b7      	bpl.n	e1f0 <_HandleIncomingPacket+0x3c>
        SEGGER_RTT_ReadNoLock(CHANNEL_ID_DOWN, &Cmd, 1);
    e280:	2201      	movs	r2, #1
    e282:	f10d 0107 	add.w	r1, sp, #7
    e286:	4610      	mov	r0, r2
    e288:	f7ff fd00 	bl	dc8c <SEGGER_RTT_ReadNoLock>
}
    e28c:	e7b0      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
      SEGGER_SYSVIEW_RecordSystime();
    e28e:	f000 fc3d 	bl	eb0c <SEGGER_SYSVIEW_RecordSystime>
      break;
    e292:	e7ad      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
        SEGGER_SYSVIEW_SendModule(Cmd);
    e294:	f89d 0007 	ldrb.w	r0, [sp, #7]
    e298:	f7ff febc 	bl	e014 <SEGGER_SYSVIEW_SendModule>
    e29c:	e7a8      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
    _SendPacket(pPayloadStart, pPayloadStart, SYSVIEW_EVTID_TRACE_STOP);
    e29e:	490b      	ldr	r1, [pc, #44]	; (e2cc <_HandleIncomingPacket+0x118>)
    e2a0:	220b      	movs	r2, #11
    e2a2:	4608      	mov	r0, r1
    e2a4:	f000 f814 	bl	e2d0 <_SendPacket>
    _SYSVIEW_Globals.EnableState = 0;
    e2a8:	2300      	movs	r3, #0
    e2aa:	7023      	strb	r3, [r4, #0]
    e2ac:	e7b4      	b.n	e218 <_HandleIncomingPacket+0x64>
      pModule = pModule->pNext;
    e2ae:	6924      	ldr	r4, [r4, #16]
    } while (pModule);
    e2b0:	2c00      	cmp	r4, #0
    e2b2:	d1bb      	bne.n	e22c <_HandleIncomingPacket+0x78>
    e2b4:	e79c      	b.n	e1f0 <_HandleIncomingPacket+0x3c>
  ENCODE_U32(pPayload, _NumModules);
    e2b6:	4905      	ldr	r1, [pc, #20]	; (e2cc <_HandleIncomingPacket+0x118>)
    e2b8:	e7ce      	b.n	e258 <_HandleIncomingPacket+0xa4>
    e2ba:	bf00      	nop
    e2bc:	1000157c 	.word	0x1000157c
    e2c0:	10002688 	.word	0x10002688
    e2c4:	10001578 	.word	0x10001578
    e2c8:	100025a4 	.word	0x100025a4
    e2cc:	100025a8 	.word	0x100025a8

0000e2d0 <_SendPacket>:
static void _SendPacket(U8* pStartPacket, U8* pEndPacket, unsigned int EventId) {
    e2d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e2d4:	4d52      	ldr	r5, [pc, #328]	; (e420 <_SendPacket+0x150>)
    e2d6:	782b      	ldrb	r3, [r5, #0]
    e2d8:	2b01      	cmp	r3, #1
static void _SendPacket(U8* pStartPacket, U8* pEndPacket, unsigned int EventId) {
    e2da:	b084      	sub	sp, #16
    e2dc:	4606      	mov	r6, r0
    e2de:	460c      	mov	r4, r1
    e2e0:	4617      	mov	r7, r2
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e2e2:	d00f      	beq.n	e304 <_SendPacket+0x34>
  if (_SYSVIEW_Globals.EnableState == 0) {
    e2e4:	b963      	cbnz	r3, e300 <_SendPacket+0x30>
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    e2e6:	4b4f      	ldr	r3, [pc, #316]	; (e424 <_SendPacket+0x154>)
    e2e8:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    e2ec:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    e2f0:	429a      	cmp	r2, r3
    e2f2:	d002      	beq.n	e2fa <_SendPacket+0x2a>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    e2f4:	78ac      	ldrb	r4, [r5, #2]
    e2f6:	2c00      	cmp	r4, #0
    e2f8:	d03c      	beq.n	e374 <_SendPacket+0xa4>
}
    e2fa:	b004      	add	sp, #16
    e2fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (_SYSVIEW_Globals.EnableState == 2) {
    e300:	2b02      	cmp	r3, #2
    e302:	d04f      	beq.n	e3a4 <_SendPacket+0xd4>
  if (EventId < 32) {
    e304:	2f1f      	cmp	r7, #31
    e306:	d913      	bls.n	e330 <_SendPacket+0x60>
    e308:	b2fb      	uxtb	r3, r7
    NumBytes = pEndPacket - pStartPacket;
    e30a:	1ba2      	subs	r2, r4, r6
    if (NumBytes > 127) {
    e30c:	2a7f      	cmp	r2, #127	; 0x7f
    e30e:	b2d1      	uxtb	r1, r2
    e310:	d838      	bhi.n	e384 <_SendPacket+0xb4>
    if (EventId > 127) {
    e312:	2f7f      	cmp	r7, #127	; 0x7f
      *--pStartPacket = NumBytes;
    e314:	f106 32ff 	add.w	r2, r6, #4294967295	; 0xffffffff
    e318:	f806 1c01 	strb.w	r1, [r6, #-1]
    if (EventId > 127) {
    e31c:	d93e      	bls.n	e39c <_SendPacket+0xcc>
      *--pStartPacket = (EventId >> 7);
    e31e:	09ff      	lsrs	r7, r7, #7
      *--pStartPacket = EventId | 0x80;
    e320:	f063 037f 	orn	r3, r3, #127	; 0x7f
      *--pStartPacket = (EventId >> 7);
    e324:	f802 7c01 	strb.w	r7, [r2, #-1]
      *--pStartPacket = EventId | 0x80;
    e328:	f802 3c02 	strb.w	r3, [r2, #-2]
    e32c:	3a02      	subs	r2, #2
    e32e:	e009      	b.n	e344 <_SendPacket+0x74>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    e330:	69eb      	ldr	r3, [r5, #28]
    e332:	40fb      	lsrs	r3, r7
    e334:	07db      	lsls	r3, r3, #31
    e336:	d4d6      	bmi.n	e2e6 <_SendPacket+0x16>
  if (EventId < 24) {
    e338:	2f17      	cmp	r7, #23
    e33a:	b2fb      	uxtb	r3, r7
    e33c:	d8e5      	bhi.n	e30a <_SendPacket+0x3a>
    *--pStartPacket = EventId;
    e33e:	f806 3c01 	strb.w	r3, [r6, #-1]
    e342:	1e72      	subs	r2, r6, #1
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e344:	4938      	ldr	r1, [pc, #224]	; (e428 <_SendPacket+0x158>)
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e346:	68eb      	ldr	r3, [r5, #12]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e348:	680e      	ldr	r6, [r1, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e34a:	1af3      	subs	r3, r6, r3
  ENCODE_U32(pEndPacket, Delta);
    e34c:	2b7f      	cmp	r3, #127	; 0x7f
    e34e:	d906      	bls.n	e35e <_SendPacket+0x8e>
    e350:	f063 017f 	orn	r1, r3, #127	; 0x7f
    e354:	09db      	lsrs	r3, r3, #7
    e356:	2b7f      	cmp	r3, #127	; 0x7f
    e358:	f804 1b01 	strb.w	r1, [r4], #1
    e35c:	d8f8      	bhi.n	e350 <_SendPacket+0x80>
    e35e:	f804 3b01 	strb.w	r3, [r4], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e362:	4611      	mov	r1, r2
    e364:	2001      	movs	r0, #1
    e366:	1aa2      	subs	r2, r4, r2
    e368:	f7ff fd10 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e36c:	2800      	cmp	r0, #0
    e36e:	d04c      	beq.n	e40a <_SendPacket+0x13a>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e370:	60ee      	str	r6, [r5, #12]
    e372:	e7b8      	b.n	e2e6 <_SendPacket+0x16>
      _SYSVIEW_Globals.RecursionCnt = 1;
    e374:	2301      	movs	r3, #1
    e376:	70ab      	strb	r3, [r5, #2]
      _HandleIncomingPacket();
    e378:	f7ff ff1c 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    e37c:	70ac      	strb	r4, [r5, #2]
}
    e37e:	b004      	add	sp, #16
    e380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      *--pStartPacket = NumBytes | 0x80;
    e384:	f061 017f 	orn	r1, r1, #127	; 0x7f
    e388:	f806 1c02 	strb.w	r1, [r6, #-2]
    if (EventId > 127) {
    e38c:	2f7f      	cmp	r7, #127	; 0x7f
      *--pStartPacket = (NumBytes >> 7);
    e38e:	f3c2 11c7 	ubfx	r1, r2, #7, #8
    e392:	f806 1c01 	strb.w	r1, [r6, #-1]
      *--pStartPacket = NumBytes | 0x80;
    e396:	f1a6 0202 	sub.w	r2, r6, #2
    if (EventId > 127) {
    e39a:	d8c0      	bhi.n	e31e <_SendPacket+0x4e>
      *--pStartPacket = EventId;
    e39c:	f802 3c01 	strb.w	r3, [r2, #-1]
    e3a0:	3a01      	subs	r2, #1
    e3a2:	e7cf      	b.n	e344 <_SendPacket+0x74>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e3a4:	696a      	ldr	r2, [r5, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e3a6:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e3a8:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e3aa:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e3ae:	f10d 0305 	add.w	r3, sp, #5
    e3b2:	d906      	bls.n	e3c2 <_SendPacket+0xf2>
    e3b4:	f062 017f 	orn	r1, r2, #127	; 0x7f
    e3b8:	09d2      	lsrs	r2, r2, #7
    e3ba:	2a7f      	cmp	r2, #127	; 0x7f
    e3bc:	f803 1b01 	strb.w	r1, [r3], #1
    e3c0:	d8f8      	bhi.n	e3b4 <_SendPacket+0xe4>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e3c2:	4919      	ldr	r1, [pc, #100]	; (e428 <_SendPacket+0x158>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e3c4:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e3c6:	f8d1 8000 	ldr.w	r8, [r1]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e3ca:	68e9      	ldr	r1, [r5, #12]
    e3cc:	eba8 0101 	sub.w	r1, r8, r1
  ENCODE_U32(pPayload, Delta);
    e3d0:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e3d2:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    e3d6:	d906      	bls.n	e3e6 <_SendPacket+0x116>
    e3d8:	f061 037f 	orn	r3, r1, #127	; 0x7f
    e3dc:	09c9      	lsrs	r1, r1, #7
    e3de:	297f      	cmp	r1, #127	; 0x7f
    e3e0:	f802 3b01 	strb.w	r3, [r2], #1
    e3e4:	d8f8      	bhi.n	e3d8 <_SendPacket+0x108>
    e3e6:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e3e8:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    e3ea:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e3ee:	2001      	movs	r0, #1
    e3f0:	4611      	mov	r1, r2
    e3f2:	1a9a      	subs	r2, r3, r2
    e3f4:	f7ff fcca 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e3f8:	b958      	cbnz	r0, e412 <_SendPacket+0x142>
    _SYSVIEW_Globals.DropCount++;
    e3fa:	696a      	ldr	r2, [r5, #20]
    e3fc:	782b      	ldrb	r3, [r5, #0]
    e3fe:	3201      	adds	r2, #1
    e400:	616a      	str	r2, [r5, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    e402:	2b01      	cmp	r3, #1
    e404:	f47f af6f 	bne.w	e2e6 <_SendPacket+0x16>
    e408:	e77c      	b.n	e304 <_SendPacket+0x34>
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    e40a:	782b      	ldrb	r3, [r5, #0]
    e40c:	3301      	adds	r3, #1
    e40e:	702b      	strb	r3, [r5, #0]
    e410:	e769      	b.n	e2e6 <_SendPacket+0x16>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e412:	782b      	ldrb	r3, [r5, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e414:	f8c5 800c 	str.w	r8, [r5, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e418:	3b01      	subs	r3, #1
    e41a:	b2db      	uxtb	r3, r3
    e41c:	702b      	strb	r3, [r5, #0]
    e41e:	e7f0      	b.n	e402 <_SendPacket+0x132>
    e420:	1000157c 	.word	0x1000157c
    e424:	100396d0 	.word	0x100396d0
    e428:	e0001004 	.word	0xe0001004

0000e42c <SEGGER_SYSVIEW_RecordExitISR>:
void SEGGER_SYSVIEW_RecordExitISR(void) {
    e42c:	b570      	push	{r4, r5, r6, lr}
    e42e:	b084      	sub	sp, #16
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE);
    e430:	f3ef 8511 	mrs	r5, BASEPRI
    e434:	f04f 0120 	mov.w	r1, #32
    e438:	f381 8811 	msr	BASEPRI, r1
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e43c:	4c3b      	ldr	r4, [pc, #236]	; (e52c <SEGGER_SYSVIEW_RecordExitISR+0x100>)
    e43e:	7823      	ldrb	r3, [r4, #0]
    e440:	2b01      	cmp	r3, #1
    e442:	d00f      	beq.n	e464 <SEGGER_SYSVIEW_RecordExitISR+0x38>
  if (_SYSVIEW_Globals.EnableState == 0) {
    e444:	b963      	cbnz	r3, e460 <SEGGER_SYSVIEW_RecordExitISR+0x34>
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    e446:	4b3a      	ldr	r3, [pc, #232]	; (e530 <SEGGER_SYSVIEW_RecordExitISR+0x104>)
    e448:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    e44c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    e450:	429a      	cmp	r2, r3
    e452:	d001      	beq.n	e458 <SEGGER_SYSVIEW_RecordExitISR+0x2c>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    e454:	78a6      	ldrb	r6, [r4, #2]
    e456:	b32e      	cbz	r6, e4a4 <SEGGER_SYSVIEW_RecordExitISR+0x78>
  RECORD_END();
    e458:	f385 8811 	msr	BASEPRI, r5
}
    e45c:	b004      	add	sp, #16
    e45e:	bd70      	pop	{r4, r5, r6, pc}
  if (_SYSVIEW_Globals.EnableState == 2) {
    e460:	2b02      	cmp	r3, #2
    e462:	d02c      	beq.n	e4be <SEGGER_SYSVIEW_RecordExitISR+0x92>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    e464:	69e3      	ldr	r3, [r4, #28]
    e466:	071b      	lsls	r3, r3, #28
    e468:	d4ed      	bmi.n	e446 <SEGGER_SYSVIEW_RecordExitISR+0x1a>
    *--pStartPacket = EventId;
    e46a:	4a32      	ldr	r2, [pc, #200]	; (e534 <SEGGER_SYSVIEW_RecordExitISR+0x108>)
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e46c:	4932      	ldr	r1, [pc, #200]	; (e538 <SEGGER_SYSVIEW_RecordExitISR+0x10c>)
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e46e:	68e3      	ldr	r3, [r4, #12]
    *--pStartPacket = EventId;
    e470:	2003      	movs	r0, #3
    e472:	70d0      	strb	r0, [r2, #3]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e474:	680e      	ldr	r6, [r1, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e476:	1af3      	subs	r3, r6, r3
  ENCODE_U32(pEndPacket, Delta);
    e478:	2b7f      	cmp	r3, #127	; 0x7f
    e47a:	f102 0204 	add.w	r2, r2, #4
    e47e:	d906      	bls.n	e48e <SEGGER_SYSVIEW_RecordExitISR+0x62>
    e480:	f063 017f 	orn	r1, r3, #127	; 0x7f
    e484:	09db      	lsrs	r3, r3, #7
    e486:	2b7f      	cmp	r3, #127	; 0x7f
    e488:	f802 1b01 	strb.w	r1, [r2], #1
    e48c:	d8f8      	bhi.n	e480 <SEGGER_SYSVIEW_RecordExitISR+0x54>
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e48e:	482b      	ldr	r0, [pc, #172]	; (e53c <SEGGER_SYSVIEW_RecordExitISR+0x110>)
  ENCODE_U32(pEndPacket, Delta);
    e490:	f802 3b01 	strb.w	r3, [r2], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e494:	4601      	mov	r1, r0
    e496:	1a12      	subs	r2, r2, r0
    e498:	2001      	movs	r0, #1
    e49a:	f7ff fc77 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e49e:	b150      	cbz	r0, e4b6 <SEGGER_SYSVIEW_RecordExitISR+0x8a>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e4a0:	60e6      	str	r6, [r4, #12]
    e4a2:	e7d0      	b.n	e446 <SEGGER_SYSVIEW_RecordExitISR+0x1a>
      _SYSVIEW_Globals.RecursionCnt = 1;
    e4a4:	2301      	movs	r3, #1
    e4a6:	70a3      	strb	r3, [r4, #2]
      _HandleIncomingPacket();
    e4a8:	f7ff fe84 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    e4ac:	70a6      	strb	r6, [r4, #2]
  RECORD_END();
    e4ae:	f385 8811 	msr	BASEPRI, r5
}
    e4b2:	b004      	add	sp, #16
    e4b4:	bd70      	pop	{r4, r5, r6, pc}
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    e4b6:	7823      	ldrb	r3, [r4, #0]
    e4b8:	3301      	adds	r3, #1
    e4ba:	7023      	strb	r3, [r4, #0]
    e4bc:	e7c3      	b.n	e446 <SEGGER_SYSVIEW_RecordExitISR+0x1a>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e4be:	6962      	ldr	r2, [r4, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e4c0:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e4c2:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e4c4:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e4c8:	f10d 0305 	add.w	r3, sp, #5
    e4cc:	d906      	bls.n	e4dc <SEGGER_SYSVIEW_RecordExitISR+0xb0>
    e4ce:	f062 017f 	orn	r1, r2, #127	; 0x7f
    e4d2:	09d2      	lsrs	r2, r2, #7
    e4d4:	2a7f      	cmp	r2, #127	; 0x7f
    e4d6:	f803 1b01 	strb.w	r1, [r3], #1
    e4da:	d8f8      	bhi.n	e4ce <SEGGER_SYSVIEW_RecordExitISR+0xa2>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e4dc:	4916      	ldr	r1, [pc, #88]	; (e538 <SEGGER_SYSVIEW_RecordExitISR+0x10c>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e4de:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e4e0:	680e      	ldr	r6, [r1, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e4e2:	68e1      	ldr	r1, [r4, #12]
    e4e4:	1a71      	subs	r1, r6, r1
  ENCODE_U32(pPayload, Delta);
    e4e6:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e4e8:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    e4ec:	d906      	bls.n	e4fc <SEGGER_SYSVIEW_RecordExitISR+0xd0>
    e4ee:	f061 037f 	orn	r3, r1, #127	; 0x7f
    e4f2:	09c9      	lsrs	r1, r1, #7
    e4f4:	297f      	cmp	r1, #127	; 0x7f
    e4f6:	f802 3b01 	strb.w	r3, [r2], #1
    e4fa:	d8f8      	bhi.n	e4ee <SEGGER_SYSVIEW_RecordExitISR+0xc2>
    e4fc:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e4fe:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    e500:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e504:	2001      	movs	r0, #1
    e506:	4611      	mov	r1, r2
    e508:	1a9a      	subs	r2, r3, r2
    e50a:	f7ff fc3f 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e50e:	b930      	cbnz	r0, e51e <SEGGER_SYSVIEW_RecordExitISR+0xf2>
    _SYSVIEW_Globals.DropCount++;
    e510:	6962      	ldr	r2, [r4, #20]
    e512:	7823      	ldrb	r3, [r4, #0]
    e514:	3201      	adds	r2, #1
    e516:	6162      	str	r2, [r4, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    e518:	2b01      	cmp	r3, #1
    e51a:	d194      	bne.n	e446 <SEGGER_SYSVIEW_RecordExitISR+0x1a>
    e51c:	e7a2      	b.n	e464 <SEGGER_SYSVIEW_RecordExitISR+0x38>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e51e:	7823      	ldrb	r3, [r4, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e520:	60e6      	str	r6, [r4, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e522:	3b01      	subs	r3, #1
    e524:	b2db      	uxtb	r3, r3
    e526:	7023      	strb	r3, [r4, #0]
    e528:	e7f6      	b.n	e518 <SEGGER_SYSVIEW_RecordExitISR+0xec>
    e52a:	bf00      	nop
    e52c:	1000157c 	.word	0x1000157c
    e530:	100396d0 	.word	0x100396d0
    e534:	100025a4 	.word	0x100025a4
    e538:	e0001004 	.word	0xe0001004
    e53c:	100025a7 	.word	0x100025a7

0000e540 <SEGGER_SYSVIEW_OnIdle>:
void SEGGER_SYSVIEW_OnIdle(void) {
    e540:	b570      	push	{r4, r5, r6, lr}
    e542:	b084      	sub	sp, #16
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE);
    e544:	f3ef 8511 	mrs	r5, BASEPRI
    e548:	f04f 0120 	mov.w	r1, #32
    e54c:	f381 8811 	msr	BASEPRI, r1
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e550:	4c3b      	ldr	r4, [pc, #236]	; (e640 <SEGGER_SYSVIEW_OnIdle+0x100>)
    e552:	7823      	ldrb	r3, [r4, #0]
    e554:	2b01      	cmp	r3, #1
    e556:	d00f      	beq.n	e578 <SEGGER_SYSVIEW_OnIdle+0x38>
  if (_SYSVIEW_Globals.EnableState == 0) {
    e558:	b963      	cbnz	r3, e574 <SEGGER_SYSVIEW_OnIdle+0x34>
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    e55a:	4b3a      	ldr	r3, [pc, #232]	; (e644 <SEGGER_SYSVIEW_OnIdle+0x104>)
    e55c:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    e560:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    e564:	429a      	cmp	r2, r3
    e566:	d001      	beq.n	e56c <SEGGER_SYSVIEW_OnIdle+0x2c>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    e568:	78a6      	ldrb	r6, [r4, #2]
    e56a:	b32e      	cbz	r6, e5b8 <SEGGER_SYSVIEW_OnIdle+0x78>
  RECORD_END();
    e56c:	f385 8811 	msr	BASEPRI, r5
}
    e570:	b004      	add	sp, #16
    e572:	bd70      	pop	{r4, r5, r6, pc}
  if (_SYSVIEW_Globals.EnableState == 2) {
    e574:	2b02      	cmp	r3, #2
    e576:	d02c      	beq.n	e5d2 <SEGGER_SYSVIEW_OnIdle+0x92>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    e578:	69e3      	ldr	r3, [r4, #28]
    e57a:	039b      	lsls	r3, r3, #14
    e57c:	d4ed      	bmi.n	e55a <SEGGER_SYSVIEW_OnIdle+0x1a>
    *--pStartPacket = EventId;
    e57e:	4a32      	ldr	r2, [pc, #200]	; (e648 <SEGGER_SYSVIEW_OnIdle+0x108>)
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e580:	4932      	ldr	r1, [pc, #200]	; (e64c <SEGGER_SYSVIEW_OnIdle+0x10c>)
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e582:	68e3      	ldr	r3, [r4, #12]
    *--pStartPacket = EventId;
    e584:	2011      	movs	r0, #17
    e586:	70d0      	strb	r0, [r2, #3]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e588:	680e      	ldr	r6, [r1, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e58a:	1af3      	subs	r3, r6, r3
  ENCODE_U32(pEndPacket, Delta);
    e58c:	2b7f      	cmp	r3, #127	; 0x7f
    e58e:	f102 0204 	add.w	r2, r2, #4
    e592:	d906      	bls.n	e5a2 <SEGGER_SYSVIEW_OnIdle+0x62>
    e594:	f063 017f 	orn	r1, r3, #127	; 0x7f
    e598:	09db      	lsrs	r3, r3, #7
    e59a:	2b7f      	cmp	r3, #127	; 0x7f
    e59c:	f802 1b01 	strb.w	r1, [r2], #1
    e5a0:	d8f8      	bhi.n	e594 <SEGGER_SYSVIEW_OnIdle+0x54>
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e5a2:	482b      	ldr	r0, [pc, #172]	; (e650 <SEGGER_SYSVIEW_OnIdle+0x110>)
  ENCODE_U32(pEndPacket, Delta);
    e5a4:	f802 3b01 	strb.w	r3, [r2], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e5a8:	4601      	mov	r1, r0
    e5aa:	1a12      	subs	r2, r2, r0
    e5ac:	2001      	movs	r0, #1
    e5ae:	f7ff fbed 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e5b2:	b150      	cbz	r0, e5ca <SEGGER_SYSVIEW_OnIdle+0x8a>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e5b4:	60e6      	str	r6, [r4, #12]
    e5b6:	e7d0      	b.n	e55a <SEGGER_SYSVIEW_OnIdle+0x1a>
      _SYSVIEW_Globals.RecursionCnt = 1;
    e5b8:	2301      	movs	r3, #1
    e5ba:	70a3      	strb	r3, [r4, #2]
      _HandleIncomingPacket();
    e5bc:	f7ff fdfa 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    e5c0:	70a6      	strb	r6, [r4, #2]
  RECORD_END();
    e5c2:	f385 8811 	msr	BASEPRI, r5
}
    e5c6:	b004      	add	sp, #16
    e5c8:	bd70      	pop	{r4, r5, r6, pc}
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    e5ca:	7823      	ldrb	r3, [r4, #0]
    e5cc:	3301      	adds	r3, #1
    e5ce:	7023      	strb	r3, [r4, #0]
    e5d0:	e7c3      	b.n	e55a <SEGGER_SYSVIEW_OnIdle+0x1a>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e5d2:	6962      	ldr	r2, [r4, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e5d4:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e5d6:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e5d8:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e5dc:	f10d 0305 	add.w	r3, sp, #5
    e5e0:	d906      	bls.n	e5f0 <SEGGER_SYSVIEW_OnIdle+0xb0>
    e5e2:	f062 017f 	orn	r1, r2, #127	; 0x7f
    e5e6:	09d2      	lsrs	r2, r2, #7
    e5e8:	2a7f      	cmp	r2, #127	; 0x7f
    e5ea:	f803 1b01 	strb.w	r1, [r3], #1
    e5ee:	d8f8      	bhi.n	e5e2 <SEGGER_SYSVIEW_OnIdle+0xa2>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e5f0:	4916      	ldr	r1, [pc, #88]	; (e64c <SEGGER_SYSVIEW_OnIdle+0x10c>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e5f2:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e5f4:	680e      	ldr	r6, [r1, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e5f6:	68e1      	ldr	r1, [r4, #12]
    e5f8:	1a71      	subs	r1, r6, r1
  ENCODE_U32(pPayload, Delta);
    e5fa:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e5fc:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    e600:	d906      	bls.n	e610 <SEGGER_SYSVIEW_OnIdle+0xd0>
    e602:	f061 037f 	orn	r3, r1, #127	; 0x7f
    e606:	09c9      	lsrs	r1, r1, #7
    e608:	297f      	cmp	r1, #127	; 0x7f
    e60a:	f802 3b01 	strb.w	r3, [r2], #1
    e60e:	d8f8      	bhi.n	e602 <SEGGER_SYSVIEW_OnIdle+0xc2>
    e610:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e612:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    e614:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e618:	2001      	movs	r0, #1
    e61a:	4611      	mov	r1, r2
    e61c:	1a9a      	subs	r2, r3, r2
    e61e:	f7ff fbb5 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e622:	b930      	cbnz	r0, e632 <SEGGER_SYSVIEW_OnIdle+0xf2>
    _SYSVIEW_Globals.DropCount++;
    e624:	6962      	ldr	r2, [r4, #20]
    e626:	7823      	ldrb	r3, [r4, #0]
    e628:	3201      	adds	r2, #1
    e62a:	6162      	str	r2, [r4, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    e62c:	2b01      	cmp	r3, #1
    e62e:	d194      	bne.n	e55a <SEGGER_SYSVIEW_OnIdle+0x1a>
    e630:	e7a2      	b.n	e578 <SEGGER_SYSVIEW_OnIdle+0x38>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e632:	7823      	ldrb	r3, [r4, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e634:	60e6      	str	r6, [r4, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e636:	3b01      	subs	r3, #1
    e638:	b2db      	uxtb	r3, r3
    e63a:	7023      	strb	r3, [r4, #0]
    e63c:	e7f6      	b.n	e62c <SEGGER_SYSVIEW_OnIdle+0xec>
    e63e:	bf00      	nop
    e640:	1000157c 	.word	0x1000157c
    e644:	100396d0 	.word	0x100396d0
    e648:	100025a4 	.word	0x100025a4
    e64c:	e0001004 	.word	0xe0001004
    e650:	100025a7 	.word	0x100025a7

0000e654 <SEGGER_SYSVIEW_SendSysDesc>:
void SEGGER_SYSVIEW_SendSysDesc(const char *sSysDesc) {
    e654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e658:	b085      	sub	sp, #20
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 1 + SEGGER_SYSVIEW_MAX_STRING_LEN);
    e65a:	f3ef 8611 	mrs	r6, BASEPRI
    e65e:	f04f 0120 	mov.w	r1, #32
    e662:	f381 8811 	msr	BASEPRI, r1
  while(*(pText + Len) != 0) {
    e666:	7803      	ldrb	r3, [r0, #0]
    e668:	2b00      	cmp	r3, #0
    e66a:	f000 80f0 	beq.w	e84e <SEGGER_SYSVIEW_SendSysDesc+0x1fa>
    e66e:	4602      	mov	r2, r0
  Len = 0;
    e670:	2300      	movs	r3, #0
  while(*(pText + Len) != 0) {
    e672:	f812 1f01 	ldrb.w	r1, [r2, #1]!
    Len++;
    e676:	3301      	adds	r3, #1
  while(*(pText + Len) != 0) {
    e678:	2900      	cmp	r1, #0
    e67a:	d1fa      	bne.n	e672 <SEGGER_SYSVIEW_SendSysDesc+0x1e>
    *pPayload++ = Len; 
    e67c:	4d79      	ldr	r5, [pc, #484]	; (e864 <SEGGER_SYSVIEW_SendSysDesc+0x210>)
    e67e:	f100 0208 	add.w	r2, r0, #8
    e682:	f105 0e05 	add.w	lr, r5, #5
    e686:	f105 070d 	add.w	r7, r5, #13
    e68a:	4287      	cmp	r7, r0
    e68c:	bf88      	it	hi
    e68e:	4572      	cmphi	r2, lr
    e690:	bf94      	ite	ls
    e692:	2201      	movls	r2, #1
    e694:	2200      	movhi	r2, #0
    e696:	ea40 040e 	orr.w	r4, r0, lr
    e69a:	2b80      	cmp	r3, #128	; 0x80
    e69c:	469c      	mov	ip, r3
    e69e:	bf28      	it	cs
    e6a0:	f04f 0c80 	movcs.w	ip, #128	; 0x80
    e6a4:	f014 0f07 	tst.w	r4, #7
    e6a8:	bf18      	it	ne
    e6aa:	2200      	movne	r2, #0
    e6ac:	f885 c004 	strb.w	ip, [r5, #4]
    e6b0:	2a00      	cmp	r2, #0
    e6b2:	f000 80c1 	beq.w	e838 <SEGGER_SYSVIEW_SendSysDesc+0x1e4>
    e6b6:	2b0c      	cmp	r3, #12
    e6b8:	f240 80be 	bls.w	e838 <SEGGER_SYSVIEW_SendSysDesc+0x1e4>
    e6bc:	2b00      	cmp	r3, #0
    e6be:	bf14      	ite	ne
    e6c0:	46e2      	movne	sl, ip
    e6c2:	f04f 0a01 	moveq.w	sl, #1
    e6c6:	ea4f 02da 	mov.w	r2, sl, lsr #3
    e6ca:	46f3      	mov	fp, lr
    e6cc:	1dab      	adds	r3, r5, #6
    e6ce:	4607      	mov	r7, r0
    *pPayload++ = *pText++;
    e6d0:	e8f7 8902 	ldrd	r8, r9, [r7], #8
    e6d4:	3101      	adds	r1, #1
    e6d6:	461c      	mov	r4, r3
    e6d8:	428a      	cmp	r2, r1
    e6da:	e8eb 8902 	strd	r8, r9, [fp], #8
    e6de:	f104 0407 	add.w	r4, r4, #7
    e6e2:	f103 0308 	add.w	r3, r3, #8
    e6e6:	d8f3      	bhi.n	e6d0 <SEGGER_SYSVIEW_SendSysDesc+0x7c>
    e6e8:	f02a 0307 	bic.w	r3, sl, #7
    e6ec:	4553      	cmp	r3, sl
    e6ee:	eb00 0103 	add.w	r1, r0, r3
    e6f2:	eb0e 0203 	add.w	r2, lr, r3
    e6f6:	d02d      	beq.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    e6f8:	5cc0      	ldrb	r0, [r0, r3]
    e6fa:	f80e 0003 	strb.w	r0, [lr, r3]
    n++;
    e6fe:	1c58      	adds	r0, r3, #1
  while (n < Len) {
    e700:	4560      	cmp	r0, ip
    *pPayload++ = *pText++;
    e702:	f102 0401 	add.w	r4, r2, #1
  while (n < Len) {
    e706:	d225      	bcs.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    *pPayload++ = *pText++;
    e708:	7848      	ldrb	r0, [r1, #1]
    e70a:	7050      	strb	r0, [r2, #1]
    n++;
    e70c:	1c98      	adds	r0, r3, #2
  while (n < Len) {
    e70e:	4584      	cmp	ip, r0
    *pPayload++ = *pText++;
    e710:	f102 0402 	add.w	r4, r2, #2
  while (n < Len) {
    e714:	d91e      	bls.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    *pPayload++ = *pText++;
    e716:	7888      	ldrb	r0, [r1, #2]
    e718:	7090      	strb	r0, [r2, #2]
    n++;
    e71a:	1cd8      	adds	r0, r3, #3
  while (n < Len) {
    e71c:	4584      	cmp	ip, r0
    *pPayload++ = *pText++;
    e71e:	f102 0403 	add.w	r4, r2, #3
  while (n < Len) {
    e722:	d917      	bls.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    *pPayload++ = *pText++;
    e724:	78c8      	ldrb	r0, [r1, #3]
    e726:	70d0      	strb	r0, [r2, #3]
    n++;
    e728:	1d18      	adds	r0, r3, #4
  while (n < Len) {
    e72a:	4584      	cmp	ip, r0
    *pPayload++ = *pText++;
    e72c:	f102 0404 	add.w	r4, r2, #4
  while (n < Len) {
    e730:	d910      	bls.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    *pPayload++ = *pText++;
    e732:	7908      	ldrb	r0, [r1, #4]
    e734:	7110      	strb	r0, [r2, #4]
    n++;
    e736:	1d58      	adds	r0, r3, #5
  while (n < Len) {
    e738:	4584      	cmp	ip, r0
    *pPayload++ = *pText++;
    e73a:	f102 0405 	add.w	r4, r2, #5
  while (n < Len) {
    e73e:	d909      	bls.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    n++;
    e740:	3306      	adds	r3, #6
    *pPayload++ = *pText++;
    e742:	7948      	ldrb	r0, [r1, #5]
    e744:	7150      	strb	r0, [r2, #5]
  while (n < Len) {
    e746:	459c      	cmp	ip, r3
    *pPayload++ = *pText++;
    e748:	f102 0406 	add.w	r4, r2, #6
  while (n < Len) {
    e74c:	d902      	bls.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    *pPayload++ = *pText++;
    e74e:	798b      	ldrb	r3, [r1, #6]
    e750:	7193      	strb	r3, [r2, #6]
    e752:	1dd4      	adds	r4, r2, #7
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e754:	4f44      	ldr	r7, [pc, #272]	; (e868 <SEGGER_SYSVIEW_SendSysDesc+0x214>)
    e756:	783b      	ldrb	r3, [r7, #0]
    e758:	2b01      	cmp	r3, #1
    e75a:	d010      	beq.n	e77e <SEGGER_SYSVIEW_SendSysDesc+0x12a>
  if (_SYSVIEW_Globals.EnableState == 0) {
    e75c:	b96b      	cbnz	r3, e77a <SEGGER_SYSVIEW_SendSysDesc+0x126>
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    e75e:	4b43      	ldr	r3, [pc, #268]	; (e86c <SEGGER_SYSVIEW_SendSysDesc+0x218>)
    e760:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    e764:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    e768:	429a      	cmp	r2, r3
    e76a:	d001      	beq.n	e770 <SEGGER_SYSVIEW_SendSysDesc+0x11c>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    e76c:	78bc      	ldrb	r4, [r7, #2]
    e76e:	b31c      	cbz	r4, e7b8 <SEGGER_SYSVIEW_SendSysDesc+0x164>
  RECORD_END();
    e770:	f386 8811 	msr	BASEPRI, r6
}
    e774:	b005      	add	sp, #20
    e776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (_SYSVIEW_Globals.EnableState == 2) {
    e77a:	2b02      	cmp	r3, #2
    e77c:	d02a      	beq.n	e7d4 <SEGGER_SYSVIEW_SendSysDesc+0x180>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    e77e:	69fb      	ldr	r3, [r7, #28]
    e780:	045b      	lsls	r3, r3, #17
    e782:	d4ec      	bmi.n	e75e <SEGGER_SYSVIEW_SendSysDesc+0x10a>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e784:	4b3a      	ldr	r3, [pc, #232]	; (e870 <SEGGER_SYSVIEW_SendSysDesc+0x21c>)
    *--pStartPacket = EventId;
    e786:	220e      	movs	r2, #14
    e788:	70ea      	strb	r2, [r5, #3]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e78a:	681d      	ldr	r5, [r3, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e78c:	68fb      	ldr	r3, [r7, #12]
    e78e:	1aeb      	subs	r3, r5, r3
  ENCODE_U32(pEndPacket, Delta);
    e790:	2b7f      	cmp	r3, #127	; 0x7f
    e792:	d906      	bls.n	e7a2 <SEGGER_SYSVIEW_SendSysDesc+0x14e>
    e794:	f063 027f 	orn	r2, r3, #127	; 0x7f
    e798:	09db      	lsrs	r3, r3, #7
    e79a:	2b7f      	cmp	r3, #127	; 0x7f
    e79c:	f804 2b01 	strb.w	r2, [r4], #1
    e7a0:	d8f8      	bhi.n	e794 <SEGGER_SYSVIEW_SendSysDesc+0x140>
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e7a2:	4a34      	ldr	r2, [pc, #208]	; (e874 <SEGGER_SYSVIEW_SendSysDesc+0x220>)
  ENCODE_U32(pEndPacket, Delta);
    e7a4:	f804 3b01 	strb.w	r3, [r4], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e7a8:	4611      	mov	r1, r2
    e7aa:	2001      	movs	r0, #1
    e7ac:	1aa2      	subs	r2, r4, r2
    e7ae:	f7ff faed 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e7b2:	b158      	cbz	r0, e7cc <SEGGER_SYSVIEW_SendSysDesc+0x178>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e7b4:	60fd      	str	r5, [r7, #12]
    e7b6:	e7d2      	b.n	e75e <SEGGER_SYSVIEW_SendSysDesc+0x10a>
      _SYSVIEW_Globals.RecursionCnt = 1;
    e7b8:	2301      	movs	r3, #1
    e7ba:	70bb      	strb	r3, [r7, #2]
      _HandleIncomingPacket();
    e7bc:	f7ff fcfa 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    e7c0:	70bc      	strb	r4, [r7, #2]
  RECORD_END();
    e7c2:	f386 8811 	msr	BASEPRI, r6
}
    e7c6:	b005      	add	sp, #20
    e7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    e7cc:	783b      	ldrb	r3, [r7, #0]
    e7ce:	3301      	adds	r3, #1
    e7d0:	703b      	strb	r3, [r7, #0]
    e7d2:	e7c4      	b.n	e75e <SEGGER_SYSVIEW_SendSysDesc+0x10a>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e7d4:	697a      	ldr	r2, [r7, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e7d6:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e7d8:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e7da:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e7de:	f10d 0305 	add.w	r3, sp, #5
    e7e2:	d906      	bls.n	e7f2 <SEGGER_SYSVIEW_SendSysDesc+0x19e>
    e7e4:	f062 017f 	orn	r1, r2, #127	; 0x7f
    e7e8:	09d2      	lsrs	r2, r2, #7
    e7ea:	2a7f      	cmp	r2, #127	; 0x7f
    e7ec:	f803 1b01 	strb.w	r1, [r3], #1
    e7f0:	d8f8      	bhi.n	e7e4 <SEGGER_SYSVIEW_SendSysDesc+0x190>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e7f2:	491f      	ldr	r1, [pc, #124]	; (e870 <SEGGER_SYSVIEW_SendSysDesc+0x21c>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e7f4:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e7f6:	f8d1 8000 	ldr.w	r8, [r1]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e7fa:	68f9      	ldr	r1, [r7, #12]
    e7fc:	eba8 0101 	sub.w	r1, r8, r1
  ENCODE_U32(pPayload, Delta);
    e800:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e802:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    e806:	d906      	bls.n	e816 <SEGGER_SYSVIEW_SendSysDesc+0x1c2>
    e808:	f061 037f 	orn	r3, r1, #127	; 0x7f
    e80c:	09c9      	lsrs	r1, r1, #7
    e80e:	297f      	cmp	r1, #127	; 0x7f
    e810:	f802 3b01 	strb.w	r3, [r2], #1
    e814:	d8f8      	bhi.n	e808 <SEGGER_SYSVIEW_SendSysDesc+0x1b4>
    e816:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e818:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    e81a:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e81e:	2001      	movs	r0, #1
    e820:	4611      	mov	r1, r2
    e822:	1a9a      	subs	r2, r3, r2
    e824:	f7ff fab2 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e828:	b9a8      	cbnz	r0, e856 <SEGGER_SYSVIEW_SendSysDesc+0x202>
    _SYSVIEW_Globals.DropCount++;
    e82a:	697a      	ldr	r2, [r7, #20]
    e82c:	783b      	ldrb	r3, [r7, #0]
    e82e:	3201      	adds	r2, #1
    e830:	617a      	str	r2, [r7, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    e832:	2b01      	cmp	r3, #1
    e834:	d193      	bne.n	e75e <SEGGER_SYSVIEW_SendSysDesc+0x10a>
    e836:	e7a2      	b.n	e77e <SEGGER_SYSVIEW_SendSysDesc+0x12a>
    *pPayload++ = Len; 
    e838:	4c0f      	ldr	r4, [pc, #60]	; (e878 <SEGGER_SYSVIEW_SendSysDesc+0x224>)
    e83a:	3801      	subs	r0, #1
    e83c:	2300      	movs	r3, #0
    n++;
    e83e:	3301      	adds	r3, #1
    *pPayload++ = *pText++;
    e840:	f810 2f01 	ldrb.w	r2, [r0, #1]!
    e844:	f804 2b01 	strb.w	r2, [r4], #1
  while (n < Len) {
    e848:	459c      	cmp	ip, r3
    e84a:	d8f8      	bhi.n	e83e <SEGGER_SYSVIEW_SendSysDesc+0x1ea>
    e84c:	e782      	b.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    *pPayload++ = Len; 
    e84e:	4d05      	ldr	r5, [pc, #20]	; (e864 <SEGGER_SYSVIEW_SendSysDesc+0x210>)
    e850:	712b      	strb	r3, [r5, #4]
    e852:	1d6c      	adds	r4, r5, #5
    e854:	e77e      	b.n	e754 <SEGGER_SYSVIEW_SendSysDesc+0x100>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e856:	783b      	ldrb	r3, [r7, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e858:	f8c7 800c 	str.w	r8, [r7, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e85c:	3b01      	subs	r3, #1
    e85e:	b2db      	uxtb	r3, r3
    e860:	703b      	strb	r3, [r7, #0]
    e862:	e7e6      	b.n	e832 <SEGGER_SYSVIEW_SendSysDesc+0x1de>
    e864:	100025a4 	.word	0x100025a4
    e868:	1000157c 	.word	0x1000157c
    e86c:	100396d0 	.word	0x100396d0
    e870:	e0001004 	.word	0xe0001004
    e874:	100025a7 	.word	0x100025a7
    e878:	100025a9 	.word	0x100025a9

0000e87c <SEGGER_SYSVIEW_RecordEnterISR>:
void SEGGER_SYSVIEW_RecordEnterISR(void) {
    e87c:	b5f0      	push	{r4, r5, r6, r7, lr}
    e87e:	b085      	sub	sp, #20
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + SEGGER_SYSVIEW_QUANTA_U32);
    e880:	f3ef 8511 	mrs	r5, BASEPRI
    e884:	f04f 0120 	mov.w	r1, #32
    e888:	f381 8811 	msr	BASEPRI, r1
  v = SEGGER_SYSVIEW_GET_INTERRUPT_ID();
    e88c:	4b42      	ldr	r3, [pc, #264]	; (e998 <SEGGER_SYSVIEW_RecordEnterISR+0x11c>)
    e88e:	681b      	ldr	r3, [r3, #0]
    e890:	f3c3 0308 	ubfx	r3, r3, #0, #9
  ENCODE_U32(pPayload, v);
    e894:	2b7f      	cmp	r3, #127	; 0x7f
    e896:	d977      	bls.n	e988 <SEGGER_SYSVIEW_RecordEnterISR+0x10c>
    e898:	4c40      	ldr	r4, [pc, #256]	; (e99c <SEGGER_SYSVIEW_RecordEnterISR+0x120>)
    e89a:	f063 017f 	orn	r1, r3, #127	; 0x7f
    e89e:	7121      	strb	r1, [r4, #4]
    e8a0:	09db      	lsrs	r3, r3, #7
    e8a2:	3405      	adds	r4, #5
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e8a4:	4e3e      	ldr	r6, [pc, #248]	; (e9a0 <SEGGER_SYSVIEW_RecordEnterISR+0x124>)
  ENCODE_U32(pPayload, v);
    e8a6:	7023      	strb	r3, [r4, #0]
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e8a8:	7833      	ldrb	r3, [r6, #0]
    e8aa:	2b01      	cmp	r3, #1
    e8ac:	d00f      	beq.n	e8ce <SEGGER_SYSVIEW_RecordEnterISR+0x52>
  if (_SYSVIEW_Globals.EnableState == 0) {
    e8ae:	b963      	cbnz	r3, e8ca <SEGGER_SYSVIEW_RecordEnterISR+0x4e>
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    e8b0:	4b3c      	ldr	r3, [pc, #240]	; (e9a4 <SEGGER_SYSVIEW_RecordEnterISR+0x128>)
    e8b2:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    e8b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    e8ba:	429a      	cmp	r2, r3
    e8bc:	d001      	beq.n	e8c2 <SEGGER_SYSVIEW_RecordEnterISR+0x46>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    e8be:	78b4      	ldrb	r4, [r6, #2]
    e8c0:	b32c      	cbz	r4, e90e <SEGGER_SYSVIEW_RecordEnterISR+0x92>
  RECORD_END();
    e8c2:	f385 8811 	msr	BASEPRI, r5
}
    e8c6:	b005      	add	sp, #20
    e8c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (_SYSVIEW_Globals.EnableState == 2) {
    e8ca:	2b02      	cmp	r3, #2
    e8cc:	d02c      	beq.n	e928 <SEGGER_SYSVIEW_RecordEnterISR+0xac>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    e8ce:	69f3      	ldr	r3, [r6, #28]
    e8d0:	075b      	lsls	r3, r3, #29
    e8d2:	d4ed      	bmi.n	e8b0 <SEGGER_SYSVIEW_RecordEnterISR+0x34>
    *--pStartPacket = EventId;
    e8d4:	4a31      	ldr	r2, [pc, #196]	; (e99c <SEGGER_SYSVIEW_RecordEnterISR+0x120>)
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e8d6:	4b34      	ldr	r3, [pc, #208]	; (e9a8 <SEGGER_SYSVIEW_RecordEnterISR+0x12c>)
    *--pStartPacket = EventId;
    e8d8:	2102      	movs	r1, #2
    e8da:	70d1      	strb	r1, [r2, #3]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e8dc:	681f      	ldr	r7, [r3, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e8de:	68f3      	ldr	r3, [r6, #12]
    e8e0:	1afb      	subs	r3, r7, r3
  ENCODE_U32(pEndPacket, Delta);
    e8e2:	2b7f      	cmp	r3, #127	; 0x7f
  ENCODE_U32(pPayload, v);
    e8e4:	f104 0201 	add.w	r2, r4, #1
  ENCODE_U32(pEndPacket, Delta);
    e8e8:	d906      	bls.n	e8f8 <SEGGER_SYSVIEW_RecordEnterISR+0x7c>
    e8ea:	f063 017f 	orn	r1, r3, #127	; 0x7f
    e8ee:	09db      	lsrs	r3, r3, #7
    e8f0:	2b7f      	cmp	r3, #127	; 0x7f
    e8f2:	f802 1b01 	strb.w	r1, [r2], #1
    e8f6:	d8f8      	bhi.n	e8ea <SEGGER_SYSVIEW_RecordEnterISR+0x6e>
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e8f8:	482c      	ldr	r0, [pc, #176]	; (e9ac <SEGGER_SYSVIEW_RecordEnterISR+0x130>)
  ENCODE_U32(pEndPacket, Delta);
    e8fa:	f802 3b01 	strb.w	r3, [r2], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    e8fe:	4601      	mov	r1, r0
    e900:	1a12      	subs	r2, r2, r0
    e902:	2001      	movs	r0, #1
    e904:	f7ff fa42 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e908:	b150      	cbz	r0, e920 <SEGGER_SYSVIEW_RecordEnterISR+0xa4>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e90a:	60f7      	str	r7, [r6, #12]
    e90c:	e7d0      	b.n	e8b0 <SEGGER_SYSVIEW_RecordEnterISR+0x34>
      _SYSVIEW_Globals.RecursionCnt = 1;
    e90e:	2301      	movs	r3, #1
    e910:	70b3      	strb	r3, [r6, #2]
      _HandleIncomingPacket();
    e912:	f7ff fc4f 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    e916:	70b4      	strb	r4, [r6, #2]
  RECORD_END();
    e918:	f385 8811 	msr	BASEPRI, r5
}
    e91c:	b005      	add	sp, #20
    e91e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    e920:	7833      	ldrb	r3, [r6, #0]
    e922:	3301      	adds	r3, #1
    e924:	7033      	strb	r3, [r6, #0]
    e926:	e7c3      	b.n	e8b0 <SEGGER_SYSVIEW_RecordEnterISR+0x34>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e928:	6972      	ldr	r2, [r6, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e92a:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e92c:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    e92e:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e932:	f10d 0305 	add.w	r3, sp, #5
    e936:	d906      	bls.n	e946 <SEGGER_SYSVIEW_RecordEnterISR+0xca>
    e938:	f062 017f 	orn	r1, r2, #127	; 0x7f
    e93c:	09d2      	lsrs	r2, r2, #7
    e93e:	2a7f      	cmp	r2, #127	; 0x7f
    e940:	f803 1b01 	strb.w	r1, [r3], #1
    e944:	d8f8      	bhi.n	e938 <SEGGER_SYSVIEW_RecordEnterISR+0xbc>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e946:	4918      	ldr	r1, [pc, #96]	; (e9a8 <SEGGER_SYSVIEW_RecordEnterISR+0x12c>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e948:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    e94a:	680f      	ldr	r7, [r1, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    e94c:	68f1      	ldr	r1, [r6, #12]
    e94e:	1a79      	subs	r1, r7, r1
  ENCODE_U32(pPayload, Delta);
    e950:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    e952:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    e956:	d906      	bls.n	e966 <SEGGER_SYSVIEW_RecordEnterISR+0xea>
    e958:	f061 037f 	orn	r3, r1, #127	; 0x7f
    e95c:	09c9      	lsrs	r1, r1, #7
    e95e:	297f      	cmp	r1, #127	; 0x7f
    e960:	f802 3b01 	strb.w	r3, [r2], #1
    e964:	d8f8      	bhi.n	e958 <SEGGER_SYSVIEW_RecordEnterISR+0xdc>
    e966:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e968:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    e96a:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    e96e:	2001      	movs	r0, #1
    e970:	4611      	mov	r1, r2
    e972:	1a9a      	subs	r2, r3, r2
    e974:	f7ff fa0a 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    e978:	b940      	cbnz	r0, e98c <SEGGER_SYSVIEW_RecordEnterISR+0x110>
    _SYSVIEW_Globals.DropCount++;
    e97a:	6972      	ldr	r2, [r6, #20]
    e97c:	7833      	ldrb	r3, [r6, #0]
    e97e:	3201      	adds	r2, #1
    e980:	6172      	str	r2, [r6, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    e982:	2b01      	cmp	r3, #1
    e984:	d194      	bne.n	e8b0 <SEGGER_SYSVIEW_RecordEnterISR+0x34>
    e986:	e7a2      	b.n	e8ce <SEGGER_SYSVIEW_RecordEnterISR+0x52>
  ENCODE_U32(pPayload, v);
    e988:	4c09      	ldr	r4, [pc, #36]	; (e9b0 <SEGGER_SYSVIEW_RecordEnterISR+0x134>)
    e98a:	e78b      	b.n	e8a4 <SEGGER_SYSVIEW_RecordEnterISR+0x28>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e98c:	7833      	ldrb	r3, [r6, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    e98e:	60f7      	str	r7, [r6, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    e990:	3b01      	subs	r3, #1
    e992:	b2db      	uxtb	r3, r3
    e994:	7033      	strb	r3, [r6, #0]
    e996:	e7f4      	b.n	e982 <SEGGER_SYSVIEW_RecordEnterISR+0x106>
    e998:	e000ed04 	.word	0xe000ed04
    e99c:	100025a4 	.word	0x100025a4
    e9a0:	1000157c 	.word	0x1000157c
    e9a4:	100396d0 	.word	0x100396d0
    e9a8:	e0001004 	.word	0xe0001004
    e9ac:	100025a7 	.word	0x100025a7
    e9b0:	100025a8 	.word	0x100025a8

0000e9b4 <SEGGER_SYSVIEW_RecordEndCall>:
void SEGGER_SYSVIEW_RecordEndCall(unsigned int EventID) {
    e9b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e9b8:	b084      	sub	sp, #16
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + SEGGER_SYSVIEW_QUANTA_U32);
    e9ba:	f3ef 8611 	mrs	r6, BASEPRI
    e9be:	f04f 0120 	mov.w	r1, #32
    e9c2:	f381 8811 	msr	BASEPRI, r1
  ENCODE_U32(pPayload, EventID);
    e9c6:	4f4c      	ldr	r7, [pc, #304]	; (eaf8 <SEGGER_SYSVIEW_RecordEndCall+0x144>)
    e9c8:	287f      	cmp	r0, #127	; 0x7f
    e9ca:	463c      	mov	r4, r7
    e9cc:	d906      	bls.n	e9dc <SEGGER_SYSVIEW_RecordEndCall+0x28>
    e9ce:	f060 037f 	orn	r3, r0, #127	; 0x7f
    e9d2:	09c0      	lsrs	r0, r0, #7
    e9d4:	287f      	cmp	r0, #127	; 0x7f
    e9d6:	f804 3b01 	strb.w	r3, [r4], #1
    e9da:	d8f8      	bhi.n	e9ce <SEGGER_SYSVIEW_RecordEndCall+0x1a>
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e9dc:	4d47      	ldr	r5, [pc, #284]	; (eafc <SEGGER_SYSVIEW_RecordEndCall+0x148>)
  ENCODE_U32(pPayload, EventID);
    e9de:	7020      	strb	r0, [r4, #0]
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    e9e0:	782b      	ldrb	r3, [r5, #0]
    e9e2:	2b01      	cmp	r3, #1
    e9e4:	d010      	beq.n	ea08 <SEGGER_SYSVIEW_RecordEndCall+0x54>
  if (_SYSVIEW_Globals.EnableState == 0) {
    e9e6:	b96b      	cbnz	r3, ea04 <SEGGER_SYSVIEW_RecordEndCall+0x50>
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    e9e8:	4b45      	ldr	r3, [pc, #276]	; (eb00 <SEGGER_SYSVIEW_RecordEndCall+0x14c>)
    e9ea:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    e9ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    e9f2:	429a      	cmp	r2, r3
    e9f4:	d001      	beq.n	e9fa <SEGGER_SYSVIEW_RecordEndCall+0x46>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    e9f6:	78ac      	ldrb	r4, [r5, #2]
    e9f8:	b374      	cbz	r4, ea58 <SEGGER_SYSVIEW_RecordEndCall+0xa4>
  RECORD_END();
    e9fa:	f386 8811 	msr	BASEPRI, r6
}
    e9fe:	b004      	add	sp, #16
    ea00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (_SYSVIEW_Globals.EnableState == 2) {
    ea04:	2b02      	cmp	r3, #2
    ea06:	d039      	beq.n	ea7c <SEGGER_SYSVIEW_RecordEndCall+0xc8>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    ea08:	69eb      	ldr	r3, [r5, #28]
    ea0a:	00db      	lsls	r3, r3, #3
    ea0c:	d4ec      	bmi.n	e9e8 <SEGGER_SYSVIEW_RecordEndCall+0x34>
  ENCODE_U32(pPayload, EventID);
    ea0e:	1c62      	adds	r2, r4, #1
    NumBytes = pEndPacket - pStartPacket;
    ea10:	1bd7      	subs	r7, r2, r7
    if (NumBytes > 127) {
    ea12:	2f7f      	cmp	r7, #127	; 0x7f
    ea14:	b2fb      	uxtb	r3, r7
    NumBytes = pEndPacket - pStartPacket;
    ea16:	483b      	ldr	r0, [pc, #236]	; (eb04 <SEGGER_SYSVIEW_RecordEndCall+0x150>)
    if (NumBytes > 127) {
    ea18:	d828      	bhi.n	ea6c <SEGGER_SYSVIEW_RecordEndCall+0xb8>
      *--pStartPacket = NumBytes;
    ea1a:	1cc1      	adds	r1, r0, #3
    ea1c:	70c3      	strb	r3, [r0, #3]
      *--pStartPacket = EventId;
    ea1e:	241c      	movs	r4, #28
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ea20:	4b39      	ldr	r3, [pc, #228]	; (eb08 <SEGGER_SYSVIEW_RecordEndCall+0x154>)
      *--pStartPacket = EventId;
    ea22:	f801 4c01 	strb.w	r4, [r1, #-1]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ea26:	681c      	ldr	r4, [r3, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    ea28:	68eb      	ldr	r3, [r5, #12]
    ea2a:	1ae3      	subs	r3, r4, r3
  ENCODE_U32(pEndPacket, Delta);
    ea2c:	2b7f      	cmp	r3, #127	; 0x7f
      *--pStartPacket = EventId;
    ea2e:	f101 30ff 	add.w	r0, r1, #4294967295	; 0xffffffff
  ENCODE_U32(pEndPacket, Delta);
    ea32:	d906      	bls.n	ea42 <SEGGER_SYSVIEW_RecordEndCall+0x8e>
    ea34:	f063 017f 	orn	r1, r3, #127	; 0x7f
    ea38:	09db      	lsrs	r3, r3, #7
    ea3a:	2b7f      	cmp	r3, #127	; 0x7f
    ea3c:	f802 1b01 	strb.w	r1, [r2], #1
    ea40:	d8f8      	bhi.n	ea34 <SEGGER_SYSVIEW_RecordEndCall+0x80>
    ea42:	f802 3b01 	strb.w	r3, [r2], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    ea46:	4601      	mov	r1, r0
    ea48:	1a12      	subs	r2, r2, r0
    ea4a:	2001      	movs	r0, #1
    ea4c:	f7ff f99e 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    ea50:	2800      	cmp	r0, #0
    ea52:	d045      	beq.n	eae0 <SEGGER_SYSVIEW_RecordEndCall+0x12c>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    ea54:	60ec      	str	r4, [r5, #12]
    ea56:	e7c7      	b.n	e9e8 <SEGGER_SYSVIEW_RecordEndCall+0x34>
      _SYSVIEW_Globals.RecursionCnt = 1;
    ea58:	2301      	movs	r3, #1
    ea5a:	70ab      	strb	r3, [r5, #2]
      _HandleIncomingPacket();
    ea5c:	f7ff fbaa 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    ea60:	70ac      	strb	r4, [r5, #2]
  RECORD_END();
    ea62:	f386 8811 	msr	BASEPRI, r6
}
    ea66:	b004      	add	sp, #16
    ea68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      *--pStartPacket = NumBytes | 0x80;
    ea6c:	4601      	mov	r1, r0
    ea6e:	f063 037f 	orn	r3, r3, #127	; 0x7f
    ea72:	f801 3f02 	strb.w	r3, [r1, #2]!
      *--pStartPacket = (NumBytes >> 7);
    ea76:	f3c7 13c7 	ubfx	r3, r7, #7, #8
    ea7a:	e7cf      	b.n	ea1c <SEGGER_SYSVIEW_RecordEndCall+0x68>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ea7c:	696a      	ldr	r2, [r5, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    ea7e:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ea80:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    ea82:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ea86:	f10d 0305 	add.w	r3, sp, #5
    ea8a:	d906      	bls.n	ea9a <SEGGER_SYSVIEW_RecordEndCall+0xe6>
    ea8c:	f062 017f 	orn	r1, r2, #127	; 0x7f
    ea90:	09d2      	lsrs	r2, r2, #7
    ea92:	2a7f      	cmp	r2, #127	; 0x7f
    ea94:	f803 1b01 	strb.w	r1, [r3], #1
    ea98:	d8f8      	bhi.n	ea8c <SEGGER_SYSVIEW_RecordEndCall+0xd8>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ea9a:	491b      	ldr	r1, [pc, #108]	; (eb08 <SEGGER_SYSVIEW_RecordEndCall+0x154>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ea9c:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ea9e:	f8d1 8000 	ldr.w	r8, [r1]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    eaa2:	68e9      	ldr	r1, [r5, #12]
    eaa4:	eba8 0101 	sub.w	r1, r8, r1
  ENCODE_U32(pPayload, Delta);
    eaa8:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    eaaa:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    eaae:	d906      	bls.n	eabe <SEGGER_SYSVIEW_RecordEndCall+0x10a>
    eab0:	f061 037f 	orn	r3, r1, #127	; 0x7f
    eab4:	09c9      	lsrs	r1, r1, #7
    eab6:	297f      	cmp	r1, #127	; 0x7f
    eab8:	f802 3b01 	strb.w	r3, [r2], #1
    eabc:	d8f8      	bhi.n	eab0 <SEGGER_SYSVIEW_RecordEndCall+0xfc>
    eabe:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    eac0:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    eac2:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    eac6:	2001      	movs	r0, #1
    eac8:	4611      	mov	r1, r2
    eaca:	1a9a      	subs	r2, r3, r2
    eacc:	f7ff f95e 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    ead0:	b950      	cbnz	r0, eae8 <SEGGER_SYSVIEW_RecordEndCall+0x134>
    _SYSVIEW_Globals.DropCount++;
    ead2:	696a      	ldr	r2, [r5, #20]
    ead4:	782b      	ldrb	r3, [r5, #0]
    ead6:	3201      	adds	r2, #1
    ead8:	616a      	str	r2, [r5, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    eada:	2b01      	cmp	r3, #1
    eadc:	d184      	bne.n	e9e8 <SEGGER_SYSVIEW_RecordEndCall+0x34>
    eade:	e793      	b.n	ea08 <SEGGER_SYSVIEW_RecordEndCall+0x54>
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    eae0:	782b      	ldrb	r3, [r5, #0]
    eae2:	3301      	adds	r3, #1
    eae4:	702b      	strb	r3, [r5, #0]
    eae6:	e77f      	b.n	e9e8 <SEGGER_SYSVIEW_RecordEndCall+0x34>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    eae8:	782b      	ldrb	r3, [r5, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    eaea:	f8c5 800c 	str.w	r8, [r5, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    eaee:	3b01      	subs	r3, #1
    eaf0:	b2db      	uxtb	r3, r3
    eaf2:	702b      	strb	r3, [r5, #0]
    eaf4:	e7f1      	b.n	eada <SEGGER_SYSVIEW_RecordEndCall+0x126>
    eaf6:	bf00      	nop
    eaf8:	100025a8 	.word	0x100025a8
    eafc:	1000157c 	.word	0x1000157c
    eb00:	100396d0 	.word	0x100396d0
    eb04:	100025a4 	.word	0x100025a4
    eb08:	e0001004 	.word	0xe0001004

0000eb0c <SEGGER_SYSVIEW_RecordSystime>:
void SEGGER_SYSVIEW_RecordSystime(void) {
    eb0c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (_SYSVIEW_Globals.pOSAPI && _SYSVIEW_Globals.pOSAPI->pfGetTime) {
    eb0e:	4d5b      	ldr	r5, [pc, #364]	; (ec7c <SEGGER_SYSVIEW_RecordSystime+0x170>)
    eb10:	6a2b      	ldr	r3, [r5, #32]
void SEGGER_SYSVIEW_RecordSystime(void) {
    eb12:	b085      	sub	sp, #20
  if (_SYSVIEW_Globals.pOSAPI && _SYSVIEW_Globals.pOSAPI->pfGetTime) {
    eb14:	2b00      	cmp	r3, #0
    eb16:	d054      	beq.n	ebc2 <SEGGER_SYSVIEW_RecordSystime+0xb6>
    eb18:	681b      	ldr	r3, [r3, #0]
    eb1a:	2b00      	cmp	r3, #0
    eb1c:	d051      	beq.n	ebc2 <SEGGER_SYSVIEW_RecordSystime+0xb6>
    Systime = _SYSVIEW_Globals.pOSAPI->pfGetTime();
    eb1e:	4798      	blx	r3
    eb20:	460f      	mov	r7, r1
    SEGGER_SYSVIEW_RecordU32x2(SYSVIEW_EVTID_SYSTIME_US,
    eb22:	460b      	mov	r3, r1
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 2 * SEGGER_SYSVIEW_QUANTA_U32);
    eb24:	f3ef 8611 	mrs	r6, BASEPRI
    eb28:	f04f 0120 	mov.w	r1, #32
    eb2c:	f381 8811 	msr	BASEPRI, r1
  ENCODE_U32(pPayload, Para0);
    eb30:	287f      	cmp	r0, #127	; 0x7f
    eb32:	4c53      	ldr	r4, [pc, #332]	; (ec80 <SEGGER_SYSVIEW_RecordSystime+0x174>)
    eb34:	d906      	bls.n	eb44 <SEGGER_SYSVIEW_RecordSystime+0x38>
    eb36:	f060 017f 	orn	r1, r0, #127	; 0x7f
    eb3a:	09c0      	lsrs	r0, r0, #7
    eb3c:	287f      	cmp	r0, #127	; 0x7f
    eb3e:	f804 1b01 	strb.w	r1, [r4], #1
    eb42:	d8f8      	bhi.n	eb36 <SEGGER_SYSVIEW_RecordSystime+0x2a>
  ENCODE_U32(pPayload, Para1);
    eb44:	2f7f      	cmp	r7, #127	; 0x7f
  ENCODE_U32(pPayload, Para0);
    eb46:	7020      	strb	r0, [r4, #0]
    eb48:	f104 0401 	add.w	r4, r4, #1
  ENCODE_U32(pPayload, Para1);
    eb4c:	d906      	bls.n	eb5c <SEGGER_SYSVIEW_RecordSystime+0x50>
    eb4e:	f063 027f 	orn	r2, r3, #127	; 0x7f
    eb52:	09db      	lsrs	r3, r3, #7
    eb54:	2b7f      	cmp	r3, #127	; 0x7f
    eb56:	f804 2b01 	strb.w	r2, [r4], #1
    eb5a:	d8f8      	bhi.n	eb4e <SEGGER_SYSVIEW_RecordSystime+0x42>
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    eb5c:	782a      	ldrb	r2, [r5, #0]
  ENCODE_U32(pPayload, Para1);
    eb5e:	7023      	strb	r3, [r4, #0]
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    eb60:	2a01      	cmp	r2, #1
    eb62:	d002      	beq.n	eb6a <SEGGER_SYSVIEW_RecordSystime+0x5e>
  if (_SYSVIEW_Globals.EnableState == 0) {
    eb64:	b302      	cbz	r2, eba8 <SEGGER_SYSVIEW_RecordSystime+0x9c>
  if (_SYSVIEW_Globals.EnableState == 2) {
    eb66:	2a02      	cmp	r2, #2
    eb68:	d051      	beq.n	ec0e <SEGGER_SYSVIEW_RecordSystime+0x102>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    eb6a:	69eb      	ldr	r3, [r5, #28]
    eb6c:	049b      	lsls	r3, r3, #18
    eb6e:	d41b      	bmi.n	eba8 <SEGGER_SYSVIEW_RecordSystime+0x9c>
    *--pStartPacket = EventId;
    eb70:	4a44      	ldr	r2, [pc, #272]	; (ec84 <SEGGER_SYSVIEW_RecordSystime+0x178>)
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    eb72:	4b45      	ldr	r3, [pc, #276]	; (ec88 <SEGGER_SYSVIEW_RecordSystime+0x17c>)
    *--pStartPacket = EventId;
    eb74:	210d      	movs	r1, #13
    eb76:	70d1      	strb	r1, [r2, #3]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    eb78:	681f      	ldr	r7, [r3, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    eb7a:	68eb      	ldr	r3, [r5, #12]
    eb7c:	1afb      	subs	r3, r7, r3
  ENCODE_U32(pEndPacket, Delta);
    eb7e:	2b7f      	cmp	r3, #127	; 0x7f
  ENCODE_U32(pPayload, Para1);
    eb80:	f104 0201 	add.w	r2, r4, #1
  ENCODE_U32(pEndPacket, Delta);
    eb84:	d906      	bls.n	eb94 <SEGGER_SYSVIEW_RecordSystime+0x88>
    eb86:	f063 017f 	orn	r1, r3, #127	; 0x7f
    eb8a:	09db      	lsrs	r3, r3, #7
    eb8c:	2b7f      	cmp	r3, #127	; 0x7f
    eb8e:	f802 1b01 	strb.w	r1, [r2], #1
    eb92:	d8f8      	bhi.n	eb86 <SEGGER_SYSVIEW_RecordSystime+0x7a>
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    eb94:	483d      	ldr	r0, [pc, #244]	; (ec8c <SEGGER_SYSVIEW_RecordSystime+0x180>)
  ENCODE_U32(pEndPacket, Delta);
    eb96:	f802 3b01 	strb.w	r3, [r2], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    eb9a:	4601      	mov	r1, r0
    eb9c:	1a12      	subs	r2, r2, r0
    eb9e:	2001      	movs	r0, #1
    eba0:	f7ff f8f4 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    eba4:	b378      	cbz	r0, ec06 <SEGGER_SYSVIEW_RecordSystime+0xfa>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    eba6:	60ef      	str	r7, [r5, #12]
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    eba8:	4b39      	ldr	r3, [pc, #228]	; (ec90 <SEGGER_SYSVIEW_RecordSystime+0x184>)
    ebaa:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    ebae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    ebb2:	429a      	cmp	r2, r3
    ebb4:	d001      	beq.n	ebba <SEGGER_SYSVIEW_RecordSystime+0xae>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    ebb6:	78ac      	ldrb	r4, [r5, #2]
    ebb8:	b1fc      	cbz	r4, ebfa <SEGGER_SYSVIEW_RecordSystime+0xee>
  RECORD_END();
    ebba:	f386 8811 	msr	BASEPRI, r6
}
    ebbe:	b005      	add	sp, #20
    ebc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    SEGGER_SYSVIEW_RecordU32(SYSVIEW_EVTID_SYSTIME_CYCLES, SEGGER_SYSVIEW_GET_TIMESTAMP());
    ebc2:	4b31      	ldr	r3, [pc, #196]	; (ec88 <SEGGER_SYSVIEW_RecordSystime+0x17c>)
    ebc4:	681b      	ldr	r3, [r3, #0]
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + SEGGER_SYSVIEW_QUANTA_U32);
    ebc6:	f3ef 8411 	mrs	r4, BASEPRI
    ebca:	f04f 0120 	mov.w	r1, #32
    ebce:	f381 8811 	msr	BASEPRI, r1
  ENCODE_U32(pPayload, Value);
    ebd2:	2b7f      	cmp	r3, #127	; 0x7f
    ebd4:	492a      	ldr	r1, [pc, #168]	; (ec80 <SEGGER_SYSVIEW_RecordSystime+0x174>)
    ebd6:	d906      	bls.n	ebe6 <SEGGER_SYSVIEW_RecordSystime+0xda>
    ebd8:	f063 027f 	orn	r2, r3, #127	; 0x7f
    ebdc:	09db      	lsrs	r3, r3, #7
    ebde:	2b7f      	cmp	r3, #127	; 0x7f
    ebe0:	f801 2b01 	strb.w	r2, [r1], #1
    ebe4:	d8f8      	bhi.n	ebd8 <SEGGER_SYSVIEW_RecordSystime+0xcc>
  _SendPacket(pPayloadStart, pPayload, EventID);
    ebe6:	4826      	ldr	r0, [pc, #152]	; (ec80 <SEGGER_SYSVIEW_RecordSystime+0x174>)
  ENCODE_U32(pPayload, Value);
    ebe8:	f801 3b01 	strb.w	r3, [r1], #1
  _SendPacket(pPayloadStart, pPayload, EventID);
    ebec:	220c      	movs	r2, #12
    ebee:	f7ff fb6f 	bl	e2d0 <_SendPacket>
  RECORD_END();
    ebf2:	f384 8811 	msr	BASEPRI, r4
}
    ebf6:	b005      	add	sp, #20
    ebf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
      _SYSVIEW_Globals.RecursionCnt = 1;
    ebfa:	2301      	movs	r3, #1
    ebfc:	70ab      	strb	r3, [r5, #2]
      _HandleIncomingPacket();
    ebfe:	f7ff fad9 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    ec02:	70ac      	strb	r4, [r5, #2]
    ec04:	e7d9      	b.n	ebba <SEGGER_SYSVIEW_RecordSystime+0xae>
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    ec06:	782b      	ldrb	r3, [r5, #0]
    ec08:	3301      	adds	r3, #1
    ec0a:	702b      	strb	r3, [r5, #0]
    ec0c:	e7cc      	b.n	eba8 <SEGGER_SYSVIEW_RecordSystime+0x9c>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ec0e:	696a      	ldr	r2, [r5, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    ec10:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ec12:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    ec14:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ec18:	f10d 0305 	add.w	r3, sp, #5
    ec1c:	d906      	bls.n	ec2c <SEGGER_SYSVIEW_RecordSystime+0x120>
    ec1e:	f062 017f 	orn	r1, r2, #127	; 0x7f
    ec22:	09d2      	lsrs	r2, r2, #7
    ec24:	2a7f      	cmp	r2, #127	; 0x7f
    ec26:	f803 1b01 	strb.w	r1, [r3], #1
    ec2a:	d8f8      	bhi.n	ec1e <SEGGER_SYSVIEW_RecordSystime+0x112>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ec2c:	4916      	ldr	r1, [pc, #88]	; (ec88 <SEGGER_SYSVIEW_RecordSystime+0x17c>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ec2e:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ec30:	680f      	ldr	r7, [r1, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    ec32:	68e9      	ldr	r1, [r5, #12]
    ec34:	1a79      	subs	r1, r7, r1
  ENCODE_U32(pPayload, Delta);
    ec36:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ec38:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    ec3c:	d906      	bls.n	ec4c <SEGGER_SYSVIEW_RecordSystime+0x140>
    ec3e:	f061 037f 	orn	r3, r1, #127	; 0x7f
    ec42:	09c9      	lsrs	r1, r1, #7
    ec44:	297f      	cmp	r1, #127	; 0x7f
    ec46:	f802 3b01 	strb.w	r3, [r2], #1
    ec4a:	d8f8      	bhi.n	ec3e <SEGGER_SYSVIEW_RecordSystime+0x132>
    ec4c:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    ec4e:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    ec50:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    ec54:	2001      	movs	r0, #1
    ec56:	4611      	mov	r1, r2
    ec58:	1a9a      	subs	r2, r3, r2
    ec5a:	f7ff f897 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    ec5e:	b930      	cbnz	r0, ec6e <SEGGER_SYSVIEW_RecordSystime+0x162>
    _SYSVIEW_Globals.DropCount++;
    ec60:	696a      	ldr	r2, [r5, #20]
    ec62:	782b      	ldrb	r3, [r5, #0]
    ec64:	3201      	adds	r2, #1
    ec66:	616a      	str	r2, [r5, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    ec68:	2b01      	cmp	r3, #1
    ec6a:	d19d      	bne.n	eba8 <SEGGER_SYSVIEW_RecordSystime+0x9c>
    ec6c:	e77d      	b.n	eb6a <SEGGER_SYSVIEW_RecordSystime+0x5e>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    ec6e:	782b      	ldrb	r3, [r5, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    ec70:	60ef      	str	r7, [r5, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    ec72:	3b01      	subs	r3, #1
    ec74:	b2db      	uxtb	r3, r3
    ec76:	702b      	strb	r3, [r5, #0]
    ec78:	e7f6      	b.n	ec68 <SEGGER_SYSVIEW_RecordSystime+0x15c>
    ec7a:	bf00      	nop
    ec7c:	1000157c 	.word	0x1000157c
    ec80:	100025a8 	.word	0x100025a8
    ec84:	100025a4 	.word	0x100025a4
    ec88:	e0001004 	.word	0xe0001004
    ec8c:	100025a7 	.word	0x100025a7
    ec90:	100396d0 	.word	0x100396d0

0000ec94 <SEGGER_SYSVIEW_Start>:
void SEGGER_SYSVIEW_Start(void) {
    ec94:	b538      	push	{r3, r4, r5, lr}
  if (_SYSVIEW_Globals.EnableState == 0) {
    ec96:	4c3b      	ldr	r4, [pc, #236]	; (ed84 <SEGGER_SYSVIEW_Start+0xf0>)
    ec98:	7823      	ldrb	r3, [r4, #0]
    ec9a:	b103      	cbz	r3, ec9e <SEGGER_SYSVIEW_Start+0xa>
}
    ec9c:	bd38      	pop	{r3, r4, r5, pc}
    _SYSVIEW_Globals.EnableState = 1;
    ec9e:	2001      	movs	r0, #1
    eca0:	7020      	strb	r0, [r4, #0]
    SEGGER_SYSVIEW_LOCK();
    eca2:	f3ef 8511 	mrs	r5, BASEPRI
    eca6:	f04f 0120 	mov.w	r1, #32
    ecaa:	f381 8811 	msr	BASEPRI, r1
    SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, _abSync, 10);
    ecae:	220a      	movs	r2, #10
    ecb0:	4935      	ldr	r1, [pc, #212]	; (ed88 <SEGGER_SYSVIEW_Start+0xf4>)
    ecb2:	f7ff f86b 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
    SEGGER_SYSVIEW_UNLOCK();
    ecb6:	f385 8811 	msr	BASEPRI, r5
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE);
    ecba:	f3ef 8511 	mrs	r5, BASEPRI
    ecbe:	f04f 0120 	mov.w	r1, #32
    ecc2:	f381 8811 	msr	BASEPRI, r1
  _SendPacket(pPayloadStart, pPayloadStart, EventID);
    ecc6:	4931      	ldr	r1, [pc, #196]	; (ed8c <SEGGER_SYSVIEW_Start+0xf8>)
    ecc8:	220a      	movs	r2, #10
    ecca:	4608      	mov	r0, r1
    eccc:	f7ff fb00 	bl	e2d0 <_SendPacket>
  RECORD_END();
    ecd0:	f385 8811 	msr	BASEPRI, r5
      RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 4 * SEGGER_SYSVIEW_QUANTA_U32);
    ecd4:	f3ef 8511 	mrs	r5, BASEPRI
    ecd8:	f04f 0120 	mov.w	r1, #32
    ecdc:	f381 8811 	msr	BASEPRI, r1
      ENCODE_U32(pPayload, _SYSVIEW_Globals.SysFreq);
    ece0:	6862      	ldr	r2, [r4, #4]
    ece2:	4b2a      	ldr	r3, [pc, #168]	; (ed8c <SEGGER_SYSVIEW_Start+0xf8>)
    ece4:	2a7f      	cmp	r2, #127	; 0x7f
    ece6:	d906      	bls.n	ecf6 <SEGGER_SYSVIEW_Start+0x62>
    ece8:	f062 017f 	orn	r1, r2, #127	; 0x7f
    ecec:	09d2      	lsrs	r2, r2, #7
    ecee:	2a7f      	cmp	r2, #127	; 0x7f
    ecf0:	f803 1b01 	strb.w	r1, [r3], #1
    ecf4:	d8f8      	bhi.n	ece8 <SEGGER_SYSVIEW_Start+0x54>
      ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ecf6:	68a1      	ldr	r1, [r4, #8]
      ENCODE_U32(pPayload, _SYSVIEW_Globals.SysFreq);
    ecf8:	701a      	strb	r2, [r3, #0]
      ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ecfa:	297f      	cmp	r1, #127	; 0x7f
      ENCODE_U32(pPayload, _SYSVIEW_Globals.SysFreq);
    ecfc:	f103 0301 	add.w	r3, r3, #1
      ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ed00:	d906      	bls.n	ed10 <SEGGER_SYSVIEW_Start+0x7c>
    ed02:	f061 027f 	orn	r2, r1, #127	; 0x7f
    ed06:	09c9      	lsrs	r1, r1, #7
    ed08:	297f      	cmp	r1, #127	; 0x7f
    ed0a:	f803 2b01 	strb.w	r2, [r3], #1
    ed0e:	d8f8      	bhi.n	ed02 <SEGGER_SYSVIEW_Start+0x6e>
      ENCODE_U32(pPayload, _SYSVIEW_Globals.RAMBaseAddress);
    ed10:	6922      	ldr	r2, [r4, #16]
      ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ed12:	7019      	strb	r1, [r3, #0]
      ENCODE_U32(pPayload, _SYSVIEW_Globals.RAMBaseAddress);
    ed14:	2a7f      	cmp	r2, #127	; 0x7f
      ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ed16:	f103 0301 	add.w	r3, r3, #1
      ENCODE_U32(pPayload, _SYSVIEW_Globals.RAMBaseAddress);
    ed1a:	d906      	bls.n	ed2a <SEGGER_SYSVIEW_Start+0x96>
    ed1c:	f062 017f 	orn	r1, r2, #127	; 0x7f
    ed20:	09d2      	lsrs	r2, r2, #7
    ed22:	2a7f      	cmp	r2, #127	; 0x7f
    ed24:	f803 1b01 	strb.w	r1, [r3], #1
    ed28:	d8f8      	bhi.n	ed1c <SEGGER_SYSVIEW_Start+0x88>
      ENCODE_U32(pPayload, SEGGER_SYSVIEW_ID_SHIFT);
    ed2a:	2002      	movs	r0, #2
      _SendPacket(pPayloadStart, pPayload, SYSVIEW_EVTID_INIT);
    ed2c:	1819      	adds	r1, r3, r0
      ENCODE_U32(pPayload, _SYSVIEW_Globals.RAMBaseAddress);
    ed2e:	701a      	strb	r2, [r3, #0]
      ENCODE_U32(pPayload, SEGGER_SYSVIEW_ID_SHIFT);
    ed30:	7058      	strb	r0, [r3, #1]
      _SendPacket(pPayloadStart, pPayload, SYSVIEW_EVTID_INIT);
    ed32:	2218      	movs	r2, #24
    ed34:	4815      	ldr	r0, [pc, #84]	; (ed8c <SEGGER_SYSVIEW_Start+0xf8>)
    ed36:	f7ff facb 	bl	e2d0 <_SendPacket>
      RECORD_END();
    ed3a:	f385 8811 	msr	BASEPRI, r5
    if (_SYSVIEW_Globals.pfSendSysDesc) {
    ed3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
    ed40:	b103      	cbz	r3, ed44 <SEGGER_SYSVIEW_Start+0xb0>
      _SYSVIEW_Globals.pfSendSysDesc();
    ed42:	4798      	blx	r3
    SEGGER_SYSVIEW_RecordSystime();
    ed44:	f7ff fee2 	bl	eb0c <SEGGER_SYSVIEW_RecordSystime>
  if (_SYSVIEW_Globals.pOSAPI && _SYSVIEW_Globals.pOSAPI->pfSendTaskList) {
    ed48:	6a23      	ldr	r3, [r4, #32]
    ed4a:	b113      	cbz	r3, ed52 <SEGGER_SYSVIEW_Start+0xbe>
    ed4c:	685b      	ldr	r3, [r3, #4]
    ed4e:	b103      	cbz	r3, ed52 <SEGGER_SYSVIEW_Start+0xbe>
    _SYSVIEW_Globals.pOSAPI->pfSendTaskList();
    ed50:	4798      	blx	r3
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 2*SEGGER_SYSVIEW_QUANTA_U32);
    ed52:	f3ef 8411 	mrs	r4, BASEPRI
    ed56:	f04f 0120 	mov.w	r1, #32
    ed5a:	f381 8811 	msr	BASEPRI, r1
  ENCODE_U32(pPayload, _NumModules);
    ed5e:	4b0c      	ldr	r3, [pc, #48]	; (ed90 <SEGGER_SYSVIEW_Start+0xfc>)
    ed60:	781b      	ldrb	r3, [r3, #0]
    ed62:	2b7f      	cmp	r3, #127	; 0x7f
    ed64:	d90c      	bls.n	ed80 <SEGGER_SYSVIEW_Start+0xec>
    ed66:	490b      	ldr	r1, [pc, #44]	; (ed94 <SEGGER_SYSVIEW_Start+0x100>)
    ed68:	710b      	strb	r3, [r1, #4]
    ed6a:	3105      	adds	r1, #5
    ed6c:	2301      	movs	r3, #1
  _SendPacket(pPayloadStart, pPayload, SYSVIEW_EVTID_NUMMODULES);
    ed6e:	4807      	ldr	r0, [pc, #28]	; (ed8c <SEGGER_SYSVIEW_Start+0xf8>)
  ENCODE_U32(pPayload, _NumModules);
    ed70:	f801 3b01 	strb.w	r3, [r1], #1
  _SendPacket(pPayloadStart, pPayload, SYSVIEW_EVTID_NUMMODULES);
    ed74:	221b      	movs	r2, #27
    ed76:	f7ff faab 	bl	e2d0 <_SendPacket>
  RECORD_END();
    ed7a:	f384 8811 	msr	BASEPRI, r4
}
    ed7e:	bd38      	pop	{r3, r4, r5, pc}
  ENCODE_U32(pPayload, _NumModules);
    ed80:	4902      	ldr	r1, [pc, #8]	; (ed8c <SEGGER_SYSVIEW_Start+0xf8>)
    ed82:	e7f4      	b.n	ed6e <SEGGER_SYSVIEW_Start+0xda>
    ed84:	1000157c 	.word	0x1000157c
    ed88:	00023ba0 	.word	0x00023ba0
    ed8c:	100025a8 	.word	0x100025a8
    ed90:	10001578 	.word	0x10001578
    ed94:	100025a4 	.word	0x100025a4

0000ed98 <SEGGER_SYSVIEW_RecordVoid>:
void SEGGER_SYSVIEW_RecordVoid(unsigned int EventID) {
    ed98:	b5f0      	push	{r4, r5, r6, r7, lr}
    ed9a:	4605      	mov	r5, r0
    ed9c:	b085      	sub	sp, #20
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE);
    ed9e:	f3ef 8611 	mrs	r6, BASEPRI
    eda2:	f04f 0120 	mov.w	r1, #32
    eda6:	f381 8811 	msr	BASEPRI, r1
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    edaa:	4c49      	ldr	r4, [pc, #292]	; (eed0 <SEGGER_SYSVIEW_RecordVoid+0x138>)
    edac:	7823      	ldrb	r3, [r4, #0]
    edae:	2b01      	cmp	r3, #1
    edb0:	d010      	beq.n	edd4 <SEGGER_SYSVIEW_RecordVoid+0x3c>
  if (_SYSVIEW_Globals.EnableState == 0) {
    edb2:	b96b      	cbnz	r3, edd0 <SEGGER_SYSVIEW_RecordVoid+0x38>
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    edb4:	4b47      	ldr	r3, [pc, #284]	; (eed4 <SEGGER_SYSVIEW_RecordVoid+0x13c>)
    edb6:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    edba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    edbe:	429a      	cmp	r2, r3
    edc0:	d002      	beq.n	edc8 <SEGGER_SYSVIEW_RecordVoid+0x30>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    edc2:	78a5      	ldrb	r5, [r4, #2]
    edc4:	2d00      	cmp	r5, #0
    edc6:	d039      	beq.n	ee3c <SEGGER_SYSVIEW_RecordVoid+0xa4>
  RECORD_END();
    edc8:	f386 8811 	msr	BASEPRI, r6
}
    edcc:	b005      	add	sp, #20
    edce:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (_SYSVIEW_Globals.EnableState == 2) {
    edd0:	2b02      	cmp	r3, #2
    edd2:	d041      	beq.n	ee58 <SEGGER_SYSVIEW_RecordVoid+0xc0>
  if (EventId < 32) {
    edd4:	2d1f      	cmp	r5, #31
    edd6:	d823      	bhi.n	ee20 <SEGGER_SYSVIEW_RecordVoid+0x88>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    edd8:	69e3      	ldr	r3, [r4, #28]
    edda:	40eb      	lsrs	r3, r5
    eddc:	f013 0301 	ands.w	r3, r3, #1
    ede0:	d1e8      	bne.n	edb4 <SEGGER_SYSVIEW_RecordVoid+0x1c>
  if (EventId < 24) {
    ede2:	2d17      	cmp	r5, #23
    ede4:	b2ea      	uxtb	r2, r5
    ede6:	d832      	bhi.n	ee4e <SEGGER_SYSVIEW_RecordVoid+0xb6>
    *--pStartPacket = EventId;
    ede8:	483b      	ldr	r0, [pc, #236]	; (eed8 <SEGGER_SYSVIEW_RecordVoid+0x140>)
    edea:	f800 2f03 	strb.w	r2, [r0, #3]!
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    edee:	4a3b      	ldr	r2, [pc, #236]	; (eedc <SEGGER_SYSVIEW_RecordVoid+0x144>)
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    edf0:	68e3      	ldr	r3, [r4, #12]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    edf2:	6815      	ldr	r5, [r2, #0]
  ENCODE_U32(pEndPacket, Delta);
    edf4:	4a3a      	ldr	r2, [pc, #232]	; (eee0 <SEGGER_SYSVIEW_RecordVoid+0x148>)
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    edf6:	1aeb      	subs	r3, r5, r3
  ENCODE_U32(pEndPacket, Delta);
    edf8:	2b7f      	cmp	r3, #127	; 0x7f
    edfa:	d906      	bls.n	ee0a <SEGGER_SYSVIEW_RecordVoid+0x72>
    edfc:	f063 017f 	orn	r1, r3, #127	; 0x7f
    ee00:	09db      	lsrs	r3, r3, #7
    ee02:	2b7f      	cmp	r3, #127	; 0x7f
    ee04:	f802 1b01 	strb.w	r1, [r2], #1
    ee08:	d8f8      	bhi.n	edfc <SEGGER_SYSVIEW_RecordVoid+0x64>
    ee0a:	f802 3b01 	strb.w	r3, [r2], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    ee0e:	4601      	mov	r1, r0
    ee10:	1a12      	subs	r2, r2, r0
    ee12:	2001      	movs	r0, #1
    ee14:	f7fe ffba 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    ee18:	2800      	cmp	r0, #0
    ee1a:	d04e      	beq.n	eeba <SEGGER_SYSVIEW_RecordVoid+0x122>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    ee1c:	60e5      	str	r5, [r4, #12]
    ee1e:	e7c9      	b.n	edb4 <SEGGER_SYSVIEW_RecordVoid+0x1c>
      *--pStartPacket = NumBytes;
    ee20:	492d      	ldr	r1, [pc, #180]	; (eed8 <SEGGER_SYSVIEW_RecordVoid+0x140>)
    ee22:	2300      	movs	r3, #0
    if (EventId > 127) {
    ee24:	2d7f      	cmp	r5, #127	; 0x7f
      *--pStartPacket = NumBytes;
    ee26:	70cb      	strb	r3, [r1, #3]
    ee28:	b2ea      	uxtb	r2, r5
    if (EventId > 127) {
    ee2a:	d912      	bls.n	ee52 <SEGGER_SYSVIEW_RecordVoid+0xba>
      *--pStartPacket = EventId | 0x80;
    ee2c:	4608      	mov	r0, r1
      *--pStartPacket = (EventId >> 7);
    ee2e:	09ed      	lsrs	r5, r5, #7
      *--pStartPacket = EventId | 0x80;
    ee30:	f062 027f 	orn	r2, r2, #127	; 0x7f
      *--pStartPacket = (EventId >> 7);
    ee34:	708d      	strb	r5, [r1, #2]
      *--pStartPacket = EventId | 0x80;
    ee36:	f800 2f01 	strb.w	r2, [r0, #1]!
    ee3a:	e7d8      	b.n	edee <SEGGER_SYSVIEW_RecordVoid+0x56>
      _SYSVIEW_Globals.RecursionCnt = 1;
    ee3c:	2301      	movs	r3, #1
    ee3e:	70a3      	strb	r3, [r4, #2]
      _HandleIncomingPacket();
    ee40:	f7ff f9b8 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    ee44:	70a5      	strb	r5, [r4, #2]
  RECORD_END();
    ee46:	f386 8811 	msr	BASEPRI, r6
}
    ee4a:	b005      	add	sp, #20
    ee4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      *--pStartPacket = NumBytes;
    ee4e:	4922      	ldr	r1, [pc, #136]	; (eed8 <SEGGER_SYSVIEW_RecordVoid+0x140>)
    ee50:	70cb      	strb	r3, [r1, #3]
      *--pStartPacket = EventId;
    ee52:	4824      	ldr	r0, [pc, #144]	; (eee4 <SEGGER_SYSVIEW_RecordVoid+0x14c>)
    ee54:	708a      	strb	r2, [r1, #2]
    ee56:	e7ca      	b.n	edee <SEGGER_SYSVIEW_RecordVoid+0x56>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ee58:	6962      	ldr	r2, [r4, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    ee5a:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ee5c:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    ee5e:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ee62:	f10d 0305 	add.w	r3, sp, #5
    ee66:	d906      	bls.n	ee76 <SEGGER_SYSVIEW_RecordVoid+0xde>
    ee68:	f062 017f 	orn	r1, r2, #127	; 0x7f
    ee6c:	09d2      	lsrs	r2, r2, #7
    ee6e:	2a7f      	cmp	r2, #127	; 0x7f
    ee70:	f803 1b01 	strb.w	r1, [r3], #1
    ee74:	d8f8      	bhi.n	ee68 <SEGGER_SYSVIEW_RecordVoid+0xd0>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ee76:	4919      	ldr	r1, [pc, #100]	; (eedc <SEGGER_SYSVIEW_RecordVoid+0x144>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ee78:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ee7a:	680f      	ldr	r7, [r1, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    ee7c:	68e1      	ldr	r1, [r4, #12]
    ee7e:	1a79      	subs	r1, r7, r1
  ENCODE_U32(pPayload, Delta);
    ee80:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    ee82:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    ee86:	d906      	bls.n	ee96 <SEGGER_SYSVIEW_RecordVoid+0xfe>
    ee88:	f061 037f 	orn	r3, r1, #127	; 0x7f
    ee8c:	09c9      	lsrs	r1, r1, #7
    ee8e:	297f      	cmp	r1, #127	; 0x7f
    ee90:	f802 3b01 	strb.w	r3, [r2], #1
    ee94:	d8f8      	bhi.n	ee88 <SEGGER_SYSVIEW_RecordVoid+0xf0>
    ee96:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    ee98:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    ee9a:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    ee9e:	2001      	movs	r0, #1
    eea0:	4611      	mov	r1, r2
    eea2:	1a9a      	subs	r2, r3, r2
    eea4:	f7fe ff72 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    eea8:	b958      	cbnz	r0, eec2 <SEGGER_SYSVIEW_RecordVoid+0x12a>
    _SYSVIEW_Globals.DropCount++;
    eeaa:	6962      	ldr	r2, [r4, #20]
    eeac:	7823      	ldrb	r3, [r4, #0]
    eeae:	3201      	adds	r2, #1
    eeb0:	6162      	str	r2, [r4, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    eeb2:	2b01      	cmp	r3, #1
    eeb4:	f47f af7e 	bne.w	edb4 <SEGGER_SYSVIEW_RecordVoid+0x1c>
    eeb8:	e78c      	b.n	edd4 <SEGGER_SYSVIEW_RecordVoid+0x3c>
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    eeba:	7823      	ldrb	r3, [r4, #0]
    eebc:	3301      	adds	r3, #1
    eebe:	7023      	strb	r3, [r4, #0]
    eec0:	e778      	b.n	edb4 <SEGGER_SYSVIEW_RecordVoid+0x1c>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    eec2:	7823      	ldrb	r3, [r4, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    eec4:	60e7      	str	r7, [r4, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    eec6:	3b01      	subs	r3, #1
    eec8:	b2db      	uxtb	r3, r3
    eeca:	7023      	strb	r3, [r4, #0]
    eecc:	e7f1      	b.n	eeb2 <SEGGER_SYSVIEW_RecordVoid+0x11a>
    eece:	bf00      	nop
    eed0:	1000157c 	.word	0x1000157c
    eed4:	100396d0 	.word	0x100396d0
    eed8:	100025a4 	.word	0x100025a4
    eedc:	e0001004 	.word	0xe0001004
    eee0:	100025a8 	.word	0x100025a8
    eee4:	100025a6 	.word	0x100025a6

0000eee8 <SEGGER_SYSVIEW_GetSysDesc>:
void SEGGER_SYSVIEW_GetSysDesc(void) {
    eee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    eeec:	b084      	sub	sp, #16
  RECORD_START(SEGGER_SYSVIEW_INFO_SIZE + 4 * SEGGER_SYSVIEW_QUANTA_U32);
    eeee:	f3ef 8711 	mrs	r7, BASEPRI
    eef2:	f04f 0120 	mov.w	r1, #32
    eef6:	f381 8811 	msr	BASEPRI, r1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.SysFreq);
    eefa:	4d5b      	ldr	r5, [pc, #364]	; (f068 <SEGGER_SYSVIEW_GetSysDesc+0x180>)
    eefc:	4e5b      	ldr	r6, [pc, #364]	; (f06c <SEGGER_SYSVIEW_GetSysDesc+0x184>)
    eefe:	686b      	ldr	r3, [r5, #4]
    ef00:	2b7f      	cmp	r3, #127	; 0x7f
    ef02:	4634      	mov	r4, r6
    ef04:	d906      	bls.n	ef14 <SEGGER_SYSVIEW_GetSysDesc+0x2c>
    ef06:	f063 027f 	orn	r2, r3, #127	; 0x7f
    ef0a:	09db      	lsrs	r3, r3, #7
    ef0c:	2b7f      	cmp	r3, #127	; 0x7f
    ef0e:	f804 2b01 	strb.w	r2, [r4], #1
    ef12:	d8f8      	bhi.n	ef06 <SEGGER_SYSVIEW_GetSysDesc+0x1e>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ef14:	68aa      	ldr	r2, [r5, #8]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.SysFreq);
    ef16:	7023      	strb	r3, [r4, #0]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ef18:	2a7f      	cmp	r2, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.SysFreq);
    ef1a:	f104 0401 	add.w	r4, r4, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ef1e:	d906      	bls.n	ef2e <SEGGER_SYSVIEW_GetSysDesc+0x46>
    ef20:	f062 037f 	orn	r3, r2, #127	; 0x7f
    ef24:	09d2      	lsrs	r2, r2, #7
    ef26:	2a7f      	cmp	r2, #127	; 0x7f
    ef28:	f804 3b01 	strb.w	r3, [r4], #1
    ef2c:	d8f8      	bhi.n	ef20 <SEGGER_SYSVIEW_GetSysDesc+0x38>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.RAMBaseAddress);
    ef2e:	692b      	ldr	r3, [r5, #16]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ef30:	7022      	strb	r2, [r4, #0]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.RAMBaseAddress);
    ef32:	2b7f      	cmp	r3, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.CPUFreq);
    ef34:	f104 0401 	add.w	r4, r4, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.RAMBaseAddress);
    ef38:	d906      	bls.n	ef48 <SEGGER_SYSVIEW_GetSysDesc+0x60>
    ef3a:	f063 027f 	orn	r2, r3, #127	; 0x7f
    ef3e:	09db      	lsrs	r3, r3, #7
    ef40:	2b7f      	cmp	r3, #127	; 0x7f
    ef42:	f804 2b01 	strb.w	r2, [r4], #1
    ef46:	d8f8      	bhi.n	ef3a <SEGGER_SYSVIEW_GetSysDesc+0x52>
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    ef48:	782a      	ldrb	r2, [r5, #0]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.RAMBaseAddress);
    ef4a:	7023      	strb	r3, [r4, #0]
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    ef4c:	2a01      	cmp	r2, #1
  ENCODE_U32(pPayload, SEGGER_SYSVIEW_ID_SHIFT);
    ef4e:	f04f 0302 	mov.w	r3, #2
    ef52:	7063      	strb	r3, [r4, #1]
  if (_SYSVIEW_Globals.EnableState == 1) {  // Enabled, no dropped packets remaining
    ef54:	d014      	beq.n	ef80 <SEGGER_SYSVIEW_GetSysDesc+0x98>
  if (_SYSVIEW_Globals.EnableState == 0) {
    ef56:	b98a      	cbnz	r2, ef7c <SEGGER_SYSVIEW_GetSysDesc+0x94>
  if (SEGGER_RTT_HASDATA(CHANNEL_ID_DOWN)) {
    ef58:	4b45      	ldr	r3, [pc, #276]	; (f070 <SEGGER_SYSVIEW_GetSysDesc+0x188>)
    ef5a:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    ef5e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    ef62:	429a      	cmp	r2, r3
    ef64:	d002      	beq.n	ef6c <SEGGER_SYSVIEW_GetSysDesc+0x84>
    if (_SYSVIEW_Globals.RecursionCnt == 0) {   // Avoid uncontrolled nesting. This way, this routine can call itself once, but no more often than that.
    ef66:	78ac      	ldrb	r4, [r5, #2]
    ef68:	2c00      	cmp	r4, #0
    ef6a:	d031      	beq.n	efd0 <SEGGER_SYSVIEW_GetSysDesc+0xe8>
  RECORD_END();
    ef6c:	f387 8811 	msr	BASEPRI, r7
  if (_SYSVIEW_Globals.pfSendSysDesc) {
    ef70:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    ef72:	b103      	cbz	r3, ef76 <SEGGER_SYSVIEW_GetSysDesc+0x8e>
    _SYSVIEW_Globals.pfSendSysDesc();
    ef74:	4798      	blx	r3
}
    ef76:	b004      	add	sp, #16
    ef78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (_SYSVIEW_Globals.EnableState == 2) {
    ef7c:	2a02      	cmp	r2, #2
    ef7e:	d035      	beq.n	efec <SEGGER_SYSVIEW_GetSysDesc+0x104>
    if (_SYSVIEW_Globals.DisabledEvents & ((U32)1u << EventId)) {
    ef80:	7feb      	ldrb	r3, [r5, #31]
    ef82:	07db      	lsls	r3, r3, #31
    ef84:	d4e8      	bmi.n	ef58 <SEGGER_SYSVIEW_GetSysDesc+0x70>
  ENCODE_U32(pPayload, SEGGER_SYSVIEW_ID_SHIFT);
    ef86:	1ca2      	adds	r2, r4, #2
    NumBytes = pEndPacket - pStartPacket;
    ef88:	1b96      	subs	r6, r2, r6
    if (NumBytes > 127) {
    ef8a:	2e7f      	cmp	r6, #127	; 0x7f
    ef8c:	b2f3      	uxtb	r3, r6
    NumBytes = pEndPacket - pStartPacket;
    ef8e:	4839      	ldr	r0, [pc, #228]	; (f074 <SEGGER_SYSVIEW_GetSysDesc+0x18c>)
    if (NumBytes > 127) {
    ef90:	d824      	bhi.n	efdc <SEGGER_SYSVIEW_GetSysDesc+0xf4>
      *--pStartPacket = NumBytes;
    ef92:	1cc1      	adds	r1, r0, #3
    ef94:	70c3      	strb	r3, [r0, #3]
      *--pStartPacket = EventId;
    ef96:	2418      	movs	r4, #24
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ef98:	4b37      	ldr	r3, [pc, #220]	; (f078 <SEGGER_SYSVIEW_GetSysDesc+0x190>)
      *--pStartPacket = EventId;
    ef9a:	f801 4c01 	strb.w	r4, [r1, #-1]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    ef9e:	681c      	ldr	r4, [r3, #0]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    efa0:	68eb      	ldr	r3, [r5, #12]
    efa2:	1ae3      	subs	r3, r4, r3
  ENCODE_U32(pEndPacket, Delta);
    efa4:	2b7f      	cmp	r3, #127	; 0x7f
      *--pStartPacket = EventId;
    efa6:	f101 30ff 	add.w	r0, r1, #4294967295	; 0xffffffff
  ENCODE_U32(pEndPacket, Delta);
    efaa:	d906      	bls.n	efba <SEGGER_SYSVIEW_GetSysDesc+0xd2>
    efac:	f063 017f 	orn	r1, r3, #127	; 0x7f
    efb0:	09db      	lsrs	r3, r3, #7
    efb2:	2b7f      	cmp	r3, #127	; 0x7f
    efb4:	f802 1b01 	strb.w	r1, [r2], #1
    efb8:	d8f8      	bhi.n	efac <SEGGER_SYSVIEW_GetSysDesc+0xc4>
    efba:	f802 3b01 	strb.w	r3, [r2], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, pStartPacket, pEndPacket - pStartPacket);
    efbe:	4601      	mov	r1, r0
    efc0:	1a12      	subs	r2, r2, r0
    efc2:	2001      	movs	r0, #1
    efc4:	f7fe fee2 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    efc8:	2800      	cmp	r0, #0
    efca:	d041      	beq.n	f050 <SEGGER_SYSVIEW_GetSysDesc+0x168>
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    efcc:	60ec      	str	r4, [r5, #12]
    efce:	e7c3      	b.n	ef58 <SEGGER_SYSVIEW_GetSysDesc+0x70>
      _SYSVIEW_Globals.RecursionCnt = 1;
    efd0:	2301      	movs	r3, #1
    efd2:	70ab      	strb	r3, [r5, #2]
      _HandleIncomingPacket();
    efd4:	f7ff f8ee 	bl	e1b4 <_HandleIncomingPacket>
      _SYSVIEW_Globals.RecursionCnt = 0;
    efd8:	70ac      	strb	r4, [r5, #2]
    efda:	e7c7      	b.n	ef6c <SEGGER_SYSVIEW_GetSysDesc+0x84>
      *--pStartPacket = NumBytes | 0x80;
    efdc:	4601      	mov	r1, r0
    efde:	f063 037f 	orn	r3, r3, #127	; 0x7f
    efe2:	f801 3f02 	strb.w	r3, [r1, #2]!
      *--pStartPacket = (NumBytes >> 7);
    efe6:	f3c6 13c7 	ubfx	r3, r6, #7, #8
    efea:	e7d3      	b.n	ef94 <SEGGER_SYSVIEW_GetSysDesc+0xac>
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    efec:	696a      	ldr	r2, [r5, #20]
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    efee:	2301      	movs	r3, #1
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    eff0:	2a7f      	cmp	r2, #127	; 0x7f
  aPacket[0] = SYSVIEW_EVTID_OVERFLOW;      // 1
    eff2:	f88d 3004 	strb.w	r3, [sp, #4]
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    eff6:	f10d 0305 	add.w	r3, sp, #5
    effa:	d906      	bls.n	f00a <SEGGER_SYSVIEW_GetSysDesc+0x122>
    effc:	f062 017f 	orn	r1, r2, #127	; 0x7f
    f000:	09d2      	lsrs	r2, r2, #7
    f002:	2a7f      	cmp	r2, #127	; 0x7f
    f004:	f803 1b01 	strb.w	r1, [r3], #1
    f008:	d8f8      	bhi.n	effc <SEGGER_SYSVIEW_GetSysDesc+0x114>
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    f00a:	491b      	ldr	r1, [pc, #108]	; (f078 <SEGGER_SYSVIEW_GetSysDesc+0x190>)
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    f00c:	701a      	strb	r2, [r3, #0]
  TimeStamp  = SEGGER_SYSVIEW_GET_TIMESTAMP();
    f00e:	f8d1 8000 	ldr.w	r8, [r1]
  Delta = TimeStamp - _SYSVIEW_Globals.LastTxTimeStamp;
    f012:	68e9      	ldr	r1, [r5, #12]
    f014:	eba8 0101 	sub.w	r1, r8, r1
  ENCODE_U32(pPayload, Delta);
    f018:	297f      	cmp	r1, #127	; 0x7f
  ENCODE_U32(pPayload, _SYSVIEW_Globals.DropCount);
    f01a:	f103 0201 	add.w	r2, r3, #1
  ENCODE_U32(pPayload, Delta);
    f01e:	d906      	bls.n	f02e <SEGGER_SYSVIEW_GetSysDesc+0x146>
    f020:	f061 037f 	orn	r3, r1, #127	; 0x7f
    f024:	09c9      	lsrs	r1, r1, #7
    f026:	297f      	cmp	r1, #127	; 0x7f
    f028:	f802 3b01 	strb.w	r3, [r2], #1
    f02c:	d8f8      	bhi.n	f020 <SEGGER_SYSVIEW_GetSysDesc+0x138>
    f02e:	4613      	mov	r3, r2
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    f030:	aa01      	add	r2, sp, #4
  ENCODE_U32(pPayload, Delta);
    f032:	f803 1b01 	strb.w	r1, [r3], #1
  Status = SEGGER_RTT_WriteSkipNoLock(CHANNEL_ID_UP, aPacket, pPayload - aPacket);
    f036:	2001      	movs	r0, #1
    f038:	4611      	mov	r1, r2
    f03a:	1a9a      	subs	r2, r3, r2
    f03c:	f7fe fea6 	bl	dd8c <SEGGER_RTT_WriteSkipNoLock>
  if (Status) {
    f040:	b950      	cbnz	r0, f058 <SEGGER_SYSVIEW_GetSysDesc+0x170>
    _SYSVIEW_Globals.DropCount++;
    f042:	696a      	ldr	r2, [r5, #20]
    f044:	782b      	ldrb	r3, [r5, #0]
    f046:	3201      	adds	r2, #1
    f048:	616a      	str	r2, [r5, #20]
    if (_SYSVIEW_Globals.EnableState != 1) {
    f04a:	2b01      	cmp	r3, #1
    f04c:	d184      	bne.n	ef58 <SEGGER_SYSVIEW_GetSysDesc+0x70>
    f04e:	e797      	b.n	ef80 <SEGGER_SYSVIEW_GetSysDesc+0x98>
    _SYSVIEW_Globals.EnableState++; // EnableState has been 1, will be 2. Always.
    f050:	782b      	ldrb	r3, [r5, #0]
    f052:	3301      	adds	r3, #1
    f054:	702b      	strb	r3, [r5, #0]
    f056:	e77f      	b.n	ef58 <SEGGER_SYSVIEW_GetSysDesc+0x70>
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    f058:	782b      	ldrb	r3, [r5, #0]
    _SYSVIEW_Globals.LastTxTimeStamp = TimeStamp;
    f05a:	f8c5 800c 	str.w	r8, [r5, #12]
    _SYSVIEW_Globals.EnableState--; // EnableState has been 2, will be 1. Always.
    f05e:	3b01      	subs	r3, #1
    f060:	b2db      	uxtb	r3, r3
    f062:	702b      	strb	r3, [r5, #0]
    f064:	e7f1      	b.n	f04a <SEGGER_SYSVIEW_GetSysDesc+0x162>
    f066:	bf00      	nop
    f068:	1000157c 	.word	0x1000157c
    f06c:	100025a8 	.word	0x100025a8
    f070:	100396d0 	.word	0x100396d0
    f074:	100025a4 	.word	0x100025a4
    f078:	e0001004 	.word	0xe0001004

0000f07c <_cbSendSystemDesc>:
*       _cbSendSystemDesc()
*
*  Function description
*    Sends SystemView description strings.
*/
static void _cbSendSystemDesc(void) {
    f07c:	b508      	push	{r3, lr}
  SEGGER_SYSVIEW_SendSysDesc("N="SYSVIEW_APP_NAME",D="SYSVIEW_DEVICE_NAME);
    f07e:	4804      	ldr	r0, [pc, #16]	; (f090 <_cbSendSystemDesc+0x14>)
    f080:	f7ff fae8 	bl	e654 <SEGGER_SYSVIEW_SendSysDesc>
  SEGGER_SYSVIEW_SendSysDesc("I#15=SysTick");
    f084:	4803      	ldr	r0, [pc, #12]	; (f094 <_cbSendSystemDesc+0x18>)
}
    f086:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  SEGGER_SYSVIEW_SendSysDesc("I#15=SysTick");
    f08a:	f7ff bae3 	b.w	e654 <SEGGER_SYSVIEW_SendSysDesc>
    f08e:	bf00      	nop
    f090:	00023bac 	.word	0x00023bac
    f094:	00023bd0 	.word	0x00023bd0

0000f098 <SEGGER_SYSVIEW_Conf>:
*
*       Global functions
*
**********************************************************************
*/
void SEGGER_SYSVIEW_Conf(void) {
    f098:	b508      	push	{r3, lr}
#endif
  //
  //  The cycle counter must be activated in order
  //  to use time related functions.
  //
  if ((DWT_CTRL & NOCYCCNT_BIT) == 0) {       // Cycle counter supported?
    f09a:	4b0c      	ldr	r3, [pc, #48]	; (f0cc <SEGGER_SYSVIEW_Conf+0x34>)
    f09c:	681a      	ldr	r2, [r3, #0]
    f09e:	0191      	lsls	r1, r2, #6
    f0a0:	d406      	bmi.n	f0b0 <SEGGER_SYSVIEW_Conf+0x18>
    if ((DWT_CTRL & CYCCNTENA_BIT) == 0) {    // Cycle counter not enabled?
    f0a2:	681a      	ldr	r2, [r3, #0]
    f0a4:	07d2      	lsls	r2, r2, #31
    f0a6:	d403      	bmi.n	f0b0 <SEGGER_SYSVIEW_Conf+0x18>
      DWT_CTRL |= CYCCNTENA_BIT;              // Enable Cycle counter
    f0a8:	681a      	ldr	r2, [r3, #0]
    f0aa:	f042 0201 	orr.w	r2, r2, #1
    f0ae:	601a      	str	r2, [r3, #0]
    }
  }
#endif
  SEGGER_SYSVIEW_Init(SYSVIEW_TIMESTAMP_FREQ, SYSVIEW_CPU_FREQ, 
    f0b0:	4a07      	ldr	r2, [pc, #28]	; (f0d0 <SEGGER_SYSVIEW_Conf+0x38>)
    f0b2:	4b08      	ldr	r3, [pc, #32]	; (f0d4 <SEGGER_SYSVIEW_Conf+0x3c>)
    f0b4:	6811      	ldr	r1, [r2, #0]
    f0b6:	2200      	movs	r2, #0
    f0b8:	4608      	mov	r0, r1
    f0ba:	f7fe ff73 	bl	dfa4 <SEGGER_SYSVIEW_Init>
                      0, _cbSendSystemDesc);
  SEGGER_SYSVIEW_SetRAMBase(SYSVIEW_RAM_BASE);
    f0be:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
}
    f0c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  SEGGER_SYSVIEW_SetRAMBase(SYSVIEW_RAM_BASE);
    f0c6:	f7fe bf9f 	b.w	e008 <SEGGER_SYSVIEW_SetRAMBase>
    f0ca:	bf00      	nop
    f0cc:	e0001000 	.word	0xe0001000
    f0d0:	1000100c 	.word	0x1000100c
    f0d4:	0000f07d 	.word	0x0000f07d

0000f0d8 <am_bsp_uart_string_print>:
    f0d8:	b510      	push	{r4, lr}
    f0da:	b086      	sub	sp, #24
    f0dc:	7803      	ldrb	r3, [r0, #0]
    f0de:	2400      	movs	r4, #0
    f0e0:	9400      	str	r4, [sp, #0]
    f0e2:	b1bb      	cbz	r3, f114 <am_bsp_uart_string_print+0x3c>
    f0e4:	4603      	mov	r3, r0
    f0e6:	f813 2f01 	ldrb.w	r2, [r3, #1]!
    f0ea:	3401      	adds	r4, #1
    f0ec:	2a00      	cmp	r2, #0
    f0ee:	d1fa      	bne.n	f0e6 <am_bsp_uart_string_print+0xe>
    f0f0:	4b0a      	ldr	r3, [pc, #40]	; (f11c <am_bsp_uart_string_print+0x44>)
    f0f2:	9002      	str	r0, [sp, #8]
    f0f4:	2200      	movs	r2, #0
    f0f6:	6818      	ldr	r0, [r3, #0]
    f0f8:	9403      	str	r4, [sp, #12]
    f0fa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    f0fe:	a901      	add	r1, sp, #4
    f100:	9304      	str	r3, [sp, #16]
    f102:	9201      	str	r2, [sp, #4]
    f104:	f8cd d014 	str.w	sp, [sp, #20]
    f108:	f000 fd76 	bl	fbf8 <am_hal_uart_transfer>
    f10c:	9b00      	ldr	r3, [sp, #0]
    f10e:	42a3      	cmp	r3, r4
    f110:	d002      	beq.n	f118 <am_bsp_uart_string_print+0x40>
    f112:	e7fe      	b.n	f112 <am_bsp_uart_string_print+0x3a>
    f114:	461c      	mov	r4, r3
    f116:	e7eb      	b.n	f0f0 <am_bsp_uart_string_print+0x18>
    f118:	b006      	add	sp, #24
    f11a:	bd10      	pop	{r4, pc}
    f11c:	10002690 	.word	0x10002690

0000f120 <am_bsp_low_power_init>:
    f120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f122:	f000 fa21 	bl	f568 <am_hal_itm_disable>
    f126:	2000      	movs	r0, #0
    f128:	f7fd fca2 	bl	ca70 <am_util_stdio_printf_init>
    f12c:	4b12      	ldr	r3, [pc, #72]	; (f178 <am_bsp_low_power_init+0x58>)
    f12e:	4f13      	ldr	r7, [pc, #76]	; (f17c <am_bsp_low_power_init+0x5c>)
    f130:	6819      	ldr	r1, [r3, #0]
    f132:	2029      	movs	r0, #41	; 0x29
    f134:	f7fd f958 	bl	c3e8 <am_hal_gpio_pinconfig>
    f138:	f000 fb58 	bl	f7ec <am_hal_pwrctrl_low_power_init>
    f13c:	2001      	movs	r0, #1
    f13e:	f000 fb9f 	bl	f880 <am_hal_rtc_osc_select>
    f142:	2100      	movs	r1, #0
    f144:	2003      	movs	r0, #3
    f146:	f000 f87f 	bl	f248 <am_hal_clkgen_control>
    f14a:	f000 fba5 	bl	f898 <am_hal_rtc_osc_disable>
    f14e:	4b0c      	ldr	r3, [pc, #48]	; (f180 <am_bsp_low_power_init+0x60>)
    f150:	681e      	ldr	r6, [r3, #0]
    f152:	2400      	movs	r4, #0
    f154:	f857 5034 	ldr.w	r5, [r7, r4, lsl #3]
    f158:	4631      	mov	r1, r6
    f15a:	4628      	mov	r0, r5
    f15c:	f7fd f944 	bl	c3e8 <am_hal_gpio_pinconfig>
    f160:	2103      	movs	r1, #3
    f162:	4628      	mov	r0, r5
    f164:	f7fd faba 	bl	c6dc <am_hal_gpio_state_write>
    f168:	3401      	adds	r4, #1
    f16a:	4628      	mov	r0, r5
    f16c:	2100      	movs	r1, #0
    f16e:	f7fd fab5 	bl	c6dc <am_hal_gpio_state_write>
    f172:	2c05      	cmp	r4, #5
    f174:	d1ee      	bne.n	f154 <am_bsp_low_power_init+0x34>
    f176:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f178:	0001017c 	.word	0x0001017c
    f17c:	10001010 	.word	0x10001010
    f180:	00010180 	.word	0x00010180

0000f184 <am_bsp_uart_printf_enable>:
    f184:	b510      	push	{r4, lr}
    f186:	4c10      	ldr	r4, [pc, #64]	; (f1c8 <am_bsp_uart_printf_enable+0x44>)
    f188:	4b10      	ldr	r3, [pc, #64]	; (f1cc <am_bsp_uart_printf_enable+0x48>)
    f18a:	4621      	mov	r1, r4
    f18c:	2202      	movs	r2, #2
    f18e:	2000      	movs	r0, #0
    f190:	601a      	str	r2, [r3, #0]
    f192:	f000 fb8b 	bl	f8ac <am_hal_uart_initialize>
    f196:	2200      	movs	r2, #0
    f198:	4611      	mov	r1, r2
    f19a:	6820      	ldr	r0, [r4, #0]
    f19c:	f000 fbae 	bl	f8fc <am_hal_uart_power_control>
    f1a0:	6820      	ldr	r0, [r4, #0]
    f1a2:	490b      	ldr	r1, [pc, #44]	; (f1d0 <am_bsp_uart_printf_enable+0x4c>)
    f1a4:	f000 fc1c 	bl	f9e0 <am_hal_uart_configure>
    f1a8:	4b0a      	ldr	r3, [pc, #40]	; (f1d4 <am_bsp_uart_printf_enable+0x50>)
    f1aa:	2016      	movs	r0, #22
    f1ac:	6819      	ldr	r1, [r3, #0]
    f1ae:	f7fd f91b 	bl	c3e8 <am_hal_gpio_pinconfig>
    f1b2:	4b09      	ldr	r3, [pc, #36]	; (f1d8 <am_bsp_uart_printf_enable+0x54>)
    f1b4:	2017      	movs	r0, #23
    f1b6:	6819      	ldr	r1, [r3, #0]
    f1b8:	f7fd f916 	bl	c3e8 <am_hal_gpio_pinconfig>
    f1bc:	4807      	ldr	r0, [pc, #28]	; (f1dc <am_bsp_uart_printf_enable+0x58>)
    f1be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    f1c2:	f7fd bc55 	b.w	ca70 <am_util_stdio_printf_init>
    f1c6:	bf00      	nop
    f1c8:	10002690 	.word	0x10002690
    f1cc:	1000268c 	.word	0x1000268c
    f1d0:	00023be0 	.word	0x00023be0
    f1d4:	00023c08 	.word	0x00023c08
    f1d8:	00023c0c 	.word	0x00023c0c
    f1dc:	0000f0d9 	.word	0x0000f0d9

0000f1e0 <am_hal_cachectrl_config>:
    f1e0:	b530      	push	{r4, r5, lr}
    f1e2:	b083      	sub	sp, #12
    f1e4:	4605      	mov	r5, r0
    f1e6:	f000 f9b7 	bl	f558 <am_hal_interrupt_master_disable>
    f1ea:	4c11      	ldr	r4, [pc, #68]	; (f230 <am_hal_cachectrl_config+0x50>)
    f1ec:	9001      	str	r0, [sp, #4]
    f1ee:	6823      	ldr	r3, [r4, #0]
    f1f0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    f1f4:	6023      	str	r3, [r4, #0]
    f1f6:	9801      	ldr	r0, [sp, #4]
    f1f8:	f000 f9b2 	bl	f560 <am_hal_interrupt_master_set>
    f1fc:	78eb      	ldrb	r3, [r5, #3]
    f1fe:	782a      	ldrb	r2, [r5, #0]
    f200:	78a8      	ldrb	r0, [r5, #2]
    f202:	7869      	ldrb	r1, [r5, #1]
    f204:	005b      	lsls	r3, r3, #1
    f206:	0112      	lsls	r2, r2, #4
    f208:	b2d2      	uxtb	r2, r2
    f20a:	f003 0302 	and.w	r3, r3, #2
    f20e:	4313      	orrs	r3, r2
    f210:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    f214:	0080      	lsls	r0, r0, #2
    f216:	f000 000c 	and.w	r0, r0, #12
    f21a:	020a      	lsls	r2, r1, #8
    f21c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
    f220:	4303      	orrs	r3, r0
    f222:	f402 7240 	and.w	r2, r2, #768	; 0x300
    f226:	4313      	orrs	r3, r2
    f228:	2000      	movs	r0, #0
    f22a:	6023      	str	r3, [r4, #0]
    f22c:	b003      	add	sp, #12
    f22e:	bd30      	pop	{r4, r5, pc}
    f230:	40018000 	.word	0x40018000

0000f234 <am_hal_cachectrl_enable>:
    f234:	4a03      	ldr	r2, [pc, #12]	; (f244 <am_hal_cachectrl_enable+0x10>)
    f236:	6813      	ldr	r3, [r2, #0]
    f238:	f043 0301 	orr.w	r3, r3, #1
    f23c:	6013      	str	r3, [r2, #0]
    f23e:	2000      	movs	r0, #0
    f240:	4770      	bx	lr
    f242:	bf00      	nop
    f244:	40018000 	.word	0x40018000

0000f248 <am_hal_clkgen_control>:
    f248:	4b32      	ldr	r3, [pc, #200]	; (f314 <am_hal_clkgen_control+0xcc>)
    f24a:	681a      	ldr	r2, [r3, #0]
    f24c:	b912      	cbnz	r2, f254 <am_hal_clkgen_control+0xc>
    f24e:	4a32      	ldr	r2, [pc, #200]	; (f318 <am_hal_clkgen_control+0xd0>)
    f250:	6812      	ldr	r2, [r2, #0]
    f252:	601a      	str	r2, [r3, #0]
    f254:	2809      	cmp	r0, #9
    f256:	d85a      	bhi.n	f30e <am_hal_clkgen_control+0xc6>
    f258:	e8df f000 	tbb	[pc, r0]
    f25c:	261e160d 	.word	0x261e160d
    f260:	4640362e 	.word	0x4640362e
    f264:	054e      	.short	0x054e
    f266:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f26a:	2000      	movs	r0, #0
    f26c:	6a1a      	ldr	r2, [r3, #32]
    f26e:	f36f 0200 	bfc	r2, #0, #1
    f272:	621a      	str	r2, [r3, #32]
    f274:	4770      	bx	lr
    f276:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f27a:	2200      	movs	r2, #0
    f27c:	2147      	movs	r1, #71	; 0x47
    f27e:	6159      	str	r1, [r3, #20]
    f280:	4610      	mov	r0, r2
    f282:	619a      	str	r2, [r3, #24]
    f284:	615a      	str	r2, [r3, #20]
    f286:	4770      	bx	lr
    f288:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f28c:	2000      	movs	r0, #0
    f28e:	68d3      	ldr	r3, [r2, #12]
    f290:	f023 0301 	bic.w	r3, r3, #1
    f294:	60d3      	str	r3, [r2, #12]
    f296:	4770      	bx	lr
    f298:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f29c:	2000      	movs	r0, #0
    f29e:	68d3      	ldr	r3, [r2, #12]
    f2a0:	f023 0302 	bic.w	r3, r3, #2
    f2a4:	60d3      	str	r3, [r2, #12]
    f2a6:	4770      	bx	lr
    f2a8:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f2ac:	2000      	movs	r0, #0
    f2ae:	68d3      	ldr	r3, [r2, #12]
    f2b0:	f043 0301 	orr.w	r3, r3, #1
    f2b4:	60d3      	str	r3, [r2, #12]
    f2b6:	4770      	bx	lr
    f2b8:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f2bc:	2000      	movs	r0, #0
    f2be:	68d3      	ldr	r3, [r2, #12]
    f2c0:	f043 0302 	orr.w	r3, r3, #2
    f2c4:	60d3      	str	r3, [r2, #12]
    f2c6:	4770      	bx	lr
    f2c8:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f2cc:	2200      	movs	r2, #0
    f2ce:	2047      	movs	r0, #71	; 0x47
    f2d0:	2101      	movs	r1, #1
    f2d2:	6158      	str	r0, [r3, #20]
    f2d4:	6199      	str	r1, [r3, #24]
    f2d6:	4610      	mov	r0, r2
    f2d8:	615a      	str	r2, [r3, #20]
    f2da:	4770      	bx	lr
    f2dc:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    f2e0:	2000      	movs	r0, #0
    f2e2:	68da      	ldr	r2, [r3, #12]
    f2e4:	60da      	str	r2, [r3, #12]
    f2e6:	4770      	bx	lr
    f2e8:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f2ec:	2000      	movs	r0, #0
    f2ee:	68d3      	ldr	r3, [r2, #12]
    f2f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    f2f4:	60d3      	str	r3, [r2, #12]
    f2f6:	4770      	bx	lr
    f2f8:	b139      	cbz	r1, f30a <am_hal_clkgen_control+0xc2>
    f2fa:	680b      	ldr	r3, [r1, #0]
    f2fc:	f043 0301 	orr.w	r3, r3, #1
    f300:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f304:	2000      	movs	r0, #0
    f306:	6213      	str	r3, [r2, #32]
    f308:	4770      	bx	lr
    f30a:	4b04      	ldr	r3, [pc, #16]	; (f31c <am_hal_clkgen_control+0xd4>)
    f30c:	e7f8      	b.n	f300 <am_hal_clkgen_control+0xb8>
    f30e:	2006      	movs	r0, #6
    f310:	4770      	bx	lr
    f312:	bf00      	nop
    f314:	10002694 	.word	0x10002694
    f318:	4ffff000 	.word	0x4ffff000
    f31c:	0025b801 	.word	0x0025b801

0000f320 <am_hal_ctimer_config>:
    f320:	b570      	push	{r4, r5, r6, lr}
    f322:	e891 001c 	ldmia.w	r1, {r2, r3, r4}
    f326:	2a00      	cmp	r2, #0
    f328:	b082      	sub	sp, #8
    f32a:	bf18      	it	ne
    f32c:	f04f 4200 	movne.w	r2, #2147483648	; 0x80000000
    f330:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
    f334:	ea42 0403 	orr.w	r4, r2, r3
    f338:	460d      	mov	r5, r1
    f33a:	4606      	mov	r6, r0
    f33c:	f000 f90c 	bl	f558 <am_hal_interrupt_master_disable>
    f340:	4b0d      	ldr	r3, [pc, #52]	; (f378 <am_hal_ctimer_config+0x58>)
    f342:	9001      	str	r0, [sp, #4]
    f344:	0172      	lsls	r2, r6, #5
    f346:	50d4      	str	r4, [r2, r3]
    f348:	9801      	ldr	r0, [sp, #4]
    f34a:	f000 f909 	bl	f560 <am_hal_interrupt_master_set>
    f34e:	686b      	ldr	r3, [r5, #4]
    f350:	b90b      	cbnz	r3, f356 <am_hal_ctimer_config+0x36>
    f352:	682a      	ldr	r2, [r5, #0]
    f354:	b142      	cbz	r2, f368 <am_hal_ctimer_config+0x48>
    f356:	f3c3 0344 	ubfx	r3, r3, #1, #5
    f35a:	2100      	movs	r1, #0
    f35c:	4a07      	ldr	r2, [pc, #28]	; (f37c <am_hal_ctimer_config+0x5c>)
    f35e:	eb02 0646 	add.w	r6, r2, r6, lsl #1
    f362:	5473      	strb	r3, [r6, r1]
    f364:	b002      	add	sp, #8
    f366:	bd70      	pop	{r4, r5, r6, pc}
    f368:	68ab      	ldr	r3, [r5, #8]
    f36a:	2b00      	cmp	r3, #0
    f36c:	d0fa      	beq.n	f364 <am_hal_ctimer_config+0x44>
    f36e:	f3c3 0344 	ubfx	r3, r3, #1, #5
    f372:	2101      	movs	r1, #1
    f374:	e7f2      	b.n	f35c <am_hal_ctimer_config+0x3c>
    f376:	bf00      	nop
    f378:	4000800c 	.word	0x4000800c
    f37c:	10001038 	.word	0x10001038

0000f380 <am_hal_ctimer_start>:
    f380:	b570      	push	{r4, r5, r6, lr}
    f382:	b082      	sub	sp, #8
    f384:	460c      	mov	r4, r1
    f386:	0146      	lsls	r6, r0, #5
    f388:	4605      	mov	r5, r0
    f38a:	f000 f8e5 	bl	f558 <am_hal_interrupt_master_disable>
    f38e:	4a0f      	ldr	r2, [pc, #60]	; (f3cc <am_hal_ctimer_start+0x4c>)
    f390:	9001      	str	r0, [sp, #4]
    f392:	58b3      	ldr	r3, [r6, r2]
    f394:	f004 2108 	and.w	r1, r4, #134219776	; 0x8000800
    f398:	ea23 0301 	bic.w	r3, r3, r1
    f39c:	f004 1101 	and.w	r1, r4, #65537	; 0x10001
    f3a0:	430b      	orrs	r3, r1
    f3a2:	f514 3f80 	cmn.w	r4, #65536	; 0x10000
    f3a6:	bf0c      	ite	eq
    f3a8:	f3c3 4444 	ubfxeq	r4, r3, #17, #5
    f3ac:	f3c3 0444 	ubfxne	r4, r3, #1, #5
    f3b0:	50b3      	str	r3, [r6, r2]
    f3b2:	4b07      	ldr	r3, [pc, #28]	; (f3d0 <am_hal_ctimer_start+0x50>)
    f3b4:	9801      	ldr	r0, [sp, #4]
    f3b6:	bf0c      	ite	eq
    f3b8:	2101      	moveq	r1, #1
    f3ba:	2100      	movne	r1, #0
    f3bc:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    f3c0:	545c      	strb	r4, [r3, r1]
    f3c2:	f000 f8cd 	bl	f560 <am_hal_interrupt_master_set>
    f3c6:	b002      	add	sp, #8
    f3c8:	bd70      	pop	{r4, r5, r6, pc}
    f3ca:	bf00      	nop
    f3cc:	4000800c 	.word	0x4000800c
    f3d0:	10001038 	.word	0x10001038

0000f3d4 <am_hal_ctimer_clear>:
    f3d4:	b570      	push	{r4, r5, r6, lr}
    f3d6:	b082      	sub	sp, #8
    f3d8:	0146      	lsls	r6, r0, #5
    f3da:	460c      	mov	r4, r1
    f3dc:	f000 f8bc 	bl	f558 <am_hal_interrupt_master_disable>
    f3e0:	4d05      	ldr	r5, [pc, #20]	; (f3f8 <am_hal_ctimer_clear+0x24>)
    f3e2:	9001      	str	r0, [sp, #4]
    f3e4:	5973      	ldr	r3, [r6, r5]
    f3e6:	f004 2108 	and.w	r1, r4, #134219776	; 0x8000800
    f3ea:	4319      	orrs	r1, r3
    f3ec:	5171      	str	r1, [r6, r5]
    f3ee:	9801      	ldr	r0, [sp, #4]
    f3f0:	f000 f8b6 	bl	f560 <am_hal_interrupt_master_set>
    f3f4:	b002      	add	sp, #8
    f3f6:	bd70      	pop	{r4, r5, r6, pc}
    f3f8:	4000800c 	.word	0x4000800c

0000f3fc <am_hal_ctimer_period_set>:
    f3fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    f400:	b082      	sub	sp, #8
    f402:	4689      	mov	r9, r1
    f404:	4698      	mov	r8, r3
    f406:	0147      	lsls	r7, r0, #5
    f408:	4614      	mov	r4, r2
    f40a:	f000 f8a5 	bl	f558 <am_hal_interrupt_master_disable>
    f40e:	f8df a094 	ldr.w	sl, [pc, #148]	; f4a4 <am_hal_ctimer_period_set+0xa8>
    f412:	9001      	str	r0, [sp, #4]
    f414:	f519 3f80 	cmn.w	r9, #65536	; 0x10000
    f418:	4d20      	ldr	r5, [pc, #128]	; (f49c <am_hal_ctimer_period_set+0xa0>)
    f41a:	4e21      	ldr	r6, [pc, #132]	; (f4a0 <am_hal_ctimer_period_set+0xa4>)
    f41c:	f857 300a 	ldr.w	r3, [r7, sl]
    f420:	d01a      	beq.n	f458 <am_hal_ctimer_period_set+0x5c>
    f422:	f403 73c0 	and.w	r3, r3, #384	; 0x180
    f426:	2b80      	cmp	r3, #128	; 0x80
    f428:	d01b      	beq.n	f462 <am_hal_ctimer_period_set+0x66>
    f42a:	f64f 72ff 	movw	r2, #65535	; 0xffff
    f42e:	2000      	movs	r0, #0
    f430:	4591      	cmp	r9, r2
    f432:	4603      	mov	r3, r0
    f434:	d01e      	beq.n	f474 <am_hal_ctimer_period_set+0x78>
    f436:	f519 3f80 	cmn.w	r9, #65536	; 0x10000
    f43a:	d025      	beq.n	f488 <am_hal_ctimer_period_set+0x8c>
    f43c:	0c1b      	lsrs	r3, r3, #16
    f43e:	b2a2      	uxth	r2, r4
    f440:	041b      	lsls	r3, r3, #16
    f442:	4310      	orrs	r0, r2
    f444:	ea43 4314 	orr.w	r3, r3, r4, lsr #16
    f448:	5178      	str	r0, [r7, r5]
    f44a:	51bb      	str	r3, [r7, r6]
    f44c:	9801      	ldr	r0, [sp, #4]
    f44e:	f000 f887 	bl	f560 <am_hal_interrupt_master_set>
    f452:	b002      	add	sp, #8
    f454:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    f458:	0c1b      	lsrs	r3, r3, #16
    f45a:	f403 73c0 	and.w	r3, r3, #384	; 0x180
    f45e:	2b80      	cmp	r3, #128	; 0x80
    f460:	d111      	bne.n	f486 <am_hal_ctimer_period_set+0x8a>
    f462:	f64f 72ff 	movw	r2, #65535	; 0xffff
    f466:	4591      	cmp	r9, r2
    f468:	ea4f 4004 	mov.w	r0, r4, lsl #16
    f46c:	4623      	mov	r3, r4
    f46e:	ebc8 0404 	rsb	r4, r8, r4
    f472:	d1e0      	bne.n	f436 <am_hal_ctimer_period_set+0x3a>
    f474:	b2a3      	uxth	r3, r4
    f476:	4318      	orrs	r0, r3
    f478:	5178      	str	r0, [r7, r5]
    f47a:	9801      	ldr	r0, [sp, #4]
    f47c:	f000 f870 	bl	f560 <am_hal_interrupt_master_set>
    f480:	b002      	add	sp, #8
    f482:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    f486:	2000      	movs	r0, #0
    f488:	b2a3      	uxth	r3, r4
    f48a:	4318      	orrs	r0, r3
    f48c:	51b8      	str	r0, [r7, r6]
    f48e:	9801      	ldr	r0, [sp, #4]
    f490:	f000 f866 	bl	f560 <am_hal_interrupt_master_set>
    f494:	b002      	add	sp, #8
    f496:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    f49a:	bf00      	nop
    f49c:	40008004 	.word	0x40008004
    f4a0:	40008008 	.word	0x40008008
    f4a4:	4000800c 	.word	0x4000800c

0000f4a8 <am_hal_ctimer_int_enable>:
    f4a8:	b510      	push	{r4, lr}
    f4aa:	b082      	sub	sp, #8
    f4ac:	4604      	mov	r4, r0
    f4ae:	f000 f853 	bl	f558 <am_hal_interrupt_master_disable>
    f4b2:	4b06      	ldr	r3, [pc, #24]	; (f4cc <am_hal_ctimer_int_enable+0x24>)
    f4b4:	9001      	str	r0, [sp, #4]
    f4b6:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    f4ba:	4314      	orrs	r4, r2
    f4bc:	f8c3 4200 	str.w	r4, [r3, #512]	; 0x200
    f4c0:	9801      	ldr	r0, [sp, #4]
    f4c2:	f000 f84d 	bl	f560 <am_hal_interrupt_master_set>
    f4c6:	b002      	add	sp, #8
    f4c8:	bd10      	pop	{r4, pc}
    f4ca:	bf00      	nop
    f4cc:	40008000 	.word	0x40008000

0000f4d0 <am_hal_ctimer_int_clear>:
    f4d0:	b510      	push	{r4, lr}
    f4d2:	b082      	sub	sp, #8
    f4d4:	4604      	mov	r4, r0
    f4d6:	f000 f83f 	bl	f558 <am_hal_interrupt_master_disable>
    f4da:	4b04      	ldr	r3, [pc, #16]	; (f4ec <am_hal_ctimer_int_clear+0x1c>)
    f4dc:	9001      	str	r0, [sp, #4]
    f4de:	f8c3 4208 	str.w	r4, [r3, #520]	; 0x208
    f4e2:	9801      	ldr	r0, [sp, #4]
    f4e4:	f000 f83c 	bl	f560 <am_hal_interrupt_master_set>
    f4e8:	b002      	add	sp, #8
    f4ea:	bd10      	pop	{r4, pc}
    f4ec:	40008000 	.word	0x40008000

0000f4f0 <am_hal_flash_delay>:
    f4f0:	4b00      	ldr	r3, [pc, #0]	; (f4f4 <am_hal_flash_delay+0x4>)
    f4f2:	4718      	bx	r3
    f4f4:	0800009d 	.word	0x0800009d

0000f4f8 <am_hal_flash_delay_status_check>:
    f4f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f4fc:	f89d 4018 	ldrb.w	r4, [sp, #24]
    f500:	460d      	mov	r5, r1
    f502:	4616      	mov	r6, r2
    f504:	461f      	mov	r7, r3
    f506:	b17c      	cbz	r4, f528 <am_hal_flash_delay_status_check+0x30>
    f508:	4604      	mov	r4, r0
    f50a:	f8df 8040 	ldr.w	r8, [pc, #64]	; f54c <am_hal_flash_delay_status_check+0x54>
    f50e:	e002      	b.n	f516 <am_hal_flash_delay_status_check+0x1e>
    f510:	b1c4      	cbz	r4, f544 <am_hal_flash_delay_status_check+0x4c>
    f512:	47c0      	blx	r8
    f514:	3c01      	subs	r4, #1
    f516:	682b      	ldr	r3, [r5, #0]
    f518:	4033      	ands	r3, r6
    f51a:	429f      	cmp	r7, r3
    f51c:	f04f 0001 	mov.w	r0, #1
    f520:	d1f6      	bne.n	f510 <am_hal_flash_delay_status_check+0x18>
    f522:	2000      	movs	r0, #0
    f524:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f528:	f8df 8020 	ldr.w	r8, [pc, #32]	; f54c <am_hal_flash_delay_status_check+0x54>
    f52c:	4604      	mov	r4, r0
    f52e:	e002      	b.n	f536 <am_hal_flash_delay_status_check+0x3e>
    f530:	b144      	cbz	r4, f544 <am_hal_flash_delay_status_check+0x4c>
    f532:	47c0      	blx	r8
    f534:	3c01      	subs	r4, #1
    f536:	682b      	ldr	r3, [r5, #0]
    f538:	4033      	ands	r3, r6
    f53a:	429f      	cmp	r7, r3
    f53c:	f04f 0001 	mov.w	r0, #1
    f540:	d0f6      	beq.n	f530 <am_hal_flash_delay_status_check+0x38>
    f542:	e7ee      	b.n	f522 <am_hal_flash_delay_status_check+0x2a>
    f544:	2004      	movs	r0, #4
    f546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f54a:	bf00      	nop
    f54c:	0800009d 	.word	0x0800009d

0000f550 <am_hal_interrupt_master_enable>:
    f550:	f3ef 8010 	mrs	r0, PRIMASK
    f554:	b662      	cpsie	i
    f556:	4770      	bx	lr

0000f558 <am_hal_interrupt_master_disable>:
    f558:	f3ef 8010 	mrs	r0, PRIMASK
    f55c:	b672      	cpsid	i
    f55e:	4770      	bx	lr

0000f560 <am_hal_interrupt_master_set>:
    f560:	f380 8810 	msr	PRIMASK, r0
    f564:	4770      	bx	lr
    f566:	bf00      	nop

0000f568 <am_hal_itm_disable>:
    f568:	b510      	push	{r4, lr}
    f56a:	4b25      	ldr	r3, [pc, #148]	; (f600 <am_hal_itm_disable+0x98>)
    f56c:	f8d3 3250 	ldr.w	r3, [r3, #592]	; 0x250
    f570:	b9b3      	cbnz	r3, f5a0 <am_hal_itm_disable+0x38>
    f572:	4b24      	ldr	r3, [pc, #144]	; (f604 <am_hal_itm_disable+0x9c>)
    f574:	68da      	ldr	r2, [r3, #12]
    f576:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
    f57a:	60da      	str	r2, [r3, #12]
    f57c:	68da      	ldr	r2, [r3, #12]
    f57e:	01d2      	lsls	r2, r2, #7
    f580:	d5fc      	bpl.n	f57c <am_hal_itm_disable+0x14>
    f582:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
    f586:	4920      	ldr	r1, [pc, #128]	; (f608 <am_hal_itm_disable+0xa0>)
    f588:	f8c3 1fb0 	str.w	r1, [r3, #4016]	; 0xfb0
    f58c:	4a1f      	ldr	r2, [pc, #124]	; (f60c <am_hal_itm_disable+0xa4>)
    f58e:	200f      	movs	r0, #15
    f590:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    f594:	f8c3 0e40 	str.w	r0, [r3, #3648]	; 0xe40
    f598:	f8c3 1e00 	str.w	r1, [r3, #3584]	; 0xe00
    f59c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
    f5a0:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
    f5a4:	f8d2 3e80 	ldr.w	r3, [r2, #3712]	; 0xe80
    f5a8:	021b      	lsls	r3, r3, #8
    f5aa:	f04f 4460 	mov.w	r4, #3758096384	; 0xe0000000
    f5ae:	d4f9      	bmi.n	f5a4 <am_hal_itm_disable+0x3c>
    f5b0:	f240 20f7 	movw	r0, #759	; 0x2f7
    f5b4:	f7ff ff9c 	bl	f4f0 <am_hal_flash_delay>
    f5b8:	4b13      	ldr	r3, [pc, #76]	; (f608 <am_hal_itm_disable+0xa0>)
    f5ba:	f8c4 3fb0 	str.w	r3, [r4, #4016]	; 0xfb0
    f5be:	4621      	mov	r1, r4
    f5c0:	2064      	movs	r0, #100	; 0x64
    f5c2:	f8d1 3e80 	ldr.w	r3, [r1, #3712]	; 0xe80
    f5c6:	f023 0301 	bic.w	r3, r3, #1
    f5ca:	f8c1 3e80 	str.w	r3, [r1, #3712]	; 0xe80
    f5ce:	f8d1 2e80 	ldr.w	r2, [r1, #3712]	; 0xe80
    f5d2:	4b0f      	ldr	r3, [pc, #60]	; (f610 <am_hal_itm_disable+0xa8>)
    f5d4:	4013      	ands	r3, r2
    f5d6:	2b00      	cmp	r3, #0
    f5d8:	d1f9      	bne.n	f5ce <am_hal_itm_disable+0x66>
    f5da:	3801      	subs	r0, #1
    f5dc:	d1f1      	bne.n	f5c2 <am_hal_itm_disable+0x5a>
    f5de:	4a09      	ldr	r2, [pc, #36]	; (f604 <am_hal_itm_disable+0x9c>)
    f5e0:	68d3      	ldr	r3, [r2, #12]
    f5e2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    f5e6:	60d3      	str	r3, [r2, #12]
    f5e8:	68d3      	ldr	r3, [r2, #12]
    f5ea:	f013 7380 	ands.w	r3, r3, #16777216	; 0x1000000
    f5ee:	d1fb      	bne.n	f5e8 <am_hal_itm_disable+0x80>
    f5f0:	4a03      	ldr	r2, [pc, #12]	; (f600 <am_hal_itm_disable+0x98>)
    f5f2:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
    f5f6:	f8d2 3250 	ldr.w	r3, [r2, #592]	; 0x250
    f5fa:	2b00      	cmp	r3, #0
    f5fc:	d1fb      	bne.n	f5f6 <am_hal_itm_disable+0x8e>
    f5fe:	bd10      	pop	{r4, pc}
    f600:	40020000 	.word	0x40020000
    f604:	e000edf0 	.word	0xe000edf0
    f608:	c5acce55 	.word	0xc5acce55
    f60c:	00150511 	.word	0x00150511
    f610:	00800001 	.word	0x00800001

0000f614 <am_hal_mcuctrl_info_get>:
    f614:	b4f0      	push	{r4, r5, r6, r7}
    f616:	b121      	cbz	r1, f622 <am_hal_mcuctrl_info_get+0xe>
    f618:	2801      	cmp	r0, #1
    f61a:	d038      	beq.n	f68e <am_hal_mcuctrl_info_get+0x7a>
    f61c:	d320      	bcc.n	f660 <am_hal_mcuctrl_info_get+0x4c>
    f61e:	2802      	cmp	r0, #2
    f620:	d002      	beq.n	f628 <am_hal_mcuctrl_info_get+0x14>
    f622:	2006      	movs	r0, #6
    f624:	bcf0      	pop	{r4, r5, r6, r7}
    f626:	4770      	bx	lr
    f628:	4a41      	ldr	r2, [pc, #260]	; (f730 <am_hal_mcuctrl_info_get+0x11c>)
    f62a:	684d      	ldr	r5, [r1, #4]
    f62c:	f8d2 31cc 	ldr.w	r3, [r2, #460]	; 0x1cc
    f630:	694c      	ldr	r4, [r1, #20]
    f632:	f003 0601 	and.w	r6, r3, #1
    f636:	f3c3 0040 	ubfx	r0, r3, #1, #1
    f63a:	f3c3 0380 	ubfx	r3, r3, #2, #1
    f63e:	700e      	strb	r6, [r1, #0]
    f640:	7208      	strb	r0, [r1, #8]
    f642:	740b      	strb	r3, [r1, #16]
    f644:	f8d2 31c4 	ldr.w	r3, [r2, #452]	; 0x1c4
    f648:	60cb      	str	r3, [r1, #12]
    f64a:	f8d2 01c0 	ldr.w	r0, [r2, #448]	; 0x1c0
    f64e:	4328      	orrs	r0, r5
    f650:	6048      	str	r0, [r1, #4]
    f652:	f8d2 31c8 	ldr.w	r3, [r2, #456]	; 0x1c8
    f656:	4323      	orrs	r3, r4
    f658:	2000      	movs	r0, #0
    f65a:	614b      	str	r3, [r1, #20]
    f65c:	bcf0      	pop	{r4, r5, r6, r7}
    f65e:	4770      	bx	lr
    f660:	4a33      	ldr	r2, [pc, #204]	; (f730 <am_hal_mcuctrl_info_get+0x11c>)
    f662:	6993      	ldr	r3, [r2, #24]
    f664:	f3c3 1080 	ubfx	r0, r3, #6, #1
    f668:	f3c3 0380 	ubfx	r3, r3, #2, #1
    f66c:	7008      	strb	r0, [r1, #0]
    f66e:	704b      	strb	r3, [r1, #1]
    f670:	f8d2 31a0 	ldr.w	r3, [r2, #416]	; 0x1a0
    f674:	f3c3 6381 	ubfx	r3, r3, #26, #2
    f678:	710b      	strb	r3, [r1, #4]
    f67a:	6953      	ldr	r3, [r2, #20]
    f67c:	f3c3 0240 	ubfx	r2, r3, #1, #1
    f680:	f003 0301 	and.w	r3, r3, #1
    f684:	2000      	movs	r0, #0
    f686:	708a      	strb	r2, [r1, #2]
    f688:	70cb      	strb	r3, [r1, #3]
    f68a:	bcf0      	pop	{r4, r5, r6, r7}
    f68c:	4770      	bx	lr
    f68e:	4b28      	ldr	r3, [pc, #160]	; (f730 <am_hal_mcuctrl_info_get+0x11c>)
    f690:	4c28      	ldr	r4, [pc, #160]	; (f734 <am_hal_mcuctrl_info_get+0x120>)
    f692:	681a      	ldr	r2, [r3, #0]
    f694:	600a      	str	r2, [r1, #0]
    f696:	6858      	ldr	r0, [r3, #4]
    f698:	6048      	str	r0, [r1, #4]
    f69a:	6898      	ldr	r0, [r3, #8]
    f69c:	6088      	str	r0, [r1, #8]
    f69e:	68d8      	ldr	r0, [r3, #12]
    f6a0:	60c8      	str	r0, [r1, #12]
    f6a2:	691d      	ldr	r5, [r3, #16]
    f6a4:	4824      	ldr	r0, [pc, #144]	; (f738 <am_hal_mcuctrl_info_get+0x124>)
    f6a6:	610d      	str	r5, [r1, #16]
    f6a8:	f3c2 5703 	ubfx	r7, r2, #20, #4
    f6ac:	f3c2 4603 	ubfx	r6, r2, #16, #4
    f6b0:	695d      	ldr	r5, [r3, #20]
    f6b2:	f854 4027 	ldr.w	r4, [r4, r7, lsl #2]
    f6b6:	4b21      	ldr	r3, [pc, #132]	; (f73c <am_hal_mcuctrl_info_get+0x128>)
    f6b8:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
    f6bc:	6208      	str	r0, [r1, #32]
    f6be:	f002 0201 	and.w	r2, r2, #1
    f6c2:	614d      	str	r5, [r1, #20]
    f6c4:	61cc      	str	r4, [r1, #28]
    f6c6:	618a      	str	r2, [r1, #24]
    f6c8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
    f6cc:	f8d3 40e4 	ldr.w	r4, [r3, #228]	; 0xe4
    f6d0:	b2d0      	uxtb	r0, r2
    f6d2:	f004 020f 	and.w	r2, r4, #15
    f6d6:	ea40 2202 	orr.w	r2, r0, r2, lsl #8
    f6da:	624a      	str	r2, [r1, #36]	; 0x24
    f6dc:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    f6e0:	f8d3 40e8 	ldr.w	r4, [r3, #232]	; 0xe8
    f6e4:	f3c2 1003 	ubfx	r0, r2, #4, #4
    f6e8:	f004 020f 	and.w	r2, r4, #15
    f6ec:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
    f6f0:	628a      	str	r2, [r1, #40]	; 0x28
    f6f2:	f8d3 00e8 	ldr.w	r0, [r3, #232]	; 0xe8
    f6f6:	f8d3 20ec 	ldr.w	r2, [r3, #236]	; 0xec
    f6fa:	f000 00f0 	and.w	r0, r0, #240	; 0xf0
    f6fe:	f3c2 1203 	ubfx	r2, r2, #4, #4
    f702:	4302      	orrs	r2, r0
    f704:	62ca      	str	r2, [r1, #44]	; 0x2c
    f706:	f8d3 50fc 	ldr.w	r5, [r3, #252]	; 0xfc
    f70a:	f8d3 00f8 	ldr.w	r0, [r3, #248]	; 0xf8
    f70e:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
    f712:	f8d3 20f0 	ldr.w	r2, [r3, #240]	; 0xf0
    f716:	b2c0      	uxtb	r0, r0
    f718:	0400      	lsls	r0, r0, #16
    f71a:	ea40 6305 	orr.w	r3, r0, r5, lsl #24
    f71e:	b2d2      	uxtb	r2, r2
    f720:	431a      	orrs	r2, r3
    f722:	b2e3      	uxtb	r3, r4
    f724:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
    f728:	630b      	str	r3, [r1, #48]	; 0x30
    f72a:	2000      	movs	r0, #0
    f72c:	bcf0      	pop	{r4, r5, r6, r7}
    f72e:	4770      	bx	lr
    f730:	40020000 	.word	0x40020000
    f734:	00023c14 	.word	0x00023c14
    f738:	00023c54 	.word	0x00023c54
    f73c:	f0000f00 	.word	0xf0000f00

0000f740 <am_hal_pwrctrl_periph_enable>:
    f740:	b570      	push	{r4, r5, r6, lr}
    f742:	b082      	sub	sp, #8
    f744:	4604      	mov	r4, r0
    f746:	f7ff ff07 	bl	f558 <am_hal_interrupt_master_disable>
    f74a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
    f74e:	4d0f      	ldr	r5, [pc, #60]	; (f78c <am_hal_pwrctrl_periph_enable+0x4c>)
    f750:	4e0f      	ldr	r6, [pc, #60]	; (f790 <am_hal_pwrctrl_periph_enable+0x50>)
    f752:	9001      	str	r0, [sp, #4]
    f754:	00a4      	lsls	r4, r4, #2
    f756:	68aa      	ldr	r2, [r5, #8]
    f758:	5933      	ldr	r3, [r6, r4]
    f75a:	4313      	orrs	r3, r2
    f75c:	60ab      	str	r3, [r5, #8]
    f75e:	9801      	ldr	r0, [sp, #4]
    f760:	4434      	add	r4, r6
    f762:	f7ff fefd 	bl	f560 <am_hal_interrupt_master_set>
    f766:	2077      	movs	r0, #119	; 0x77
    f768:	f7ff fec2 	bl	f4f0 <am_hal_flash_delay>
    f76c:	69ab      	ldr	r3, [r5, #24]
    f76e:	6864      	ldr	r4, [r4, #4]
    f770:	4223      	tst	r3, r4
    f772:	d103      	bne.n	f77c <am_hal_pwrctrl_periph_enable+0x3c>
    f774:	2077      	movs	r0, #119	; 0x77
    f776:	f7ff febb 	bl	f4f0 <am_hal_flash_delay>
    f77a:	69ab      	ldr	r3, [r5, #24]
    f77c:	4b03      	ldr	r3, [pc, #12]	; (f78c <am_hal_pwrctrl_periph_enable+0x4c>)
    f77e:	699b      	ldr	r3, [r3, #24]
    f780:	4223      	tst	r3, r4
    f782:	bf0c      	ite	eq
    f784:	2001      	moveq	r0, #1
    f786:	2000      	movne	r0, #0
    f788:	b002      	add	sp, #8
    f78a:	bd70      	pop	{r4, r5, r6, pc}
    f78c:	40021000 	.word	0x40021000
    f790:	00023c94 	.word	0x00023c94

0000f794 <am_hal_pwrctrl_periph_disable>:
    f794:	b570      	push	{r4, r5, r6, lr}
    f796:	b082      	sub	sp, #8
    f798:	4604      	mov	r4, r0
    f79a:	f7ff fedd 	bl	f558 <am_hal_interrupt_master_disable>
    f79e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
    f7a2:	4d10      	ldr	r5, [pc, #64]	; (f7e4 <am_hal_pwrctrl_periph_disable+0x50>)
    f7a4:	4e10      	ldr	r6, [pc, #64]	; (f7e8 <am_hal_pwrctrl_periph_disable+0x54>)
    f7a6:	9001      	str	r0, [sp, #4]
    f7a8:	00a4      	lsls	r4, r4, #2
    f7aa:	68ab      	ldr	r3, [r5, #8]
    f7ac:	5932      	ldr	r2, [r6, r4]
    f7ae:	ea23 0302 	bic.w	r3, r3, r2
    f7b2:	60ab      	str	r3, [r5, #8]
    f7b4:	9801      	ldr	r0, [sp, #4]
    f7b6:	4434      	add	r4, r6
    f7b8:	f7ff fed2 	bl	f560 <am_hal_interrupt_master_set>
    f7bc:	2077      	movs	r0, #119	; 0x77
    f7be:	f7ff fe97 	bl	f4f0 <am_hal_flash_delay>
    f7c2:	69ab      	ldr	r3, [r5, #24]
    f7c4:	6864      	ldr	r4, [r4, #4]
    f7c6:	4223      	tst	r3, r4
    f7c8:	d003      	beq.n	f7d2 <am_hal_pwrctrl_periph_disable+0x3e>
    f7ca:	2077      	movs	r0, #119	; 0x77
    f7cc:	f7ff fe90 	bl	f4f0 <am_hal_flash_delay>
    f7d0:	69ab      	ldr	r3, [r5, #24]
    f7d2:	4b04      	ldr	r3, [pc, #16]	; (f7e4 <am_hal_pwrctrl_periph_disable+0x50>)
    f7d4:	699b      	ldr	r3, [r3, #24]
    f7d6:	4223      	tst	r3, r4
    f7d8:	bf14      	ite	ne
    f7da:	2001      	movne	r0, #1
    f7dc:	2000      	moveq	r0, #0
    f7de:	b002      	add	sp, #8
    f7e0:	bd70      	pop	{r4, r5, r6, pc}
    f7e2:	bf00      	nop
    f7e4:	40021000 	.word	0x40021000
    f7e8:	00023c94 	.word	0x00023c94

0000f7ec <am_hal_pwrctrl_low_power_init>:
    f7ec:	b530      	push	{r4, r5, lr}
    f7ee:	4b1f      	ldr	r3, [pc, #124]	; (f86c <am_hal_pwrctrl_low_power_init+0x80>)
    f7f0:	681a      	ldr	r2, [r3, #0]
    f7f2:	b083      	sub	sp, #12
    f7f4:	b912      	cbnz	r2, f7fc <am_hal_pwrctrl_low_power_init+0x10>
    f7f6:	4a1e      	ldr	r2, [pc, #120]	; (f870 <am_hal_pwrctrl_low_power_init+0x84>)
    f7f8:	6812      	ldr	r2, [r2, #0]
    f7fa:	601a      	str	r2, [r3, #0]
    f7fc:	4c1d      	ldr	r4, [pc, #116]	; (f874 <am_hal_pwrctrl_low_power_init+0x88>)
    f7fe:	69a3      	ldr	r3, [r4, #24]
    f800:	05db      	lsls	r3, r3, #23
    f802:	d502      	bpl.n	f80a <am_hal_pwrctrl_low_power_init+0x1e>
    f804:	2000      	movs	r0, #0
    f806:	b003      	add	sp, #12
    f808:	bd30      	pop	{r4, r5, pc}
    f80a:	4d1b      	ldr	r5, [pc, #108]	; (f878 <am_hal_pwrctrl_low_power_init+0x8c>)
    f80c:	491b      	ldr	r1, [pc, #108]	; (f87c <am_hal_pwrctrl_low_power_init+0x90>)
    f80e:	7e2a      	ldrb	r2, [r5, #24]
    f810:	2001      	movs	r0, #1
    f812:	4302      	orrs	r2, r0
    f814:	2307      	movs	r3, #7
    f816:	762a      	strb	r2, [r5, #24]
    f818:	9000      	str	r0, [sp, #0]
    f81a:	461a      	mov	r2, r3
    f81c:	f242 7010 	movw	r0, #10000	; 0x2710
    f820:	f7ff fe6a 	bl	f4f8 <am_hal_flash_delay_status_check>
    f824:	b110      	cbz	r0, f82c <am_hal_pwrctrl_low_power_init+0x40>
    f826:	2004      	movs	r0, #4
    f828:	b003      	add	sp, #12
    f82a:	bd30      	pop	{r4, r5, pc}
    f82c:	6823      	ldr	r3, [r4, #0]
    f82e:	f043 0301 	orr.w	r3, r3, #1
    f832:	6023      	str	r3, [r4, #0]
    f834:	6a63      	ldr	r3, [r4, #36]	; 0x24
    f836:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    f83a:	6263      	str	r3, [r4, #36]	; 0x24
    f83c:	68eb      	ldr	r3, [r5, #12]
    f83e:	b2db      	uxtb	r3, r3
    f840:	2b11      	cmp	r3, #17
    f842:	d1df      	bne.n	f804 <am_hal_pwrctrl_low_power_init+0x18>
    f844:	f8d5 335c 	ldr.w	r3, [r5, #860]	; 0x35c
    f848:	f360 5356 	bfi	r3, r0, #21, #2
    f84c:	f8c5 335c 	str.w	r3, [r5, #860]	; 0x35c
    f850:	f8d5 3368 	ldr.w	r3, [r5, #872]	; 0x368
    f854:	220f      	movs	r2, #15
    f856:	f362 138b 	bfi	r3, r2, #6, #6
    f85a:	f8c5 3368 	str.w	r3, [r5, #872]	; 0x368
    f85e:	f8d5 3368 	ldr.w	r3, [r5, #872]	; 0x368
    f862:	f362 0305 	bfi	r3, r2, #0, #6
    f866:	f8c5 3368 	str.w	r3, [r5, #872]	; 0x368
    f86a:	e7cc      	b.n	f806 <am_hal_pwrctrl_low_power_init+0x1a>
    f86c:	10002694 	.word	0x10002694
    f870:	4ffff000 	.word	0x4ffff000
    f874:	40021000 	.word	0x40021000
    f878:	40020000 	.word	0x40020000
    f87c:	40020018 	.word	0x40020018

0000f880 <am_hal_rtc_osc_select>:
    f880:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    f884:	2801      	cmp	r0, #1
    f886:	68d3      	ldr	r3, [r2, #12]
    f888:	bf0c      	ite	eq
    f88a:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
    f88e:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
    f892:	60d3      	str	r3, [r2, #12]
    f894:	4770      	bx	lr
    f896:	bf00      	nop

0000f898 <am_hal_rtc_osc_disable>:
    f898:	4a03      	ldr	r2, [pc, #12]	; (f8a8 <am_hal_rtc_osc_disable+0x10>)
    f89a:	f892 3050 	ldrb.w	r3, [r2, #80]	; 0x50
    f89e:	f043 0310 	orr.w	r3, r3, #16
    f8a2:	f882 3050 	strb.w	r3, [r2, #80]	; 0x50
    f8a6:	4770      	bx	lr
    f8a8:	40004200 	.word	0x40004200

0000f8ac <am_hal_uart_initialize>:
    f8ac:	2801      	cmp	r0, #1
    f8ae:	d901      	bls.n	f8b4 <am_hal_uart_initialize+0x8>
    f8b0:	2005      	movs	r0, #5
    f8b2:	4770      	bx	lr
    f8b4:	b169      	cbz	r1, f8d2 <am_hal_uart_initialize+0x26>
    f8b6:	b5f0      	push	{r4, r5, r6, r7, lr}
    f8b8:	2264      	movs	r2, #100	; 0x64
    f8ba:	4e0e      	ldr	r6, [pc, #56]	; (f8f4 <am_hal_uart_initialize+0x48>)
    f8bc:	fb02 f200 	mul.w	r2, r2, r0
    f8c0:	18b4      	adds	r4, r6, r2
    f8c2:	4603      	mov	r3, r0
    f8c4:	78e0      	ldrb	r0, [r4, #3]
    f8c6:	f3c0 0700 	ubfx	r7, r0, #0, #1
    f8ca:	b2fd      	uxtb	r5, r7
    f8cc:	b11d      	cbz	r5, f8d6 <am_hal_uart_initialize+0x2a>
    f8ce:	2007      	movs	r0, #7
    f8d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    f8d2:	2006      	movs	r0, #6
    f8d4:	4770      	bx	lr
    f8d6:	f040 0001 	orr.w	r0, r0, #1
    f8da:	70e0      	strb	r0, [r4, #3]
    f8dc:	58b0      	ldr	r0, [r6, r2]
    f8de:	f8df e018 	ldr.w	lr, [pc, #24]	; f8f8 <am_hal_uart_initialize+0x4c>
    f8e2:	f36e 0017 	bfi	r0, lr, #0, #24
    f8e6:	50b0      	str	r0, [r6, r2]
    f8e8:	6263      	str	r3, [r4, #36]	; 0x24
    f8ea:	7127      	strb	r7, [r4, #4]
    f8ec:	6625      	str	r5, [r4, #96]	; 0x60
    f8ee:	4628      	mov	r0, r5
    f8f0:	600c      	str	r4, [r1, #0]
    f8f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    f8f4:	10039778 	.word	0x10039778
    f8f8:	00ea9e06 	.word	0x00ea9e06

0000f8fc <am_hal_uart_power_control>:
    f8fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f900:	6804      	ldr	r4, [r0, #0]
    f902:	4b36      	ldr	r3, [pc, #216]	; (f9dc <am_hal_uart_power_control+0xe0>)
    f904:	f024 447e 	bic.w	r4, r4, #4261412864	; 0xfe000000
    f908:	429c      	cmp	r4, r3
    f90a:	b083      	sub	sp, #12
    f90c:	d003      	beq.n	f916 <am_hal_uart_power_control+0x1a>
    f90e:	2002      	movs	r0, #2
    f910:	b003      	add	sp, #12
    f912:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f916:	6a47      	ldr	r7, [r0, #36]	; 0x24
    f918:	4605      	mov	r5, r0
    f91a:	f107 0008 	add.w	r0, r7, #8
    f91e:	4691      	mov	r9, r2
    f920:	460e      	mov	r6, r1
    f922:	fa5f f880 	uxtb.w	r8, r0
    f926:	b181      	cbz	r1, f94a <am_hal_uart_power_control+0x4e>
    f928:	2902      	cmp	r1, #2
    f92a:	d80c      	bhi.n	f946 <am_hal_uart_power_control+0x4a>
    f92c:	b992      	cbnz	r2, f954 <am_hal_uart_power_control+0x58>
    f92e:	f507 2780 	add.w	r7, r7, #262144	; 0x40000
    f932:	371c      	adds	r7, #28
    f934:	033f      	lsls	r7, r7, #12
    f936:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    f93a:	647b      	str	r3, [r7, #68]	; 0x44
    f93c:	4640      	mov	r0, r8
    f93e:	f7ff ff29 	bl	f794 <am_hal_pwrctrl_periph_disable>
    f942:	2000      	movs	r0, #0
    f944:	e7e4      	b.n	f910 <am_hal_uart_power_control+0x14>
    f946:	2006      	movs	r0, #6
    f948:	e7e2      	b.n	f910 <am_hal_uart_power_control+0x14>
    f94a:	b322      	cbz	r2, f996 <am_hal_uart_power_control+0x9a>
    f94c:	792b      	ldrb	r3, [r5, #4]
    f94e:	bb3b      	cbnz	r3, f9a0 <am_hal_uart_power_control+0xa4>
    f950:	2007      	movs	r0, #7
    f952:	e7dd      	b.n	f910 <am_hal_uart_power_control+0x14>
    f954:	f7ff fe00 	bl	f558 <am_hal_interrupt_master_disable>
    f958:	f507 2380 	add.w	r3, r7, #262144	; 0x40000
    f95c:	331c      	adds	r3, #28
    f95e:	031b      	lsls	r3, r3, #12
    f960:	9001      	str	r0, [sp, #4]
    f962:	6a1a      	ldr	r2, [r3, #32]
    f964:	60aa      	str	r2, [r5, #8]
    f966:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    f968:	60ea      	str	r2, [r5, #12]
    f96a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    f96c:	612a      	str	r2, [r5, #16]
    f96e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    f970:	616a      	str	r2, [r5, #20]
    f972:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    f974:	61aa      	str	r2, [r5, #24]
    f976:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    f978:	61ea      	str	r2, [r5, #28]
    f97a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    f97c:	622b      	str	r3, [r5, #32]
    f97e:	2301      	movs	r3, #1
    f980:	712b      	strb	r3, [r5, #4]
    f982:	9801      	ldr	r0, [sp, #4]
    f984:	f7ff fdec 	bl	f560 <am_hal_interrupt_master_set>
    f988:	682b      	ldr	r3, [r5, #0]
    f98a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    f98e:	42a3      	cmp	r3, r4
    f990:	d1d4      	bne.n	f93c <am_hal_uart_power_control+0x40>
    f992:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    f994:	e7cb      	b.n	f92e <am_hal_uart_power_control+0x32>
    f996:	4640      	mov	r0, r8
    f998:	f7ff fed2 	bl	f740 <am_hal_pwrctrl_periph_enable>
    f99c:	4648      	mov	r0, r9
    f99e:	e7b7      	b.n	f910 <am_hal_uart_power_control+0x14>
    f9a0:	4640      	mov	r0, r8
    f9a2:	f7ff fecd 	bl	f740 <am_hal_pwrctrl_periph_enable>
    f9a6:	f7ff fdd7 	bl	f558 <am_hal_interrupt_master_disable>
    f9aa:	f507 2380 	add.w	r3, r7, #262144	; 0x40000
    f9ae:	331c      	adds	r3, #28
    f9b0:	031b      	lsls	r3, r3, #12
    f9b2:	68aa      	ldr	r2, [r5, #8]
    f9b4:	9000      	str	r0, [sp, #0]
    f9b6:	621a      	str	r2, [r3, #32]
    f9b8:	68ea      	ldr	r2, [r5, #12]
    f9ba:	625a      	str	r2, [r3, #36]	; 0x24
    f9bc:	692a      	ldr	r2, [r5, #16]
    f9be:	629a      	str	r2, [r3, #40]	; 0x28
    f9c0:	696a      	ldr	r2, [r5, #20]
    f9c2:	62da      	str	r2, [r3, #44]	; 0x2c
    f9c4:	69aa      	ldr	r2, [r5, #24]
    f9c6:	631a      	str	r2, [r3, #48]	; 0x30
    f9c8:	69ea      	ldr	r2, [r5, #28]
    f9ca:	635a      	str	r2, [r3, #52]	; 0x34
    f9cc:	6a2a      	ldr	r2, [r5, #32]
    f9ce:	639a      	str	r2, [r3, #56]	; 0x38
    f9d0:	9800      	ldr	r0, [sp, #0]
    f9d2:	712e      	strb	r6, [r5, #4]
    f9d4:	f7ff fdc4 	bl	f560 <am_hal_interrupt_master_set>
    f9d8:	4630      	mov	r0, r6
    f9da:	e799      	b.n	f910 <am_hal_uart_power_control+0x14>
    f9dc:	01ea9e06 	.word	0x01ea9e06

0000f9e0 <am_hal_uart_configure>:
    f9e0:	6803      	ldr	r3, [r0, #0]
    f9e2:	4a7a      	ldr	r2, [pc, #488]	; (fbcc <am_hal_uart_configure+0x1ec>)
    f9e4:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    f9e8:	4293      	cmp	r3, r2
    f9ea:	d001      	beq.n	f9f0 <am_hal_uart_configure+0x10>
    f9ec:	2002      	movs	r0, #2
    f9ee:	4770      	bx	lr
    f9f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f9f4:	6a45      	ldr	r5, [r0, #36]	; 0x24
    f9f6:	f505 2580 	add.w	r5, r5, #262144	; 0x40000
    f9fa:	351c      	adds	r5, #28
    f9fc:	032d      	lsls	r5, r5, #12
    f9fe:	2700      	movs	r7, #0
    fa00:	b084      	sub	sp, #16
    fa02:	632f      	str	r7, [r5, #48]	; 0x30
    fa04:	460e      	mov	r6, r1
    fa06:	4604      	mov	r4, r0
    fa08:	f7ff fda6 	bl	f558 <am_hal_interrupt_master_disable>
    fa0c:	9001      	str	r0, [sp, #4]
    fa0e:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    fa10:	f043 0308 	orr.w	r3, r3, #8
    fa14:	862b      	strh	r3, [r5, #48]	; 0x30
    fa16:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    fa18:	2201      	movs	r2, #1
    fa1a:	f362 1306 	bfi	r3, r2, #4, #3
    fa1e:	862b      	strh	r3, [r5, #48]	; 0x30
    fa20:	9801      	ldr	r0, [sp, #4]
    fa22:	f7ff fd9d 	bl	f560 <am_hal_interrupt_master_set>
    fa26:	f7ff fd97 	bl	f558 <am_hal_interrupt_master_disable>
    fa2a:	9002      	str	r0, [sp, #8]
    fa2c:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    fa2e:	f367 0300 	bfi	r3, r7, #0, #1
    fa32:	862b      	strh	r3, [r5, #48]	; 0x30
    fa34:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    fa36:	f367 2349 	bfi	r3, r7, #9, #1
    fa3a:	862b      	strh	r3, [r5, #48]	; 0x30
    fa3c:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    fa3e:	f367 2308 	bfi	r3, r7, #8, #1
    fa42:	862b      	strh	r3, [r5, #48]	; 0x30
    fa44:	9802      	ldr	r0, [sp, #8]
    fa46:	f7ff fd8b 	bl	f560 <am_hal_interrupt_master_set>
    fa4a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    fa4c:	f3c3 1302 	ubfx	r3, r3, #4, #3
    fa50:	3b01      	subs	r3, #1
    fa52:	2b03      	cmp	r3, #3
    fa54:	d854      	bhi.n	fb00 <am_hal_uart_configure+0x120>
    fa56:	e8df f003 	tbb	[pc, r3]
    fa5a:	020e      	.short	0x020e
    fa5c:	1114      	.short	0x1114
    fa5e:	495c      	ldr	r1, [pc, #368]	; (fbd0 <am_hal_uart_configure+0x1f0>)
    fa60:	485c      	ldr	r0, [pc, #368]	; (fbd4 <am_hal_uart_configure+0x1f4>)
    fa62:	6832      	ldr	r2, [r6, #0]
    fa64:	0112      	lsls	r2, r2, #4
    fa66:	fbb0 f3f2 	udiv	r3, r0, r2
    fa6a:	b96b      	cbnz	r3, fa88 <am_hal_uart_configure+0xa8>
    fa6c:	485a      	ldr	r0, [pc, #360]	; (fbd8 <am_hal_uart_configure+0x1f8>)
    fa6e:	6623      	str	r3, [r4, #96]	; 0x60
    fa70:	b004      	add	sp, #16
    fa72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    fa76:	4959      	ldr	r1, [pc, #356]	; (fbdc <am_hal_uart_configure+0x1fc>)
    fa78:	4859      	ldr	r0, [pc, #356]	; (fbe0 <am_hal_uart_configure+0x200>)
    fa7a:	e7f2      	b.n	fa62 <am_hal_uart_configure+0x82>
    fa7c:	4959      	ldr	r1, [pc, #356]	; (fbe4 <am_hal_uart_configure+0x204>)
    fa7e:	485a      	ldr	r0, [pc, #360]	; (fbe8 <am_hal_uart_configure+0x208>)
    fa80:	e7ef      	b.n	fa62 <am_hal_uart_configure+0x82>
    fa82:	495a      	ldr	r1, [pc, #360]	; (fbec <am_hal_uart_configure+0x20c>)
    fa84:	485a      	ldr	r0, [pc, #360]	; (fbf0 <am_hal_uart_configure+0x210>)
    fa86:	e7ec      	b.n	fa62 <am_hal_uart_configure+0x82>
    fa88:	fbb1 f2f2 	udiv	r2, r1, r2
    fa8c:	eba2 1283 	sub.w	r2, r2, r3, lsl #6
    fa90:	626b      	str	r3, [r5, #36]	; 0x24
    fa92:	eb02 1103 	add.w	r1, r2, r3, lsl #4
    fa96:	626b      	str	r3, [r5, #36]	; 0x24
    fa98:	fbb0 f0f1 	udiv	r0, r0, r1
    fa9c:	62aa      	str	r2, [r5, #40]	; 0x28
    fa9e:	6620      	str	r0, [r4, #96]	; 0x60
    faa0:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    faa2:	f36f 338e 	bfc	r3, #14, #1
    faa6:	862b      	strh	r3, [r5, #48]	; 0x30
    faa8:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    faaa:	f36f 33cf 	bfc	r3, #15, #1
    faae:	862b      	strh	r3, [r5, #48]	; 0x30
    fab0:	6b2a      	ldr	r2, [r5, #48]	; 0x30
    fab2:	6933      	ldr	r3, [r6, #16]
    fab4:	4313      	orrs	r3, r2
    fab6:	632b      	str	r3, [r5, #48]	; 0x30
    fab8:	6973      	ldr	r3, [r6, #20]
    faba:	636b      	str	r3, [r5, #52]	; 0x34
    fabc:	6871      	ldr	r1, [r6, #4]
    fabe:	68b3      	ldr	r3, [r6, #8]
    fac0:	68f2      	ldr	r2, [r6, #12]
    fac2:	430b      	orrs	r3, r1
    fac4:	f043 0310 	orr.w	r3, r3, #16
    fac8:	4313      	orrs	r3, r2
    faca:	62eb      	str	r3, [r5, #44]	; 0x2c
    facc:	f7ff fd44 	bl	f558 <am_hal_interrupt_master_disable>
    fad0:	9003      	str	r0, [sp, #12]
    fad2:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    fad4:	f043 0301 	orr.w	r3, r3, #1
    fad8:	862b      	strh	r3, [r5, #48]	; 0x30
    fada:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    fadc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    fae0:	862b      	strh	r3, [r5, #48]	; 0x30
    fae2:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
    fae4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    fae8:	862b      	strh	r3, [r5, #48]	; 0x30
    faea:	9803      	ldr	r0, [sp, #12]
    faec:	f7ff fd38 	bl	f560 <am_hal_interrupt_master_set>
    faf0:	6825      	ldr	r5, [r4, #0]
    faf2:	4b36      	ldr	r3, [pc, #216]	; (fbcc <am_hal_uart_configure+0x1ec>)
    faf4:	f025 457e 	bic.w	r5, r5, #4261412864	; 0xfe000000
    faf8:	429d      	cmp	r5, r3
    fafa:	d005      	beq.n	fb08 <am_hal_uart_configure+0x128>
    fafc:	2000      	movs	r0, #0
    fafe:	e7b7      	b.n	fa70 <am_hal_uart_configure+0x90>
    fb00:	2300      	movs	r3, #0
    fb02:	6623      	str	r3, [r4, #96]	; 0x60
    fb04:	483b      	ldr	r0, [pc, #236]	; (fbf4 <am_hal_uart_configure+0x214>)
    fb06:	e7b3      	b.n	fa70 <am_hal_uart_configure+0x90>
    fb08:	69b1      	ldr	r1, [r6, #24]
    fb0a:	6a37      	ldr	r7, [r6, #32]
    fb0c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    fb10:	b109      	cbz	r1, fb16 <am_hal_uart_configure+0x136>
    fb12:	69f3      	ldr	r3, [r6, #28]
    fb14:	bb3b      	cbnz	r3, fb66 <am_hal_uart_configure+0x186>
    fb16:	6a63      	ldr	r3, [r4, #36]	; 0x24
    fb18:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    fb1c:	f103 021c 	add.w	r2, r3, #28
    fb20:	0312      	lsls	r2, r2, #12
    fb22:	2100      	movs	r1, #0
    fb24:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
    fb28:	6b91      	ldr	r1, [r2, #56]	; 0x38
    fb2a:	f021 0120 	bic.w	r1, r1, #32
    fb2e:	6391      	str	r1, [r2, #56]	; 0x38
    fb30:	b1b7      	cbz	r7, fb60 <am_hal_uart_configure+0x180>
    fb32:	f1b8 0f00 	cmp.w	r8, #0
    fb36:	d12e      	bne.n	fb96 <am_hal_uart_configure+0x1b6>
    fb38:	6823      	ldr	r3, [r4, #0]
    fb3a:	4a24      	ldr	r2, [pc, #144]	; (fbcc <am_hal_uart_configure+0x1ec>)
    fb3c:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    fb40:	2100      	movs	r1, #0
    fb42:	4293      	cmp	r3, r2
    fb44:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
    fb48:	d1d8      	bne.n	fafc <am_hal_uart_configure+0x11c>
    fb4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    fb4c:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    fb50:	331c      	adds	r3, #28
    fb52:	031b      	lsls	r3, r3, #12
    fb54:	2000      	movs	r0, #0
    fb56:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    fb58:	f022 0250 	bic.w	r2, r2, #80	; 0x50
    fb5c:	639a      	str	r2, [r3, #56]	; 0x38
    fb5e:	e787      	b.n	fa70 <am_hal_uart_configure+0x90>
    fb60:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
    fb64:	e7f4      	b.n	fb50 <am_hal_uart_configure+0x170>
    fb66:	2201      	movs	r2, #1
    fb68:	f884 2028 	strb.w	r2, [r4, #40]	; 0x28
    fb6c:	f104 002c 	add.w	r0, r4, #44	; 0x2c
    fb70:	f000 fa7c 	bl	1006c <am_hal_queue_init>
    fb74:	6823      	ldr	r3, [r4, #0]
    fb76:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    fb7a:	42ab      	cmp	r3, r5
    fb7c:	d1be      	bne.n	fafc <am_hal_uart_configure+0x11c>
    fb7e:	6a63      	ldr	r3, [r4, #36]	; 0x24
    fb80:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    fb84:	331c      	adds	r3, #28
    fb86:	031b      	lsls	r3, r3, #12
    fb88:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    fb8a:	f042 0220 	orr.w	r2, r2, #32
    fb8e:	639a      	str	r2, [r3, #56]	; 0x38
    fb90:	2f00      	cmp	r7, #0
    fb92:	d1ce      	bne.n	fb32 <am_hal_uart_configure+0x152>
    fb94:	e7d0      	b.n	fb38 <am_hal_uart_configure+0x158>
    fb96:	2201      	movs	r2, #1
    fb98:	4643      	mov	r3, r8
    fb9a:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
    fb9e:	4639      	mov	r1, r7
    fba0:	f104 0048 	add.w	r0, r4, #72	; 0x48
    fba4:	f000 fa62 	bl	1006c <am_hal_queue_init>
    fba8:	6823      	ldr	r3, [r4, #0]
    fbaa:	4a08      	ldr	r2, [pc, #32]	; (fbcc <am_hal_uart_configure+0x1ec>)
    fbac:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    fbb0:	4293      	cmp	r3, r2
    fbb2:	d1a3      	bne.n	fafc <am_hal_uart_configure+0x11c>
    fbb4:	6a63      	ldr	r3, [r4, #36]	; 0x24
    fbb6:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    fbba:	331c      	adds	r3, #28
    fbbc:	031b      	lsls	r3, r3, #12
    fbbe:	2000      	movs	r0, #0
    fbc0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    fbc2:	f042 0250 	orr.w	r2, r2, #80	; 0x50
    fbc6:	639a      	str	r2, [r3, #56]	; 0x38
    fbc8:	e752      	b.n	fa70 <am_hal_uart_configure+0x90>
    fbca:	bf00      	nop
    fbcc:	01ea9e06 	.word	0x01ea9e06
    fbd0:	2dc6c000 	.word	0x2dc6c000
    fbd4:	00b71b00 	.word	0x00b71b00
    fbd8:	08000003 	.word	0x08000003
    fbdc:	5b8d8000 	.word	0x5b8d8000
    fbe0:	016e3600 	.word	0x016e3600
    fbe4:	0b71b000 	.word	0x0b71b000
    fbe8:	002dc6c0 	.word	0x002dc6c0
    fbec:	16e36000 	.word	0x16e36000
    fbf0:	005b8d80 	.word	0x005b8d80
    fbf4:	08000002 	.word	0x08000002

0000fbf8 <am_hal_uart_transfer>:
    fbf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fbfc:	680f      	ldr	r7, [r1, #0]
    fbfe:	b091      	sub	sp, #68	; 0x44
    fc00:	4605      	mov	r5, r0
    fc02:	b13f      	cbz	r7, fc14 <am_hal_uart_transfer+0x1c>
    fc04:	2f01      	cmp	r7, #1
    fc06:	bf18      	it	ne
    fc08:	2707      	movne	r7, #7
    fc0a:	d024      	beq.n	fc56 <am_hal_uart_transfer+0x5e>
    fc0c:	4638      	mov	r0, r7
    fc0e:	b011      	add	sp, #68	; 0x44
    fc10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fc14:	f8d1 900c 	ldr.w	r9, [r1, #12]
    fc18:	690b      	ldr	r3, [r1, #16]
    fc1a:	f8d1 a004 	ldr.w	sl, [r1, #4]
    fc1e:	688e      	ldr	r6, [r1, #8]
    fc20:	9300      	str	r3, [sp, #0]
    fc22:	f1b9 0f00 	cmp.w	r9, #0
    fc26:	d031      	beq.n	fc8c <am_hal_uart_transfer+0x94>
    fc28:	2e00      	cmp	r6, #0
    fc2a:	f000 819c 	beq.w	ff66 <am_hal_uart_transfer+0x36e>
    fc2e:	2800      	cmp	r0, #0
    fc30:	f000 8097 	beq.w	fd62 <am_hal_uart_transfer+0x16a>
    fc34:	6803      	ldr	r3, [r0, #0]
    fc36:	4aa9      	ldr	r2, [pc, #676]	; (fedc <am_hal_uart_transfer+0x2e4>)
    fc38:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    fc3c:	4293      	cmp	r3, r2
    fc3e:	f000 8092 	beq.w	fd66 <am_hal_uart_transfer+0x16e>
    fc42:	46b8      	mov	r8, r7
    fc44:	9b00      	ldr	r3, [sp, #0]
    fc46:	b10b      	cbz	r3, fc4c <am_hal_uart_transfer+0x54>
    fc48:	f8c3 8000 	str.w	r8, [r3]
    fc4c:	2702      	movs	r7, #2
    fc4e:	4638      	mov	r0, r7
    fc50:	b011      	add	sp, #68	; 0x44
    fc52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fc56:	1d0b      	adds	r3, r1, #4
    fc58:	e893 0a88 	ldmia.w	r3, {r3, r7, r9, fp}
    fc5c:	f1b9 0f00 	cmp.w	r9, #0
    fc60:	d043      	beq.n	fcea <am_hal_uart_transfer+0xf2>
    fc62:	2f00      	cmp	r7, #0
    fc64:	f000 8185 	beq.w	ff72 <am_hal_uart_transfer+0x37a>
    fc68:	2800      	cmp	r0, #0
    fc6a:	f000 80eb 	beq.w	fe44 <am_hal_uart_transfer+0x24c>
    fc6e:	6802      	ldr	r2, [r0, #0]
    fc70:	499a      	ldr	r1, [pc, #616]	; (fedc <am_hal_uart_transfer+0x2e4>)
    fc72:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    fc76:	428a      	cmp	r2, r1
    fc78:	f000 80e7 	beq.w	fe4a <am_hal_uart_transfer+0x252>
    fc7c:	2600      	movs	r6, #0
    fc7e:	2702      	movs	r7, #2
    fc80:	f1bb 0f00 	cmp.w	fp, #0
    fc84:	d0c2      	beq.n	fc0c <am_hal_uart_transfer+0x14>
    fc86:	f8cb 6000 	str.w	r6, [fp]
    fc8a:	e7bf      	b.n	fc0c <am_hal_uart_transfer+0x14>
    fc8c:	2800      	cmp	r0, #0
    fc8e:	d0dd      	beq.n	fc4c <am_hal_uart_transfer+0x54>
    fc90:	6803      	ldr	r3, [r0, #0]
    fc92:	4a92      	ldr	r2, [pc, #584]	; (fedc <am_hal_uart_transfer+0x2e4>)
    fc94:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
    fc98:	4293      	cmp	r3, r2
    fc9a:	d1d7      	bne.n	fc4c <am_hal_uart_transfer+0x54>
    fc9c:	9b00      	ldr	r3, [sp, #0]
    fc9e:	b10b      	cbz	r3, fca4 <am_hal_uart_transfer+0xac>
    fca0:	f8c3 9000 	str.w	r9, [r3]
    fca4:	b1fe      	cbz	r6, fce6 <am_hal_uart_transfer+0xee>
    fca6:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
    fcaa:	2b00      	cmp	r3, #0
    fcac:	f040 8165 	bne.w	ff7a <am_hal_uart_transfer+0x382>
    fcb0:	6a69      	ldr	r1, [r5, #36]	; 0x24
    fcb2:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
    fcb6:	311c      	adds	r1, #28
    fcb8:	0309      	lsls	r1, r1, #12
    fcba:	698a      	ldr	r2, [r1, #24]
    fcbc:	f3c2 1240 	ubfx	r2, r2, #5, #1
    fcc0:	2a00      	cmp	r2, #0
    fcc2:	f040 818d 	bne.w	ffe0 <am_hal_uart_transfer+0x3e8>
    fcc6:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
    fcca:	e003      	b.n	fcd4 <am_hal_uart_transfer+0xdc>
    fccc:	6988      	ldr	r0, [r1, #24]
    fcce:	0680      	lsls	r0, r0, #26
    fcd0:	f100 8151 	bmi.w	ff76 <am_hal_uart_transfer+0x37e>
    fcd4:	3201      	adds	r2, #1
    fcd6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
    fcda:	6008      	str	r0, [r1, #0]
    fcdc:	4296      	cmp	r6, r2
    fcde:	d1f5      	bne.n	fccc <am_hal_uart_transfer+0xd4>
    fce0:	9b00      	ldr	r3, [sp, #0]
    fce2:	b103      	cbz	r3, fce6 <am_hal_uart_transfer+0xee>
    fce4:	601e      	str	r6, [r3, #0]
    fce6:	2700      	movs	r7, #0
    fce8:	e790      	b.n	fc0c <am_hal_uart_transfer+0x14>
    fcea:	2800      	cmp	r0, #0
    fcec:	d0ae      	beq.n	fc4c <am_hal_uart_transfer+0x54>
    fcee:	6802      	ldr	r2, [r0, #0]
    fcf0:	497a      	ldr	r1, [pc, #488]	; (fedc <am_hal_uart_transfer+0x2e4>)
    fcf2:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    fcf6:	428a      	cmp	r2, r1
    fcf8:	d1a8      	bne.n	fc4c <am_hal_uart_transfer+0x54>
    fcfa:	f1bb 0f00 	cmp.w	fp, #0
    fcfe:	d001      	beq.n	fd04 <am_hal_uart_transfer+0x10c>
    fd00:	f8cb 9000 	str.w	r9, [fp]
    fd04:	2f00      	cmp	r7, #0
    fd06:	d0ee      	beq.n	fce6 <am_hal_uart_transfer+0xee>
    fd08:	f895 4044 	ldrb.w	r4, [r5, #68]	; 0x44
    fd0c:	2c00      	cmp	r4, #0
    fd0e:	f040 816c 	bne.w	ffea <am_hal_uart_transfer+0x3f2>
    fd12:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    fd14:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
    fd18:	321c      	adds	r2, #28
    fd1a:	0312      	lsls	r2, r2, #12
    fd1c:	6990      	ldr	r0, [r2, #24]
    fd1e:	f3c0 1000 	ubfx	r0, r0, #4, #1
    fd22:	2800      	cmp	r0, #0
    fd24:	f040 819d 	bne.w	10062 <am_hal_uart_transfer+0x46a>
    fd28:	6811      	ldr	r1, [r2, #0]
    fd2a:	f411 6470 	ands.w	r4, r1, #3840	; 0xf00
    fd2e:	bf08      	it	eq
    fd30:	f103 33ff 	addeq.w	r3, r3, #4294967295	; 0xffffffff
    fd34:	d008      	beq.n	fd48 <am_hal_uart_transfer+0x150>
    fd36:	e190      	b.n	1005a <am_hal_uart_transfer+0x462>
    fd38:	6991      	ldr	r1, [r2, #24]
    fd3a:	06c8      	lsls	r0, r1, #27
    fd3c:	d409      	bmi.n	fd52 <am_hal_uart_transfer+0x15a>
    fd3e:	6811      	ldr	r1, [r2, #0]
    fd40:	f411 6f70 	tst.w	r1, #3840	; 0xf00
    fd44:	f040 814e 	bne.w	ffe4 <am_hal_uart_transfer+0x3ec>
    fd48:	3401      	adds	r4, #1
    fd4a:	42a7      	cmp	r7, r4
    fd4c:	f803 1f01 	strb.w	r1, [r3, #1]!
    fd50:	d1f2      	bne.n	fd38 <am_hal_uart_transfer+0x140>
    fd52:	2700      	movs	r7, #0
    fd54:	f1bb 0f00 	cmp.w	fp, #0
    fd58:	f43f af58 	beq.w	fc0c <am_hal_uart_transfer+0x14>
    fd5c:	f8cb 4000 	str.w	r4, [fp]
    fd60:	e754      	b.n	fc0c <am_hal_uart_transfer+0x14>
    fd62:	4680      	mov	r8, r0
    fd64:	e76e      	b.n	fc44 <am_hal_uart_transfer+0x4c>
    fd66:	9301      	str	r3, [sp, #4]
    fd68:	4651      	mov	r1, sl
    fd6a:	46bb      	mov	fp, r7
    fd6c:	46b8      	mov	r8, r7
    fd6e:	f895 2028 	ldrb.w	r2, [r5, #40]	; 0x28
    fd72:	b9f2      	cbnz	r2, fdb2 <am_hal_uart_transfer+0x1ba>
    fd74:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    fd76:	b19e      	cbz	r6, fda0 <am_hal_uart_transfer+0x1a8>
    fd78:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
    fd7c:	321c      	adds	r2, #28
    fd7e:	0312      	lsls	r2, r2, #12
    fd80:	3901      	subs	r1, #1
    fd82:	6994      	ldr	r4, [r2, #24]
    fd84:	f3c4 1440 	ubfx	r4, r4, #5, #1
    fd88:	b11c      	cbz	r4, fd92 <am_hal_uart_transfer+0x19a>
    fd8a:	e047      	b.n	fe1c <am_hal_uart_transfer+0x224>
    fd8c:	6993      	ldr	r3, [r2, #24]
    fd8e:	069b      	lsls	r3, r3, #26
    fd90:	d441      	bmi.n	fe16 <am_hal_uart_transfer+0x21e>
    fd92:	3401      	adds	r4, #1
    fd94:	f811 3f01 	ldrb.w	r3, [r1, #1]!
    fd98:	6013      	str	r3, [r2, #0]
    fd9a:	42b4      	cmp	r4, r6
    fd9c:	d1f6      	bne.n	fd8c <am_hal_uart_transfer+0x194>
    fd9e:	44a0      	add	r8, r4
    fda0:	9b00      	ldr	r3, [sp, #0]
    fda2:	2b00      	cmp	r3, #0
    fda4:	d09f      	beq.n	fce6 <am_hal_uart_transfer+0xee>
    fda6:	4638      	mov	r0, r7
    fda8:	f8c3 8000 	str.w	r8, [r3]
    fdac:	b011      	add	sp, #68	; 0x44
    fdae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fdb2:	6baa      	ldr	r2, [r5, #56]	; 0x38
    fdb4:	6b6c      	ldr	r4, [r5, #52]	; 0x34
    fdb6:	1b14      	subs	r4, r2, r4
    fdb8:	42b4      	cmp	r4, r6
    fdba:	f105 032c 	add.w	r3, r5, #44	; 0x2c
    fdbe:	bf28      	it	cs
    fdc0:	4634      	movcs	r4, r6
    fdc2:	4622      	mov	r2, r4
    fdc4:	4618      	mov	r0, r3
    fdc6:	9302      	str	r3, [sp, #8]
    fdc8:	f000 f95c 	bl	10084 <am_hal_queue_item_add>
    fdcc:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    fdce:	9303      	str	r3, [sp, #12]
    fdd0:	f7ff fbc2 	bl	f558 <am_hal_interrupt_master_disable>
    fdd4:	9b03      	ldr	r3, [sp, #12]
    fdd6:	9008      	str	r0, [sp, #32]
    fdd8:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    fddc:	331c      	adds	r3, #28
    fdde:	031b      	lsls	r3, r3, #12
    fde0:	9303      	str	r3, [sp, #12]
    fde2:	e00d      	b.n	fe00 <am_hal_uart_transfer+0x208>
    fde4:	f000 f986 	bl	100f4 <am_hal_queue_item_get>
    fde8:	b190      	cbz	r0, fe10 <am_hal_uart_transfer+0x218>
    fdea:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    fdec:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    fdf0:	331c      	adds	r3, #28
    fdf2:	031b      	lsls	r3, r3, #12
    fdf4:	699a      	ldr	r2, [r3, #24]
    fdf6:	0692      	lsls	r2, r2, #26
    fdf8:	bf5c      	itt	pl
    fdfa:	f89d 201c 	ldrbpl.w	r2, [sp, #28]
    fdfe:	601a      	strpl	r2, [r3, #0]
    fe00:	9b03      	ldr	r3, [sp, #12]
    fe02:	9802      	ldr	r0, [sp, #8]
    fe04:	699b      	ldr	r3, [r3, #24]
    fe06:	069b      	lsls	r3, r3, #26
    fe08:	f04f 0201 	mov.w	r2, #1
    fe0c:	a907      	add	r1, sp, #28
    fe0e:	d5e9      	bpl.n	fde4 <am_hal_uart_transfer+0x1ec>
    fe10:	9808      	ldr	r0, [sp, #32]
    fe12:	f7ff fba5 	bl	f560 <am_hal_interrupt_master_set>
    fe16:	1b36      	subs	r6, r6, r4
    fe18:	44a0      	add	r8, r4
    fe1a:	d0c1      	beq.n	fda0 <am_hal_uart_transfer+0x1a8>
    fe1c:	2001      	movs	r0, #1
    fe1e:	f7ff fb67 	bl	f4f0 <am_hal_flash_delay>
    fe22:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
    fe26:	d001      	beq.n	fe2c <am_hal_uart_transfer+0x234>
    fe28:	f10b 0b01 	add.w	fp, fp, #1
    fe2c:	45d9      	cmp	r9, fp
    fe2e:	d9b7      	bls.n	fda0 <am_hal_uart_transfer+0x1a8>
    fe30:	682a      	ldr	r2, [r5, #0]
    fe32:	9b01      	ldr	r3, [sp, #4]
    fe34:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    fe38:	429a      	cmp	r2, r3
    fe3a:	eb0a 0108 	add.w	r1, sl, r8
    fe3e:	f47f af01 	bne.w	fc44 <am_hal_uart_transfer+0x4c>
    fe42:	e794      	b.n	fd6e <am_hal_uart_transfer+0x176>
    fe44:	4606      	mov	r6, r0
    fe46:	2702      	movs	r7, #2
    fe48:	e71a      	b.n	fc80 <am_hal_uart_transfer+0x88>
    fe4a:	9200      	str	r2, [sp, #0]
    fe4c:	f100 0248 	add.w	r2, r0, #72	; 0x48
    fe50:	f04f 0a00 	mov.w	sl, #0
    fe54:	9202      	str	r2, [sp, #8]
    fe56:	465a      	mov	r2, fp
    fe58:	4698      	mov	r8, r3
    fe5a:	469b      	mov	fp, r3
    fe5c:	4656      	mov	r6, sl
    fe5e:	4613      	mov	r3, r2
    fe60:	f895 2044 	ldrb.w	r2, [r5, #68]	; 0x44
    fe64:	2a00      	cmp	r2, #0
    fe66:	d152      	bne.n	ff0e <am_hal_uart_transfer+0x316>
    fe68:	6a69      	ldr	r1, [r5, #36]	; 0x24
    fe6a:	b3a7      	cbz	r7, fed6 <am_hal_uart_transfer+0x2de>
    fe6c:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
    fe70:	311c      	adds	r1, #28
    fe72:	0309      	lsls	r1, r1, #12
    fe74:	698a      	ldr	r2, [r1, #24]
    fe76:	06d0      	lsls	r0, r2, #27
    fe78:	d432      	bmi.n	fee0 <am_hal_uart_transfer+0x2e8>
    fe7a:	680a      	ldr	r2, [r1, #0]
    fe7c:	f412 6470 	ands.w	r4, r2, #3840	; 0xf00
    fe80:	f040 80aa 	bne.w	ffd8 <am_hal_uart_transfer+0x3e0>
    fe84:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    fe88:	e006      	b.n	fe98 <am_hal_uart_transfer+0x2a0>
    fe8a:	698a      	ldr	r2, [r1, #24]
    fe8c:	06d2      	lsls	r2, r2, #27
    fe8e:	d41f      	bmi.n	fed0 <am_hal_uart_transfer+0x2d8>
    fe90:	680a      	ldr	r2, [r1, #0]
    fe92:	f412 6f70 	tst.w	r2, #3840	; 0xf00
    fe96:	d161      	bne.n	ff5c <am_hal_uart_transfer+0x364>
    fe98:	3401      	adds	r4, #1
    fe9a:	42bc      	cmp	r4, r7
    fe9c:	f808 2f01 	strb.w	r2, [r8, #1]!
    fea0:	d1f3      	bne.n	fe8a <am_hal_uart_transfer+0x292>
    fea2:	469b      	mov	fp, r3
    fea4:	4426      	add	r6, r4
    fea6:	f1bb 0f00 	cmp.w	fp, #0
    feaa:	f43f af1c 	beq.w	fce6 <am_hal_uart_transfer+0xee>
    feae:	f8cb 6000 	str.w	r6, [fp]
    feb2:	2700      	movs	r7, #0
    feb4:	e6aa      	b.n	fc0c <am_hal_uart_transfer+0x14>
    feb6:	9807      	ldr	r0, [sp, #28]
    feb8:	f7ff fb52 	bl	f560 <am_hal_interrupt_master_set>
    febc:	6d2c      	ldr	r4, [r5, #80]	; 0x50
    febe:	9802      	ldr	r0, [sp, #8]
    fec0:	42bc      	cmp	r4, r7
    fec2:	bf28      	it	cs
    fec4:	463c      	movcs	r4, r7
    fec6:	4641      	mov	r1, r8
    fec8:	4622      	mov	r2, r4
    feca:	f000 f913 	bl	100f4 <am_hal_queue_item_get>
    fece:	9b01      	ldr	r3, [sp, #4]
    fed0:	1b3f      	subs	r7, r7, r4
    fed2:	4426      	add	r6, r4
    fed4:	d104      	bne.n	fee0 <am_hal_uart_transfer+0x2e8>
    fed6:	469b      	mov	fp, r3
    fed8:	e7e5      	b.n	fea6 <am_hal_uart_transfer+0x2ae>
    feda:	bf00      	nop
    fedc:	01ea9e06 	.word	0x01ea9e06
    fee0:	2001      	movs	r0, #1
    fee2:	9301      	str	r3, [sp, #4]
    fee4:	f7ff fb04 	bl	f4f0 <am_hal_flash_delay>
    fee8:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
    feec:	9b01      	ldr	r3, [sp, #4]
    feee:	d001      	beq.n	fef4 <am_hal_uart_transfer+0x2fc>
    fef0:	f10a 0a01 	add.w	sl, sl, #1
    fef4:	45d1      	cmp	r9, sl
    fef6:	d9ee      	bls.n	fed6 <am_hal_uart_transfer+0x2de>
    fef8:	682a      	ldr	r2, [r5, #0]
    fefa:	9900      	ldr	r1, [sp, #0]
    fefc:	f022 427e 	bic.w	r2, r2, #4261412864	; 0xfe000000
    ff00:	428a      	cmp	r2, r1
    ff02:	eb0b 0806 	add.w	r8, fp, r6
    ff06:	d0ab      	beq.n	fe60 <am_hal_uart_transfer+0x268>
    ff08:	469b      	mov	fp, r3
    ff0a:	2702      	movs	r7, #2
    ff0c:	e6b8      	b.n	fc80 <am_hal_uart_transfer+0x88>
    ff0e:	9301      	str	r3, [sp, #4]
    ff10:	f7ff fb22 	bl	f558 <am_hal_interrupt_master_disable>
    ff14:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    ff16:	9007      	str	r0, [sp, #28]
    ff18:	f502 2080 	add.w	r0, r2, #262144	; 0x40000
    ff1c:	301c      	adds	r0, #28
    ff1e:	9b01      	ldr	r3, [sp, #4]
    ff20:	0300      	lsls	r0, r0, #12
    ff22:	ac08      	add	r4, sp, #32
    ff24:	2200      	movs	r2, #0
    ff26:	6981      	ldr	r1, [r0, #24]
    ff28:	06c9      	lsls	r1, r1, #27
    ff2a:	d409      	bmi.n	ff40 <am_hal_uart_transfer+0x348>
    ff2c:	6801      	ldr	r1, [r0, #0]
    ff2e:	f411 6f70 	tst.w	r1, #3840	; 0xf00
    ff32:	f102 0201 	add.w	r2, r2, #1
    ff36:	d118      	bne.n	ff6a <am_hal_uart_transfer+0x372>
    ff38:	2a20      	cmp	r2, #32
    ff3a:	f804 1b01 	strb.w	r1, [r4], #1
    ff3e:	d1f2      	bne.n	ff26 <am_hal_uart_transfer+0x32e>
    ff40:	a908      	add	r1, sp, #32
    ff42:	9802      	ldr	r0, [sp, #8]
    ff44:	9301      	str	r3, [sp, #4]
    ff46:	f000 f89d 	bl	10084 <am_hal_queue_item_add>
    ff4a:	9b01      	ldr	r3, [sp, #4]
    ff4c:	2800      	cmp	r0, #0
    ff4e:	d1b2      	bne.n	feb6 <am_hal_uart_transfer+0x2be>
    ff50:	4f45      	ldr	r7, [pc, #276]	; (10068 <am_hal_uart_transfer+0x470>)
    ff52:	469b      	mov	fp, r3
    ff54:	9807      	ldr	r0, [sp, #28]
    ff56:	f7ff fb03 	bl	f560 <am_hal_interrupt_master_set>
    ff5a:	e691      	b.n	fc80 <am_hal_uart_transfer+0x88>
    ff5c:	469b      	mov	fp, r3
    ff5e:	4426      	add	r6, r4
    ff60:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
    ff64:	e68c      	b.n	fc80 <am_hal_uart_transfer+0x88>
    ff66:	46b8      	mov	r8, r7
    ff68:	e71a      	b.n	fda0 <am_hal_uart_transfer+0x1a8>
    ff6a:	469b      	mov	fp, r3
    ff6c:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
    ff70:	e7f0      	b.n	ff54 <am_hal_uart_transfer+0x35c>
    ff72:	463e      	mov	r6, r7
    ff74:	e797      	b.n	fea6 <am_hal_uart_transfer+0x2ae>
    ff76:	4616      	mov	r6, r2
    ff78:	e6b2      	b.n	fce0 <am_hal_uart_transfer+0xe8>
    ff7a:	6b6a      	ldr	r2, [r5, #52]	; 0x34
    ff7c:	6bab      	ldr	r3, [r5, #56]	; 0x38
    ff7e:	1a9b      	subs	r3, r3, r2
    ff80:	429e      	cmp	r6, r3
    ff82:	bf28      	it	cs
    ff84:	461e      	movcs	r6, r3
    ff86:	f105 042c 	add.w	r4, r5, #44	; 0x2c
    ff8a:	4651      	mov	r1, sl
    ff8c:	4632      	mov	r2, r6
    ff8e:	4620      	mov	r0, r4
    ff90:	f000 f878 	bl	10084 <am_hal_queue_item_add>
    ff94:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    ff96:	f7ff fadf 	bl	f558 <am_hal_interrupt_master_disable>
    ff9a:	f507 2780 	add.w	r7, r7, #262144	; 0x40000
    ff9e:	371c      	adds	r7, #28
    ffa0:	033f      	lsls	r7, r7, #12
    ffa2:	9005      	str	r0, [sp, #20]
    ffa4:	e00d      	b.n	ffc2 <am_hal_uart_transfer+0x3ca>
    ffa6:	f000 f8a5 	bl	100f4 <am_hal_queue_item_get>
    ffaa:	b188      	cbz	r0, ffd0 <am_hal_uart_transfer+0x3d8>
    ffac:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    ffae:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
    ffb2:	331c      	adds	r3, #28
    ffb4:	031b      	lsls	r3, r3, #12
    ffb6:	699a      	ldr	r2, [r3, #24]
    ffb8:	0692      	lsls	r2, r2, #26
    ffba:	bf5c      	itt	pl
    ffbc:	f89d 2020 	ldrbpl.w	r2, [sp, #32]
    ffc0:	601a      	strpl	r2, [r3, #0]
    ffc2:	69bb      	ldr	r3, [r7, #24]
    ffc4:	069b      	lsls	r3, r3, #26
    ffc6:	f04f 0201 	mov.w	r2, #1
    ffca:	a908      	add	r1, sp, #32
    ffcc:	4620      	mov	r0, r4
    ffce:	d5ea      	bpl.n	ffa6 <am_hal_uart_transfer+0x3ae>
    ffd0:	9805      	ldr	r0, [sp, #20]
    ffd2:	f7ff fac5 	bl	f560 <am_hal_interrupt_master_set>
    ffd6:	e683      	b.n	fce0 <am_hal_uart_transfer+0xe8>
    ffd8:	469b      	mov	fp, r3
    ffda:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
    ffde:	e64f      	b.n	fc80 <am_hal_uart_transfer+0x88>
    ffe0:	461e      	mov	r6, r3
    ffe2:	e67d      	b.n	fce0 <am_hal_uart_transfer+0xe8>
    ffe4:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
    ffe8:	e6b4      	b.n	fd54 <am_hal_uart_transfer+0x15c>
    ffea:	9300      	str	r3, [sp, #0]
    ffec:	f7ff fab4 	bl	f558 <am_hal_interrupt_master_disable>
    fff0:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    fff2:	9006      	str	r0, [sp, #24]
    fff4:	f502 2280 	add.w	r2, r2, #262144	; 0x40000
    fff8:	321c      	adds	r2, #28
    fffa:	0311      	lsls	r1, r2, #12
    fffc:	a808      	add	r0, sp, #32
    fffe:	2200      	movs	r2, #0
   10000:	9b00      	ldr	r3, [sp, #0]
   10002:	e009      	b.n	10018 <am_hal_uart_transfer+0x420>
   10004:	680c      	ldr	r4, [r1, #0]
   10006:	f414 6f70 	tst.w	r4, #3840	; 0xf00
   1000a:	f102 0201 	add.w	r2, r2, #1
   1000e:	d121      	bne.n	10054 <am_hal_uart_transfer+0x45c>
   10010:	2a20      	cmp	r2, #32
   10012:	f800 4b01 	strb.w	r4, [r0], #1
   10016:	d002      	beq.n	1001e <am_hal_uart_transfer+0x426>
   10018:	698c      	ldr	r4, [r1, #24]
   1001a:	06e4      	lsls	r4, r4, #27
   1001c:	d5f2      	bpl.n	10004 <am_hal_uart_transfer+0x40c>
   1001e:	f105 0648 	add.w	r6, r5, #72	; 0x48
   10022:	a908      	add	r1, sp, #32
   10024:	4630      	mov	r0, r6
   10026:	9300      	str	r3, [sp, #0]
   10028:	f000 f82c 	bl	10084 <am_hal_queue_item_add>
   1002c:	b920      	cbnz	r0, 10038 <am_hal_uart_transfer+0x440>
   1002e:	4f0e      	ldr	r7, [pc, #56]	; (10068 <am_hal_uart_transfer+0x470>)
   10030:	9806      	ldr	r0, [sp, #24]
   10032:	f7ff fa95 	bl	f560 <am_hal_interrupt_master_set>
   10036:	e5e9      	b.n	fc0c <am_hal_uart_transfer+0x14>
   10038:	9806      	ldr	r0, [sp, #24]
   1003a:	f7ff fa91 	bl	f560 <am_hal_interrupt_master_set>
   1003e:	6d2c      	ldr	r4, [r5, #80]	; 0x50
   10040:	9b00      	ldr	r3, [sp, #0]
   10042:	42bc      	cmp	r4, r7
   10044:	bf28      	it	cs
   10046:	463c      	movcs	r4, r7
   10048:	4619      	mov	r1, r3
   1004a:	4630      	mov	r0, r6
   1004c:	4622      	mov	r2, r4
   1004e:	f000 f851 	bl	100f4 <am_hal_queue_item_get>
   10052:	e67e      	b.n	fd52 <am_hal_uart_transfer+0x15a>
   10054:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
   10058:	e7ea      	b.n	10030 <am_hal_uart_transfer+0x438>
   1005a:	4604      	mov	r4, r0
   1005c:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
   10060:	e678      	b.n	fd54 <am_hal_uart_transfer+0x15c>
   10062:	4627      	mov	r7, r4
   10064:	e676      	b.n	fd54 <am_hal_uart_transfer+0x15c>
   10066:	bf00      	nop
   10068:	08000001 	.word	0x08000001

0001006c <am_hal_queue_init>:
   1006c:	b410      	push	{r4}
   1006e:	2400      	movs	r4, #0
   10070:	6004      	str	r4, [r0, #0]
   10072:	6044      	str	r4, [r0, #4]
   10074:	6084      	str	r4, [r0, #8]
   10076:	60c3      	str	r3, [r0, #12]
   10078:	6102      	str	r2, [r0, #16]
   1007a:	6141      	str	r1, [r0, #20]
   1007c:	f85d 4b04 	ldr.w	r4, [sp], #4
   10080:	4770      	bx	lr
   10082:	bf00      	nop

00010084 <am_hal_queue_item_add>:
   10084:	b5f0      	push	{r4, r5, r6, r7, lr}
   10086:	4604      	mov	r4, r0
   10088:	6906      	ldr	r6, [r0, #16]
   1008a:	b083      	sub	sp, #12
   1008c:	fb06 f602 	mul.w	r6, r6, r2
   10090:	460d      	mov	r5, r1
   10092:	f7ff fa61 	bl	f558 <am_hal_interrupt_master_disable>
   10096:	68e7      	ldr	r7, [r4, #12]
   10098:	68a2      	ldr	r2, [r4, #8]
   1009a:	9001      	str	r0, [sp, #4]
   1009c:	1abb      	subs	r3, r7, r2
   1009e:	429e      	cmp	r6, r3
   100a0:	d826      	bhi.n	100f0 <am_hal_queue_item_add+0x6c>
   100a2:	b196      	cbz	r6, 100ca <am_hal_queue_item_add+0x46>
   100a4:	6823      	ldr	r3, [r4, #0]
   100a6:	4629      	mov	r1, r5
   100a8:	b1c5      	cbz	r5, 100dc <am_hal_queue_item_add+0x58>
   100aa:	19af      	adds	r7, r5, r6
   100ac:	6962      	ldr	r2, [r4, #20]
   100ae:	f811 0b01 	ldrb.w	r0, [r1], #1
   100b2:	54d0      	strb	r0, [r2, r3]
   100b4:	6823      	ldr	r3, [r4, #0]
   100b6:	68e5      	ldr	r5, [r4, #12]
   100b8:	3301      	adds	r3, #1
   100ba:	42b9      	cmp	r1, r7
   100bc:	fbb3 f0f5 	udiv	r0, r3, r5
   100c0:	fb05 3310 	mls	r3, r5, r0, r3
   100c4:	6023      	str	r3, [r4, #0]
   100c6:	d1f1      	bne.n	100ac <am_hal_queue_item_add+0x28>
   100c8:	68a2      	ldr	r2, [r4, #8]
   100ca:	4432      	add	r2, r6
   100cc:	60a2      	str	r2, [r4, #8]
   100ce:	2401      	movs	r4, #1
   100d0:	9801      	ldr	r0, [sp, #4]
   100d2:	f7ff fa45 	bl	f560 <am_hal_interrupt_master_set>
   100d6:	4620      	mov	r0, r4
   100d8:	b003      	add	sp, #12
   100da:	bdf0      	pop	{r4, r5, r6, r7, pc}
   100dc:	3101      	adds	r1, #1
   100de:	3301      	adds	r3, #1
   100e0:	428e      	cmp	r6, r1
   100e2:	fbb3 f0f7 	udiv	r0, r3, r7
   100e6:	fb07 3310 	mls	r3, r7, r0, r3
   100ea:	d1f7      	bne.n	100dc <am_hal_queue_item_add+0x58>
   100ec:	6023      	str	r3, [r4, #0]
   100ee:	e7ec      	b.n	100ca <am_hal_queue_item_add+0x46>
   100f0:	2400      	movs	r4, #0
   100f2:	e7ed      	b.n	100d0 <am_hal_queue_item_add+0x4c>

000100f4 <am_hal_queue_item_get>:
   100f4:	b5f0      	push	{r4, r5, r6, r7, lr}
   100f6:	4604      	mov	r4, r0
   100f8:	6906      	ldr	r6, [r0, #16]
   100fa:	b083      	sub	sp, #12
   100fc:	fb06 f602 	mul.w	r6, r6, r2
   10100:	460d      	mov	r5, r1
   10102:	f7ff fa29 	bl	f558 <am_hal_interrupt_master_disable>
   10106:	68a2      	ldr	r2, [r4, #8]
   10108:	9001      	str	r0, [sp, #4]
   1010a:	4296      	cmp	r6, r2
   1010c:	d81c      	bhi.n	10148 <am_hal_queue_item_get+0x54>
   1010e:	b196      	cbz	r6, 10136 <am_hal_queue_item_get+0x42>
   10110:	6863      	ldr	r3, [r4, #4]
   10112:	b1dd      	cbz	r5, 1014c <am_hal_queue_item_get+0x58>
   10114:	4629      	mov	r1, r5
   10116:	19af      	adds	r7, r5, r6
   10118:	6962      	ldr	r2, [r4, #20]
   1011a:	5cd3      	ldrb	r3, [r2, r3]
   1011c:	f801 3b01 	strb.w	r3, [r1], #1
   10120:	6863      	ldr	r3, [r4, #4]
   10122:	68e5      	ldr	r5, [r4, #12]
   10124:	3301      	adds	r3, #1
   10126:	428f      	cmp	r7, r1
   10128:	fbb3 f0f5 	udiv	r0, r3, r5
   1012c:	fb05 3310 	mls	r3, r5, r0, r3
   10130:	6063      	str	r3, [r4, #4]
   10132:	d1f1      	bne.n	10118 <am_hal_queue_item_get+0x24>
   10134:	68a2      	ldr	r2, [r4, #8]
   10136:	1b92      	subs	r2, r2, r6
   10138:	60a2      	str	r2, [r4, #8]
   1013a:	2401      	movs	r4, #1
   1013c:	9801      	ldr	r0, [sp, #4]
   1013e:	f7ff fa0f 	bl	f560 <am_hal_interrupt_master_set>
   10142:	4620      	mov	r0, r4
   10144:	b003      	add	sp, #12
   10146:	bdf0      	pop	{r4, r5, r6, r7, pc}
   10148:	2400      	movs	r4, #0
   1014a:	e7f7      	b.n	1013c <am_hal_queue_item_get+0x48>
   1014c:	68e0      	ldr	r0, [r4, #12]
   1014e:	4629      	mov	r1, r5
   10150:	3101      	adds	r1, #1
   10152:	3301      	adds	r3, #1
   10154:	428e      	cmp	r6, r1
   10156:	fbb3 f5f0 	udiv	r5, r3, r0
   1015a:	fb00 3315 	mls	r3, r0, r5, r3
   1015e:	d1f7      	bne.n	10150 <am_hal_queue_item_get+0x5c>
   10160:	6063      	str	r3, [r4, #4]
   10162:	e7e8      	b.n	10136 <am_hal_queue_item_get+0x42>
   10164:	72617453 	.word	0x72617453
   10168:	676e6974 	.word	0x676e6974
   1016c:	64756120 	.word	0x64756120
   10170:	74206f69 	.word	0x74206f69
   10174:	0d747365 	.word	0x0d747365
   10178:	00000a0a 	.word	0x00000a0a

0001017c <g_AM_HAL_GPIO_DISABLE>:
   1017c:	00000003                                ....

00010180 <g_AM_HAL_GPIO_OUTPUT>:
   10180:	00000403                                ....

00010184 <g_AM_HAL_GPIO_TRISTATE>:
   10184:	00000c03                                ....

00010188 <g_ui8Bit76Capabilities>:
   10188:	02800101 80010180 80800101 80808080     ................
   10198:	80808080 80808008 01800180 80808080     ................
   101a8:	80808080 01800402 01010401 80808080     ................
   101b8:	00000101                                ....

000101bc <g_ui8Inpen>:
   101bc:	e2242323 100723a1 e1004303 3561a151     ##$..#...C..Q.a5
   101cc:	4181c525 d160b001 31a13130 1100f101     %..A..`.01.1....
   101dc:	01d121b1 300511e5 31301037 40006100     .!.....07.01.a.@
   101ec:	00003130                                01..

000101f0 <g_ui8NCEtable>:
   101f0:	13524232 60221202 21534333 20504030     2BR..."`3CS!0@P 
   10200:	11514131 ffffffff ffffffff 60514131     1AQ.........1AQ`
   10210:	00504030 23534333 60524232 30201000     0@P.3CS#2BR`.. 0
   10220:	61504030 01514131 42221202 60231303     0@Pa1AQ..."B..#`
   10230:	50201000 41211101 32221202 60331303     .. P..!A.."2..3`
   10240:	21514131 22524232 03534333 40201000     1AQ!2BR"3CS... @
   10250:	51211101 02524232 13534333 10504030     ..!Q2BR.3CS.0@P.
   10260:	60514131 12524232 03534333 40201000     1AQ`2BR.3CS... @
   10270:	61211101 52221202 33231303 30201000     ..!a.."R..#3.. 0
   10280:	61514131 02524232 53331303 ffffffff     1AQa2BR...3S....
   10290:	ffffffff 61211101 50201000 61211101     ......!a.. P..!a
   102a0:	52221202 13534333 61504030 31211101     .."R3CS.0@Pa..!1
   102b0:	32221202 43231303                       .."2..#C

000102b8 <g_ui8nCEpins>:
   102b8:	02070707 00080802 01020202 01010101     ................
   102c8:	01010101 01010101 01010101 01010101     ................
   102d8:	01010101 08010101 01010008 01010101     ................
   102e8:	00000101 00007325                       ....%s..

000102f0 <g_SysRingBuffSetup>:
   102f0:	00000001 1000269c 0000fa00              .....&......

000102fc <g_deepsleep_button0>:
   102fc:	00001003                                ....

00010300 <mono_16b_USP1602>:
   10300:	ffff0000 0001ffff 00010001 00010000     ................
   10310:	ffff0000 ffffffff fffffffe ffffffff     ................
   10320:	00000000 00000001 00000001 00000002     ................
   10330:	00000001 00010001 ffff0000 00000000     ................
   10340:	00000000 00010000 ffffffff fffefffe     ................
   10350:	fffdfffd fffdfffd fffdfffe fffdfffd     ................
   10360:	fffcfffd fffefffe ffffffff ffff0000     ................
   10370:	ffff0000 ffffffff 0000ffff fffffffe     ................
   10380:	ffffffff fffffffe fffefffe fffffffe     ................
   10390:	fffffffe 00000000 00000000 00000000     ................
   103a0:	0000ffff ffff0000 00000001 ffff0001     ................
   103b0:	00000001 00010001 00010002 00020000     ................
   103c0:	00020000 00010000 ffff0001 00010001     ................
   103d0:	00000001 00000000 ffff0000 ffff0000     ................
   103e0:	00000001 ffffffff fffe0000 fffe0000     ................
   103f0:	ffffffff 0000fffe 0000ffff 0000ffff     ................
   10400:	fffffffe ffff0000 00000000 0000ffff     ................
   10410:	0000ffff 0000fffe 0000fffe 00000000     ................
   10420:	ffff0000 ffff0000 ffffffff ffff0000     ................
   10430:	ffffffff fffeffff ffff0000 0000ffff     ................
   10440:	ffffffff fffffffe fffefffe fffefffe     ................
   10450:	fffefffe fffefffe 0000fffe 0001ffff     ................
   10460:	0000ffff 00010001 00000001 fffe0000     ................
   10470:	ffffffff 0000ffff 0001fffe 0000fffe     ................
   10480:	ffffffff fffffffe 00010000 00000000     ................
   10490:	0000ffff ffff0000 fffeffff ffffffff     ................
	...
   104a8:	00010000 ffff0000 fffe0000 fffe0000     ................
   104b8:	ffffffff 0000ffff fffffffe fffeffff     ................
   104c8:	ffffffff ffffffff ffffffff 0001ffff     ................
   104d8:	00000000 00010001 00010002 00010001     ................
   104e8:	00030002 00030003 00030003 00020003     ................
   104f8:	00010001 00010001 00000001 fffe0000     ................
   10508:	fffe0000 ffff0000 ffff0000 fffeffff     ................
   10518:	fffffffe ffffffff ffffffff fffeffff     ................
   10528:	fffefffe fffefffe fffffffd fffffffe     ................
   10538:	ffffffff ffffffff ffff0000 ffffffff     ................
   10548:	fffefffe 0000fffe 00000000 00000000     ................
   10558:	ffff0000 0000ffff ffffffff 00000000     ................
   10568:	0000ffff ffffffff 0000ffff 00010001     ................
   10578:	00000000 fffeffff ffffffff fffffffe     ................
   10588:	0000ffff ffffffff 00000000 ffff0000     ................
	...
   105a8:	0000ffff 0000ffff 0000ffff ffffffff     ................
   105b8:	fffeffff ffffffff ffffffff 00000000     ................
   105c8:	00000001 00010000 00000001 ffff0001     ................
   105d8:	00000000 fffffffe fffefffe fffefffe     ................
   105e8:	ffff0000 fffe0000 ffffffff fffeffff     ................
   105f8:	00000000 ffff0000 fffffffe fffffffe     ................
	...
   10618:	0000ffff 0001ffff 0000ffff 00000000     ................
	...
   10630:	0000ffff 00010000 00000000 00000000     ................
   10640:	ffffffff fffffffe 00000000 00020003     ................
   10650:	00000001 00000001 00000001 ffff0000     ................
   10660:	0000ffff fffe0000 ffffffff ffffffff     ................
   10670:	ffffffff fffeffff fffefffe fffefffe     ................
   10680:	fffdfffe fffcfffc fffdfffc fffe0000     ................
   10690:	ffff0000 ffffffff ffffffff 00000000     ................
   106a0:	00000001 ffff0001 00010000 00020000     ................
   106b0:	00010001 0001ffff ffffffff 0000ffff     ................
   106c0:	00000001 ffff0000 fffefffe 0000fffe     ................
   106d0:	00030001 00020003 fffdfffe fffffffa     ................
   106e0:	00050004 fffd0008 ffedfff8 fffdfff3     ................
   106f0:	00170008 0003000a fff1fff5 0004fff9     ................
   10700:	00150012 fffe000d ffe9fff0 fffaffed     ................
   10710:	00050002 00000003 0004fffc 00130009     ................
   10720:	00110014 00000008 fff7fff7 fff9fff6     ................
   10730:	fffcfffb fff2fff7 ffe9ffea ffffffee     ................
   10740:	00250013 0022002c fff0000b ffe0ffe0     ..%.,.".........
   10750:	0003ffee 000f0010 fff80006 fff1ffef     ................
   10760:	0006fffb 000d000e 0003000a 00000000     ................
   10770:	00010000 fff4fffb ffedffef fffbfff4     ................
   10780:	000f0007 000d0012 fffb0007 fff4fff6     ................
   10790:	fffdfff7 00060002 00000004 fff4fffb     ................
   107a0:	fff3fff1 0003fff9 000f000a 0008000d     ................
   107b0:	ffff0003 fffdfffd fffcfffe fff4fff9     ................
   107c0:	fff7fff5 00070001 000c000d 00000007     ................
   107d0:	fff9fffa fffefffb 00040001 ffff0002     ................
   107e0:	fff9fffd fff8fff6 0002fffc 000c0008     ................
   107f0:	0009000e fff90002 fff1fff3 fff6fff3     ................
   10800:	fffffffb 00070004 00070009 00000004     ................
   10810:	fffbfffc 0000fffb 00050002 00010004     ................
   10820:	fffafffe fff8fff8 0002fffc 000b0007     ................
   10830:	00070009 fffc0000 fffbfffb ffffffff     ................
   10840:	fffdffff fffdfffc 00060002 0009000a     ................
   10850:	00010006 fffdfffc 0004fffe 00090008     ................
   10860:	00020006 fffafffd fff9fff7 0000fffb     ................
   10870:	00040002 00020005 fffc0000 fffafff9     ................
   10880:	fffbfff9 fffdfffb 00030000 00050005     ................
   10890:	00000005 fff8fffc fffdfff9 00040002     ................
   108a0:	00010005 fff4fffa fff1fff0 fffcfff5     ................
   108b0:	00080003 0008000a 00020003 fffeffff     ................
   108c0:	fffefffe 0000ffff 00020001 00020004     ................
   108d0:	fffe0002 fffdfffd 0001fffe 00060003     ................
   108e0:	00030004 fffdffff fffbfff9 fffefffa     ................
   108f0:	00040001 00030005 00000002 fffefffe     ................
   10900:	0000fffe 00030001 00010003 00000002     ................
   10910:	ffff0000 fffdfffe fffbfffb fffffffd     ................
   10920:	00050003 00010003 fffbfffe fffbfffc     ................
   10930:	0000ffff 00020001 00040003 00050004     ................
   10940:	00040004 ffff0001 fffdfffe ffffffff     ................
   10950:	ffff0001 fffbfffd fffafff8 fffffffa     ................
   10960:	00030002 00040004 00000003 fffafffc     ................
   10970:	fff9fff9 fffefffb 00020002 00010003     ................
   10980:	fffd0000 fffcfffd fffefffc 0002ffff     ................
   10990:	00030003 fffc0000 fff7fff9 fffbfffa     ................
   109a0:	00030001 00040006 00000002 0000fffe     ................
   109b0:	00030000 00050003 00020003 fffe0000     ................
   109c0:	fffcfffe fffdfffe fffefffe 0000ffff     ................
   109d0:	00040002 00000001 fffbfffc fffcfff9     ................
   109e0:	0000fffe 00000002 00000001 00020002     ................
   109f0:	fffe0001 fffcfffc fffffffd 00010003     ................
   10a00:	00000003 00000000 00010000 0000ffff     ................
   10a10:	0000ffff 00030000 00000002 fffcfffd     ................
   10a20:	fffdfffc 00020000 00030004 00010002     ................
   10a30:	fffdffff fffafffd fffdfffc 00020000     ................
   10a40:	00040004 ffff0002 fffcfffc fffffffb     ................
   10a50:	0002ffff 00010000 fffefffe 0000fffe     ................
   10a60:	0001ffff ffffffff 0002ffff 00010001     ................
   10a70:	fffe0000 fffefffe 00020000 00060004     ................
   10a80:	00030005 fffe0000 fffeffff ffffffff     ................
   10a90:	ffff0000 00000000 00020001 00000000     ................
   10aa0:	fffe0000 fffefffe ffffffff 00010000     ................
   10ab0:	0001ffff fffefffe fffcfffd fffefffe     ................
   10ac0:	fffeffff fffdffff fffcfffd fffffffd     ................
   10ad0:	0000ffff ffffffff fffefffd fffefffd     ................
   10ae0:	0000fffd 00030001 00050004 00030004     ................
   10af0:	00010004 ffff0000 fffdfffe fffffffe     ................
   10b00:	00000000 ffff0000 fffeffff ffffffff     ................
   10b10:	00000001 ffff0002 fffe0000 fffbfffe     ................
   10b20:	fffafffa fffefffa 0001ffff 00010001     ................
   10b30:	ffffffff fffdfffd 0001ffff 00020001     ................
   10b40:	00010001 0001ffff 0001ffff 0000ffff     ................
   10b50:	fffe0000 ffff0001 00000001 00020002     ................
   10b60:	00010001 00000000 0000ffff 00010000     ................
   10b70:	00010001 fffe0001 ffffffff fffefffe     ................
   10b80:	fffeffff 00000001 00000001 ffff0000     ................
   10b90:	fffdfffd fffffffd 0000fffe 0000ffff     ................
   10ba0:	fffdfffe fffdfffe ffffffff 00000000     ................
   10bb0:	fffe0001 fffdffff fffefffe 0000ffff     ................
   10bc0:	00020001 00030001 00010002 00000000     ................
   10bd0:	0000ffff 0001ffff 00000000 ffff0000     ................
   10be0:	00010000 00030002 00000001 fffdfffe     ................
   10bf0:	fffdfffe fffdfffd fffdfffd fffdfffd     ................
   10c00:	fffffffe 00020000 00020001 00020002     ................
   10c10:	00000001 00000001 00010002 00020002     ................
	...
   10c28:	00020000 00010000 00020000 00000000     ................
   10c38:	ffff0000 fffcfffe fffbfffb fffffffd     ................
   10c48:	00010001 00010000 00010000 00010001     ................
   10c58:	00020001 00000002 ffff0001 fffdfffe     ................
   10c68:	fffcfffc fffefffc fffffffe fffeffff     ................
   10c78:	0000fffe 00010000 fffeffff fffefffd     ................
   10c88:	0000fffe 00020002 00000001 00000000     ................
   10c98:	00010001 00000000 fffdfffe fffdfffd     ................
   10ca8:	ffffffff ffff0000 fffeffff fffffffe     ................
   10cb8:	00010000 00000000 ffff0000 fffffffe     ................
   10cc8:	0000ffff 00000000 00010000 00000000     ................
   10cd8:	fffe0000 fffdffff fffefffd 0000ffff     ................
   10ce8:	00010001 00000001 ffff0000 ffff0001     ................
   10cf8:	ffff0001 fffe0001 0000ffff 00010000     ................
   10d08:	00020002 00010002 00020001 00010002     ................
   10d18:	00010002 00000001 00000000 ffff0000     ................
   10d28:	ffffffff ffffffff fffefffe fffdfffe     ................
   10d38:	fffdfffd fffefffd fffefffe fffefffd     ................
   10d48:	fffffffe 0000fffe fffeffff fffffffe     ................
   10d58:	fffefffe 0000ffff 00020001 00000002     ................
   10d68:	fffeffff fffefffe 0000ffff 00010000     ................
   10d78:	00010001 00000002 00000002 00000000     ................
   10d88:	ffff0001 00000000 0000ffff fffffffe     ................
   10d98:	0000fffe fffffffe 0000fffe 00010000     ................
   10da8:	00010000 fffe0000 fffefffd 00000000     ................
   10db8:	00010001 ffff0001 fffe0000 fffeffff     ................
   10dc8:	fffeffff 0000fffe 00020000 00020001     ................
   10dd8:	00010000 00010000 00010000 00000000     ................
   10de8:	fffeffff fffefffe ffffffff ffff0001     ................
   10df8:	fffeffff 0000fffe 00010000 00010000     ................
   10e08:	00000000 ffff0000 00000001 00000001     ................
   10e18:	00000000 0000ffff 00010000 00010001     ................
   10e28:	00010000 ffff0000 ffff0000 0000fffe     ................
   10e38:	ffffffff ffffffff fffffffe ffffffff     ................
   10e48:	fffeffff fffefffd fffffffe ffffffff     ................
   10e58:	fffefffe fffefffe 00000000 ffff0000     ................
   10e68:	fffffffe 0000ffff 0000fffe fffefffe     ................
   10e78:	0000ffff 00010002 00010003 00020002     ................
   10e88:	00020003 00000002 00000000 00000000     ................
   10e98:	0000ffff ffffffff fffffffe 00010000     ................
   10ea8:	00000001 00000000 0000ffff ffffffff     ................
   10eb8:	fffdfffe fffdfffd fffeffff ffff0000     ................
   10ec8:	ffff0000 ffffffff fffeffff fffefffd     ................
   10ed8:	fffefffd fffefffd ffffffff fffffffe     ................
   10ee8:	0001ffff 00010000 00020001 00020001     ................
   10ef8:	00010001 00010000 00010000 00010000     ................
	...
   10f10:	00000001 00010001 00000001 fffe0001     ................
   10f20:	ffff0000 00000000 00020001 00010002     ................
   10f30:	fffe0001 fffeffff fffeffff fffeffff     ................
   10f40:	fffffffe fffffffe fffffffd fffffffe     ................
   10f50:	ffffffff fffdfffe fffdfffe fffdfffd     ................
   10f60:	fffefffe 0000ffff ffffffff ffff0000     ................
	...
   10f78:	fffffffe 0000ffff ffffffff ffffffff     ................
   10f88:	fffefffc fffefffd fffffffe ffffffff     ................
   10f98:	fffeffff ffff0000 00000001 00010001     ................
   10fa8:	00000001 ffff0000 00000001 ffff0000     ................
   10fb8:	0000ffff 0000ffff 00000000 00010000     ................
   10fc8:	00010000 00000000 00000001 00000000     ................
   10fd8:	00010000 00020001 00020002 00020001     ................
   10fe8:	00030001 00020001 00010001 00000000     ................
   10ff8:	ffff0000 ffffffff 00000000 00000000     ................
   11008:	00000000 0000ffff fffeffff fffeffff     ................
   11018:	fffcfffe fffefffe 0000ffff 00010001     ................
   11028:	00000002 0000ffff 00010001 00010001     ................
   11038:	00000001 ffff0000 fffffffe fffeffff     ................
   11048:	fffefffe fffeffff ffffffff ffffffff     ................
   11058:	fffffffe 0001fffe 0000ffff 00000000     ................
   11068:	ffffffff fffeffff fffefffe fffffffe     ................
   11078:	ffff0000 ffffffff fffdfffe fffffffd     ................
   11088:	0000fffe 0001ffff 0000ffff 00000000     ................
   11098:	00010000 00010000 0000ffff ffff0000     ................
   110a8:	00000001 ffff0001 fffe0001 fffeffff     ................
   110b8:	0000ffff 00010001 ffff0000 ffffffff     ................
	...
   110d0:	ffff0001 fffcfffe fffdfffe fffefffe     ................
   110e0:	ffffffff ffffffff 0000fffe 0000ffff     ................
   110f0:	00010000 ffff0000 fffeffff 0000ffff     ................
   11100:	ffffffff fffffffe fffefffe ffff0000     ................
   11110:	ffffffff 00000000 0000ffff 0000ffff     ................
   11120:	ffff0000 fffeffff fffefffe fffffffe     ................
   11130:	ffffffff fffffffe fffefffe 0000fffe     ................
   11140:	0000ffff ffff0000 ffffffff 00000000     ................
   11150:	ffff0000 00010000 00010000 00020001     ................
   11160:	00010001 00010002 00020002 00020001     ................
   11170:	00020001 00020001 00000001 ffff0000     ................
   11180:	ffff0000 fffeffff ffffffff 0000ffff     ................
   11190:	00020001 00020001 00010001 00000001     ................
   111a0:	fffeffff fffdfffe fffefffe fffefffe     ................
   111b0:	fffffffe fffffffe 0000fffe 0000ffff     ................
   111c0:	0000ffff ffffffff fffeffff fffefffe     ................
   111d0:	ffffffff 00010000 00030000 00010000     ................
   111e0:	00000000 0000ffff 00010000 ffff0000     ................
   111f0:	ffffffff ffffffff ffffffff ffffffff     ................
   11200:	ffffffff fffffffe 00000000 ffffffff     ................
   11210:	ffff0000 ffff0000 0000ffff fffffffe     ................
   11220:	fffeffff ffff0000 00010000 00010000     ................
   11230:	00000000 0000ffff 00000000 ffff0000     ................
   11240:	ffff0000 ffff0000 0000ffff ffff0001     ................
   11250:	0000ffff 0000fffe 0001ffff 00010001     ................
   11260:	00000000 ffffffff ffffffff fffdffff     ................
   11270:	fffdfffe fffeffff ffff0000 ffff0000     ................
   11280:	00000001 00010001 00010001 00000001     ................
   11290:	ffff0000 fffeffff ffff0000 fffdffff     ................
   112a0:	fffeffff fffeffff fffefffe fffefffe     ................
   112b0:	fffffffd ffffffff 0000ffff 00000000     ................
   112c0:	ffff0000 0000ffff ffffffff ffff0000     ................
   112d0:	fffeffff fffffffe ffffffff 0000ffff     ................
   112e0:	00000000 00010001 00000001 0000ffff     ................
   112f0:	0000ffff 0002ffff 00010001 00020000     ................
   11300:	0000fffe 00010000 00020001 00000001     ................
   11310:	00000001 00010001 00000001 00010000     ................
   11320:	00020000 00010000 00000001 fffe0000     ................
   11330:	fffefffe fffffffe fffffffe fffefffe     ................
   11340:	fffefffb fffefffd 0000ffff 00000001     ................
   11350:	ffffffff ffff0000 00000000 00010001     ................
   11360:	00000001 00000000 00000000 00010001     ................
   11370:	00010002 00010001 00000000 00000000     ................
   11380:	0000ffff ffffffff 0000ffff 00000000     ................
   11390:	00010000 00010001 00010001 00000001     ................
   113a0:	ffff0001 fffefffe fffdfffd fffefffd     ................
   113b0:	fffffffe fffeffff fffefffe ffffffff     ................
   113c0:	fffeffff fffeffff ffffffff 00010000     ................
   113d0:	00010001 ffff0000 ffffffff 0000ffff     ................
   113e0:	0000ffff 0000ffff 00000000 00010000     ................
   113f0:	00010001 00000001 00000000 00000000     ................
   11400:	00010000 00000000 ffffffff fffdfffe     ................
   11410:	fffdfffd fffdfffe fffefffd fffefffd     ................
   11420:	fffffffe 0000fffe 0000fffe 0000ffff     ................
   11430:	ffffffff ffffffff ffff0000 ffff0000     ................
   11440:	00000000 00020002 00020002 00010002     ................
   11450:	00010003 00010003 00000002 00000001     ................
   11460:	00010002 00000001 0000ffff fffffffe     ................
   11470:	fffefffe fffffffe fffffffe fffefffd     ................
   11480:	fffefffe fffeffff ffffffff fffeffff     ................
   11490:	fffeffff ffffffff 00000000 00000000     ................
   114a0:	00000001 00010000 00010000 00010000     ................
   114b0:	00000001 00000000 0001ffff 0000ffff     ................
   114c0:	ffffffff ffff0000 fffe0000 fffeffff     ................
   114d0:	fffeffff 0000ffff 00010000 0000ffff     ................
   114e0:	0001ffff ffff0000 fffe0000 0000ffff     ................
   114f0:	fffeffff ffffffff 0000fffe 0000ffff     ................
   11500:	00000001 ffffffff 0000ffff 00000000     ................
   11510:	0001ffff 00000000 0000ffff 0001ffff     ................
   11520:	0000ffff 00000001 ffff0000 00000000     ................
   11530:	00000000 ffff0000 0000ffff 00000000     ................
   11540:	00010001 00000001 ffffffff ffffffff     ................
   11550:	ffffffff ffffffff fffffffe fffffffe     ................
   11560:	0000ffff 00000000 00000001 00000000     ................
   11570:	ffff0001 00000001 00000001 00010001     ................
   11580:	00000000 00010001 00010001 00010001     ................
   11590:	00010001 00000001 0000ffff 00000000     ................
   115a0:	ffffffff fffffffe fffdfffe fffdfffd     ................
   115b0:	fffcfffd fffefffd fffefffd ffffffff     ................
   115c0:	0001ffff 00010000 00010000 0000ffff     ................
   115d0:	0000fffe fffffffe fffeffff fffdfffe     ................
   115e0:	fffffffe 0000fffe 0000fffe 0000ffff     ................
   115f0:	ffff0000 00000000 ffffffff 0000fffe     ................
   11600:	fffefffe fffeffff fffdffff fffdfffe     ................
   11610:	fffefffe fffeffff fffffffe ffff0000     ................
   11620:	00000001 00000000 0000ffff 00000000     ................
   11630:	ffffffff ffff0000 fffdffff fffdfffe     ................
   11640:	fffeffff fffffffe 0000ffff 00010000     ................
   11650:	00020001 00020001 00020002 00020002     ................
   11660:	00020002 00020001 00000001 00000001     ................
   11670:	00000000 00010001 00010000 ffff0001     ................
   11680:	00000001 00010001 fffffffe 0000ffff     ................
   11690:	ffffffff ffffffff 00010000 00000000     ................
   116a0:	00010000 00000001 ffffffff ffff0000     ................
   116b0:	ffff0000 ffff0000 00000000 0000ffff     ................
   116c0:	ffff0000 fffe0000 fffe0001 ffff0000     ................
   116d0:	fffeffff fffffffe ffffffff ffffffff     ................
   116e0:	0000ffff fffffffe ffff0000 ffff0000     ................
   116f0:	00000000 ffff0000 00000001 00000001     ................
   11700:	ffff0000 ffff0000 fffffffe fffffffe     ................
   11710:	fffffffe fffefffe fffefffe ffffffff     ................
   11720:	fffeffff fffeffff fffefffe fffffffe     ................
   11730:	0000ffff 00000000 0000ffff 00000000     ................
   11740:	00010000 00010000 00010000 00010000     ................
   11750:	0000ffff 0001ffff 00010001 00010001     ................
   11760:	00010001 00010001 00010000 00000000     ................
   11770:	ffff0000 0000ffff 0000ffff ffff0000     ................
   11780:	fffe0000 fffeffff 0000ffff 0000ffff     ................
   11790:	0000ffff 0000ffff fffeffff fffeffff     ................
   117a0:	fffdffff ffffffff fffeffff ffff0000     ................
   117b0:	ffff0000 00000000 ffff0002 00000001     ................
   117c0:	00000001 00000000 ffffffff ffffffff     ................
   117d0:	0000ffff fffffffe fffefffe fffefffe     ................
   117e0:	fffffffe fffefffe 0000ffff 00010000     ................
   117f0:	00000002 00010002 00000001 00000000     ................
   11800:	00000000 ffffffff 0000ffff ffff0000     ................
   11810:	fffeffff fffdffff fffefffd fffffffe     ................
   11820:	0000ffff 0000ffff 0000ffff 0000ffff     ................
   11830:	ffffffff ffff0000 ffff0000 ffffffff     ................
   11840:	ffffffff fffffffd 0000fffd fffffffe     ................
   11850:	ffffffff 0000ffff 00010001 00010001     ................
   11860:	00020001 00010002 00020002 00020001     ................
   11870:	00010001 00010000 0000ffff fffe0000     ................
   11880:	fffefffe fffdffff fffdfffe fffefffd     ................
   11890:	fffdfffe fffefffe fffffffe 0000ffff     ................
   118a0:	0000ffff 00020001 00010001 00020002     ................
   118b0:	00020002 00020002 00010002 00000002     ................
   118c0:	ffff0001 00000000 00000000 ffffffff     ................
   118d0:	0000ffff 0000ffff 0000ffff 00000000     ................
   118e0:	00010000 00000001 ffff0000 ffffffff     ................
   118f0:	fffefffe fffefffe fffffffd 0000fffd     ................
   11900:	fffefffe ffffffff ffff0000 ffff0000     ................
   11910:	ffff0000 fffe0001 ffff0001 ffff0001     ................
   11920:	00000000 00010000 00000000 00000000     ................
   11930:	ffffffff fffffffe 0000fffe fffffffe     ................
   11940:	fffffffe fffeffff ffffffff ffffffff     ................
   11950:	ffffffff 0001ffff 0000ffff ffff0000     ................
   11960:	fffefffe fffffffe ffffffff ffffffff     ................
   11970:	ffff0000 00000001 00010001 00000000     ................
   11980:	00000000 00010000 00000000 ffffffff     ................
   11990:	ffffffff fffefffe fffffffe ffffffff     ................
   119a0:	00000000 00010000 00010001 00000001     ................
   119b0:	ffffffff ffffffff 00000000 00000000     ................
   119c0:	ffff0000 ffff0000 ffff0000 00000000     ................
	...
   119d8:	ffff0000 00000000 00000000 00000001     ................
   119e8:	00010001 00010001 ffff0001 ffff0000     ................
   119f8:	ffffffff ffffffff ffffffff fffefffe     ................
   11a08:	fffffffd 0000ffff fffffffe 0000fffe     ................
   11a18:	0000ffff 00010000 fffe0000 fffefffe     ................
   11a28:	fffefffe 0001ffff 00010000 fffffffe     ................
   11a38:	ffff0000 ffff0000 fffdfffe fffdfffc     ................
   11a48:	fffefffd fffefffe fffefffe fffffffd     ................
   11a58:	0000ffff 00000000 00010000 00000000     ................
   11a68:	00010001 00000001 00000000 00000001     ................
   11a78:	ffff0000 00010001 00020002 00010001     ................
   11a88:	00010001 00000001 00000000 0000ffff     ................
   11a98:	0001ffff 00010001 00020002 00010001     ................
   11aa8:	00000000 ffff0000 ffffffff fffeffff     ................
   11ab8:	00000000 00000001 ffff0000 00000001     ................
   11ac8:	00020001 00010001 ffff0000 ffff0000     ................
   11ad8:	ffff0000 ffffffff 00000000 00010000     ................
   11ae8:	00020000 0001ffff ffffffff fffefffe     ................
   11af8:	fffefffe fffffffe fffefffe fffdfffe     ................
   11b08:	fffcfffd fffefffe fffdfffe fffeffff     ................
   11b18:	0000ffff 0000ffff 0000ffff fffffffe     ................
   11b28:	0000ffff 00020000 00010001 00010002     ................
   11b38:	00010001 00010002 00000000 00010000     ................
   11b48:	0001ffff 0000fffe 0000fffe fffefffe     ................
   11b58:	fffeffff ffffffff ffffffff fffe0000     ................
   11b68:	ffffffff ffffffff fffefffe fffefffd     ................
   11b78:	fffefffe fffffffe fffefffe ffffffff     ................
   11b88:	ffff0000 ffff0000 ffff0000 00000002     ................
   11b98:	00000002 00000001 00000001 00000000     ................
   11ba8:	00000000 00000001 00000001 ffff0000     ................
   11bb8:	fffbfffc 0000fffc ffffffff 00030000     ................
   11bc8:	00000000 0001fffd fffefffe fffffffd     ................
   11bd8:	00040001 00020002 fffeffff fffdfffd     ................
   11be8:	00000000 ffffffff fffeffff fffcfffe     ................
   11bf8:	0000fffe 00010001 00020001 00000002     ................
   11c08:	fffcfffe fffcfffc fffcfffd fffcfffd     ................
   11c18:	fffdfffd fffefffe 0001fffe 00020001     ................
   11c28:	00030001 00020001 00010000 00010001     ................
   11c38:	00020002 00010002 00000001 00020003     ................
   11c48:	00020003 00020003 00030002 00010002     ................
   11c58:	00020001 00020001 00010001 fffe0000     ................
   11c68:	fffeffff 00000000 00000001 ffff0000     ................
   11c78:	fffeffff fffeffff fffeffff fffdffff     ................
   11c88:	fffcfffe fffdfffd fffdfffd fffefffd     ................
   11c98:	fffffffe fffeffff fffeffff fffffffe     ................
   11ca8:	ffffffff ffffffff fffdfffd fffcfffb     ................
   11cb8:	fffbfffb fff9fff9 fff9fffa fff9fff9     ................
   11cc8:	fff7fff6 fff8fff6 fffffffb 00070003     ................
   11cd8:	000e000b 00160012 001c0019 001d001c     ................
   11ce8:	001d001d 0017001b 000e0014 0007000a     ................
   11cf8:	00020004 fffd0000 fff4fff8 ffeffff1     ................
   11d08:	ffebffed ffe9ffea ffe8ffea ffeaffea     ................
   11d18:	ffebffea ffedffeb ffefffee fff1ffef     ................
   11d28:	fff1fff3 fff0fff1 ffeefff0 ffecffed     ................
   11d38:	ffeeffeb fff0ffef fff6fff3 fffafff8     ................
   11d48:	0000fffd 00080004 000f000c 00150012     ................
   11d58:	00190017 001a001b 001a001b 001b001b     ................
   11d68:	0019001a 00150017 00100012 000c000d     ................
   11d78:	00070009 00060006 00070007 00080009     ................
   11d88:	00080009 00090009 00090008 00070008     ................
   11d98:	00060007 00040006 00010003 fffdffff     ................
   11da8:	fff9fffc fff5fff8 ffeffff3 ffecffee     ................
   11db8:	ffebffeb ffebffea ffecffec ffeeffec     ................
   11dc8:	fff1ffef fff5fff2 fffbfff6 0001fffd     ................
   11dd8:	00020000 00020001 00000002 fffe0000     ................
   11de8:	fffcfffc fffafffb fff9fff9 fff7fff6     ................
   11df8:	fff6fff6 fff9fff7 fffbfffa fffefffc     ................
   11e08:	00030001 00060006 00060007 00070007     ................
   11e18:	00080008 00070008 00060006 00040004     ................
   11e28:	00010002 00000000 fffffffe 0000ffff     ................
   11e38:	0000ffff 0000ffff 00040002 000a0007     ................
   11e48:	000d000c 000f000f 000e000f 000e000d     ................
   11e58:	000e000d 000a000d 00070009 00030005     ................
   11e68:	00000001 fffeffff fffafffe fff7fffa     ................
   11e78:	fff5fff7 fff5fff5 fff9fff8 fffdfffc     ................
   11e88:	00000000 00010001 00000001 00000000     ................
   11e98:	fffeffff fffbfffb fff7fff8 fff4fff4     ................
   11ea8:	fff1fff3 ffeefff1 ffedffef ffedffee     ................
   11eb8:	ffeeffee fff2fff1 fff6fff5 fffbfff9     ................
   11ec8:	0000fffd 00040003 00080007 00080009     ................
   11ed8:	00090009 00090008 00070007 00050006     ................
   11ee8:	00060006 00040006 00040004 00060004     ................
   11ef8:	00080007 00080009 0009000a 000a000b     ................
   11f08:	000d000b 000c000b 0009000b 00050008     ................
   11f18:	00030002 fffeffff fffafffb fff4fff8     ................
   11f28:	fff2fff2 fff2fff0 fff2fff1 fff4fff3     ................
   11f38:	fff5fff4 fff6fff6 fff8fff8 fffcfffc     ................
   11f48:	ffff0000 00000000 00010000 0000ffff     ................
   11f58:	fffefffe fffcfffd fffbfffc fffbfffc     ................
   11f68:	fffdfffc fffefffc 0001fffe 00040000     ................
   11f78:	00080004 000b0008 000d000b 000d000d     ................
   11f88:	000e000d 000b000d 0007000b 00050008     ................
   11f98:	00020005 fffe0000 fffdfffd fffbfffb     ................
   11fa8:	fffbfffa fffbfffa fffbfffb fffdfffd     ................
   11fb8:	00010001 00030002 00050005 00050005     ................
   11fc8:	00030003 00020003 fffe0000 fff9fffb     ................
   11fd8:	fff3fff6 fff0fff1 fff0fff1 fff0fff1     ................
   11fe8:	fff2fff1 fff4fff3 fff7fff6 fffcfff9     ................
   11ff8:	0003ffff 00050003 00060004 00050005     ................
   12008:	00050005 00020004 00000002 fffe0001     ................
   12018:	fffcfffe fffafffb fffafffb fffbfffb     ................
   12028:	fffefffd 00030001 00070005 000c0009     ................
   12038:	0010000c 0010000f 000e000f 000a000c     ................
   12048:	00050008 00020004 fffffffe fffbfffa     ................
   12058:	fff7fff8 fff6fff6 fff7fff6 fffbfffa     ................
   12068:	0001fffe 00060004 000a0009 000e000d     ................
   12078:	000f000e 000e000f 000b000d 00060007     ................
   12088:	00010002 fffcfffe fff8fffa fff6fff7     ................
   12098:	fff5fff5 fff6fff5 fff9fff8 fffdfffb     ................
   120a8:	0000ffff 00020001 00040004 00030003     ................
   120b8:	ffff0001 fffdffff fffafffc fff5fff8     ................
   120c8:	fff1fff5 ffeffff1 ffeeffef ffedffed     ................
   120d8:	fff1ffef fff4fff3 fff9fff7 fffdfffc     ................
   120e8:	00030001 00060006 00090008 000a0009     ................
   120f8:	00080009 00060007 00030004 00000001     ................
   12108:	fffdfffd fffcfffb fffbfffc fffdfffd     ................
   12118:	0000ffff 00030001 00050003 00080007     ................
   12128:	000a000a 000c000c 000b000d 000a000c     ................
   12138:	00060009 00030006 fffe0000 fffafffc     ................
   12148:	fff8fff8 fff8fff6 fff8fff6 fffafff8     ................
   12158:	fffdfffb 00020001 00040004 00080007     ................
   12168:	00090009 00090009 0009000a 00060007     ................
   12178:	00020004 fffe0000 fffafffb fff7fff9     ................
   12188:	fff8fff6 fff8fff7 fffafff9 fffcfffb     ................
   12198:	fffffffe 00020001 00020002 00030002     ................
   121a8:	00010003 ffff0001 ffffffff fffcfffe     ................
   121b8:	fff9fffc fff8fffa fff8fff9 fff9fff8     ................
   121c8:	fff9fff9 fffafffa fffdfffd 0001ffff     ................
   121d8:	00030002 00060005 00070007 00060006     ................
   121e8:	00070006 00050005 00010002 ffffffff     ................
   121f8:	fffefffe fffdfffd fffdfffd fffcfffd     ................
   12208:	fffefffd fffdfffd fffffffd 00020000     ................
   12218:	00040003 00050004 00050005 00030004     ................
   12228:	00030004 00010002 00000000 fffdfffd     ................
   12238:	fffcfffb fffbfffc fffdfffc fffdfffc     ................
   12248:	fffffffe ffff0000 00000000 00000001     ................
   12258:	00000001 00010001 00000001 fffe0000     ................
   12268:	fffcfffe fffbfffb fffcfffb fffbfffc     ................
   12278:	fffbfffb fffbfffa fffdfffb 0000fffd     ................
   12288:	0001ffff 00030003 00050005 00060006     ................
   12298:	00060006 00050007 00040006 00030004     ................
   122a8:	00020002 00010001 fffe0000 fffdfffe     ................
   122b8:	fffdfffd fffefffe fffefffe fffefffe     ................
   122c8:	ffffffff fffffffe 0001fffe 00010001     ................
   122d8:	00020002 00010003 00010002 ffff0000     ................
   122e8:	fffdffff fffcfffd fffafffb fffafff9     ................
   122f8:	fff9fff8 fff9fff9 fffbfffa fffcfffb     ................
   12308:	fffefffc fffffffe 00010000 00030002     ................
   12318:	00030003 00030003 00020001 00020001     ................
   12328:	00010000 0000ffff fffffffe fffefffd     ................
   12338:	fffefffd fffffffd ffff0000 00000001     ................
   12348:	00010002 00020003 00020005 00030005     ................
   12358:	00020004 00020003 00000001 fffeffff     ................
   12368:	fffefffd fffdfffc fffbfffa fffcfff9     ................
   12378:	fffdfffb 0000fffe 00020000 00050002     ................
   12388:	00060005 00060007 00060008 00060005     ................
   12398:	00030004 00000002 fffe0000 fffcfffe     ................
   123a8:	fffbfffc fffafffb fff9fffb fffafffb     ................
   123b8:	fffdfffb fffdfffc fffefffd 00010000     ................
   123c8:	00010000 00000002 ffff0001 0000ffff     ................
   123d8:	ffffffff fffefffe fffefffe fffefffd     ................
   123e8:	fffefffc fffefffd fffdfffe 0000ffff     ................
   123f8:	00020000 00020002 00010002 00020002     ................
   12408:	00020003 00020004 00010002 00020002     ................
   12418:	00010001 00000000 0000ffff 0000ffff     ................
   12428:	fffefffe fffcfffd fffdfffd fffefffe     ................
   12438:	fffdfffd fffefffe ffffffff ffffffff     ................
   12448:	fffffffe fffefffe fffefffd fffdfffe     ................
   12458:	fffdfffd fffefffd fffffffe 0001ffff     ................
   12468:	00020002 00030003 00030003 00020004     ................
   12478:	00030004 00020003 00040004 00020002     ................
   12488:	00020002 00020002 00010001 00010001     ................
   12498:	ffff0000 00010000 0000ffff ffffffff     ................
   124a8:	fffdfffd ffffffff fffffffe 00000000     ................
   124b8:	00000001 00000000 00000000 00000000     ................
   124c8:	ffffffff fffdfffe fffbfffc fffbfffc     ................
   124d8:	fffbfffc fffbfffb fffcfffa fffdfffa     ................
   124e8:	fffdfffc fffffffe 0001ffff 00010000     ................
   124f8:	00010001 00020002 00030003 00010004     ................
   12508:	00020003 00030003 00010003 ffff0000     ................
   12518:	fffdfffd fffcfffd fffdfffd 0000fffe     ................
   12528:	0001ffff 00010001 00000001 00000000     ................
   12538:	00000000 fffefffe fffeffff fffeffff     ................
   12548:	ffffffff ffffffff fffefffe 0000ffff     ................
   12558:	ffff0000 fffe0000 fffeffff fffffffe     ................
   12568:	0000ffff 00010001 00000001 00010001     ................
   12578:	00010001 00000000 00000000 00010001     ................
   12588:	00010001 00000000 00000000 00000002     ................
   12598:	00010002 00000001 0000ffff fffffffe     ................
   125a8:	0000ffff 00010000 00020001 00010000     ................
   125b8:	ffff0000 fffeffff fffffffe fffdfffe     ................
   125c8:	fffefffd fffefffe fffdfffe fffdffff     ................
   125d8:	fffefffe ffffffff 00010000 00000000     ................
	...
   125f0:	0000ffff 0000ffff 00000000 ffff0000     ................
   12600:	fffdfffe fffdfffd fffdfffd fffcfffd     ................
   12610:	fffbfffd fffdfffc fffefffd 0000fffe     ................
   12620:	00020000 00020000 00020000 00010000     ................
   12630:	00000000 00000001 0001ffff 00000000     ................
   12640:	ffff0001 ffff0001 fffeffff ffffffff     ................
   12650:	ffffffff fffffffe 0000ffff 0000ffff     ................
   12660:	00010001 00020002 00020002 00020001     ................
   12670:	00010001 00010001 00010001 00010000     ................
   12680:	0001ffff 0000ffff 00000000 00000000     ................
	...
   12698:	ffff0001 ffff0000 00000000 00010000     ................
   126a8:	00020001 00020001 00010001 00000000     ................
   126b8:	ffffffff fffdfffe fffdfffe fffdfffd     ................
   126c8:	fffefffd fffffffe ffffffff 00000001     ................
   126d8:	ffff0001 ffff0000 fffefffe ffff0000     ................
   126e8:	00010000 00000000 00000001 00000000     ................
   126f8:	00000000 fffffffe fffdfffd fffdfffd     ................
   12708:	fffcfffd fffefffd fffefffd fffffffe     ................
   12718:	0000ffff 00000000 00020002 00020003     ................
   12728:	00020002 00010002 00020002 00010002     ................
   12738:	0000ffff fffefffe fffdfffe fffdfffe     ................
   12748:	fffdfffe fffefffe ffffffff 0000ffff     ................
   12758:	0001ffff 00010000 00010002 00010001     ................
   12768:	00010000 00000000 0000ffff fffffffe     ................
   12778:	fffffffd fffffffe ffffffff 00000000     ................
   12788:	00010000 00010000 00000000 00010000     ................
   12798:	00010000 00020002 00020003 00000002     ................
   127a8:	fffe0000 fffe0000 fffeffff fffdfffe     ................
   127b8:	fffffffd fffefffd fffefffe fffffffe     ................
   127c8:	fffffffe 00000000 00010001 00020002     ................
   127d8:	00000001 00000000 ffffffff 00000000     ................
   127e8:	fffe0000 ffffffff ffffffff fffefffe     ................
   127f8:	fffefffe 0000fffe 0001ffff 0000ffff     ................
   12808:	00000000 00010000 00000000 ffff0000     ................
   12818:	0000ffff ffff0000 ffff0000 ffffffff     ................
   12828:	fffdfffd fffdfffc fffcfffc fffefffc     ................
   12838:	fffffffd 0000ffff 00000000 00000001     ................
   12848:	00010002 00010002 00000001 00000002     ................
   12858:	00010001 00010001 00010002 00000001     ................
   12868:	ffff0000 fffeffff fffdfffe fffefffd     ................
   12878:	fffefffe 0000fffe 00000001 00020001     ................
   12888:	00020002 00020001 00020002 00010002     ................
   12898:	00000002 00000001 00000000 ffff0000     ................
   128a8:	ffffffff 00000000 00000000 00010001     ................
   128b8:	00030001 00020000 00010000 ffff0000     ................
   128c8:	fffe0000 fffefffe fffdfffc fffefffd     ................
   128d8:	fffffffd fffefffe fffefffe ffffffff     ................
   128e8:	0000ffff 00000001 0000ffff ffffffff     ................
   128f8:	ffffffff fffffffe fffefffe fffefffd     ................
   12908:	fffffffe fffefffe fffefffe 0000ffff     ................
   12918:	00000001 00010001 00010002 00010001     ................
   12928:	00000001 00000000 ffff0000 fffeffff     ................
   12938:	fffeffff ffffffff 00000000 0000ffff     ................
   12948:	00000000 00010000 0000ffff ffffffff     ................
   12958:	ffffffff fffeffff fffefffe fffefffd     ................
   12968:	fffefffe 00000000 0000ffff 00000001     ................
   12978:	00020001 00020001 00020003 00030003     ................
   12988:	00020002 00010002 00000000 ffff0000     ................
   12998:	0000ffff ffff0001 00000001 00020000     ................
   129a8:	00000000 00010000 00000000 ffff0000     ................
   129b8:	ffff0001 ffff0000 ffff0000 fffeffff     ................
   129c8:	fffffffe 0000fffe 0000ffff ffffffff     ................
   129d8:	fffefffe fffdfffd fffdfffd fffdfffd     ................
   129e8:	fffefffd fffdfffe fffffffe ffffffff     ................
	...
   12a04:	0000ffff ffffffff fffffffe fffffffe     ................
   12a14:	0000fffe ffffffff fffeffff ffff0000     ................
   12a24:	ffff0001 fffe0000 fffdfffe fffefffe     ................
   12a34:	fffefffe fffefffe fffefffe fffeffff     ................
   12a44:	ffff0000 00000000 00000000 ffffffff     ................
   12a54:	00000000 00010000 00010002 00010001     ................
   12a64:	00010001 00000000 00000000 00010000     ................
   12a74:	00010001 00000001 00000000 00010000     ................
   12a84:	00020001 00030001 00010001 00000000     ................
   12a94:	fffeffff fffefffe fffffffc fffffffe     ................
   12aa4:	ffffffff ffff0000 00000000 00000000     ................
	...
   12abc:	00010000 00000000 00000000 ffff0000     ................
   12acc:	0001ffff 00010001 00010001 00010001     ................
   12adc:	00000001 00010001 0000ffff 00000000     ................
   12aec:	00000000 ffff0000 0000ffff ffff0000     ................
   12afc:	fffeffff fffeffff fffefffd fffefffe     ................
   12b0c:	fffdfffe fffdfffe fffcfffc fffcfffc     ................
   12b1c:	fffefffc fffffffc fffefffd ffffffff     ................
   12b2c:	ffffffff 0000ffff ffff0000 ffffffff     ................
   12b3c:	ffffffff ffffffff ffffffff ffff0000     ................
   12b4c:	00000000 ffff0000 0000ffff 00000001     ................
   12b5c:	00010001 00000001 00010002 00020002     ................
   12b6c:	00020002 00030001 00030001 00020002     ................
   12b7c:	00000000 ffffffff ffff0001 fffe0000     ................
   12b8c:	ffff0000 ffffffff ffff0000 fffeffff     ................
   12b9c:	fffefffe fffdfffe fffefffe fffeffff     ................
   12bac:	fffeffff 0000ffff 0000ffff ffff0001     ................
   12bbc:	ffff0000 0000ffff 00000000 0001ffff     ................
   12bcc:	00010000 00000000 00000000 00010001     ................
   12bdc:	00010000 ffff0000 ffff0000 0000ffff     ................
   12bec:	0000fffe 0000fffe ffff0000 00000001     ................
   12bfc:	ffff0000 fffeffff fffefffe fffefffe     ................
   12c0c:	ffffffff 00000000 0000ffff ffffffff     ................
   12c1c:	ffffffff fffe0000 ffff0000 fffe0000     ................
   12c2c:	ffffffff 0000ffff fffeffff ffffffff     ................
   12c3c:	fffffffe fffffffe ffffffff 0000ffff     ................
   12c4c:	00010000 ffffffff ffffffff 0000ffff     ................
   12c5c:	00000000 00010000 00000000 ffffffff     ................
   12c6c:	ffffffff ffffffff ffff0000 00000000     ................
   12c7c:	00010000 00010000 00000000 00020001     ................
   12c8c:	00020002 00020001 00010000 00010000     ................
   12c9c:	00000000 fffe0000 fffefffe fffefffe     ................
   12cac:	fffeffff fffffffe ffff0000 fffeffff     ................
   12cbc:	fffeffff 0000ffff 0000ffff 00000000     ................
   12ccc:	00010000 00000000 00000000 00010001     ................
   12cdc:	00000002 00000001 ffff0001 ffff0000     ................
   12cec:	00000001 fffe0000 fffe0000 fffeffff     ................
   12cfc:	fffffffe 00000000 00000001 00010001     ................
   12d0c:	00010001 00000000 00010001 0000ffff     ................
   12d1c:	fffefffe fffdfffd fffefffd fffdfffd     ................
   12d2c:	fffdfffe fffdfffe fffefffd ffffffff     ................
   12d3c:	ffff0000 0001ffff 00010001 00000000     ................
   12d4c:	0000ffff 00000000 00000000 00000000     ................
	...
   12d74:	00000001 00000002 ffffffff 0000ffff     ................
   12d84:	ffff0000 ffffffff 00000000 0000ffff     ................
   12d94:	ffffffff ffff0000 00010000 00010001     ................
   12da4:	00010001 00000000 00000000 0000ffff     ................
   12db4:	0000ffff 0000fffe fffeffff ffffffff     ................
   12dc4:	ffffffff ffffffff ffffffff fffffffe     ................
   12dd4:	fffffffe ffffffff ffff0000 ffff0000     ................
   12de4:	fffe0000 ffffffff 0002ffff 00010001     ................
   12df4:	00010000 ffff0000 ffff0000 00000000     ................
   12e04:	fffefffe fffffffe ffffffff ffffffff     ................
   12e14:	fffefffe fffefffe ffffffff fffefffe     ................
   12e24:	0001ffff 00010001 00000001 ffff0000     ................
   12e34:	ffffffff 0000ffff 0001ffff 00000000     ................
   12e44:	0000ffff 0000ffff ffffffff ffff0000     ................
   12e54:	ffff0000 ffff0000 ffffffff fffffffe     ................
   12e64:	fffeffff fffdfffe fffefffe fffefffe     ................
   12e74:	ffffffff ffff0000 00000000 00010000     ................
   12e84:	0000ffff 0001ffff 0000ffff 0001fffe     ................
	...
   12e9c:	ffff0000 00000001 00000001 00000001     ................
   12eac:	00010002 00020002 00000001 0000ffff     ................
   12ebc:	0000fffe 0000ffff ffff0000 fffeffff     ................
   12ecc:	ffffffff 00000000 0000ffff 00000001     ................
   12edc:	00010000 00010001 00020002 00000001     ................
   12eec:	00000001 00010001 00010001 00000001     ................
   12efc:	00000000 0001ffff fffffffe fffe0000     ................
   12f0c:	ffffffff ffffffff ffff0000 fffe0001     ................
   12f1c:	ffffffff fffffffe fffefffe fffffffe     ................
   12f2c:	ffffffff fffffffe ffffffff fffffffe     ................
   12f3c:	fffffffe 0000ffff 00000000 ffff0000     ................
   12f4c:	fffe0000 ffffffff 00010001 00010000     ................
   12f5c:	00000001 ffff0000 00000001 00000000     ................
   12f6c:	ffffffff fffefffd fffdfffc fffdfffc     ................
   12f7c:	fffdfffd fffefffd fffdfffd fffffffe     ................
   12f8c:	0000ffff ffff0000 00010000 00000000     ................
   12f9c:	00010001 00020002 00030003 00020002     ................
   12fac:	00020002 00010001 00000001 00000001     ................
   12fbc:	ffff0001 ffff0000 fffe0001 ffff0000     ................
   12fcc:	ffffffff fffeffff ffffffff fffeffff     ................
   12fdc:	fffdfffe fffefffe fffffffd 0000fffd     ................
   12fec:	0000fffd 0000ffff 0000ffff 0000ffff     ................
	...
   13004:	00010000 00000001 00000001 00010001     ................
   13014:	00010001 00000000 00000000 00010000     ................
   13024:	00000000 ffffffff ffffffff fffeffff     ................
   13034:	fffeffff fffefffe fffefffe fffeffff     ................
   13044:	fffefffe fffffffe fffffffe ffffffff     ................
   13054:	ffff0000 00000000 00000000 00000000     ................
	...
   1306c:	00010000 00010001 00010001 ffff0001     ................
   1307c:	00000000 00000001 00010000 00010000     ................
   1308c:	00000000 00010000 00010001 00010000     ................
   1309c:	00000000 ffffffff fffdfffe fffefffe     ................
   130ac:	fffeffff fffeffff ffffffff ffffffff     ................
   130bc:	fffffffe fffffffd ffffffff ffffffff     ................
   130cc:	0000ffff 0000ffff 00000001 00000001     ................
   130dc:	ffffffff fffffffe ffffffff 00010000     ................
   130ec:	00010000 00000000 fffffffe fffeffff     ................
   130fc:	ffff0000 ffff0000 fffffffe ffff0000     ................
   1310c:	ffffffff ffff0000 ffff0000 ffff0000     ................
   1311c:	fffffffe ffffffff 0000ffff 00000000     ................
   1312c:	00020000 00010000 00010001 00010000     ................
   1313c:	ffffffff fffefffe fffdfffe fffffffe     ................
   1314c:	fffffffe fffffffe 0000ffff ffffffff     ................
   1315c:	fffffffe fffeffff 00000000 00000001     ................
   1316c:	00000001 00000000 00010001 00000000     ................
   1317c:	ffffffff 0000ffff ffffffff ffffffff     ................
   1318c:	ffffffff 00000000 ffff0000 ffff0000     ................
   1319c:	fffdffff fffdfffd fffefffc fffeffff     ................
   131ac:	fffeffff ffff0001 ffffffff fffffffe     ................
   131bc:	00000000 00010000 00010001 00010001     ................
   131cc:	00010001 00020001 00010002 00010001     ................
	...
   131e4:	0000ffff ffffffff 00000000 0000ffff     ................
   131f4:	ffff0000 00000000 fffffffe fffefffe     ................
   13204:	fffffffe 0000ffff 0000ffff 00010001     ................
	...
   1321c:	ffff0001 00000000 0000ffff 0000ffff     ................
   1322c:	00000001 00010001 00000001 00000000     ................
   1323c:	ffff0000 ffff0000 00000000 0000ffff     ................
   1324c:	0000ffff ffff0000 ffff0000 0000ffff     ................
   1325c:	0000ffff fffeffff fffdffff fffefffd     ................
   1326c:	0000fffe ffffffff fffffffe ffffffff     ................
   1327c:	ffffffff ffffffff fffffffe 00000000     ................
   1328c:	00000000 00010000 00020000 00020000     ................
   1329c:	00010000 fffeffff fffd0000 fffd0000     ................
   132ac:	fffeffff fffeffff fffe0000 fffeffff     ................
   132bc:	fffefffe fffffffe fffefffd fffefffe     ................
   132cc:	fffefffe fffffffe fffffffe ffffffff     ................
   132dc:	00010000 00010000 00000000 00000001     ................
   132ec:	ffff0000 ffff0001 00000001 00010002     ................
   132fc:	00020002 00020002 00020002 00010002     ................
   1330c:	00000001 00000001 ffff0000 ffff0000     ................
   1331c:	ffff0001 00000000 0000fffe fffefffe     ................
   1332c:	fffefffd fffefffe 00010000 00000000     ................
   1333c:	0001ffff 00000001 00000000 00000000     ................
   1334c:	00000000 00010001 00000000 ffff0000     ................
   1335c:	ffff0000 ffffffff fffeffff ffffffff     ................
   1336c:	0000ffff 00000000 00010002 00010001     ................
   1337c:	00000000 fffeffff fffefffe fffefffe     ................
   1338c:	ffff0000 ffff0000 00010000 00010001     ................
   1339c:	0001ffff 0000fffe 0000fffe fffefffe     ................
   133ac:	fffeffff ffff0001 00000001 ffff0000     ................
   133bc:	ffffffff fffefffe fffdfffe fffefffe     ................
   133cc:	fffefffe fffeffff ffffffff fffffffe     ................
   133dc:	fffffffe fffffffe fffdfffd fffdfffe     ................
   133ec:	ffffffff 0000ffff 00000000 0000ffff     ................
   133fc:	00000001 ffff0001 ffffffff 00000000     ................
   1340c:	00000000 00010001 00010001 00000000     ................
   1341c:	00000000 00010000 00000000 ffffffff     ................
   1342c:	0000fffe 0000ffff ffff0000 00000000     ................
   1343c:	00010000 00010002 00020001 00020001     ................
   1344c:	00020001 00010002 00000000 00000000     ................
   1345c:	00010001 00000001 00000001 00000001     ................
	...
   13474:	ffff0000 fffeffff ffffffff ffffffff     ................
   13484:	ffffffff fffefffe fffffffe fffeffff     ................
   13494:	fffeffff 00010000 00000001 ffff0000     ................
   134a4:	fffe0000 0000ffff ffffffff fffdfffe     ................
   134b4:	fffdfffe fffefffe fffefffe fffffffe     ................
   134c4:	fffeffff fffefffe 0000ffff ffffffff     ................
   134d4:	ffffffff ffffffff ffff0000 0000ffff     ................
   134e4:	0000ffff 0001ffff 0000ffff ffffffff     ................
   134f4:	0000ffff 00000000 00000001 00010001     ................
   13504:	00000000 00010000 00020001 00010001     ................
   13514:	00010001 00000001 ffff0000 fffefffe     ................
   13524:	fffffffe 0000ffff ffffffff fffeffff     ................
   13534:	fffefffe fffeffff 0000ffff 00000000     ................
   13544:	ffffffff 0001ffff 00020001 00000001     ................
   13554:	0000ffff 00000000 00000000 00000001     ................
   13564:	ffff0000 fffefffe fffffffe fffeffff     ................
   13574:	ffffffff ffffffff 0000ffff 00000000     ................
   13584:	00000001 00000000 00000000 ffff0000     ................
   13594:	ffff0001 0000ffff ffffffff ffffffff     ................
   135a4:	ffffffff fffefffe fffefffe fffffffd     ................
   135b4:	fffffffe fffffffe 0000ffff 00000000     ................
   135c4:	00000001 00000000 ffffffff ffffffff     ................
   135d4:	00000000 ffff0000 ffffffff 0002ffff     ................
   135e4:	0000ffff 0001ffff ffff0000 fffe0000     ................
   135f4:	ffffffff 00010000 00010000 00000001     ................
   13604:	00000000 00010001 00010000 0000ffff     ................
	...
   13620:	00000001 ffffffff 00000000 00010000     ................
   13630:	00010000 00000001 00000001 ffffffff     ................
   13640:	ffffffff ffff0000 ffff0000 00000000     ................
   13650:	ffff0000 ffff0000 fffe0000 fffdffff     ................
   13660:	fffeffff ffffffff ffff0000 ffff0000     ................
   13670:	fffe0000 ffff0000 00000000 00000000     ................
   13680:	00010000 00000000 fffefffe fffffffe     ................
   13690:	0000ffff 00000000 0000ffff 0000ffff     ................
   136a0:	0001ffff 0000fffe 0000ffff ffff0000     ................
   136b0:	00010001 00010003 00000001 00010000     ................
   136c0:	0000ffff fffeffff fffeffff fffeffff     ................
   136d0:	fffeffff fffffffe ffffffff 0000fffe     ................
   136e0:	fffeffff fffefffe fffefffe fffffffe     ................
   136f0:	fffffffe 0000fffe 0000ffff 00010000     ................
   13700:	00010001 00000000 ffff0000 ffffffff     ................
   13710:	ffffffff 0000ffff 0000ffff 00010001     ................
   13720:	00010001 00010001 00000001 ffff0000     ................
   13730:	00000000 ffff0000 fffeffff fffeffff     ................
   13740:	ffff0000 00000000 ffff0001 ffff0000     ................
   13750:	ffffffff 00000000 00000000 ffff0000     ................
   13760:	fffe0000 fffeffff ffff0000 00000000     ................
   13770:	ffff0000 0000ffff ffff0000 fffffffe     ................
   13780:	fffeffff fffefffd fffefffd fffffffe     ................
   13790:	fffffffe fffefffe fffffffe 00000000     ................
   137a0:	ffff0000 ffff0001 00000000 00000001     ................
   137b0:	00010001 00000001 00000000 00000000     ................
	...
   137c8:	0001ffff 0000fffe fffeffff 0000fffd     ................
   137d8:	fffffffe ffffffff 0000ffff 0001ffff     ................
   137e8:	00010001 00010001 00010002 00000001     ................
   137f8:	00010000 00010000 ffffffff fffefffe     ................
   13808:	fffffffe 0000ffff 00000000 00010001     ................
   13818:	ffff0001 fffffffe fffffffe 0000ffff     ................
   13828:	00000000 fffffffe fffffffe ffffffff     ................
   13838:	00010000 0000ffff fffeffff ffffffff     ................
   13848:	00010002 00010001 ffffffff fffeffff     ................
   13858:	fffeffff ffffffff 0000fffe 0001ffff     ................
   13868:	00000000 ffff0000 ffff0000 00000000     ................
   13878:	ffff0000 fffefffd fffdfffe ffff0000     ................
   13888:	fffe0000 fffefffe fffefffd 0000ffff     ................
   13898:	00000000 fffeffff fffefffd 0000ffff     ................
   138a8:	00010001 00000001 00000000 00010000     ................
   138b8:	00020002 00000002 ffffffff fffffffe     ................
   138c8:	0000fffe 00010000 00000000 ffff0000     ................
   138d8:	0000fffe 00030000 fffe0002 fffcfffc     ................
   138e8:	0004fffd 00060007 fffe0003 fffafffa     ................
   138f8:	fffffffc 00070006 ffff0006 fff5fffa     ................
   13908:	fffcfff6 000f0005 00080011 fff3fffd     ................
   13918:	fff9fff0 000d0007 0008000f fff1ffff     ................
   13928:	ffefffee 0006fff8 000c000e fff90004     ................
   13938:	fff1fff1 0002fff6 000c0009 ffff0006     ................
   13948:	fff5fff7 fffdfff6 00050001 00050006     ................
   13958:	00020003 00000000 ffff0001 fffafffd     ................
   13968:	fff9fff8 0006ffff 0009000b fffc0004     ................
   13978:	fff5fff5 0003fff9 000c000a 00010007     ................
   13988:	fff7fffa fffafff9 00040001 00080007     ................
   13998:	00000005 fffbfffd fffafff9 0000fffa     ................
   139a8:	00070003 00050008 fff90001 fff6fff7     ................
   139b8:	0001fffb 00050006 ffff0003 fffbfffc     ................
   139c8:	fffffffb 00060001 00040006 fffbffff     ................
   139d8:	fff6fff7 fffcfff9 00040001 00010004     ................
   139e8:	fffafffd fffafff8 0001fffc 00050004     ................
   139f8:	ffff0003 fffafffb fffefffb 00050002     ................
   13a08:	00070007 00010006 fff8fffe fff9fff7     ................
   13a18:	0005fffe 000b000a ffff0006 fff3fff8     ................
   13a28:	fffbfff6 000a0002 000a000a fffd0002     ................
   13a38:	fff7fff7 0002fffb 000a0007 00020008     ................
   13a48:	fffafffe fffafffa fffffffc 00020002     ................
   13a58:	fffe0001 fffbfffd fffcfffb fffefffc     ................
   13a68:	00010000 00010001 fffeffff fffdfffd     ................
   13a78:	00020000 00020004 ffff0002 fffcfffd     ................
   13a88:	fffefffc 00040001 00040004 fffd0001     ................
   13a98:	fff9fffa fffffffa 00070003 00040007     ................
   13aa8:	fffaffff fff9fff9 0003ffff 00090008     ................
   13ab8:	00020007 fff9fffc fffcfff8 0005fffe     ................
   13ac8:	000a0007 00030007 fffafffd fff9fff8     ................
   13ad8:	0000fffc 00020002 fffe0001 fffbfffb     ................
   13ae8:	fffefffb 00030002 00070006 00040006     ................
   13af8:	fffe0000 fffdfffc 0001fffe 00040004     ................
   13b08:	00000004 fffcffff fffdfffc 00030001     ................
   13b18:	00040005 fffd0000 fffafffc fffefffd     ................
   13b28:	00020001 00000002 fffbfffe fffcfff9     ................
   13b38:	0002fffe 00050005 fffe0001 fff8fffa     ................
   13b48:	fffcfff8 00020000 00020003 fffd0000     ................
   13b58:	fffcfffa fffffffc 00020001 00020003     ................
   13b68:	ffff0002 fffefffe fffffffe 00030001     ................
   13b78:	00050005 00000004 fffafffd fffafffa     ................
   13b88:	0000fffd 00030003 fffe0002 fffbfffb     ................
   13b98:	fffffffb 00040001 00030004 ffff0002     ................
   13ba8:	ffffffff 00010001 00000003 00000002     ................
   13bb8:	ffff0001 ffff0000 ffffffff fffffffe     ................
   13bc8:	fffffffe ffffffff fffeffff fffcfffe     ................
   13bd8:	fffdfffc fffffffd fffeffff 0000ffff     ................
   13be8:	00000001 00000001 fffeffff fffefffe     ................
   13bf8:	0001ffff 00030002 00010001 00000000     ................
   13c08:	ffff0002 00000001 ffffffff ffffffff     ................
   13c18:	ffff0000 ffffffff 0000ffff 00020000     ................
   13c28:	00020001 00010000 fffdfffd fffefffc     ................
   13c38:	00030000 00050004 00010003 fffefffe     ................
   13c48:	fffefffe 0000ffff fffffffe fffefffe     ................
   13c58:	0001ffff 00010001 fffe0000 fffffffe     ................
   13c68:	00010001 ffff0001 fffcfffd 0000fffd     ................
   13c78:	00040003 00030004 fffcfffe fffefffc     ................
   13c88:	00010000 00010001 fffcfffd fffefffc     ................
   13c98:	00030002 00020004 fffc0000 fff8fffa     ................
   13ca8:	fffefffb 00020000 00010002 fffeffff     ................
   13cb8:	fffdfffe fffe0000 00000001 00020002     ................
   13cc8:	00030003 00000001 fffcfffd 0001fffd     ................
   13cd8:	00070003 00020005 fff8fffc fffafff7     ................
   13ce8:	00060001 00080009 fffd0004 fff8fff9     ................
   13cf8:	fffefff9 00050002 00040006 fffe0003     ................
   13d08:	fffbfffd 0001ffff 00020003 00000001     ................
   13d18:	fffdfffe fffdfffd 0000fffe 00000001     ................
   13d28:	00010001 00030002 fffe0000 fffbfffb     ................
   13d38:	fffdfffd 00020001 ffff0001 fffbfffe     ................
   13d48:	ffffffff 00010002 fffe0000 fffcfffd     ................
   13d58:	fffefffd 00020000 00020003 fffcfffe     ................
   13d68:	fff9fffa fffefffb 00010000 00010000     ................
   13d78:	fffdfffd fffefffb 0001ffff 00040002     ................
   13d88:	00000002 fffcfffe fffdfffd 0000ffff     ................
   13d98:	00040003 00040005 ffff0001 fffbfffc     ................
   13da8:	fffffffb 00030001 00030003 ffff0001     ................
   13db8:	fffcfffd fffefffd 00010000 00030002     ................
   13dc8:	00000002 fffdffff fffffffe 00040002     ................
   13dd8:	00030004 ffff0001 fffcfffd fffdfffc     ................
   13de8:	00000000 00020003 00000000 fffdfffe     ................
   13df8:	fffefffd fffffffe 00000000 0001ffff     ................
   13e08:	0000fffe 00010001 00000002 fffdfffe     ................
   13e18:	fffdfffd 0000fffe 00020002 00010002     ................
   13e28:	00000000 fffffffe 0000ffff 00010001     ................
   13e38:	00000000 ffff0000 fffdfffe 0000ffff     ................
   13e48:	00020001 00010003 fffd0000 fffefffe     ................
   13e58:	00010000 00020002 fffe0001 fffd0000     ................
   13e68:	fffbfffe fffcfffd ffff0000 00010001     ................
   13e78:	ffff0000 fffefffe fffefffd fffffffd     ................
   13e88:	0000ffff fffeffff fffdfffd fffefffd     ................
   13e98:	0001ffff 00010001 ffff0000 fffdfffd     ................
   13ea8:	fffefffc 00000000 0000ffff 0000ffff     ................
   13eb8:	00020000 00000000 00010001 00010002     ................
   13ec8:	00010002 00010001 00020000 00010001     ................
   13ed8:	ffff0001 00000000 00020000 00030002     ................
   13ee8:	00000002 fffdfffe fffefffd fffefffe     ................
   13ef8:	ffff0000 00000001 ffff0000 ffffffff     ................
   13f08:	0001ffff 00030002 00010003 fffe0000     ................
   13f18:	fffefffd 0000ffff 00020002 00010000     ................
   13f28:	ffffffff fffefffd ffffffff 00010001     ................
   13f38:	00020002 00000000 fffefffd fffffffe     ................
   13f48:	0000ffff fffdffff fffefffd fffffffe     ................
   13f58:	0000ffff 00000000 ffff0000 fffefffe     ................
   13f68:	fffdfffd fffdfffc fffcfffd fffdfffd     ................
   13f78:	ffffffff 00010000 00000000 ffff0000     ................
   13f88:	fffeffff fffffffd 0000fffd 00020000     ................
   13f98:	ffff0000 fffffffe fffffffe 00000000     ................
   13fa8:	ffff0001 fffd0001 fffe0001 ffff0000     ................
   13fb8:	00000001 ffff0000 ffffffff fffefffe     ................
   13fc8:	fffefffd ffffffff 00000000 ffff0000     ................
   13fd8:	fffefffe fffffffd 00010000 00020001     ................
   13fe8:	00000001 fffe0000 fffefffe fffeffff     ................
   13ff8:	ffffffff 00010001 00020002 00020003     ................
   14008:	00020002 00020001 00020001 00020001     ................
   14018:	00020000 00010001 ffff0000 ffff0000     ................
   14028:	00000000 00000001 00000000 00000001     ................
   14038:	00000000 ffff0000 fffeffff fffefffe     ................
   14048:	ffffffff 0000ffff ffffffff 0000ffff     ................
   14058:	00010000 00010002 ffff0000 ffffffff     ................
   14068:	ffffffff ffffffff 0000ffff ffffffff     ................
   14078:	fffefffd 0000fffe 00000000 ffffffff     ................
   14088:	fffeffff fffeffff ffff0000 00010001     ................
   14098:	0000ffff fffefffd fffffffd 0000ffff     ................
   140a8:	0001ffff 00000001 ffffffff fffefffd     ................
   140b8:	fffffffe ffff0001 ffffffff fffffffe     ................
   140c8:	fffffffd 0000ffff ffffffff fffeffff     ................
   140d8:	00000000 00000001 00000002 00000001     ................
   140e8:	00000000 0001ffff 0002ffff 00010000     ................
   140f8:	fffe0000 fffeffff fffefffd fffefffd     ................
   14108:	fffefffe ffff0000 00000001 00000001     ................
   14118:	fffe0000 fffeffff ffffffff 0000ffff     ................
   14128:	00010000 00010002 00010001 00010000     ................
   14138:	00010000 ffff0000 0000ffff ffff0000     ................
	...
   14150:	0000ffff 0001ffff 00020002 00000002     ................
   14160:	ffff0000 ffff0000 00010001 ffff0001     ................
   14170:	ffff0000 0000ffff 00010000 0000fffe     ................
   14180:	fffefffe ffff0000 00010000 0000ffff     ................
   14190:	fffffffe ffffffff ffff0000 fffdfffe     ................
   141a0:	ffffffff ffffffff fffeffff ffffffff     ................
   141b0:	ffff0000 00000000 00000001 0000ffff     ................
   141c0:	ffffffff ffff0000 00000001 00000000     ................
   141d0:	ffffffff fffffffe 0000ffff 00000001     ................
   141e0:	00010000 ffffffff 0000ffff 0000ffff     ................
   141f0:	ffffffff ffff0000 00000001 00010001     ................
   14200:	00000000 ffff0000 00000000 ffffffff     ................
   14210:	fffdfffe fffefffe 00020000 00010001     ................
   14220:	fffeffff fffeffff fffffffe ffffffff     ................
	...
   14238:	00000001 fffe0001 fffe0001 ffff0000     ................
   14248:	00000000 00010000 00020000 0000ffff     ................
   14258:	ffff0001 ffff0000 fffe0000 ffff0000     ................
   14268:	ffffffff fffeffff ffffffff 00000000     ................
   14278:	ffff0000 ffffffff fffefffe ffffffff     ................
   14288:	00000001 00000001 00000000 ffff0000     ................
   14298:	ffff0000 fffffffe 0000ffff 0000ffff     ................
   142a8:	00000000 fffeffff fffffffe 0000ffff     ................
   142b8:	0001ffff ffffffff fffefffe fffefffd     ................
   142c8:	fffefffe ffffffff ffffffff fffffffe     ................
   142d8:	00010000 00020000 00000003 ffff0002     ................
   142e8:	fffe0000 ffff0000 ffffffff 0000ffff     ................
   142f8:	fffffffe fffffffe 00010000 0002ffff     ................
   14308:	00010000 00010002 00010002 00010001     ................
   14318:	ffff0000 ffffffff fffdfffe 0000fffe     ................
   14328:	0000fffe fffffffe 00000000 00000000     ................
   14338:	00000001 00010002 00020002 00010001     ................
   14348:	00000002 00000001 00000001 ffff0000     ................
   14358:	ffffffff 0000fffe 0001ffff 0000ffff     ................
   14368:	0000ffff ffffffff ffff0000 00000000     ................
   14378:	fffe0000 fffeffff ffffffff 0000ffff     ................
   14388:	00000000 fffeffff ffffffff fffeffff     ................
   14398:	ffff0000 ffffffff fffffffe ffffffff     ................
   143a8:	0000ffff 0001ffff 00020001 00010002     ................
   143b8:	00000002 ffff0001 0000ffff 0000ffff     ................
   143c8:	ffffffff ffffffff fffeffff fffefffe     ................
   143d8:	fffefffe fffcfffd fffffffd ffffffff     ................
   143e8:	fffffffe ffffffff 00000000 0000ffff     ................
   143f8:	00000000 ffff0000 fffeffff ffffffff     ................
   14408:	0000fffe 0000ffff 0000ffff 0001ffff     ................
   14418:	0001ffff 0001ffff 00020000 00010001     ................
   14428:	00010001 00000001 00000000 ffff0001     ................
   14438:	00000001 ffff0001 fffe0000 fffe0000     ................
   14448:	ffffffff fffefffe fffeffff ffffffff     ................
   14458:	fffeffff ffffffff 0000ffff ffffffff     ................
   14468:	ffff0000 ffffffff fffffffe fffeffff     ................
   14478:	ffffffff 00000000 00000001 00010001     ................
   14488:	00010000 00020000 00010001 00020002     ................
   14498:	00010001 ffff0001 ffff0001 00000000     ................
   144a8:	ffffffff 0000ffff ffffffff fffefffe     ................
   144b8:	fffcfffd fffdfffc fffefffd fffdfffd     ................
   144c8:	fffdfffd fffffffe fffeffff fffffffd     ................
   144d8:	ffffffff ffffffff fffe0000 00000000     ................
   144e8:	ffff0000 00010000 00010001 00010000     ................
   144f8:	00000000 ffff0000 ffffffff fffffffe     ................
   14508:	ffffffff fffeffff ffff0000 00000000     ................
   14518:	ffffffff 0000ffff 00000000 ffffffff     ................
   14528:	ffffffff 00010000 00000000 00000001     ................
   14538:	00010000 00000000 fffffffe 0000fffe     ................
   14548:	0000ffff 0000ffff ffff0000 fffeffff     ................
   14558:	ffff0000 00000000 00010000 00010001     ................
   14568:	00000001 00000000 0000ffff 00000000     ................
   14578:	00000000 ffffffff ffff0000 00000000     ................
   14588:	ffffffff 00000000 00000001 00010001     ................
   14598:	00020001 00010000 00000000 0000ffff     ................
   145a8:	00000000 ffffffff 0000ffff 00000000     ................
   145b8:	ffff0001 ffff0001 fffe0000 fffefffe     ................
   145c8:	fffefffe fffeffff ffff0000 ffff0000     ................
   145d8:	ffff0000 00000000 ffffffff 00000000     ................
   145e8:	ffffffff 0000ffff 0000fffe 0001fffe     ................
   145f8:	0000fffe ffffffff 0000ffff ffffffff     ................
   14608:	fffefffe fffefffe fffe0000 fffe0000     ................
   14618:	fffe0000 00000000 ffff0000 fffe0000     ................
   14628:	fffe0000 fffe0000 00000000 00010001     ................
	...
   14640:	00000001 00020002 00030002 00020002     ................
   14650:	00010001 00000001 fffffffe fffdfffe     ................
   14660:	ffffffff ffffffff ffff0000 fffeffff     ................
   14670:	fffeffff ffff0000 00010000 0001ffff     ................
   14680:	ffffffff fffe0000 fffeffff ffffffff     ................
   14690:	fffffffe 0000ffff 00000000 0000ffff     ................
   146a0:	0000ffff 0000ffff ffff0000 ffff0000     ................
   146b0:	ffffffff fffe0000 00000001 0000ffff     ................
   146c0:	fffdffff fffdfffd fffefffc fffffffe     ................
   146d0:	0000ffff 0000ffff 0000ffff ffff0000     ................
   146e0:	00000000 0001ffff 00010001 00010000     ................
   146f0:	ffff0001 fffe0000 ffffffff 0000ffff     ................
   14700:	0000ffff 00010000 00010000 00000000     ................
   14710:	ffff0000 0000ffff 0000ffff 0000ffff     ................
   14720:	ffffffff ffff0000 fffefffe fffefffe     ................
   14730:	fffefffe fffefffe ffffffff 00000001     ................
   14740:	00010000 00010001 00010000 00000001     ................
   14750:	00000000 00000001 00000000 00000000     ................
   14760:	00000000 ffffffff fffeffff fffefffe     ................
   14770:	fffffffe fffffffe ffff0000 00000000     ................
   14780:	00010001 00010001 00020001 00010000     ................
   14790:	ffffffff fffefffe ffffffff 00000000     ................
   147a0:	00010001 00010000 00010001 00000001     ................
   147b0:	ffff0000 0000ffff 00000000 00000001     ................
   147c0:	00010000 00000000 00000001 fffeffff     ................
   147d0:	fffeffff fffefffe fffffffe fffffffe     ................
   147e0:	0000ffff 0000ffff 00000000 ffff0000     ................
   147f0:	00000000 0000ffff ffffffff fffefffd     ................
   14800:	fffefffe ffffffff 0000ffff fffeffff     ................
   14810:	fffeffff ffffffff ffffffff ffff0000     ................
   14820:	ffff0000 00010000 00020000 00010001     ................
   14830:	00010001 00010001 00000000 ffff0000     ................
   14840:	ffff0000 fffeffff fffffffe 0000ffff     ................
   14850:	ffff0000 00000000 0000ffff 0000ffff     ................
   14860:	00000000 fffffffe fffffffe ffffffff     ................
   14870:	0000ffff ffff0000 00000000 00000000     ................
   14880:	00000000 ffffffff ffffffff ffffffff     ................
   14890:	fffe0000 fffeffff fffe0000 ffffffff     ................
   148a0:	fffeffff 0000ffff 00010000 00000001     ................
   148b0:	00010000 00020001 00010000 00000000     ................
   148c0:	ffff0000 fffeffff ffffffff ffffffff     ................
   148d0:	fffffffe fffefffe ffff0000 ffff0000     ................
   148e0:	00010001 00010001 00000000 ffff0000     ................
   148f0:	ffffffff fffeffff fffefffe ffffffff     ................
   14900:	0000ffff ffffffff ffffffff ffffffff     ................
   14910:	00000000 ffffffff ffff0001 ffff0000     ................
   14920:	0000fffe fffffffe ffff0000 ffffffff     ................
   14930:	ffffffff 0000ffff ffff0001 00010001     ................
   14940:	00010001 00000001 0000fffe ffffffff     ................
   14950:	0001ffff 0000fffe 00000000 00010000     ................
   14960:	0000ffff 0000ffff 0000ffff 00000000     ................
   14970:	00000002 00010001 0000ffff ffff0000     ................
   14980:	00000001 00000000 0000ffff fffeffff     ................
   14990:	fffdfffe fffefffd fffffffe ffffffff     ................
   149a0:	0002ffff 0001fffe 0001fffe fffeffff     ................
   149b0:	fffa0000 fffb0004 0008fffd 0001fffa     ................
   149c0:	fffa0006 00010001 fffe0001 00050000     ................
   149d0:	fffffffe 00020003 fffffffe fffe0002     ................
   149e0:	0000fffe fffe0000 0000fffc fffefffc     ................
   149f0:	fffd0002 fffe0000 00000001 0000fffc     ................
   14a00:	00010001 0000fffe fffc0003 0002fffe     ................
   14a10:	fffdfffe 0000fffe 00010000 00030001     ................
   14a20:	00020000 fffe0005 0003fffd fffeffff     ................
   14a30:	00000000 ffff0001 00030001 ffff0000     ................
   14a40:	ffffffff fffdfffc fffdfffd 0001fffe     ................
   14a50:	00000000 0001ffff fffefffe fffe0000     ................
   14a60:	0000fffd fffa0000 ffffffff 0000fffe     ................
   14a70:	ffffffff ffff0002 ffff0002 00010002     ................
   14a80:	0003ffff 00000002 00020005 00030003     ................
   14a90:	fffeffff fffe0002 fffffffe 0002fffc     ................
   14aa0:	fffe0000 00000001 ffffffff fffe0000     ................
   14ab0:	fffffffd fffefffd fffeffff 00020000     ................
   14ac0:	0003ffff 0000fffe 00020003 00030001     ................
   14ad0:	fffe0001 00010000 fffcffff fffdfffe     ................
   14ae0:	fffcfffc fffffffd fffcffff fffd0000     ................
   14af0:	0001fffd 0000fffe 00030002 ffff0000     ................
   14b00:	00010003 00010000 ffff0000 0005fffd     ................
   14b10:	fffbfffc fffb0008 0005fffb fffcfffe     ................
   14b20:	fffffffd fffafffb fffb0005 0002fffb     ................
   14b30:	fffbffff 000afffc fffa0003 00040003     ................
   14b40:	0002fffd 00040005 00000000 fffdffff     ................
   14b50:	00030003 fffc0000 00050003 fffdfffd     ................
   14b60:	00000001 0000fffd fffc0001 0000fffb     ................
   14b70:	00030002 00000003 fffefffc ffff0004     ................
   14b80:	0002fffc ffff0007 0000fffd fffcfffe     ................
   14b90:	ffffffff fffe0001 00010005 0002fffd     ................
   14ba0:	ffffffff 0002fffd fffbfffe 00010002     ................
   14bb0:	0000ffff fffefffe fffffffa fffcfffd     ................
   14bc0:	00000001 fffb0000 0002fffe 0000fffd     ................
   14bd0:	fffeffff 0002ffff 00000003 00050003     ................
   14be0:	00010000 0001fffe 00000000 fffe0004     ................
   14bf0:	0002ffff ffff0000 ffff0000 fffefffe     ................
   14c00:	00000002 0000ffff 0000ffff fffffffe     ................
   14c10:	fffefffd ffffffff fffefffe fffffffe     ................
   14c20:	fffcfffd fffefffc fffefffc fffeffff     ................
   14c30:	00000000 00020001 0000ffff 00000000     ................
   14c40:	fffeffff ffff0001 00030002 00030001     ................
   14c50:	00030003 0000ffff ffff0003 00000000     ................
   14c60:	00000001 0000fffc fffc0001 ffffffff     ................
   14c70:	fffaffff 0001ffff fffffffd fffe0002     ................
   14c80:	fffffffd fffd0003 0000fffe fffd0000     ................
   14c90:	0002fffe fffefffe fffd0000 fffffffd     ................
   14ca0:	0000ffff 0001ffff ffff0000 00020001     ................
   14cb0:	00010002 00030000 00020002 00030002     ................
   14cc0:	00000002 ffff0000 ffffffff 00010001     ................
   14cd0:	0003fffe fffeffff fffeffff fffeffff     ................
   14ce0:	fffffffd fffdfffe fffdfffe fffdfffe     ................
   14cf0:	fffffffd fffcfffe fffffffe fffeffff     ................
   14d00:	fffe0000 fffefffc ffff0001 00020001     ................
   14d10:	00020003 00040001 00000003 0001ffff     ................
   14d20:	fffeffff fffe0002 fffffffd 00000003     ................
   14d30:	0002fffb fffeffff ffff0001 fffd0000     ................
   14d40:	00010001 0002fffe fffe0000 fffdfffd     ................
   14d50:	ffff0001 0001ffff fffe0001 0000fffe     ................
   14d60:	fffdffff fffeffff fffdffff 00010001     ................
   14d70:	fffefffe 0000ffff fffffffd ffff0000     ................
   14d80:	00020000 ffff0002 0002fffd fffdfffe     ................
   14d90:	ffff0000 fffffffd 00000001 0001ffff     ................
   14da0:	ffff0000 fffffffe 00000001 00020001     ................
   14db0:	00010002 00020000 00010000 00030000     ................
   14dc0:	00000002 00000002 0000ffff fffefffe     ................
   14dd0:	ffffffff ffffffff ffffffff ffffffff     ................
   14de0:	fffdffff fffdffff 0000fffc fffdffff     ................
   14df0:	0001ffff fffe0002 0002fffe 0001ffff     ................
   14e00:	00010002 00030000 00000001 0000ffff     ................
   14e10:	fffe0000 fffe0000 fffefffe 00000001     ................
   14e20:	ffffffff ffff0002 0000ffff fffffffe     ................
   14e30:	fffefffe fffdfffd 0001ffff fffffffd     ................
   14e40:	fffc0000 fffefffe fffffffd 0000ffff     ................
   14e50:	ffff0001 fffeffff fffe0000 fffdffff     ................
   14e60:	00000000 00030002 00030001 00010002     ................
   14e70:	ffff0000 ffffffff 00000000 ffffffff     ................
   14e80:	ffff0001 00000000 ffff0001 00010001     ................
   14e90:	00000000 00010003 00010001 ffff0000     ................
   14ea0:	0001ffff 0001fffe 00010001 fffffffc     ................
   14eb0:	fffcfffd 0000fffd fffefffc fffeffff     ................
   14ec0:	fffefffe fffffffd fffefffd fffdfffe     ................
   14ed0:	0001ffff 0000ffff 0000ffff 00010001     ................
   14ee0:	00000000 ffff0000 ffff0001 0000fffd     ................
   14ef0:	0001ffff ffff0000 fffe0000 ffff0000     ................
   14f00:	00000000 00030001 00000002 00000001     ................
   14f10:	00010001 ffff0001 00010001 00010001     ................
	...
   14f28:	0000ffff 00000000 0002ffff fffe0000     ................
   14f38:	fffdfffd fffdfffc fffe0000 00000000     ................
   14f48:	fffe0000 fffe0000 fffdffff fffdfffe     ................
   14f58:	fffefffe fffffffd 0000ffff fffefffe     ................
   14f68:	ffff0000 00010000 00010001 00030004     ................
   14f78:	00010001 00000001 0001fffe ffffffff     ................
   14f88:	ffffffff fffefffe fffe0000 0000fffe     ................
   14f98:	fffefffe 0000fffe ffff0001 00000001     ................
   14fa8:	ffffffff 00000001 ffff0000 00010000     ................
   14fb8:	ffff0001 ffff0002 0002ffff 00000000     ................
   14fc8:	0000ffff 00000000 fffeffff fffffffe     ................
   14fd8:	fffefffc fffefffe fffdffff fffeffff     ................
   14fe8:	fffffffe fffefffe 0000fffe ffff0000     ................
   14ff8:	00010000 0000ffff ffffffff fffffffe     ................
   15008:	fffeffff 0000fffe 00010000 00010001     ................
   15018:	00000001 00000001 fffe0000 ffff0000     ................
   15028:	0000ffff fffffffe 00030000 00010000     ................
   15038:	ffff0001 fffeffff ffffffff 0000ffff     ................
   15048:	00010000 00010001 00010001 00010002     ................
   15058:	00030001 00010000 00010001 00000002     ................
   15068:	ffff0001 fffefffe 0000fffe 0001ffff     ................
   15078:	ffff0000 00000000 00010001 00000000     ................
   15088:	fffeffff ffff0000 fffd0000 ffffffff     ................
   15098:	fffffffe fffefffe fffefffe fffefffe     ................
   150a8:	fffeffff fffefffe fffffffe ffff0000     ................
   150b8:	fffeffff fffeffff 0000ffff 0000ffff     ................
   150c8:	00010000 0002ffff 00010000 ffff0000     ................
   150d8:	ffffffff 0000fffe ffffffff 00000000     ................
   150e8:	ffffffff ffff0000 fffeffff fffefffe     ................
   150f8:	ffffffff 00010001 00020002 00020001     ................
   15108:	00010001 00020000 00010001 00000002     ................
   15118:	00000001 00010001 00000001 fffe0001     ................
   15128:	fffe0000 fffeffff fffffffe fffeffff     ................
   15138:	ffffffff fffffffe fffffffe fffffffe     ................
   15148:	fffffffe 0000ffff 00000000 ffff0000     ................
   15158:	ffff0000 ffffffff ffffffff 00010000     ................
   15168:	00010001 fffe0001 fffffffe fffffffe     ................
   15178:	fffe0000 00000001 ffff0002 00010000     ................
   15188:	0000ffff ffffffff fffeffff fffcfffe     ................
   15198:	fffeffff fffefffe 0000ffff 0000ffff     ................
   151a8:	0001ffff 00000001 ffff0000 0000fffe     ................
   151b8:	0001fffe 00010001 00000000 00010001     ................
	...
   151d4:	fffefffe fffffffe fffffffd fffefffe     ................
   151e4:	0000fffe 00000000 00000000 00000001     ................
   151f4:	ffff0000 ffffffff ffff0000 00000001     ................
   15204:	ffff0001 fffe0000 fffefffe ffffffff     ................
   15214:	ffffffff 00000000 00000000 00000001     ................
   15224:	00010001 0001ffff 00020001 00010001     ................
   15234:	00010002 00010000 00000000 00000000     ................
   15244:	ffffffff ffff0000 ffff0001 00000001     ................
   15254:	00010000 ffffffff fffeffff fffdfffe     ................
   15264:	fffeffff 0001fffe 00000000 fffe0000     ................
   15274:	fffe0000 fffe0000 fffffffe 0000ffff     ................
   15284:	0000fffe fffffffe fffefffe fffefffe     ................
   15294:	fffefffe fffffffe 0000ffff ffff0000     ................
   152a4:	ffff0000 fffffffe fffefffe fffffffe     ................
   152b4:	ffff0000 00000000 ffff0000 ffffffff     ................
   152c4:	0000ffff 00000001 00000001 00020002     ................
   152d4:	00030001 00010001 00000001 ffffffff     ................
   152e4:	0000ffff 0000fffe 0000fffe fffeffff     ................
   152f4:	fffdfffe fffeffff ffffffff fffefffe     ................
   15304:	fffefffe ffffffff 00000000 00000000     ................
   15314:	0000fffe fffffffe 0000fffe 00000000     ................
	...
   1532c:	00000001 00010002 00010002 00000000     ................
   1533c:	0000ffff ffff0000 ffff0000 fffeffff     ................
   1534c:	ffff0000 ffffffff 00010000 00000000     ................
	...
   15364:	ffff0000 ffff0000 00000000 00020000     ................
   15374:	00010000 00000000 fffffffe ffffffff     ................
   15384:	fffe0000 ffff0000 00000001 0000ffff     ................
   15394:	0001ffff 00010002 00000001 ffff0000     ................
   153a4:	00010000 ffff0000 fffe0000 fffefffe     ................
   153b4:	fffeffff fffefffd fffefffd fffefffe     ................
   153c4:	fffefffe fffffffd fffefffe fffdffff     ................
   153d4:	fffeffff ffffffff 00000000 fffeffff     ................
   153e4:	fffefffd fffeffff ffffffff 0000ffff     ................
   153f4:	0001ffff 0000ffff 00010000 00020001     ................
   15404:	00000002 00000001 00010000 00030000     ................
   15414:	00010001 00000000 00000000 00000001     ................
   15424:	ffffffff fffefffd fffefffe fffefffe     ................
   15434:	fffffffe fffefffe 00000000 00000000     ................
   15444:	00010001 00010000 00000000 00000001     ................
   15454:	00010000 0000ffff 0001ffff 00000000     ................
   15464:	ffff0001 fffe0000 fffefffe ffffffff     ................
   15474:	00000001 fffe0000 00010000 00030001     ................
   15484:	00030002 00020002 00010000 fffffffe     ................
   15494:	fffdfffe fffeffff fffe0000 fffdfffe     ................
   154a4:	fffefffe fffeffff fffeffff ffffffff     ................
   154b4:	ffffffff ffff0000 ffff0001 ffffffff     ................
   154c4:	fffffffe fffefffe fffefffd fffdfffd     ................
   154d4:	fffefffd fffefffd ffffffff 00010000     ................
   154e4:	0000ffff 0000fffe ffffffff ffff0000     ................
	...
   154fc:	ffff0000 00010000 ffff0000 00000001     ................
   1550c:	0000ffff 00010000 00000000 00000000     ................
   1551c:	fffe0000 ffff0001 00000000 0000ffff     ................
   1552c:	ffffffff 00000000 00000000 ffff0000     ................
   1553c:	00000000 00010000 00010000 00000001     ................
   1554c:	ffff0001 00000000 00020001 00000001     ................
   1555c:	00010002 00010001 00010000 00010000     ................
   1556c:	0001ffff 00010001 00010001 00000001     ................
   1557c:	ffffffff fffefffe fffffffe ffffffff     ................
   1558c:	ffffffff fffffffe 0000ffff ffffffff     ................
   1559c:	fffefffe fffdfffe fffefffe ffffffff     ................
   155ac:	ffff0000 00010000 00020001 00010001     ................
   155bc:	00000001 00000001 00010001 ffff0000     ................
   155cc:	ffff0000 fffe0000 fffdfffe fffefffe     ................
   155dc:	fffffffe 0000ffff 0000ffff ffffffff     ................
   155ec:	ffffffff ffffffff ffff0000 fffeffff     ................
   155fc:	fffdfffd fffefffe fffefffe fffefffe     ................
   1560c:	0000fffe 00000000 00010001 00010001     ................
   1561c:	00040001 00030003 00020002 00010002     ................
   1562c:	ffff0001 ffff0001 00000001 00000001     ................
   1563c:	ffff0000 0000ffff fffeffff fffdffff     ................
   1564c:	0000fffd fffffffc ffffffff fffffffe     ................
   1565c:	fffeffff 0000fffe fffefffe 00000001     ................
   1566c:	00000000 ffff0000 0001fffe 0000ffff     ................
   1567c:	00010000 0000ffff 00020000 00010000     ................
   1568c:	0000ffff 00010000 00000001 ffffffff     ................
   1569c:	fffeffff ffff0000 fffeffff ffff0000     ................
   156ac:	fffefffe 00000000 00000000 ffff0000     ................
   156bc:	00010000 fffefffe fffefffe fffdfffe     ................
   156cc:	fffefffe fffdfffd fffefffc fffefffd     ................
   156dc:	fffdfffd fffeffff ffffffff ffff0000     ................
   156ec:	00010001 00020001 00020001 00030002     ................
   156fc:	00030003 00020002 00020001 00000000     ................
   1570c:	fffffffe ffffffff fffffffe 0000ffff     ................
   1571c:	00000000 ffffffff ffffffff ffffffff     ................
   1572c:	00000000 ffff0000 fffe0000 fffe0001     ................
   1573c:	ffffffff 00010000 00010001 ffff0001     ................
   1574c:	ffff0001 ffffffff fffffffe fffeffff     ................
   1575c:	fffeffff 00000001 00010001 00010001     ................
   1576c:	00010000 00020001 00030001 00030001     ................
   1577c:	00030001 00020002 00000002 00000001     ................
   1578c:	ffff0000 ffffffff ffff0000 00000000     ................
   1579c:	00000001 00010002 ffff0000 fffeffff     ................
   157ac:	fffefffd fffffffe fffffffc fffffffd     ................
   157bc:	0000fffd 0000fffe fffffffe fffefffd     ................
   157cc:	ffffffff ffffffff fffdfffe fffeffff     ................
   157dc:	ffff0001 00000001 00010001 00010001     ................
   157ec:	00000000 ffff0001 00000001 00010000     ................
   157fc:	00010000 00000001 fffe0001 fffdfffe     ................
   1580c:	fffdfffe fffcfffc fffefffc fffdfffc     ................
   1581c:	fffdfffe fffdfffe fffffffd 0000ffff     ................
   1582c:	ffffffff 0000ffff 00010001 00010001     ................
   1583c:	00000001 00000000 00000000 00000000     ................
   1584c:	0000ffff 00000001 00020000 00000001     ................
   1585c:	00010001 ffffffff ffffffff fffffffe     ................
   1586c:	0001ffff 0000ffff ffff0000 fffeffff     ................
   1587c:	fffefffe fffeffff fffefffe ffffffff     ................
   1588c:	00000000 00010000 00010000 ffffffff     ................
   1589c:	ffff0000 00000000 00000000 00010000     ................
   158ac:	00020001 00020002 00020001 00010000     ................
   158bc:	0000fffe ffffffff ffffffff ffff0000     ................
   158cc:	ffff0000 00000000 00000001 00010001     ................
   158dc:	ffff0001 fffd0000 fffcffff fffcfffe     ................
   158ec:	fffcfffc fffefffd fffffffe ffffffff     ................
   158fc:	0000ffff 0000ffff 0001ffff ffffffff     ................
   1590c:	fffe0000 ffffffff 00000000 00000002     ................
   1591c:	00000000 00010001 00030002 00020002     ................
   1592c:	00010001 0001ffff 00000000 00000000     ................
   1593c:	00000000 ffffffff ffffffff ffff0000     ................
   1594c:	fffeffff fffeffff 0000fffe ffff0000     ................
   1595c:	00000001 00000000 fffe0000 fffffffd     ................
   1596c:	0000fffe fffffffe ffffffff 00000000     ................
   1597c:	0000ffff ffff0000 ffff0000 fffffffe     ................
   1598c:	fffeffff ffffffff 00000000 00010000     ................
   1599c:	00020000 00010001 00000000 0000ffff     ................
   159ac:	ffffffff 0000ffff ffff0000 00010000     ................
   159bc:	00010000 ffff0000 00000000 ffffffff     ................
   159cc:	fffefffe fffefffd fffdfffe fffefffd     ................
   159dc:	fffefffd fffefffd fffdfffd fffefffe     ................
   159ec:	ffffffff 00000000 00000000 ffff0001     ................
   159fc:	00000001 ffffffff ffffffff ffffffff     ................
   15a0c:	00000000 00010000 00000001 ffff0000     ................
   15a1c:	00000000 00000001 00000000 ffff0001     ................
   15a2c:	ffffffff fffffffe fffeffff 0000ffff     ................
   15a3c:	00000000 00020000 00020000 0000ffff     ................
   15a4c:	0000ffff fffeffff fffeffff fffeffff     ................
   15a5c:	fffffffe ffffffff 0000ffff ffffffff     ................
   15a6c:	ffff0000 ffff0000 ffff0000 00010000     ................
   15a7c:	00010000 00010001 00010001 ffff0000     ................
   15a8c:	ffff0000 ffff0000 ffffffff ffff0000     ................
   15a9c:	ffffffff ffffffff ffffffff fffeffff     ................
   15aac:	fffffffe 0000ffff 00000000 00010001     ................
   15abc:	00000002 00000000 fffeffff 0000fffe     ................
   15acc:	0000ffff 00000000 00000000 00000001     ................
   15adc:	00000001 00010001 00010001 0000ffff     ................
   15aec:	fffefffe fffefffe fffffffe fffefffe     ................
   15afc:	fffffffe fffefffe fffefffe 0000fffe     ................
   15b0c:	fffffffe fffffffe fffffffe fffefffe     ................
   15b1c:	fffefffe ffffffff 0000ffff 0000ffff     ................
	...
   15b34:	ffffffff fffeffff ffffffff fffe0000     ................
   15b44:	fffeffff ffff0000 00000000 00010000     ................
   15b54:	00010002 00020002 00000001 00000001     ................
   15b64:	ffff0001 ffff0000 ffff0000 0000ffff     ................
   15b74:	0001ffff 00020000 00010000 0000ffff     ................
   15b84:	ffffffff ffff0000 ffffffff 0000ffff     ................
   15b94:	fffeffff fffe0000 fffe0000 00000000     ................
   15ba4:	00000001 00000001 00010001 00000001     ................
   15bb4:	00010002 00000001 ffffffff fffffffe     ................
   15bc4:	0000fffe 0000fffe 0000ffff fffe0000     ................
   15bd4:	00000001 ffff0001 00000001 00000001     ................
   15be4:	ffffffff ffffffff fffefffe ffffffff     ................
   15bf4:	ffffffff 00000000 ffffffff ffffffff     ................
   15c04:	0000ffff ffff0000 00000000 00000000     ................
   15c14:	ffff0000 fffeffff ffff0000 0000ffff     ................
   15c24:	0000ffff ffffffff 0000fffe fffefffe     ................
   15c34:	fffffffe fffdfffe fffefffe 00000000     ................
   15c44:	0000ffff fffefffe fffefffe fffefffe     ................
   15c54:	fffffffd 0003fffd 00020005 00020004     ................
   15c64:	00020003 00000001 00010001 00020001     ................
   15c74:	00010000 00000000 0000fffe 0000fffe     ................
   15c84:	ffffffff fffe0000 ffffffff ffffffff     ................
   15c94:	00010000 00000001 ffffffff ffff0000     ................
	...
   15cb4:	fffffffe fffefffe fffeffff fffeffff     ................
   15cc4:	ffffffff ffffffff fffeffff fffe0000     ................
   15cd4:	00000001 00000001 ffffffff 0000ffff     ................
   15ce4:	ffffffff ffff0000 ffff0000 ffffffff     ................
   15cf4:	ffffffff ffffffff 00000000 0000fffe     ................
   15d04:	fffefffe ffffffff 00000001 00020002     ................
   15d14:	00000002 ffff0001 00010001 ffff0001     ................
   15d24:	fffffffe fffffffe fffffffe ffffffff     ................
   15d34:	0000fffe fffffffe fffdffff fffe0000     ................
   15d44:	fffeffff fffe0000 fffeffff ffffffff     ................
   15d54:	ffffffff ffffffff 0000fffe 00000000     ................
   15d64:	00000001 00010001 00010001 00020001     ................
	...
   15d84:	00000001 00000002 00020002 00020002     ................
   15d94:	00020001 00000000 00000000 ffffffff     ................
   15da4:	fffffffe fffefffe fffefffe fffeffff     ................
   15db4:	fffdffff ffffffff fffffffe fffffffe     ................
   15dc4:	fffffffe fffeffff fffefffe ffffffff     ................
   15dd4:	ffffffff 0000ffff 00010002 00000002     ................
   15de4:	00010001 00020002 00020001 00020001     ................
   15df4:	0000ffff fffffffe 0000ffff ffff0000     ................
   15e04:	ffffffff 0000fffe fffffffe ffffffff     ................
   15e14:	fffffffe fffefffe 00000000 00020002     ................
   15e24:	00010001 ffff0000 00000000 00000000     ................
   15e34:	fffe0000 ffffffff 0000ffff 00010000     ................
   15e44:	00010000 0000ffff fffefffe fffffffe     ................
   15e54:	fffffffe ffffffff 0000fffe ffffffff     ................
   15e64:	fffeffff fffefffe fffeffff ffff0000     ................
	...
   15e80:	00010000 00010001 00010001 00010000     ................
   15e90:	00010001 00000002 ffffffff fffffffd     ................
   15ea0:	fffefffe ffffffff 0000ffff 00000001     ................
   15eb0:	00000002 ffff0001 ffff0001 0000ffff     ................
   15ec0:	0000ffff 00000001 00000001 00000000     ................
   15ed0:	00000001 ffffffff ffff0000 ffff0000     ................
   15ee0:	fffe0000 ffff0000 00000000 ffff0000     ................
   15ef0:	fffeffff fffdfffe fffefffe fffdfffd     ................
   15f00:	fffefffd fffffffe 0000ffff 0000fffe     ................
   15f10:	fffffffe fffffffe fffefffd fffefffe     ................
   15f20:	fffefffe fffffffe ffff0000 00000000     ................
   15f30:	00000000 ffff0002 fffe0000 fffffffe     ................
   15f40:	fffefffe 0000ffff 00000000 00000001     ................
   15f50:	00010002 00010002 00010000 00020001     ................
   15f60:	00020001 00000001 00000000 ffffffff     ................
   15f70:	fffffffe fffefffe fffffffe 00010000     ................
   15f80:	00000000 ffff0000 ffff0000 ffffffff     ................
   15f90:	ffffffff fffe0000 fffeffff fffeffff     ................
   15fa0:	fffffffe 0000fffe 0000ffff 00020000     ................
   15fb0:	00020001 00020001 00000000 ffff0000     ................
   15fc0:	00000001 00000001 ffff0000 00010000     ................
   15fd0:	00000001 fffe0001 fffefffe fffefffe     ................
   15fe0:	fffffffd 0000ffff 00010001 00010001     ................
   15ff0:	ffff0000 ffff0000 00000000 00000000     ................
   16000:	ffffffff 0001ffff 0001ffff fffffffe     ................
   16010:	ffff0000 00000000 0000fffe ffffffff     ................
   16020:	fffdfffe fffdfffd fffefffe ffffffff     ................
   16030:	fffffffe 0000fffe 00000000 fffeffff     ................
   16040:	fffdffff fffeffff ffff0000 00010000     ................
   16050:	00010001 00010002 00000002 00000000     ................
   16060:	00010001 00010002 00000001 00000000     ................
   16070:	ffffffff ffffffff fffefffe fffefffd     ................
   16080:	fffefffd fffffffe fffefffe ffffffff     ................
   16090:	ffffffff 00000000 ffff0001 ffff0000     ................
	...
   160a8:	ffff0000 ffffffff fffe0000 00010000     ................
   160b8:	00000000 0001ffff 0000fffd 0000fffe     ................
   160c8:	00000000 00020000 00000001 ffff0000     ................
   160d8:	0000ffff 0000fffe ffffffff fffffffe     ................
   160e8:	fffffffe fffefffe fffdfffe fffdfffe     ................
   160f8:	fffefffe fffeffff fffefffe 0000ffff     ................
   16108:	00010000 00000000 ffff0000 ffff0000     ................
   16118:	ffff0000 fffe0000 ffff0000 00000000     ................
   16128:	00000000 00000001 00000001 00010002     ................
   16138:	00000003 00000000 00010001 00010002     ................
   16148:	00010003 00010002 00000001 ffff0000     ................
   16158:	ffff0000 ffffffff fffefffe fffffffe     ................
   16168:	fffffffd 0000fffd fffffffe fffefffe     ................
   16178:	0000ffff 00010000 00000000 ffff0001     ................
   16188:	ffff0000 0000ffff fffffffe ffff0000     ................
   16198:	0000ffff 00000000 fffe0000 fffeffff     ................
   161a8:	fffffffe fffffffe fffeffff ffff0000     ................
   161b8:	ffff0001 00010000 0000ffff 00000001     ................
   161c8:	00000000 0001ffff 00000000 00000000     ................
   161d8:	00000000 ffff0000 00000000 00000000     ................
   161e8:	ffff0000 ffff0000 fffeffff fffeffff     ................
   161f8:	fffeffff fffffffe fffefffd fffefffe     ................
   16208:	ffff0000 ffffffff 0000ffff 0000ffff     ................
   16218:	0000ffff ffffffff fffffffe fffefffe     ................
   16228:	fffdfffe fffffffe ffff0000 ffffffff     ................
   16238:	ffffffff 00010000 00010001 00010000     ................
   16248:	00010000 00010000 00000000 00000001     ................
   16258:	00000000 0000ffff 0000ffff 00000000     ................
   16268:	ffffffff 0000ffff 00000000 00000000     ................
	...
   16280:	0000ffff ffffffff ffffffff 0000ffff     ................
   16290:	ffff0000 fffe0000 fffe0000 ffffffff     ................
   162a0:	0000ffff ffff0000 ffff0000 ffff0000     ................
   162b0:	ffffffff fffffffe fffffffe ffffffff     ................
   162c0:	0000fffe 00010000 00010001 00010002     ................
   162d0:	00010001 00000002 00000001 ffff0000     ................
   162e0:	0000ffff ffffffff ffff0000 00000000     ................
   162f0:	00000001 00000001 ffff0000 00000000     ................
   16300:	0000ffff ffffffff fffffffe fffefffe     ................
   16310:	fffefffe fffdfffe fffffffe fffefffe     ................
   16320:	fffefffe 0000fffe 0001ffff 00010000     ................
   16330:	00010000 0002ffff 00020001 00030002     ................
   16340:	00030002 00010002 00010001 00010001     ................
   16350:	00010000 00000000 00000000 fffe0000     ................
   16360:	fffdffff fffefffd fffdfffe fffefffd     ................
   16370:	fffefffd fffefffd fffffffd fffefffe     ................
   16380:	fffffffe ffffffff 00010000 00010001     ................
   16390:	00000001 00000001 ffff0000 00000001     ................
	...
   163a8:	ffffffff fffeffff ffffffff 0000ffff     ................
   163b8:	0000ffff 00020001 00030002 00030002     ................
   163c8:	00010002 00010001 00010001 ffff0001     ................
   163d8:	ffff0000 fffeffff fffffffe fffdffff     ................
   163e8:	fffdfffe fffdfffe ffffffff ffffffff     ................
   163f8:	ffffffff 0000ffff 0000ffff 0000ffff     ................
   16408:	00000000 00010002 00010002 ffffffff     ................
   16418:	00000000 ffffffff ffffffff fffdffff     ................
   16428:	fffdfffe fffdfffe fffefffe ffffffff     ................
   16438:	ffffffff 00000000 00000000 0000ffff     ................
   16448:	00010000 00010002 00000001 00000000     ................
	...
   16460:	00010001 00010001 00000000 ffff0000     ................
   16470:	ffffffff 0000ffff 00010000 0000ffff     ................
   16480:	fffffffe 00000000 00000000 ffffffff     ................
   16490:	00000000 00010001 00010000 00010000     ................
   164a0:	fffeffff fffdffff fffeffff fffefffe     ................
   164b0:	ffffffff fffeffff fffffffd ffffffff     ................
   164c0:	0000ffff 00000000 00000000 00000000     ................
   164d0:	ffff0000 ffffffff ffffffff fffffffd     ................
   164e0:	0000fffe 00000000 00000000 00010000     ................
   164f0:	00000001 00010001 00000001 ffff0000     ................
   16500:	ffffffff 0000fffe ffffffff ffff0000     ................
   16510:	00000000 0000fffe fffeffff fffeffff     ................
   16520:	fffeffff ffffffff 0001ffff 00000000     ................
   16530:	00000000 ffff0000 00000000 ffff0000     ................
   16540:	fffeffff ffff0000 00010001 00010002     ................
   16550:	00020001 00010001 00010000 00000001     ................
   16560:	00000001 ffffffff fffffffe 00000000     ................
   16570:	00000001 00000000 fffe0000 ffff0000     ................
   16580:	00000000 ffff0000 ffffffff 0000ffff     ................
   16590:	0000ffff ffffffff fffefffe ffffffff     ................
   165a0:	fffe0000 ffff0000 00000000 00000000     ................
   165b0:	00000000 00010000 00000001 00020000     ................
   165c0:	fffffffd fffffffd fffe0000 ffff0000     ................
   165d0:	00000000 fffeffff 00000000 fffe0001     ................
   165e0:	ffff0000 ffffffff 00000001 ffff0000     ................
   165f0:	0002fffe ffffffff fffefffd fffffffe     ................
   16600:	fffefffd fffdfffd fffdfffe fffdffff     ................
   16610:	fffefffe 00000000 fffefffe 00010000     ................
   16620:	fffcfffe 0000fffe fffeffff 0000fffe     ................
   16630:	00010003 00010002 00020002 00030002     ................
   16640:	00010001 0001ffff ffff0000 0000fffe     ................
   16650:	00010000 ffffffff 00030001 00030002     ................
   16660:	00040002 00030005 ffff0002 fffd0000     ................
   16670:	fff9fffc fff6fff6 fff5fff5 fff5fff4     ................
   16680:	fffbfff8 0001fffe 00070003 000f000c     ................
   16690:	000e000e 000f000d 0007000c fffe0002     ................
   166a0:	fff9fffa fff3fff4 ffeffff2 fff2fff1     ................
   166b0:	fff7fff3 fffcfffb 00020002 000c0006     ................
   166c0:	000e000a 0009000d 0009000c 00040007     ................
   166d0:	fffcfffe fffbfff9 fff9fffb fff5fff8     ................
   166e0:	fffafff6 0001fffd fffd0001 fffefffb     ................
   166f0:	0004fffe 00000003 fff5fffb fffdfff8     ................
   16700:	fffdffff fffbfffa 00040000 00060006     ................
   16710:	000d0009 0012000e 00100011 000e0010     ................
   16720:	0003000a fffdffff fffd0002 ffecfff2     ................
   16730:	fff6ffee fff0fff9 ffefffee fff9fff7     ................
   16740:	fff7fff9 fffbfff9 fffbfffc fffbfffc     ................
   16750:	0001ffff fffbfffe 0004fffc 000c000b     ................
   16760:	00080005 00180012 00140019 00130010     ................
   16770:	000f0014 00020007 fffbfffd ffedfff6     ................
   16780:	ffe4ffe7 ffe0ffe5 ffdbffdc ffedffdf     ................
   16790:	fff0fff0 fffffffc 00200017 0022001f     .......... ...".
   167a0:	002d0025 002c0025 00130013 fff50012     %.-.%.,.........
   167b0:	ffecfff9 ffecffdd ffd3ffdb ffd6ffdd     ................
   167c0:	fff7ffe8 fff5fff5 fffcfff5 00130008     ................
   167d0:	00120014 000d0013 000c0008 00170013     ................
   167e0:	00050017 000c0000 00180013 00070017     ................
   167f0:	00060004 00030001 ffecfff8 ffefffec     ................
   16800:	ffe1ffe8 ffdcffdd ffdeffe4 ffd5ffd2     ................
   16810:	ffedffe6 ffeffff5 0004ffef 00190012     ................
   16820:	001b001e 002b001e 002e002f 002d002f     ......+./.../.-.
   16830:	002d002e 000a001b 0009000b fff00001     ..-.............
   16840:	ffd0ffd4 ffd7ffd7 ffccffd4 ffdaffcd     ................
   16850:	fff1ffe8 0003fffa 00160010 00100015     ................
   16860:	0016000f 00100019 fff5ffff 0001fffc     ................
   16870:	fff6fffd fff9ffee 00030001 00090003     ................
   16880:	00230017 001c0027 001b001a 0014001d     ..#.'...........
   16890:	ffe4fffa ffdaffdc ffcaffd8 ffccffbd     ................
   168a0:	ffeaffc6 ffe5ffda ffef0005 00100029     ............)...
   168b0:	00310004 002a0012 fff60032 001b001e     ..1...*.2.......
   168c0:	002b0010 ffff0001 00110012 0028001b     ..+...........(.
   168d0:	000e0016 fff40004 fff4fff8 ffeefff7     ................
   168e0:	ffbdffd7 ffd1ffb3 ffe9ffee ffc6ffdb     ................
   168f0:	fff4ffd8 0003fff3 00180007 0020002e     .............. .
   16900:	002c0026 004f0032 0037004a 0017001f     &.,.2.O.J.7.....
   16910:	004d0037 000d0035 fffffff5 fff1000c     7.M.5...........
   16920:	ffb5ffce ffacffb4 ff94ff95 ffa7ff97     ................
   16930:	ffa9ffbb ffc1ffba 0008ffcc 0002000a     ................
   16940:	fff2fffe 00430022 003f0037 005e004a     ....".C.7.?.J.^.
   16950:	006b0077 007a0069 00720083 002b0056     w.k.i.z...r.V.+.
   16960:	0021001d fff6000b ff97ffc2 ff92ff91     ..!.............
   16970:	ff87ff93 ff81ff7d ffb6ff9b fff0ffcf     ....}...........
   16980:	0033001c 002d002d 003f0026 0033005b     ..3.-.-.&.?.[.3.
   16990:	00120012 0020ffca ffe00006 ffcd0040     ...... .....@...
   169a0:	0034000e 0036ffcb ffd00007 ffbb0034     ..4...6.....4...
   169b0:	fff2ffc4 ffe4ff9a ffa0ffcc 0004fffe     ................
   169c0:	00390013 0030000c 0044005c 00500068     ..9...0.\.D.h.P.
   169d0:	002c0036 00020008 fffc000a ffdfffe6     6.,.............
   169e0:	ffb8ffd4 ffcbffc3 0011ffe4 ffe0ffe3     ................
   169f0:	ffbdffe5 ffdeffe6 001fffeb fff7fff0     ................
   16a00:	00420029 0073007d 0069004d 00360055     ).B.}.s.M.i.U.6.
   16a10:	00010023 ffe8fff3 ffacffc3 ffaaffb7     #...............
   16a20:	ffcaffaa ffaeffbc ff95ffae ffd0ffc2     ................
   16a30:	ffc1ffa3 ffd9ffbf 0000000c 00670030     ............0.g.
   16a40:	007f0065 0065006e 0074008b 0055006f     e...n.e...t.o.U.
   16a50:	0024001f 00270027 00080039 ffe6ffe2     ..$.'.'.9.......
   16a60:	ffc9ffc1 ff98ffbf ffb3ffa7 ffd4ffa2     ................
   16a70:	fffdffdb 002a0025 001e0028 ffef0045     ....%.*.(...E...
   16a80:	fffa0035 002dffbe fff1ffab ff8f000a     5.....-.........
   16a90:	fff1001b 006bfff5 0013ffd2 ffa60004     ......k.........
   16aa0:	ffcd0022 000effe3 ffc6ff8e ffb0ffc5     "...............
   16ab0:	00270037 005d0037 0030fff7 00410053     7.'.7.]...0.S.A.
   16ac0:	0009005a fffeffe9 ffdeffd6 fffaffe9     Z...............
   16ad0:	00290033 0001001f ffdaffd7 ffffffe4     3.).............
   16ae0:	ffd2fff9 0006ffcb 005a003b 0058005a     ........;.Z.Z.X.
   16af0:	006b0078 0014003a 0007fff7 fff70007     x.k.:...........
   16b00:	ffd6ffea ffd9ffc9 ffe5fffa ff82ffb8     ................
   16b10:	ff7cff65 ff61ff6c ff8fff7c ffdcffc3     e.|.l.a.|.......
   16b20:	0042fffc 0072005b 002b0062 00050023     ..B.[.r.b.+.#...
   16b30:	00280007 00290016 003e0025 0089007e     ..(...).%.>.~...
   16b40:	007b008c 0027003c ffcd0001 ffb4ffe0     ..{.<.'.........
   16b50:	ffc4ffd3 ffe60000 00200000 003effac     .......... ...>.
   16b60:	ffc5ffa4 ff4efff0 ffa60004 0052ffb4     ......N.......R.
   16b70:	0089ffc2 fff1005e ff89007f 00160001     ....^...........
   16b80:	007dffab ffdbffc5 ffb9002a 00690079     ..}.....*...y.i.
   16b90:	00a20050 ffdfffe9 ff92ffcf ffb50001     P...............
   16ba0:	ffa7ff96 ffa3ff60 ffc0ffbe 0015002a     ....`.......*...
   16bb0:	003a002a ffc6ffc0 ffbfffa0 0032004e     *.:.........N.2.
   16bc0:	0039003d 0095002b 00920095 0062009e     =.9.+.........b.
   16bd0:	001a004c fffaffe7 001cffff 0049005a     L...........Z.I.
   16be0:	00010036 fffbffd0 ffc2ffe0 ff73ffb4     6.............s.
   16bf0:	ff7dff8f ffabff71 ffe0ff9a ffebffef     ..}.q...........
   16c00:	ffb10002 ffc4ffc0 002dffd9 001b0011     ..........-.....
   16c10:	00020016 00280034 0037002f fff3000c     ....4.(./.7.....
   16c20:	ffacffc2 000fffc4 00a40033 00850098     ........3.......
   16c30:	002100b4 002800a2 00310000 fff7ff65     ..!...(...1.e...
   16c40:	ff8dff8d ffa7001a 00130054 0007ffbf     ........T.......
   16c50:	ff9cff3f ff8cff87 ffcf0034 00180034     ?.......4...4...
   16c60:	0079fffc 009a0034 00430099 fff20054     ..y.4.....C.T...
   16c70:	00280005 00480004 00030025 ff92ffef     ..(...H.%.......
   16c80:	ff97ff95 ffcfff94 ff74ffb7 ff1bff61     ..........t.a...
   16c90:	ffafff5a 0043ffde 00410035 fff5002b     Z.....C.5.A.+...
   16ca0:	00250011 00970064 00910083 00700080     ..%.d.........p.
   16cb0:	00aa00ac 008700b8 ffe90020 ff75ff92     ........ .....u.
   16cc0:	ffa0ff82 ffeefff0 ffedfff5 ffcbffc2     ................
   16cd0:	ffb8ffac ffa3ffc4 ffb1ffb6 fff9ffd3     ................
   16ce0:	0062001b 00870085 00100059 ffb1ffcd     ..b.....Y.......
   16cf0:	ffb4ff9d ffbdffb0 ffd9ffaf 0006ffea     ................
   16d00:	0004004e 000d0073 00330021 005dffc5     N...s...!.3...].
   16d10:	00440005 00030060 00040066 0025000e     ..D.`...f.....%.
   16d20:	002effce ffffffe8 ffa8000b ffaeffea     ................
   16d30:	ffcbffbe fff4ffa4 0007ffea 00140022     ............"...
   16d40:	00400050 00510049 00250018 00150008     P.@.I.Q...%.....
   16d50:	000d0035 000f0019 ffe0fff8 ff6aff96     5.............j.
   16d60:	ff61ff5a ffa7ff86 ffeeffcc ffe4ffeb     Z.a.............
   16d70:	ffc3ffd5 ffbbffcc 0020ffe5 00790036     .......... .6.y.
   16d80:	00ac0082 00b500db 009100c2 0030005a     ............Z.0.
   16d90:	fffbfff5 0016fffd 001c001b ffe30012     ................
   16da0:	ff9effc9 ff80ff89 ff85ff74 ffadff9f     ........t.......
   16db0:	ffd3ffd1 ffffffea 00230006 0024ffff     ..........#...$.
   16dc0:	002afff8 002a0028 000a0054 0001004a     ..*.(.*.T...J...
   16dd0:	00060012 001bffe1 0020ffef fff60017     .......... .....
   16de0:	ffacffed ffbcffbc ffefffc9 0018fff8     ................
   16df0:	000d000e 00200022 0022002f 00160016     ....". ./.".....
   16e00:	00120009 0021001b 00150028 000a0015     ......!.(.......
   16e10:	0002fff8 00250001 003c0039 000d0039     ......%.9.<.9...
   16e20:	ffbbffe9 ffb2ffa6 ffdaffc6 ffe5ffed     ................
   16e30:	ffdfffe1 ffd3ffc3 ffaaffb2 ff9fffb3     ................
   16e40:	ffafffd1 fff9ffcd 00480000 00200026     ..........H.&. .
   16e50:	fff7002c 00360025 00910056 0088006e     ,...%.6.V...n...
   16e60:	00610075 0053006e 00440062 00100016     u.a.n.S.b.D.....
   16e70:	ffe9ffe8 ffaeffde ff97ffcc ffa4ffab     ................
   16e80:	ffb8ff7c ffdbff7f ffb1ffc3 ff86ffd9     |...............
   16e90:	ffe8ffe8 005d0019 005a0028 003b0045     ......].(.Z.E.;.
   16ea0:	002b0064 00170030 0015ffe7 000ffff4     d.+.0...........
   16eb0:	00030028 ffe10022 ffd7ffd0 ffb6ff9a     (..."...........
   16ec0:	ffcfffae ffea0004 00150011 002c0014     ..............,.
   16ed0:	00330011 000d0029 0017001f 002e0038     ..3.).......8...
   16ee0:	002d0014 00280015 001b001e 0018003c     ..-...(.....<...
   16ef0:	fff20008 ffeeffe3 ffc8ffd0 ffc2ffd0     ................
   16f00:	ffb1ffc1 ffdcffc1 ffd6ffd3 ffcbffd3     ................
   16f10:	ffbdffc8 fffcffdb fffcffff 0005fff3     ................
   16f20:	000f0008 003e002e 004b0056 00520048     ......>.V.K.H.R.
   16f30:	003f004b 0038003b 00200020 000ffff1     K.?.;.8. . .....
   16f40:	fffb0003 ffe3001d ffbf000a ffbfffb2     ................
   16f50:	ffedff9f fff2ffcf ffc5fff5 ffc9ffdf     ................
   16f60:	fff3ffd6 000fffe5 00110020 000f0031     ........ ...1...
   16f70:	003c0035 0048002a 00050014 ffd8ffe5     5.<.*.H.........
   16f80:	00040001 0012000d fffd0001 ffdbffe0     ................
   16f90:	fff8fffa fff1fffe fffafff6 ffe6ffe0     ................
   16fa0:	0022fff9 002f0037 002b003c fffb0004     ..".7./.<.+.....
   16fb0:	001afff1 ffde0008 ffe3ffec 00060010     ................
   16fc0:	001e0002 ffe4ffe7 ffd7ffd0 ffd2fff5     ................
   16fd0:	fff3ffe3 00220006 001b000d ffeb000e     ......".........
   16fe0:	ffe4fff6 000d0011 001c000d 0040001a     ..............@.
   16ff0:	00210013 ffd5ffe3 ffbeffd5 ffe1000f     ..!.............
   17000:	ffec000a 0013ffe8 0008ffe7 ffe4ffe5     ................
   17010:	ffe9fff9 00190015 0027000b 0037001c     ..........'...7.
   17020:	ffe30029 ffcbfff7 0002ffe9 0025fffd     ).............%.
   17030:	ffe6ffea fffcffff ffd7000d ffdcffc3     ................
   17040:	0011ffd6 0044002f 00360054 0045003e     ..../.D.T.6.>.E.
   17050:	fffd001b ffd7ffca 00190006 00470045     ............E.G.
   17060:	0022003e ffe2ffef ffa3ffbb ff9eff93     >.".............
   17070:	0002ffe2 000a000d 00130002 ffdeffff     ................
   17080:	ffa3ffc9 ffc1ffa5 00540007 0028003b     ..........T.;.(.
   17090:	fff6fff8 fff3fff7 fff0fff4 00160002     ................
   170a0:	005b0062 00320074 00210015 0033fff8     b.[.t.2...!...3.
   170b0:	000cfff3 000a001b fffb0039 ffe0fff1     ........9.......
   170c0:	ffe1ffc0 ffaeffb4 ffb2ffb3 0042000e     ..............B.
   170d0:	002c004c ff93ffaf ffa7ff81 ffe3ffec     L.,.............
   170e0:	00010000 005b0025 00460053 ffc4fffd     ....%.[.S.F.....
   170f0:	ffc7ffb8 fffefffc 004b0016 007f006b     ..........K.k...
   17100:	0000003a ff7bffbe ffccffa3 00580035     :.....{.....5.X.
   17110:	00600053 003b0044 ffd4000d ffaeffbf     S.`.D.;.........
   17120:	fff8ffc7 00780032 0056006c fff80030     ....2.x.l.V.0...
   17130:	ff79ffd0 ffa9ff85 0007ffd3 0027000a     ..y...........'.
   17140:	ffd60009 ffaaffa9 ffc6ffa4 0001ffc7     ................
   17150:	00310036 004d0085 001b0079 ffe3ffd1     6.1...M.y.......
   17160:	0032ffbe 004d002e 002f005d 0000003e     ..2...M.]./.>...
   17170:	ffb9ffdb ff89ff7f fffcffb4 0052005f     ............_.R.
   17180:	00150044 ffc9ffd1 ffbfff98 ffdcffd8     D...............
   17190:	0030000a 006f005f fff40023 ff96ffb3     ..0._.o.#.......
   171a0:	ffb7ffa6 0011ffd9 00770021 00300065     ........!.w.e.0.
   171b0:	ff5f000d ff81ff9b 0038ffca 00960017     .._.......8.....
   171c0:	00700081 00050087 ff94ffe3 ffe0ff82     ..p.............
   171d0:	005cfffb 005a0069 00240068 ffb70010     ..\.i.Z.h.$.....
   171e0:	ff8eff7a ffdaff7b 00350016 fffb0037     z...{.....5.7...
   171f0:	ffabffdf ffa0ffc0 ffe1ffdb 0062fff0     ..............b.
   17200:	009f0021 0029003f ff9d001c ffd40015     !...?.).........
   17210:	005d0033 005c001e 0035002c ffc7fffd     3.]...\.,.5.....
   17220:	ff82ffd3 ffb5ff6e 00850044 003b004d     ....n...D...M.;.
   17230:	ffcd0018 ffb3ff9f ffe6fff7 ffd8ffb4     ................
   17240:	005f003e ffff0046 ffd9ffc8 ffd1ffc0     >._.F...........
   17250:	ffe0ffcf ffddffae 007c0075 ffb400cc     ........u.|.....
   17260:	ffb0ff79 0020ff3c 0015ffd9 00100086     y...<. .........
   17270:	0057007b fff6002d ff72ff69 003dffc5     {.W.-...i.r...=.
   17280:	0038002e 00370077 002a004a fff80017     ..8.w.7.J.*.....
   17290:	ff97ff6b 0051fffc 0051004f ffd80014     k.....Q.O.Q.....
   172a0:	ffb2ffd8 ffbffff1 ffceffcd 0055001d     ..............U.
   172b0:	0078001e ffd5ffb2 ff8cffe3 ffcf0054     ..x.........T...
   172c0:	00400008 006effe1 ffec0019 ffc8ffdb     ..@...n.........
   172d0:	ff9dfff4 0045ffff 0036004a 008d001f     ......E.J.6.....
   172e0:	ff98fffc 0019ffe5 ffad001a 00460013     ..............F.
   172f0:	fffaffff 0038ffff ffc5fff4 ffc0ffee     ......8.........
   17300:	ffa7ffe4 004effb4 0067004d ffdaffd1     ......N.M.g.....
   17310:	ff7d0008 ffb4ffa7 0006ffe5 00670012     ..}...........g.
   17320:	00380052 ffbdffea ffbcffa4 ffd30003     R.8.............
   17330:	00610005 00390060 0063004e ff97fff0     ..a.`.9.N.c.....
   17340:	0009ffb6 fff1002b 004d003c 00020003     ....+...<.M.....
   17350:	0009ffec ffa3ffcd 001afff1 00260015     ..............&.
   17360:	00140013 ffc2ffd3 ffddfff2 ffe40004     ................
   17370:	003f0012 002a000c ffe10006 ffc5ffef     ..?...*.........
   17380:	ffdcffbd 00350013 0067003b fffd003f     ......5.;.g.?...
   17390:	ffe2ffc6 fff0002e 0008fffa fffffff2     ................
   173a0:	00300001 000f0008 fff6ffe3 ffe10000     ..0.............
   173b0:	ff8affe4 0033001f 00370031 0002ffce     ......3.1.7.....
   173c0:	ffa8ff8a ffc9000c ffeaffdf 00100010     ................
   173d0:	00120010 ffccffe8 fffcffcc ffe20008     ................
   173e0:	000c0029 0030001d 00570037 0021ffb8     ).....0.7.W...!.
   173f0:	00060001 ffbb005a fff00080 007dffda     ....Z.........}.
   17400:	0044ffb3 ffc7ffd4 ffda0053 ffcb0025     ..D.....S...%...
   17410:	ffe50028 005affa7 fff3ffd2 0000ffd7     (.....Z.........
   17420:	ffda0049 ffdb001b ffd9ffda 0046ffdd     I.............F.
   17430:	fff1ffd5 00120018 00210060 ffe50016     ........`.!.....
   17440:	000bffc4 003e0016 ffe6ffff ffdaffe4     ......>.........
   17450:	00280030 fff1fffb ffcaffc0 fff30017     0.(.............
   17460:	fffffff1 0022ffdb 0028ffff ff970029     ......"...(.)...
   17470:	ffc2ffc9 0001fffa 0029ffe4 000fffd2     ..........).....
   17480:	001ffffb ff98001a ffa10000 ffe4003c     ............<...
   17490:	00610028 0092ffac 0044ffd3 ffc4002c     (.a.......D.,...
   174a0:	ffca0035 00140037 003c003f 0047ffdf     5...7...?.<...G.
   174b0:	000cffce ff9d000b ff8f0051 0062fff5     ........Q.....b.
   174c0:	0035ffb4 ffe8ffe3 ffaaffe5 00030030     ..5.........0...
   174d0:	0028ffef 0009fffd fff9fff9 ffe8000c     ..(.............
   174e0:	000affd7 001c0027 001a0030 0007fff2     ....'...0.......
   174f0:	00030018 00100015 ffe7ffde fffffff4     ................
   17500:	00050042 0027ffdb ffe8ffae ffc2fff9     B.....'.........
   17510:	ffc00016 0025fffa 00250002 ffd8ffd6     ......%...%.....
   17520:	ffaeffe0 ff9d0038 00260021 00a7ff74     ....8...!.&.t...
   17530:	0036ffa6 ff6c0024 ff7c0061 000f0033     ..6.$.l.a.|.3...
   17540:	00b0ffd6 0098ff7d ffd50009 ff6700ab     ....}.........g.
   17550:	00090052 009effa5 000e0003 ff9e0077     R...........w...
   17560:	000a002e 003affcf ffd2ffbe ffde0026     ......:.....&...
   17570:	00430012 ffe5ffbb ffc7ffd1 ffdb0039     ..C.........9...
   17580:	00110014 002effb1 000dffe1 ffaf002a     ............*...
   17590:	fffc0004 00400024 00210000 fff6ffd1     ....$.@...!.....
   175a0:	00040019 ffe10029 0007ffd4 00180009     ....)...........
   175b0:	ffb5003d 0008fff4 0052ff9a ffe0fff9     =.........R.....
   175c0:	ffbb000d 00310022 0011ffe6 ffe5ffcd     ....".1.........
   175d0:	0000ffc9 ffd50023 0007ffd3 ffbb0013     ....#...........
   175e0:	ffb8008c 006cffa6 0053ff3e ff4b0069     ......l.>.S.i.K.
   175f0:	ffeb00bc 00fbff91 0016ff8b ff1e008f     ................
   17600:	0008009f 00dcffaa 002fffac ffdc003b     ........../.;...
   17610:	ffb9004f ffa60045 004b000b 004cffbb     O...E.....K...L.
   17620:	0008fff7 ffffffc2 ffb5fff1 ffbb0016     ................
   17630:	0006001f 0025ffeb 000effcf ffe7ffdd     ......%.........
   17640:	ffe00016 000a001b 0042fff9 0016ffd4     ..........B.....
   17650:	ffcb0026 ffeb0026 000cffe4 0024fff8     &...&.........$.
   17660:	000bfff5 ffe3fff1 fffe001a 004cffb1     ..............L.
   17670:	ffd3ffbd ff700095 ffe3005a 001bffa1     ......p.Z.......
   17680:	0007ffc9 003bffcd 004dff98 ffc1ffec     ......;...M.....
   17690:	ffad0063 ffeeffdb ff77004b fff3008d     c.......K.w.....
   176a0:	006fffdb 0013ffda ffc60037 000b0025     ..o.....7...%...
   176b0:	00b7ffcb 00d5ff56 ffa1fff9 ff4b00f7     ....V.........K.
   176c0:	00790039 00cbff13 ff96ffe5 ff5400e9     9.y...........T.
   176d0:	00280048 0051ff80 ffc5ffc4 ffe8001d     H.(...Q.........
   176e0:	0010ffff ffe90001 0006ffd1 ffdbffeb     ................
   176f0:	ffc70033 0045fffe 004affc2 ffddffea     3.....E...J.....
   17700:	ff840046 ffe90062 006affc5 0048ffae     F...b.....j...H.
   17710:	ff980028 ff910071 0061ffe3 007cff75     (...q.....a.u.|.
   17720:	ffe7ffde 00180026 004aff99 ff8effd1     ....&.....J.....
   17730:	ff500087 004e0032 0039ff8a ffba0005     ..P.2.N...9.....
   17740:	ffb7002b 0042ffed 0009ff93 ff600088     +.....B.......`.
   17750:	ffd100b2 0093ffcf 002eff6f ffda004e     ........o...N...
   17760:	00000031 ffbf005b 0054003e 00d1ff76     1...[...>.T.v...
   17770:	0045ff5f ffcd0027 ffda0057 ffdc0032     _.E.'...W...2...
   17780:	00030002 001affd3 0011ffc2 ffd9fff7     ................
   17790:	ffcb002d ffd90003 001dffda 001dffc4     -...............
   177a0:	ffac0021 ffe80051 0070ffc0 ffc8ffc8     !...Q.....p.....
   177b0:	ff870066 000d003f 0053ffd1 0012ffc6     f...?.....S.....
   177c0:	ffc40018 0028000c 00b3ff73 0085ff6a     ......(.s...j...
   177d0:	ffdcffd7 ff3a0065 ff1f00cf 00070076     ....e.:.....v...
   177e0:	00a4ff64 ffddffab ff730070 ffa90062     d.......p.s.b...
   177f0:	0016fffa 0055ffc0 003dffae ffd00019     ......U...=.....
   17800:	00320044 00b7ff7f 0007ff74 ff3600c3     D.2.....t.....6.
   17810:	002b00a8 0091ff7b 0005ffda ffc1003d     ..+.{.......=...
   17820:	ffc70031 001f0039 007cffb7 ffecffa7     1...9.....|.....
   17830:	ffb10046 ffd40039 0039ffce 0025ffb5     F...9.....9...%.
   17840:	fffffff8 ffcdffe7 ffc8003a 001d000b     ........:.......
   17850:	0003ffcb ffc2001f 00020021 0018ffc2     ........!.......
   17860:	000afff5 002dffe8 ffe3fff8 ffc1003a     ......-.....:...
   17870:	000d002e 0088ff9d ffedffab ff2f00ab     ............../.
   17880:	ffeb00a8 00d9ff6d 0069ff1c ff4e001f     ....m.....i...N.
   17890:	ff1400ff 00820051 01aafeaa 0059fe95     ....Q.........Y.
   178a0:	fe7b00a8 ff61017f 0127ff91 0002ff17     ..{...a...'.....
   178b0:	fe480120 ff390195 0115ffbe 0102fed3      .H...9.........
   178c0:	ffbfffbc ff5f00aa 004a005f 00b7ff65     ......_._.J.e...
   178d0:	0027ff90 ffea0028 ffed0030 0027ffe6     ..'.(...0.....'.
   178e0:	0004ffd9 ffb2001e ffe9003c 0057ffca     ........<.....W.
   178f0:	fff9ffb4 ffb2000c ffd5004a 002dfff1     ........J.....-.
   17900:	ffc1ffed ffed0040 003fffbf fffaffc1     ....@.....?.....
   17910:	ffe9001f fff7001a fff00008 006fffd3     ..............o.
   17920:	0068ff6a ff8effed ff2000de 000700a5     j.h....... .....
   17930:	00b9ff65 fff2ff7e ff100091 ff9200da     e...~...........
   17940:	00daffbd 00c8fef9 000eff90 ffdbfffc     ................
   17950:	ff620043 ff1a00f2 0092005a 010efee0     C.b.....Z.......
   17960:	ff69ffb5 ff6b00fe 0111ffc9 0075fefd     ..i...k.......u.
   17970:	feec008b ff7f0123 00e4ffc5 0091ff19     ....#...........
   17980:	ff80001a ff9600af 00440007 0015ffb6     ..........D.....
   17990:	ffe2001a 0028fffd 0037ffbd ffe6ffe9     ......(...7.....
   179a0:	fffe0006 fffdffd3 ffc1002a 002f001e     ........*...../.
   179b0:	005aff92 ffceffdd fffe0028 0060ffb3     ..Z.....(.....`.
   179c0:	ffeeffce ffba003e 001f0012 0024ffb2     ....>.........$.
   179d0:	ff760024 ffab00a9 00a4ffd7 0070ff4b     $.v.........K.p.
   179e0:	ffa30003 fffa0045 0091ff9a 0018ff84     ....E...........
   179f0:	ff39005b ff7c00cc 0064fffb 0023ff75     [.9...|...d.u.#.
   17a00:	ff48005f ffdb00a1 005fffc0 ffe2ffe3     _.H......._.....
   17a10:	ffd10051 007affea 00c3ff56 ffc7ffb1     Q.....z.V.......
   17a20:	ff0400d4 ffbc00d6 00a0ffd1 00b0ff36     ............6...
   17a30:	ffd5ffbf ff890085 00180037 002fffc0     ........7...../.
   17a40:	ffd70005 00150014 0057ffb6 0004ffbb     ..........W.....
   17a50:	ff98002b ffb60063 00370009 007cff83     +...c.....7...|.
   17a60:	fff0ffb0 ff69005f ffd90073 008bffb9     ...._.i.s.......
   17a70:	005bff63 ffbdffe7 ff3a0090 ff6400cc     c.[.......:...d.
   17a80:	008c000b 00e7ff07 ffaaff9e ff5800b6     ..............X.
   17a90:	00290041 004aff9e ffd1ffdc ff7d006c     A.)...J.....l.}.
   17aa0:	ffc90069 004effde 004eff9f 0029ffc3     i.....N...N...).
   17ab0:	0036ffd1 0014ffc5 ff3d0062 fffe00b0     ..6.....b.=.....
   17ac0:	0140ff3d 009bfef4 ff4b001a feec0131     =.@.......K.1...
   17ad0:	0039009c 00f5ff3e 0031ff61 ff7e005a     ..9.>...a.1.Z.~.
   17ae0:	ffc90082 0082ffd9 0044ff7b ff710037     ........{.D.7.q.
   17af0:	ffd6008c 00bfffab 004bff4a ff870017     ........J.K.....
   17b00:	ff9f007d 0015002b 004dffaf ffd2ffd5     }...+.....M.....
   17b10:	ff7b0074 002f0024 008eff7a 0003ffa4     t.{.$./.z.......
   17b20:	ff81003b ffaa0071 003e0006 004cff8f     ;...q.....>...L.
   17b30:	ffd7ffe7 ff96005b ffcb0055 0064ffe2     ....[...U.....d.
   17b40:	008dff69 ffa6ffc9 feea00d8 ffc200d7     i...............
   17b50:	00e2ff86 00aaff09 0013ffb4 00030005     ................
   17b60:	ffeffff9 ff8c0039 ff4a00ad 0011007e     ....9.....J.~...
   17b70:	00f3ff5f ffeaff6f fed200d2 ff750111     _...o.........u.
   17b80:	00b8ffe5 00bfff22 000fffa6 00060020     ...."....... ...
   17b90:	0050ffd1 0040ffa9 ffcefff5 ff74007d     ..P...@.....}.t.
   17ba0:	0031004a 0098ff72 ffcdffb1 ff680079     J.1.r.......y.h.
   17bb0:	0003005c 0086ffa0 000bff8c ff870047     \...........G...
   17bc0:	000a004b 006fffa0 ffdfffcc ff8f0066     K.....o.....f...
   17bd0:	ffe1004b 0036ffde 0013ffcd ffe70009     K.....6.........
   17be0:	00110012 0020ffdd ffc7fffe ffe80031     ...... .....1...
   17bf0:	0013fff9 fff2fffa 00020013 003bffd1     ..............;.
   17c00:	ffe9ffd6 fffa0024 0059ffd0 ffeaffc7     ....$.....Y.....
   17c10:	ff9e0057 0013002b 0014ffd3 fff40007     W...+...........
   17c20:	000a000b fff30003 00050007 0016fff1     ................
   17c30:	fff0fff6 ffee001d 0016000c fff1fff2     ................
   17c40:	ffd20024 00170011 000dffde fffa0009     $...............
   17c50:	000bfff9 ffd60007 fffc0014 0046ffcf     ..............F.
   17c60:	fff2ffde ffb80033 0016001f 002bffcf     ....3.........+.
   17c70:	ffdafff6 fff60033 005cffdb 0014ffa7     ....3.....\.....
   17c80:	ff6b004c ffb1009b 008fffd1 006cff57     L.k.........W.l.
   17c90:	ff940010 ff910091 00480004 0081ff88     ..........H.....
   17ca0:	0021ffa6 ffca000e ffef003a 008cffb9     ..!.....:.......
   17cb0:	0033ff63 ff3a0059 ff9b00c1 0046fff7     c.3.Y.:.......F.
   17cc0:	000cffbf ff92003c 00030055 00e5ff75     ....<...U...u...
   17cd0:	0030ff54 ff660061 ffe80077 0067ffcd     T.0.a.f.w.....g.
   17ce0:	fffbffb2 ff980053 00000049 0000ffed     ....S...I.......
   17cf0:	ffe80014 00040008 ffe40007 00050011     ................
   17d00:	0025ffe6 0014ffda 0000ffe9 ffe4000b     ..%.............
   17d10:	ffe70019 000ffffa 0010ffe7 fff30001     ................
   17d20:	0003fffc 0003fffd 000d0007 001effe6     ................
   17d30:	0006ffef ffcd0014 ffea0020 0023ffea     ........ .....#.
   17d40:	ffeefff3 ffd50034 0042fff6 0044ff92     ....4.....B...D.
   17d50:	ffa50004 ff92007e 002f002c 0082ff8c     ....~...,./.....
   17d60:	000bff9a ff880050 0007005a 0057ffb6     ....P...Z.....W.
   17d70:	ffffffdd ffd10023 ffaf003f ffb3004d     ....#...?...M...
   17d80:	0001003b 0058ffd2 001dffb0 ffe0001a     ;.....X.........
   17d90:	00210001 0016ffd1 0028fff0 001affd7     ..!.......(.....
   17da0:	00010000 003cffda ffe2ffd9 ffb5004b     ......<.....K...
   17db0:	00120017 001cffe2 fff9fff3 ffe3000f     ................
   17dc0:	fff30014 0015fff5 0017ffe8 000affe9     ................
   17dd0:	ffd10012 fff40033 003affe8 0000ffd8     ....3.....:.....
   17de0:	ffbf002d fffb0020 002bffd8 001fffcf     -... .....+.....
   17df0:	ffde000a ffd90031 00010006 000effef     ....1...........
   17e00:	0017ffe7 fff9fff9 fff30015 0011ffe9     ................
   17e10:	ffe2ffee ffd60028 000d001a 0044ffe7     ....(.........D.
   17e20:	002effbd ffc60007 ffe10040 0034ffe5     ........@.....4.
   17e30:	fff0ffe9 ffc80044 003e0004 0052ff94     ....D.....>...R.
   17e40:	ffaffffb ffb8006d 003b0005 003dffc1     ....m.....;...=.
   17e50:	ffe3ffee ffd30040 004ffff4 fffeffba     ....@.....O.....
   17e60:	ff8d0055 00230046 0060ff9c ffcaffe2     U...F.#...`.....
   17e70:	ffca004b 001b0003 000fffce ffeefff5     K...............
   17e80:	fff50011 0003000f 0011ffed fffdffec     ................
   17e90:	ffe0001a fff70008 0014ffe8 0007ffff     ................
   17ea0:	ffed000d ffe5000b fff0001d 0027ffeb     ..............'.
   17eb0:	000affe6 fffd000f 0009fff8 ffdfffea     ................
   17ec0:	ffe0001d 001cffff fffeffe5 ffe5001b     ................
   17ed0:	fffc0019 000affe9 000dffe4 fff2000d     ................
   17ee0:	fffd0025 0024ffe0 fff9ffe1 ffd7001a     %.....$.........
   17ef0:	fff4000d 001efff6 fffffff5 ffe2001f     ................
   17f00:	00150006 0018fff8 0057ffdf 001cffc3     ..........W.....
   17f10:	ff9c003e fffb004a 003effd0 fff0ffee     >...J.....>.....
   17f20:	fff10011 0000000b 0000ffed 0000ffcf     ................
   17f30:	fff8000a fff40037 0005fff8 0013ffdf     ....7...........
   17f40:	ffec0010 ffee0007 001dffe8 000f000a     ................
   17f50:	fff6000e fff8ffda ffe3000a 0016000f     ................
   17f60:	0031ffdd 0007ffef ffb30021 ffb20025     ..1.....!...%...
   17f70:	0047fff5 0050ffbc ffbb0012 ffd70043     ..G...P.....C...
   17f80:	0039ffe5 0004ffc0 ffda000c 001b003d     ..9.........=...
   17f90:	001e0010 ffe4ffe6 ffedffea ffe20013     ................
   17fa0:	fff30019 0035ffe5 fffeffe0 ffb1002f     ......5...../...
   17fb0:	001f000e 0074ffbd 0037ffc5 ff810049     ......t...7.I...
   17fc0:	ffa20098 006cffe6 0035ff94 ffb00025     ......l...5.%...
   17fd0:	fff90030 0029ffe9 ffe5ffcf ffd9ffd6     0.....).........
   17fe0:	000d002a 00120037 ffefffe7 0009ffdb     *...7...........
   17ff0:	ffe9001b ffe60003 0025ffec 0022000f     ..........%...".
   18000:	ffdb000a ffddffd5 0009ffff 0034fffc     ..............4.
   18010:	fffe0005 00080016 0007ffdd ffbfffcb     ................
   18020:	00060017 00480016 ffef000a ffdffff7     ......H.........
   18030:	0006ffdd 0000fff1 0003000f 002d002b     ............+.-.
   18040:	00230010 ffd7ffe1 fff2ffe1 00120010     ..#.............
   18050:	00090012 fff4fff2 fff5ffed 000efff8     ................
   18060:	001affe2 fffc0015 ffe60044 fff5004e     ........D...N...
   18070:	005affb8 000dffa9 ffc80063 0001003d     ..Z.....c...=...
   18080:	fff9ffa5 fff3fff9 0000000c ffcbffcf     ................
   18090:	0012ffff 0035002c ffe0fff6 ffd4ffdb     ....,.5.........
   180a0:	00350015 fffbfff9 ffdbfff5 00090021     ..5.........!...
   180b0:	000a0019 ffd1ffc5 0003ffea 000c0017     ................
   180c0:	000b0026 000ffff3 fffbffe7 ff9f0004     &...............
   180d0:	0004fff8 0059000a 0008001e ffb9fff3     ......Y.........
   180e0:	ffedffcb 000a000a 001c0009 002a000b     ..............*.
   180f0:	000a001f ffe4000c fff6ffcc 00180013     ................
   18100:	00060033 ffeeffeb ffdaffd5 000b0000     3...............
   18110:	fffb000f 00040032 0013fff9 00040008     ....2...........
   18120:	005dffee 002effa6 ff840051 00230074     ..].....Q...t.#.
   18130:	0023ff96 ffb1ffc8 00150027 00420003     ..#.....'.....B.
   18140:	ff9cffda 0006ffee 0044001c 0000001f     ..........D.....
   18150:	ffaefff3 0039ffd7 ffec0019 fff70006     ......9.........
   18160:	001c0000 0010fffc ffa7fffe 000effc3     ................
   18170:	000e001b 001b0017 fff40002 ffc4ffe7     ................
   18180:	ffb40028 0033ffd0 0072fffa ffd90039     (.....3...r.9...
   18190:	ff9ffffc 000bff96 00430018 00010052     ..........C.R...
   181a0:	0000fffd 000ffff6 00080013 fff1fff7     ................
   181b0:	0034fffb fff20038 ffd1ffdd fff4ffaa     ..4.8...........
   181c0:	0019fffd 0004003a 000bffe8 ffe40001     ....:...........
   181d0:	00000010 ffc90049 0037004e 0076ff96     ....I...N.7...v.
   181e0:	ffc1ffaa ffb40080 002fffe4 ffebffbd     ........../.....
   181f0:	ffda0022 0012ffe8 fff0ffb0 0012004e     "...........N...
   18200:	00150032 fff5ffb1 ffb4ffec 0055003d     2...........=.U.
   18210:	0028ffec ffdd000c ffcb0016 002fffb7     ..(.........../.
   18220:	ffeafff2 001e003b ffd4fff0 ffe8ffd6     ....;...........
   18230:	000b0018 002cffc1 ffb6ffd2 ffee0046     ......,.....F...
   18240:	003d002c ffeaffa7 ffe3000e 004a003e     ,.=.........>.J.
   18250:	0019000f ffe40014 003b0022 0012fff4     ........".;.....
   18260:	ffec0006 fff8002b 0006ffe9 ffb2ffc2     ....+...........
   18270:	ffedffe7 00040003 fffeffda fffb0007     ................
   18280:	00110025 fff8001b 0012000e 0026002e     %.............&.
   18290:	0048fff5 0013ffeb ffc30024 fff4001d     ..H.....$.......
   182a0:	fff7ffdd ffd3fff7 fff0ffcb 002cffee     ..............,.
   182b0:	ffc9001b ffc5ffdb 0013ffd2 00540034     ............4.T.
   182c0:	ffc60016 fff3ffc7 0042001a 001d003f     ..........B.?...
   182d0:	ffc8ffe4 001cffd9 0019003b ffde0004     ........;.......
   182e0:	ffb1ffa9 0013ffe8 0025002d ffc9ffe5     ........-.%.....
   182f0:	ffb8ffc2 0015ffe9 005a0008 00040043     ..........Z.C...
   18300:	ffed0017 0011ffee 003c001c 0032006d     ..........<.m.2.
   18310:	0009fff9 ffeaffea 0010000f fff00007     ................
   18320:	ffb6ffc1 ffe8ffee ffedffe1 ffd2ffd9     ................
   18330:	fff4ffe2 002b0022 000a001f 0004fffb     ....".+.........
   18340:	001e000e 00520046 000a0039 000afff2     ....F.R.9.......
   18350:	001fffdf 00020032 ffac0008 ffebffae     ....2...........
   18360:	fff9ffec ffe2fffe ffcdffad 0016ffe2     ................
   18370:	ffd70049 ffeeffdc 0033ffd7 00400058     I.........3.X.@.
   18380:	ffcf0024 fff1ffa5 0050004d 001d004a     $.......M.P.J...
   18390:	ff9bffaa ffe9ffb5 00500045 ffc70003     ........E.P.....
   183a0:	ff88ff98 0020ffce 005e0037 ffcd002b     ...... .7.^.+...
   183b0:	ffd2ffc3 0035fffe 0061004e 00190051     ......5.N.a.Q...
   183c0:	ffc9ffe1 0028000f 005b002d fffb0034     ......(.-.[.4...
   183d0:	ffa6ffcb 000bffc9 00170011 ffce0006     ................
   183e0:	ff8fff93 fffdffd0 00280027 fff60002     ........'.(.....
   183f0:	ffd1ffd0 0026000a 00350042 00210028     ......&.B.5.(.!.
   18400:	001e0019 0025002c fff8000e 0006fffb     ....,.%.........
   18410:	001b0004 fff90026 ffa9ffc9 ffd3ffad     ....&...........
   18420:	0006ffe6 0008001a ffb9ffce ffefffe3     ................
   18430:	001e0006 0027001f ffe4ffff 00140009     ......'.........
   18440:	00100007 0014001a fffa000f 0006fff8     ................
   18450:	ffd1ffe8 fff8ffed 000dfff8 fff30003     ................
   18460:	ffd5ffe6 0011ffe1 001c0022 0014002b     ........"...+...
   18470:	0006ffff 002d0015 00240036 0009000d     ......-.6.$.....
   18480:	0003fffe 00220016 00080019 ffe9ffeb     ......".........
   18490:	ffcfffe3 ffecffe2 fffcfff2 ffe1ffef     ................
   184a0:	ffc7ffda fff4ffc5 00120006 0000001c     ................
   184b0:	fff6fff5 001efff9 0031003e 0010001e     ........>.1.....
   184c0:	fffdfff6 002c0027 001c002c ffdbffeb     ....'.,.,.......
   184d0:	ffecffe8 0024000e ffe7fff6 ffd2ffe3     ......$.........
   184e0:	fff9ffe8 fffffff4 ffcdffea fff5ffdc     ................
   184f0:	fff7ffda fff10002 ffe70008 fffcffe4     ................
   18500:	fff4ffe8 00220021 00040017 ffeffff0     ....!.".........
   18510:	000d0003 003b002b fffc0015 00010001     ....+.;.........
   18520:	00200011 0022001b ffea000a 000e0001     .. ...".........
   18530:	00090002 00090003 fff90012 0009fff7     ................
   18540:	ffe1ffee 000efffd 000d000e ffeafff2     ................
   18550:	ffdffff3 0013fff0 ffebffff fff1fff7     ................
   18560:	000dfffc fffefffb ffe3fff8 001effff     ................
   18570:	0003000d fff00002 0007fff4 00210016     ..............!.
   18580:	fff0000f 0011fffe 0011000c 000e0019     ................
   18590:	fff9fff9 00240011 fff0000b ffe8ffe7     ......$.........
   185a0:	fff5ffe6 00100012 ffc5fff0 ffddffc8     ................
   185b0:	ffecffda 00020009 ffdeffe7 fff4ffe0     ................
   185c0:	ffeffff4 001b000d 00080009 00150018     ................
   185d0:	00080006 002e001d 0007001e 00120012     ................
   185e0:	0004fff9 0023001c ffee000a 0002ffef     ......#.........
   185f0:	fffcfffb 00120011 ffddfff5 fffcffe8     ................
   18600:	fffe0003 00090003 ffe4fff2 fffbfff1     ................
   18610:	fffbfffd 00070000 fff50000 0003fffd     ................
   18620:	fff6fff9 0005fffe ffffffff 000d000d     ................
   18630:	fffe0003 00090006 fffe0003 0013000e     ................
   18640:	fffc0000 0006000a fffefffa 00050001     ................
   18650:	ffe9fffd fffffff5 ffefffe9 fff70000     ................
   18660:	ffeaffec fff5ffe9 fff2fff9 0000fffd     ................
   18670:	fff2ffee 00070008 000e000e 000b000a     ................
   18680:	00060004 0020001b 00130015 0005000b     ...... .........
   18690:	00050003 00170015 00010009 fff3fffc     ................
   186a0:	fff4fff1 0002fffb fffb0001 fff3fff5     ................
   186b0:	fff0ffec fffdfff5 00070005 fff5fffd     ................
   186c0:	fff6fff1 fffafff2 00070003 00000005     ................
   186d0:	00020000 fff6fffd 0003fffb 000b0008     ................
   186e0:	000a000c fffa0005 0006fff7 0011000c     ................
   186f0:	000a0013 ffff0004 fff9fff7 00040004     ................
   18700:	00090005 fffc0002 ffe8fff3 fff4ffef     ................
   18710:	0002fff4 fff60004 ffdfffec ffecffe0     ................
   18720:	0004fff5 00030010 fff0fff5 fff5ffee     ................
   18730:	00120005 001a001b 000a000c 00000007     ................
   18740:	00100006 00170015 00100015 0000000e     ................
   18750:	fffdfff5 0000fffe 00050009 ffff0002     ................
   18760:	fff1ffef fff5fff8 000d0001 00050006     ................
   18770:	ffeeffff fff6fff3 0008fff6 0001000a     ................
   18780:	fff5fffc fff6ffed fffafff9 00050009     ................
   18790:	00050000 fff8fffe fffdffff 000e0001     ................
   187a0:	00080009 fffe0007 0001fffb 00090001     ................
   187b0:	0001000a fffe0001 0001fff9 fffe0001     ................
   187c0:	fffafffe fff8fff7 fffafffb fffdfffe     ................
   187d0:	fffcfffa fff9fffa 00000000 00030002     ................
   187e0:	0001ffff 00010005 00080002 00020004     ................
   187f0:	00030003 00020003 fffdfffb fffc0001     ................
   18800:	0000fffd fffaffff fff1fff5 fffafff8     ................
   18810:	00060000 00040006 fff3fffb fffefff6     ................
   18820:	00080003 00020008 fffafffa 0000fffc     ................
   18830:	00020005 00010001 00030000 00010005     ................
   18840:	fffafffc 0002fffe 000a0006 00030007     ................
   18850:	fffbfffc 00080002 00050009 00000005     ................
   18860:	fff8fffa 0000fffa 00000003 00010002     ................
   18870:	fff6fffc fffffff6 00090005 00030006     ................
   18880:	fff1fffb fffafff2 00060005 00020006     ................
   18890:	fff3fff9 fffdfff5 000a0005 00080009     ................
   188a0:	fffa0003 fffffff8 00060002 000c000a     ................
   188b0:	fffd0004 fff8fff7 fffcfffb 00060000     ................
   188c0:	fff90000 fffafff8 fffafffa 0000fffa     ................
   188d0:	fffb0000 fffffffd fff8fffc fffcfffa     ................
   188e0:	ffff0001 fffdfffb fffafffd 00050002     ................
   188f0:	00000004 fffcfffe 0002ffff 00090004     ................
   18900:	00030007 00040004 00040002 00040004     ................
   18910:	00010004 00060002 ffff0001 00010002     ................
   18920:	fffdffff fffffffc fffdffff ffffffff     ................
   18930:	fff9fffc fffafff8 fffefffd 0002ffff     ................
   18940:	ffff0002 00040001 00070005 00020003     ................
   18950:	fffe0003 0005ffff 00010007 fff8ffff     ................
   18960:	fff9fff7 0002fffb 00010006 fff8fffa     ................
   18970:	fff7fff6 0001fffc 00000005 fffafffb     ................
   18980:	fffafffc 0000fffe ffff0003 fffdfffe     ................
   18990:	ffff0001 fffafffb fffdfffb 00050000     ................
   189a0:	00020006 fff7fff7 fffefff8 00060004     ................
   189b0:	00000004 fffafff9 00040000 00080007     ................
   189c0:	00020005 00020001 00060004 00030004     ................
   189d0:	00010004 00000000 fffe0000 ffffffff     ................
   189e0:	fffe0000 fff9fff9 fffafff7 0002fffd     ................
   189f0:	00020003 fffafffc fffdfffb 00040000     ................
   18a00:	00020004 0000ffff 00030001 00000000     ................
   18a10:	00010001 00040002 00030003 fffc0000     ................
   18a20:	fffffffd 0001fffe 00010000 fffe0000     ................
   18a30:	fffbfffc fffffffc 0002ffff fffbffff     ................
   18a40:	fff7fff9 0000fffb 00020003 fffaffff     ................
   18a50:	fff9fff8 0002fffe 00010005 fffe0001     ................
   18a60:	fffcfffc fffcfffc 0000ffff 00040001     ................
   18a70:	ffff0003 ffffffff 00020001 00070005     ................
   18a80:	00050006 00030001 00020000 00030002     ................
   18a90:	00040006 00000000 fffbfffe fffdfffc     ................
   18aa0:	ffff0000 fffdfffe fffbfffd fffffffa     ................
   18ab0:	ffff0000 fffe0000 ffff0000 fffcfffd     ................
   18ac0:	00020000 00050004 00030004 00020002     ................
   18ad0:	00030003 00020002 00050004 00040005     ................
   18ae0:	fffdffff fffdfffc 0001fffd 00030000     ................
   18af0:	fffefffd fffcfffc fffdfffe fffd0001     ................
   18b00:	fff70007 000bfffa 0001ffed fffb0007     ................
   18b10:	0002000b fff1fff5 000ffff7 000c000b     ................
   18b20:	ffe40008 ffedffdc 00210010 fffe001f     ..........!.....
   18b30:	ffcdffdb 0017ffe7 0029002d ffd40009     ........-.).....
   18b40:	ffeaffcd 002b0019 fff80020 ffe0ffe7     ......+. .......
   18b50:	000afff8 000c0013 000f000c ffeefff2     ................
   18b60:	ffdaffe9 002c0006 00080014 ffe0fff0     ......,.........
   18b70:	fff5ffe4 001b000e 000e0018 ffd1ffec     ................
   18b80:	000bffe9 0027002e ffe90004 fff0ffd0     ......'.........
   18b90:	00210018 000d001f ffd7ffe3 001afff9     ..!.............
   18ba0:	0018000f fff7fffe ffeffff1 fffd0001     ................
   18bb0:	00110003 000e0007 ffd7fff0 001cffe3     ................
   18bc0:	fffe0030 0003ffe1 00040014 fff6fffd     0...............
   18bd0:	0011fff8 00050012 ffe70001 0003ffe1     ................
   18be0:	00250032 ffb9ffe1 000dffe6 00030015     2.%.............
   18bf0:	fff70004 0005fff5 001a0017 ffe9ffec     ................
   18c00:	0010fff7 ffea002a 0008ffd6 00180015     ....*...........
   18c10:	ffe9fff3 fff40000 0003fff7 fffb0005     ................
   18c20:	00000009 0002fff9 fff0ffde 001a0023     ............#...
   18c30:	ffdb0001 001efff1 ffff0015 ffe9ffef     ................
   18c40:	0005fff6 000f000d ffe60002 000afff5     ................
   18c50:	001a001b fff1fffa 0000fffd 00010002     ................
   18c60:	000c000e fff1fff2 fff8fff6 000ffff3     ................
   18c70:	000cfff7 ffebfff7 0011fff6 000c0014     ................
   18c80:	ffe7fff8 ffebfff6 00190007 fffb0007     ................
   18c90:	ffd5fff2 001f0015 0000000f 0005fffb     ................
   18ca0:	00000000 000f000f 00070005 fff5fff1     ................
   18cb0:	0001fff9 fffc0009 fff8fff8 0010ffec     ................
   18cc0:	fff4000e ffebffe7 0020001b ffd90015     .......... .....
   18cd0:	ffe3ffdb 002e000a fff60011 ffeafff5     ................
   18ce0:	00290000 fffa000c fffaffec 000c0005     ..).............
   18cf0:	00000005 fff4fffe 0009fffa 00050014     ................
   18d00:	ffe30001 000bfff1 00070010 fff80003     ................
   18d10:	fff7fff3 0024000c ffec0007 fff5fff0     ......$.........
   18d20:	00160005 ffe40013 0002ffe8 00050003     ................
   18d30:	0000000c ffeeffdb 00030011 0002fff8     ................
   18d40:	fff90005 0015fff0 000e0010 ffff000e     ................
   18d50:	fff6ffde 000d0026 ffe1ffef ffd7fff7     ....&...........
   18d60:	0024000a fffbffff ffe9fff8 00160011     ..$.............
   18d70:	fffd0019 0001ffee 0006fffd 0009fff9     ................
   18d80:	fff6fffd 0002ffe1 ffe5001f 000fffe4     ................
   18d90:	0011fff9 ffff0003 fff9ffe3 00000009     ................
   18da0:	00130000 ffe8fff6 00180005 fffa0001     ................
   18db0:	000e0018 ffdb000b 001dffe9 00100017     ................
   18dc0:	ffe1ffde 00190000 0011001c fff2ffd8     ................
   18dd0:	0018fffa fff6001f ffe2ffd6 001a0030     ............0...
   18de0:	ffd8000f fffcffe6 fffb000d 000a0008     ................
   18df0:	ffda000a 0006fffe 001f0001 fff8fffd     ................
   18e00:	fffbffe7 000efffa fff30015 0008ffe5     ................
   18e10:	0008fff6 ffea0010 0003001c fff4fff3     ................
   18e20:	0019fffc fff30009 fffdfff8 00100007     ................
   18e30:	fff0ffe1 000d000a fffb0004 fff0ffe9     ................
   18e40:	001cfff2 ffe10018 ffdc0016 000bfff6     ................
   18e50:	ffe20030 001dffde 0011fff4 0018000b     0...............
   18e60:	ffe8fff0 0033000c 0036ffdb ffc3ffe5     ......3...6.....
   18e70:	0043fffc ffaf0013 0019fff6 ffe60011     ..C.............
   18e80:	ffeb0015 001cfffe ffc80034 001dffd4     ........4.......
   18e90:	00140017 ffeb0027 fffeff87 00430062     ....'.......b.C.
   18ea0:	ffa6ffcc 0036ffde 00060055 ffbcffc3     ......6.U.......
   18eb0:	002e0006 00090024 ffbfffec 0039ffde     ....$.........9.
   18ec0:	fff70055 ffd5ffab 002a0020 ffff001a     U....... .*.....
   18ed0:	ffdcffdd 00140008 fffe000f fff0ffeb     ................
   18ee0:	0030ffef ffe00001 0022000b ffd9001a     ..0.......".....
   18ef0:	000fffd0 00230028 ffc5fff6 000bffe2     ....(.#.........
   18f00:	0009002e ffd5fff9 0023ffe6 0008001c     ..........#.....
   18f10:	ffe7ffe8 000a0004 fffb001c 0002ffed     ................
   18f20:	00050003 000bfffb 00060003 fffcffff     ................
   18f30:	fff0fff4 000d0010 fffdffed fff1ffed     ................
   18f40:	0009fff8 fff6001c ffebfff4 0015fffa     ................
   18f50:	00150014 ffe2ffe8 00130001 ffff001a     ................
   18f60:	fff7ffe8 001ffffe fffa000c fff6ffe5     ................
   18f70:	000e001a fff50007 ffeeffe6 001e000d     ................
   18f80:	ffe7fff7 000cfff7 ffe40011 0006fff3     ................
   18f90:	00050010 0000fff3 0004fff6 00030015     ................
   18fa0:	ffffffff fff6fffb 00110006 fff7fff4     ................
   18fb0:	00180005 ffe7fff4 00070011 fff6fff4     ................
   18fc0:	00090007 ffeaffe1 0013fffc fff20005     ................
   18fd0:	fff30006 00050011 00010004 0007fffd     ................
   18fe0:	0012fff9 ffed0017 fff8ffe1 0008001f     ................
   18ff0:	fff1fff4 000cfffb 0015fff7 fff6000c     ................
   19000:	fff0ffeb 00150018 ffecfff8 0016fff0     ................
   19010:	fff60008 0011fff6 ffe10014 000efff6     ................
   19020:	fff20014 0000fff9 0008000a 0007ffe9     ................
   19030:	fff60009 fff9fff9 000f001c fff8ffe7     ................
   19040:	001efff5 ffdc000b 0031ffec ffce0027     ..........1.'...
   19050:	000dffce 00040024 0000ffe4 fff1fff5     ....$...........
   19060:	ffff0009 fffc001c fff5ffd0 00330026     ............&.3.
   19070:	ffbdffea 0032fff4 ffef0020 fff80000     ......2. .......
   19080:	fff0fff4 003e0009 ffc80005 0017ffdf     ......>.........
   19090:	fff60032 fffeffe0 0001000f 0009ffe7     2...............
   190a0:	00040010 ffebffea 00110023 ffe5ffe2     ........#.......
   190b0:	001c000f ffedffef 000c0010 ffdeffee     ................
   190c0:	000b0007 00020008 fff8fff0 fffaffff     ................
   190d0:	00150004 ffeefffa 0017fff1 fffa001f     ................
   190e0:	fff8ffdc 00140017 ffe60011 fff6fffd     ................
   190f0:	000ffffd fff20013 0008fff2 000efff7     ................
   19100:	fffffff0 fff2000c 00170014 fffdffe6     ................
   19110:	0018ffee ffe00015 fffd001c 0002ffe7     ................
   19120:	0015fffc fff00006 fff0fff7 000d000d     ................
   19130:	ffe6ffff 002afff7 fff6ffe8 fff0fff3     ......*.........
   19140:	0010001a fff7001f ffe8ffca 003a0007     ..............:.
   19150:	fff80023 ffbfffc7 00280043 ffe80008     #.......C.(.....
   19160:	0014ffbc 00180010 ffc50018 000dfff2     ................
   19170:	0039001d ffc8ffe0 000bffee 000b001f     ..9.............
   19180:	0002fff0 fff60021 fff5ffe0 001f000c     ....!...........
   19190:	0001ffea fff80013 fff3fff3 00100001     ................
   191a0:	ffeafff8 00160007 ffec0000 fffffff7     ................
   191b0:	fff1000e 000a0018 ffe60000 001efffc     ................
   191c0:	ffff0010 fff6ffdc fffe002d ffe4ffef     ........-.......
   191d0:	0009ffed 0024fff0 fff4fff2 ffffffec     ......$.........
   191e0:	fff60017 fff8fff6 0047ffff ffefffe7     ..........G.....
   191f0:	00080000 ffe0002f ffef0021 fffeffdd     ..../...!.......
   19200:	0030ffea ffcd0003 ffc7fff2 0005003b     ..0.........;...
   19210:	0014fffd 0001ffe5 0001ffca 00200044     ............D. .
   19220:	ffd3000c 0014fff4 00210008 0005fffe     ..........!.....
   19230:	fffaffcf 00290031 ffa00006 0036ffe4     ....1.).......6.
   19240:	00220028 ffc8ffca fff0ffeb 00110011     (.".............
   19250:	0003001d ffe3ffd2 00250011 0009ffe7     ..........%.....
   19260:	00180015 ffda001b fffd0026 fff80002     ........&.......
   19270:	001dfff4 ffe10008 ffe1fffd ffda0023     ............#...
   19280:	0003ffdb 0054ffe1 0032ff94 fff8fff9     ......T...2.....
   19290:	fffb0028 0016000f 0017ffeb 00100009     (...............
   192a0:	ffcf0024 fff5fffc ffd70013 ffcd000c     $...............
   192b0:	ffc5ffe9 0021ffcd 001f000d 000b0000     ......!.........
   192c0:	002a0033 000b0022 001a001a 0006001f     3.*."...........
   192d0:	fff50004 ffd8ffac ffd5ffe0 ffc7001b     ................
   192e0:	fff8ffde 0017ffcc 000dffef 0018004e     ............N...
   192f0:	ffe70014 0015fff8 006e0008 ffed0021     ..........n.!...
   19300:	ffc2ffe8 003dfff8 0008002f ffddffc0     ......=./.......
   19310:	0011000d 0010001f ffabffc1 000dfffd     ................
   19320:	ffdd001b fffbffc0 00460043 ffc5000f     ........C.F.....
   19330:	ffeaffdb 001affe3 002a0033 ffdd000a     ........3.*.....
   19340:	0013fff7 0020fff7 001dfffd ffd6001b     ...... .........
   19350:	000b0037 0004fffc 0002ffdc fff6fffe     7...............
   19360:	0010ffdd ffc00011 ffe7ffe8 fffcffec     ................
   19370:	ffffffb7 00370019 fff8002c 00200025     ......7.,...%. .
   19380:	0012001b 0006000c ffeaffe7 fff6ffe4     ................
   19390:	ffbdffe8 ffdcffd9 ffe4ffe0 ffeeffcf     ................
   193a0:	00020022 003a0029 00760017 001e0059     "...).:...v.Y...
   193b0:	fffa007c ffde002f 0054ffdb fffaff64     |.../.....T.d...
   193c0:	ff63ffb9 ff81002d 0017ffe4 0025ff99     ..c.-.........%.
   193d0:	004affc6 0055007e ff960054 ffed0014     ..J.~.U.T.......
   193e0:	0087000a 00760093 ff50ff60 fffbfff6     ......v.`.P.....
   193f0:	ffdd0031 fffcfff3 0006ffb4 0030ffe1     1.............0.
   19400:	ff75ffd4 001afff0 ffc00027 006eff98     ..u.....'.....n.
   19410:	007500b2 ffdd002a ff92ffb7 ffdeff68     ..u.*.......h...
   19420:	006e0054 002f006a ffe50020 ff98ff7b     T.n.j./. ...{...
   19430:	0069ffe4 0017001d 00490036 ff82004f     ..i.....6.I.O...
   19440:	0013001d 0030ffa5 0038ffa0 ff85005e     ......0...8.^...
   19450:	ff8fffe9 ffb0ffa8 0023ff78 00b50055     ........x.#.U...
   19460:	00610085 ffe80066 ffa6ffda 0005ffd6     ..a.f...........
   19470:	0008ffd1 fff8ffd9 ffc2fff8 ffecffde     ................
   19480:	ffbfffec 0018ffcc 005d0074 00680049     ........t.].I.h.
   19490:	00890057 0020004b ffc8006b ff34ffe6     W...K. .k.....4.
   194a0:	005bffb7 ffeafef0 ff84ff7c ff7d0076     ..[.....|...v.}.
   194b0:	0039006a 0004ff79 00c7ff94 008200eb     j.9.y...........
   194c0:	ff26000a 00090045 00830053 007e0098     ..&.E...S.....~.
   194d0:	fee8fe6d 002f006f fedf0022 003bffd2     m...o./.".....;.
   194e0:	ffb1ff27 00e40045 ff1bffd1 006c0036     '...E.......6.l.
   194f0:	ff760021 01960021 0036011c ffd2ff55     !.v.!.....6.U...
   19500:	fec3ffe2 006dff06 007f00c8 0065001b     ......m.......e.
   19510:	ffc4006a ff89ff27 006b0048 ffc8ffdf     j...'...H.k.....
   19520:	00c90085 ffd60035 00520020 ff3fffaf     ....5... .R...?.
   19530:	0053ffb6 ff84001d 0045ffdd ff65ffc0     ..S.......E...e.
   19540:	0038ff73 00190071 0050004e ffe20027     s.8.q...N.P.'...
   19550:	0029ffaf ffa2000f ffbaff90 00100008     ..).............
   19560:	00690042 ff8bffee ff72ff6e 0028ffe5     B.i.....n.r...(.
   19570:	00af00c2 007e006e 009e0082 fffe0052     ....n.~.....R...
   19580:	ff76ffea ff83ff9c 0009ffd6 ffd6ff61     ..v.........a...
   19590:	0029ff16 ff5b003c ffa900ac 00af003f     ..).<.[.....?...
   195a0:	00d5ffad 0020005e fffb0065 000a00f5     ....^. .e.......
   195b0:	ff76ffa1 fff9ff64 ffbaff49 ff88ffc7     ..v.d...I.......
   195c0:	feefff5b 0026fff0 003cffe1 00ad002a     [.....&...<.*...
   195d0:	00620050 009d00cf 000e00c0 ffc9ff85     P.b.............
   195e0:	ffcaffbb 0073ffe1 ffd60098 ff42ff49     ......s.....I.B.
   195f0:	ffb6ffab 001cff8b 0074009b 007d0077     ..........t.w.}.
   19600:	006d00a2 ffc7ffc3 000fffea 000f0036     ..m.........6...
   19610:	00380020 ffc60011 ff73ff7c ff7fff8f      .8.....|.s.....
   19620:	001bff65 0053006b ff850047 ffc1001e     e...k.S.G.......
   19630:	0022ff27 00030028 ffec0011 003c0054     '.".(.......T.<.
   19640:	00220010 ffe30021 0001ffb9 00520013     ..".!.........R.
   19650:	00500054 ff8c0038 ff84ff87 ffc8ffa9     T.P.8...........
   19660:	0063ffe5 008a0054 008e00a4 000800b9     ..c.T...........
   19670:	ffceffc2 ff9fffb3 0015ff82 000dffde     ................
   19680:	fff2ffa1 ff2c006e ffb8fffe 00d5ffbb     ....n.,.........
   19690:	006affbc ffec00a6 ffce008b ffe30022     ..j........."...
   196a0:	ff60ff45 002fff3f ffe40009 ffcb0028     E.`.?./.....(...
   196b0:	ff85ffd8 0069ffc4 0038003d 008f0045     ......i.=.8.E...
   196c0:	00450069 003d005d 000d0060 ffaaffb7     i.E.].=.`.......
   196d0:	ffadff9a 0002ffba 00070038 ff5cffa3     ........8.....\.
   196e0:	0009ffc0 00690038 009c0081 0061005b     ....8.i.....[.a.
   196f0:	00630064 ffc50044 ffc9ffaf ffd9ffd3     d.c.D...........
   19700:	ffdaffab ffb2ffe0 ff82ff9d ff95ffaa     ................
   19710:	ffd8ff88 007a0017 001c003d 00160040     ......z.=...@...
   19720:	ffeb0011 001afffb ffd6ffcd 0035fff5     ..............5.
   19730:	0047005b 001d0067 ffbaffee 0015ffb1     [.G.g...........
   19740:	00490027 ffd80038 ff9fffeb ffdfffa9     '.I.8...........
   19750:	0018ffe1 00690025 00ad008e 004200c3     ....%.i.......B.
   19760:	ffb70014 ffbfff9c fff9ff68 ffdfffab     ........h.......
   19770:	ff47ffe5 ff820076 0058ff58 005eff6b     ..G.v...X.X.k.^.
   19780:	ffb50031 ffef00b4 003b0020 004d0037     1....... .;.7.M.
   19790:	fffdffbb ffb9ff9a ffbffff8 ffee0041     ............A...
   197a0:	0001ffe8 ffe3ffb7 0039ffe0 002e001e     ..........9.....
   197b0:	00290045 006a00ab 0086004c ff77fff2     E.)...j.L.....w.
   197c0:	ffc2ff2f fff20010 004e005e ffb5003b     /.......^.N.;...
   197d0:	fff6ff62 ffd1fffb 0019ffd9 00800085     b...............
   197e0:	00a200a2 00190077 ff80ff91 ff9aff83     ....w...........
   197f0:	ff67ff7d fff7ffd5 ffe7fffb ffcfffd3     }.g.............
   19800:	ff6fff91 006cffd0 003b0075 007a0060     ..o...l.u.;.`.z.
   19810:	0022005c 0003fff0 ff76ffba fffaff9b     \.".......v.....
   19820:	00310030 00280033 ffec0005 0031fffc     0.1.3.(.......1.
   19830:	00210043 0024001b ffff0004 ffdd000e     C.!...$.........
   19840:	ffa1ffbd fff6ffc6 005f0018 009f0082     .........._.....
   19850:	0009004e ff9b0028 ff88ffac 0015ffa7     N...(...........
   19860:	0030ff56 ffa1fff7 ff71005e 002e0000     V.0.....^.q.....
   19870:	0045ff84 003cffd9 0042009c 00260071     ..E...<...B.q.&.
   19880:	ffa3002d 0014ff98 fff7ffe5 ffbbff85     -...............
   19890:	ff8d0006 00380002 ffd9003c 0007ff99     ......8.<.......
   198a0:	00500003 0075004b 002e00cf 001a0029     ..P.K.u.....)...
   198b0:	ffccffe3 ffefff79 0010001a ff95fff0     ....y...........
   198c0:	ffaaffcd 0020ffbb 007a002d 005b0072     ...... .-.z.r.[.
   198d0:	00900096 001a007d ffaaffb9 ff75ff85     ....}.........u.
   198e0:	ffe4ff98 ffb2fff4 ffb3ffa9 ffaaffc3     ................
   198f0:	fffcffa4 003e0015 0030002c 004e007a     ......>.,.0.z.N.
   19900:	0050003e 000c003c ffa6ffa2 ffcaffbd     >.P.<...........
   19910:	ffffffdd 0020004c 0026001a 00150017     ....L. ...&.....
   19920:	ffe2ffd2 ffd3fffa fffaffef fff80017     ................
   19930:	0027ffef 00440016 002b002e 002f0086     ..'...D...+.../.
   19940:	001e0020 ffeeffd3 ff96ff9c ff76fff5      .............v.
   19950:	ffe2ffd8 0043ffa0 ffe8ffbd ffe3005d     ......C.....]...
   19960:	fffa0011 006bfff0 004d0032 00490063     ......k.2.M.c.I.
   19970:	ffc5fff1 fff20010 ff94ffd1 ffcbff87     ................
   19980:	ffccff9f 0055003d ffbd0009 fff6ffe1     ....=.U.........
   19990:	003e0035 0099004d 00140047 0001001c     5.>.M...G.......
   199a0:	ffb9fff2 ffe9ffc4 ffdffffa ffeaffbb     ................
   199b0:	ffdcffd5 000dfff1 0046005e 00470031     ........^.F.1.G.
   199c0:	0083005c 0032004b ffd20022 ff8bffaa     \...K.2.".......
   199d0:	ffb8ffb4 ff9dff92 ffc4ffb9 ffcaffbc     ................
   199e0:	ffe5ffd8 0003fffa 00720059 0075005d     ........Y.r.].u.
   199f0:	0057005d ffe80025 ffa9ffd3 ffacff9a     ].W.%...........
   19a00:	0023ffe6 001e0024 000f0007 fff40008     ..#.$...........
   19a10:	fff60004 ffbdffcd fff0ffd1 00110005     ................
   19a20:	00380020 005b0049 00600076 00130042      .8.I.[.v.`.B...
   19a30:	fffffff6 ffc5ffac ff60ffbe ff8fffdc     ..........`.....
   19a40:	0035ffbd 0016ffbc ffd40000 ffe4003b     ..5.........;...
   19a50:	004e002b 0063002e 0061005b 0002fff8     +.N...c.[.a.....
   19a60:	ffe70016 ff7cffe3 ffc5ffab ffdaff73     ......|.....s...
   19a70:	00070007 ffacffc8 00180004 00200031     ............1. .
   19a80:	006f0048 0037002e 00460046 ffe00016     H.o...7.F.F.....
   19a90:	001c001c ffd1fffe ffb2ffa8 ffa5ff96     ................
   19aa0:	fffaffd5 0047002d 003a0038 007b0061     ....-.G.8.:.a.{.
   19ab0:	00300053 002c0030 ffdcfff0 0002ffe1     S.0.0.,.........
   19ac0:	ff71ffc1 ff9affb2 ffa3ff8b ffdeff99     ..q.............
   19ad0:	ffd6ffd8 00360037 0062004d 006e0069     ....7.6.M.b.i.n.
   19ae0:	002b0041 00000013 ffd0ffd1 ffd6ffff     A.+.............
   19af0:	ffeeffd3 0000ffe8 0005ffea ffe30024     ............$...
   19b00:	ffc6ffc6 ffd0ffb7 000cffd5 003c0039     ............9.<.
   19b10:	009f0057 009b00b7 0031006c ffb5ffe2     W.......l.1.....
   19b20:	ff90ff78 ff73ff8a ff8cffcb 004d000e     x.....s.......M.
   19b30:	004a000e ffe3fff4 ff8cffe7 00220020     ..J......... .".
   19b40:	005e0026 00720060 00610032 0019004d     &.^.`.r.2.a.M...
   19b50:	ff3effbd ff78ff8f ffd1ff5d 0008fff4     ..>...x.].......
   19b60:	ffdeffc2 0062003e ffee0047 001a0011     ....>.b.G.......
   19b70:	0015fff3 005d0023 0011002f 004c005e     ....#.]./...^.L.
   19b80:	fff10047 ffb1ffaf ff8bff8f ffdcff91     G...............
   19b90:	001c0023 003b001f 0083008b 0030002d     #.....;.....-.0.
   19ba0:	0007001d ffcaffd3 00150025 ffecffe6     ........%.......
   19bb0:	ffdaffde ff9affbb ffa6ffa8 ffa1ff99     ................
   19bc0:	ffe9ffbc 00290014 007e004d 007c007d     ......).M.~.}.|.
   19bd0:	00280068 fff30004 ffcaffd2 ffe4ffd1     h.(.............
   19be0:	ffdffff2 000effec ffd6fffe ffceffd2     ................
   19bf0:	ffc0ffc4 0024ffe2 00360034 00890065     ......$.4.6.e...
   19c00:	007d0098 00560067 ffd30004 ffa2ffb8     ..}.g.V.........
   19c10:	ff7affb5 ffa4ff8c fff7ffbc 002afff5     ..z...........*.
   19c20:	ffe0000f ffe0fff9 000ffffe 0013000a     ................
   19c30:	0036fff9 006a0045 00500077 ffd2002b     ..6.E.j.w.P.+...
   19c40:	ffb0ffc6 ffa9ff98 ffaaff85 ffd6ffb8     ................
   19c50:	00150020 00160026 00130016 0013ffef      ...&...........
   19c60:	001b001b 00500034 005f007f 00480056     ....4.P..._.V.H.
   19c70:	ffed0010 ffb9ffb5 ffb8ffca ffb8ffb4     ................
   19c80:	ffe4ffda 0029fffd 003d002e 0021002d     ......)...=.-.!.
   19c90:	003b0038 00290039 fff90012 ffbcffd5     8.;.9.).........
   19ca0:	ffa1ffa6 ff86ff95 ffa5ff8f ffe6ffca     ................
   19cb0:	00280002 005b0045 00710067 00490063     ..(.E.[.g.q.c.I.
   19cc0:	00090035 ffe4ffe6 ffddffe0 fffcffea     5...............
   19cd0:	00060009 fffd0000 ffcbffe9 ffc2ffb8     ................
   19ce0:	ffd6ffd5 00340001 005d004b 008a006f     ......4.K.].o...
   19cf0:	004e0078 00080033 ffaeffd4 ffa8ffa0     x.N.3...........
   19d00:	ffa2ffa5 ffd9ffb8 fff6ffe8 0003ffff     ................
   19d10:	fff70004 000b0003 fff90000 000f0000     ................
   19d20:	001d0013 00200025 000c0019 002d001e     ....%. .......-.
   19d30:	fff60013 ffdcffe3 ffc7ffd1 ffd0ffca     ................
   19d40:	ffc6ffce 0008ffdc 001f0017 003b002c     ............,.;.
   19d50:	00320040 003c0030 0014002a 000e0011     @.2.0.<.*.......
   19d60:	fff50002 00080002 fff80000 fff6fffc     ................
   19d70:	ffedffeb 00030004 fff8fff5 fffdfff7     ................
   19d80:	00060001 fffa0013 ffd6ffd8 ffd7ffda     ................
   19d90:	ffccffd0 ffc9ffc8 ffeeffda 00110007     ................
   19da0:	0015000d 00210017 00360031 001a0028     ......!.1.6.(...
   19db0:	000f0013 0008000f fff3fff9 fff2fff0     ................
   19dc0:	001b0008 00170027 fff2fffa fff0fff3     ....'...........
   19dd0:	ffe5ffe7 ffe4ffea ffffffe4 0029001d     ..............).
   19de0:	001f0023 00220023 0017001d fff1000b     #...#.".........
   19df0:	ffd5ffda ffdeffdd ffdfffdb ffe5ffe2     ................
   19e00:	0000fff4 fff90002 ffe1ffe8 ffe7ffe6     ................
   19e10:	fff3ffee ffedffed 0004fff3 00190012     ................
   19e20:	0023001d 00220023 0030002a 00130025     ..#.#.".*.0.%...
   19e30:	00000005 fff8fff7 fffffffe fff5fffb     ................
   19e40:	0006fff9 0010000b 000d000e 00020006     ................
   19e50:	000a0009 fffa0003 ffe7ffee fff8ffea     ................
   19e60:	0008ffff 0008000a 00130013 000b0013     ................
   19e70:	ffecfff9 ffdfffe2 ffe4ffe6 ffdbffe1     ................
   19e80:	ffddffdc fff4ffe8 ffebfff3 ffeaffe4     ................
   19e90:	000afffa 002c0021 002b002c 00300029     ....!.,.,.+.).0.
   19ea0:	00280034 0013001b fffe0008 fffbfffd     4.(.............
   19eb0:	ffecfff5 ffe8ffe5 fff8fff1 fffffffc     ................
   19ec0:	fffafffa fffefff8 00030004 0000ffff     ................
   19ed0:	00140007 001f001c 00190020 fffd000a     ........ .......
   19ee0:	ffedfff6 ffd1ffdf ffcdffcc ffdeffd1     ................
   19ef0:	fff4ffea fff8fff4 0002fffd 000b000b     ................
   19f00:	00070007 00060004 000f000d 00110018     ................
   19f10:	000f000d 00130012 00060010 ffedfffd     ................
   19f20:	ffecffe7 fff5fff1 fffbfff5 00020000     ................
   19f30:	00130009 000b0010 00090006 000d000d     ................
   19f40:	0008000c fff7fffd fff8fff7 fffffffd     ................
   19f50:	00030003 00070004 0009000e fff9ffff     ................
   19f60:	ffecfff0 ffecffea ffedfff0 fffbfff2     ................
   19f70:	000a0002 0007000a fffa0000 fffdfffd     ................
   19f80:	00080002 000a000d 00080005 00020009     ................
   19f90:	fffbfffb ffff0000 0003fffd fffb0004     ................
   19fa0:	ffeeffef fff3fff5 fff7fff3 fffefffb     ................
   19fb0:	0007fffe 00040008 00000002 fffeffff     ................
   19fc0:	00040001 00070004 000e0009 000b000d     ................
   19fd0:	00010008 fff1fff8 ffe6ffe9 ffe2ffe1     ................
   19fe0:	fff4ffe8 00080000 00130010 001a0017     ................
   19ff0:	00180018 00060013 fffe0003 ffff0000     ................
   1a000:	ffffffff fffafffd fffafffb fff5fff9     ................
   1a010:	fff6fff6 fff7fff6 0003fffc 00070005     ................
   1a020:	00050005 00040005 00030005 fffe0001     ................
   1a030:	fffafffc fffcfffc fff7fff8 fff2fff5     ................
   1a040:	fff4fff4 fffafff7 0003fffe 000e0008     ................
   1a050:	000e000f 0008000c 0008000a 00080007     ................
   1a060:	00010002 fffcffff 0000ffff fffbfffe     ................
   1a070:	fffafffa fffcfffb fffbfffd fff7fff6     ................
   1a080:	00050000 000a0008 000c000e 00050006     ................
   1a090:	fffe0004 ffeafff3 ffe9ffeb ffebffe7     ................
   1a0a0:	fff4fff0 fffafff4 00030001 00070006     ................
   1a0b0:	000f000b 0011000e 00080010 00020006     ................
   1a0c0:	fff9fffd fffafff9 fff9fffa 0002fffc     ................
   1a0d0:	00050005 00090007 00060007 00060004     ................
   1a0e0:	00030003 00070003 000c0009 000a000b     ................
   1a0f0:	00010005 fff5fffc fff0fff2 ffeeffec     ................
   1a100:	fff6fff1 00050000 000d000b 0008000b     ................
   1a110:	00020006 fff7fffc fff8fff9 fffdfffc     ................
   1a120:	00050000 00000000 fffe0000 fff7fffc     ................
   1a130:	fff8fff9 fffafffa 0000fffd ffffffff     ................
   1a140:	00040001 00090006 000a0009 00020006     ................
   1a150:	fffc0001 fff6fff8 fff4fff4 fffdfff5     ................
   1a160:	00060003 00070009 00070009 00060004     ................
   1a170:	00010003 fffcffff fffbfffd fffcfffd     ................
   1a180:	fffefffb fffbfff9 fffbfff9 fff9fffa     ................
   1a190:	fffbfff8 fffdfffd ffffffff 00030002     ................
   1a1a0:	00080006 0009000b 0006000a 00030006     ................
   1a1b0:	fff9ffff fff2fff5 fff5fff3 fff6fff7     ................
   1a1c0:	0001fffc 000a0005 000e000b 0007000c     ................
   1a1d0:	00050007 00050005 00040003 00050003     ................
   1a1e0:	00000003 fff8fffc fff4fff7 fff3fff3     ................
   1a1f0:	fff7fff5 fff9fff5 0000fffc 00010001     ................
   1a200:	00030005 00040005 00050004 ffff0001     ................
   1a210:	fffdfffd fffbfffd fff8fffa fff9fff9     ................
   1a220:	fffbfff8 fffffffe fffffffe 00070003     ................
   1a230:	000c000b 000e000e 000a000b 00040008     ................
   1a240:	fffc0003 fff5fff7 fff8fff4 fffcfffb     ................
   1a250:	00030001 00040004 00000000 fff90000     ................
   1a260:	fffdfffa 0002ffff 00020002 00050005     ................
   1a270:	00030005 00020002 fff8fffb fffbfff9     ................
   1a280:	fffbfffc fffdfffa fffdfffc 00040001     ................
   1a290:	00030005 00050004 00050006 00050005     ................
   1a2a0:	fffa0000 fff7fffc fff7fff8 fff9fff8     ................
   1a2b0:	fffcfffb 00030000 00030002 00030002     ................
   1a2c0:	00030004 00020001 00030002 00030003     ................
   1a2d0:	00030003 ffff0000 0000fffe fffcfffd     ................
   1a2e0:	fffbfffb fffdfffc 0002ffff 00030004     ................
   1a2f0:	00040005 00000003 fffd0000 fffbfffe     ................
   1a300:	fffbfffb fffafffb fffbfffb fffcfffc     ................
   1a310:	fffcfffc fffefffc 0000ffff 00000000     ................
   1a320:	00030003 00060003 00070006 00020003     ................
   1a330:	00000002 fffcfffd fffeffff ffff0000     ................
   1a340:	ffffffff fffffffe 00000000 fffefffd     ................
   1a350:	0001fffe 00040000 00020002 00050001     ................
   1a360:	00040005 00000001 ffff0001 fffdfffe     ................
   1a370:	fff9fffd fff8fff8 fffbfffa fffdfffc     ................
   1a380:	00010000 00060004 00090008 00050007     ................
   1a390:	ffff0001 fffdfffc fffbfffb fffcfffb     ................
   1a3a0:	fffefffd 0000ffff 00010001 00010002     ................
   1a3b0:	00020003 00020000 00030003 00020004     ................
   1a3c0:	00000003 fffeffff fffefffd 0000fffa     ................
   1a3d0:	fffffffa fffa0001 ffff0006 0003fffe     ................
   1a3e0:	ffffffff 00000002 fffd0002 fffdffff     ................
   1a3f0:	fffcfffc fffcfffd 0000ffff 0000fffe     ................
   1a400:	fffcfffd fffefffd fffefffe fffffffe     ................
   1a410:	ffffffff ffffffff 00020001 00010004     ................
   1a420:	00020001 00030000 00010004 fffc0000     ................
   1a430:	fffffffd fffffffe fffcfffd fffffffe     ................
   1a440:	0005ffff 00000002 ffff0000 00000000     ................
   1a450:	00020002 0000ffff 00020001 0000ffff     ................
   1a460:	fffafffc fffcfffa fffdfffb fffefffd     ................
   1a470:	00000000 00000002 ffff0001 fffefffe     ................
   1a480:	ffffffff fffefffe 0000fffe ffffffff     ................
   1a490:	fffffffe ffffffff 00000000 00040001     ................
   1a4a0:	00050005 00080008 00030007 00020005     ................
   1a4b0:	fffefffe fffafffb fffcfffa fffcfffc     ................
   1a4c0:	0001ffff 00010000 00010000 ffff0000     ................
   1a4d0:	ffffffff 00000001 ffffffff 00010000     ................
   1a4e0:	0001fffe ffff0000 fffe0000 ffff0001     ................
   1a4f0:	ffffffff fffdfffd fffcfffc fffdfffe     ................
   1a500:	fffefffe 00030001 00040003 00030005     ................
   1a510:	00020004 ffff0001 ffff0000 fffefffe     ................
   1a520:	fffdfffe fffcfffd fffdfffc ffffffff     ................
   1a530:	00000000 ffff0000 ffffffff ffff0000     ................
   1a540:	fffffffe 0001ffff ffff0000 fffefffe     ................
   1a550:	fffcfffe fffcfffd fffcfffc fffffffd     ................
   1a560:	00010001 00000001 00020002 00030002     ................
   1a570:	00020002 00000001 ffff0001 00000002     ................
   1a580:	fffdfffe 0000fffe 0000ffff 0000ffff     ................
   1a590:	00010001 00020003 00020004 00020000     ................
   1a5a0:	00000000 fffefffe fffcfffd fffafffc     ................
   1a5b0:	fffefffc fffefffd 0001fffe 0001fffd     ................
   1a5c0:	00000002 ffff0001 00000000 ffff0000     ................
   1a5d0:	fffffffe fffe0000 ffff0000 fffeffff     ................
   1a5e0:	ffff0000 0000ffff 00000000 00040003     ................
   1a5f0:	00040004 00020002 00020001 00020001     ................
   1a600:	00000000 0000ffff 00000001 fffeffff     ................
   1a610:	fffbfffb fffefffc fffefffe ffffffff     ................
   1a620:	00020000 00010000 fffeffff fffefffd     ................
   1a630:	fffefffe fffcfffe fffffffe fffeffff     ................
   1a640:	fffcfffc fff9fffb fffefffb 0001ffff     ................
   1a650:	00040001 00030005 00020004 00000002     ................
   1a660:	fffefffe fffdfffe 0000ffff 00000000     ................
   1a670:	00000001 00000001 ffff0000 0000ffff     ................
   1a680:	0002ffff 0001ffff 00010000 00000002     ................
   1a690:	00000000 fffdffff fffdfffe fffefffe     ................
   1a6a0:	0000fffd ffff0000 00010002 00020002     ................
   1a6b0:	00000000 00010001 00010001 00010000     ................
   1a6c0:	ffff0000 ffff0000 fffeffff fffefffe     ................
   1a6d0:	fffffffe ffffffff 0000ffff 0001ffff     ................
   1a6e0:	fffdffff fffdfffe fffffffe fffdfffd     ................
   1a6f0:	fffcfffc 0000fffc ffffffff fffdfffe     ................
   1a700:	ffff0000 0001fffe 0000ffff 0001ffff     ................
   1a710:	00010002 00000003 00010001 00010000     ................
   1a720:	ffff0000 fffdfffe ffffffff ffff0000     ................
   1a730:	ffffffff 0001ffff 00010002 ffffffff     ................
   1a740:	00000000 00010002 00000000 00000000     ................
   1a750:	00000000 fffeffff fffefffd fffefffd     ................
   1a760:	fffdfffe fffdfffe 00000000 ffff0000     ................
   1a770:	fffe0000 fffe0000 00000001 0000ffff     ................
   1a780:	0000fffd 00020002 00040000 0006fffb     ................
   1a790:	00000000 fff5000a 00020004 0009fffc     ................
   1a7a0:	fffefffc fffe0000 00040004 fffdffff     ................
   1a7b0:	fff9fff9 00030001 00030007 fffeffff     ................
   1a7c0:	0005fffe 0005000a fff60000 0005fffc     ................
   1a7d0:	0007000b fff7fff9 fffffff8 fff90004     ................
   1a7e0:	fff2fff2 000cfffb 0003000d fff8fffb     ................
   1a7f0:	0003ffff fff9fffe fffffffc 00070004     ................
   1a800:	00090006 0009000a fff80001 fffafff5     ................
   1a810:	fffd0000 fff7fff7 00090000 00000008     ................
   1a820:	fffbfffa 0000fffb fff4fff8 fff2ffee     ................
   1a830:	0004fffd 00080007 000e0008 00080011     ................
   1a840:	0000000c fff9fffb fff3fff0 fff6fff8     ................
   1a850:	fffefffd 0000fffe fffafffc fffafffb     ................
   1a860:	fffafff4 0003fff8 00140010 0018001b     ................
   1a870:	001a0016 00090013 ffe8fff8 ffe6ffe4     ................
   1a880:	fff1ffed fff4fff2 0009fffe 000d000e     ................
   1a890:	fffb0002 fff3fff5 fff3fff5 fffdfff6     ................
   1a8a0:	000e0006 001c0014 00230021 0011001c     ........!.#.....
   1a8b0:	0006000b fff70000 ffe5ffeb ffecffe5     ................
   1a8c0:	fff6fff2 fff4fff5 fff7fff4 fff6fff8     ................
   1a8d0:	ffebffef fff3ffeb 0005fffc 000b0008     ................
   1a8e0:	00190011 001e001f 00120018 000d000f     ................
   1a8f0:	0007000d fffc0002 fffefffd fffafffd     ................
   1a900:	fff5fff6 fff1fff5 ffe8ffee ffe9ffe9     ................
   1a910:	ffedffed fff7fff1 0006fffe 000a0008     ................
   1a920:	0012000e 00100014 0004000a 00050003     ................
   1a930:	00060007 00060006 0013000d 000e0012     ................
   1a940:	00010006 fff7fffe ffe7fff1 ffe4ffe4     ................
   1a950:	ffeeffe8 fff4fff0 fffffff8 00070004     ................
   1a960:	00070007 00040004 00010002 0001ffff     ................
   1a970:	00070003 000a000a 000b000a 000b000d     ................
   1a980:	00010009 fffffffe fffcfffd fff0fff5     ................
   1a990:	fff2fff0 fff7fff7 fff5fff5 0000fff8     ................
   1a9a0:	000a0008 00050008 000c0006 000d000e     ................
   1a9b0:	00030006 00060003 0009000a 00010005     ................
   1a9c0:	00030001 00010005 fff3fffa fff2fff0     ................
   1a9d0:	fff6fff4 fff7fff6 fffafff8 00040002     ................
   1a9e0:	00040006 ffff0000 0001fffe 00010003     ................
   1a9f0:	fffdfffd 0005ffff 00030008 fff7fffe     ................
   1aa00:	fff7fff8 fff2fff5 ffeeffec fffbfff4     ................
   1aa10:	0000ffff 00050002 000b0008 000c000c     ................
   1aa20:	000c000b 000b000d 00140010 00160019     ................
   1aa30:	000a000f 000a0009 fffd0008 ffe9fff0     ................
   1aa40:	ffeeffea ffebffef ffeaffe8 fffbfff3     ................
   1aa50:	00000001 fffdfffc 00060002 00030004     ................
   1aa60:	fffbffff 00080005 000b000a 00090008     ................
   1aa70:	00040003 fffdfffe fffb0001 ffebfff4     ................
   1aa80:	fff2ffe7 0002fffd ffeffffb 0000fff4     ................
   1aa90:	000d000f fff90001 00100003 00050012     ................
   1aaa0:	fffbfff8 00130008 fff40007 fff8ffec     ................
   1aab0:	00090005 ffeffffb 0005fff7 ffff0008     ................
   1aac0:	fffcfff5 0011000a fffc0005 00120000     ................
   1aad0:	0015001b 00050009 0016000f 00000010     ................
   1aae0:	fff8fff6 fffafffe ffe6ffee fff5ffec     ................
   1aaf0:	ffeefff5 fff0ffec fff5fff8 ffeaffed     ................
   1ab00:	0003fff7 fffa0005 0000fff5 00170012     ................
   1ab10:	0003000f 000e0004 000e0013 00000000     ................
   1ab20:	000a0006 ffff0007 0004fffe fffe0004     ................
   1ab30:	fff3fff3 fffbfff8 ffedfff3 fff8ffec     ................
   1ab40:	00020001 fff8fffb 000d0002 0006000e     ................
   1ab50:	fffbfffb 00020000 fff5fffe fff7fff6     ................
   1ab60:	0000fffd 0001ffff ffffffff fffdfffd     ................
   1ab70:	00010001 fffa0000 fffefff7 00090004     ................
   1ab80:	00030006 000b0006 000b0010 00010004     ................
   1ab90:	00070003 fffc0001 fffefffb fffd0001     ................
   1aba0:	fff8fff9 0005ffff fff90000 fffafff9     ................
   1abb0:	00020003 fff90000 fffefff4 00050003     ................
   1abc0:	00030005 0009000a 00010005 00120006     ................
   1abd0:	00040011 fff1fff5 0009fffe fff40005     ................
   1abe0:	ffeeffea 000e0003 fff20003 fffbffec     ................
   1abf0:	00030008 ffe8fff1 0000fff1 fffe0003     ................
   1ac00:	fffffff8 00060006 00020005 00030004     ................
   1ac10:	fff6fffc fffdfff8 fff8fffd fff9fff4     ................
   1ac20:	00080001 fffd0005 0004fffe 0006000a     ................
   1ac30:	fff6fffd 0003fffc 00020007 0002fffc     ................
   1ac40:	000d0007 0003000a 00040005 00080007     ................
   1ac50:	0000fffd 0003fffe 00030005 00020004     ................
   1ac60:	00060005 00020003 fffcffff fff4fff9     ................
   1ac70:	fff7fff4 fff8fff7 fff8fff7 0005ffff     ................
   1ac80:	000b000a 00040006 00070005 ffff0006     ................
   1ac90:	fff2fff5 fffcfff5 fff5fffd fffbfff8     ................
   1aca0:	0002fffe fff9fff5 fff9fffc ffebfffc     ................
   1acb0:	fff6fff0 000cfffa 0001fffe ffffffff     ................
   1acc0:	001a0018 000e001d 00060001 00140009     ................
   1acd0:	00050014 ffebfff8 000dfff0 000e001c     ................
   1ace0:	ffdafff1 0017fff3 0001001e ffcdffcf     ................
   1acf0:	0017fff2 ffec001d ffd9ffc8 002f0009     ............../.
   1ad00:	ffef001e ffffffdf 002f002c ffe70006     ........,./.....
   1ad10:	000affec 00020017 ffeaffeb 000efffb     ................
   1ad20:	fffe000c fff5fff6 00080003 ffe5fff7     ................
   1ad30:	ffebffdd fff5fffb ffe5ffe6 000efff3     ................
   1ad40:	000c0013 00020008 00140010 00130016     ................
   1ad50:	00000001 00160006 00130021 00070009     ........!.......
   1ad60:	0014000e fff60004 ffefffef ffedfff2     ................
   1ad70:	fff1ffeb 000bfffb 000b0012 00060005     ................
   1ad80:	00140011 ffe70000 ffe3ffd6 fff9fff8     ................
   1ad90:	ffd9ffe8 0004ffe6 00160016 fff0fff6     ................
   1ada0:	fffffff3 ffef0010 ffd7ffe4 000cffe3     ................
   1adb0:	00100003 000e000e 00200029 0036002d     ........). .-.6.
   1adc0:	001b0029 fffa0003 fffe0001 fff8fff8     )...............
   1add0:	ffe6ffec fffdffe9 000e0022 ffd6ffe6     ........".......
   1ade0:	0017ffe8 ffd8000c ffb7ffaf 001ffff3     ................
   1adf0:	fff00018 fff8ffd2 005e0041 fffc003e     ........A.^.>...
   1ae00:	0037fff6 003e005c ffdbfff6 00230005     ..7.\.>.......#.
   1ae10:	ffe20012 ffe1ffcd ffeffff5 ffd1ffde     ................
   1ae20:	ffe5ffd8 ffdaffe6 ffcaffc6 fffaffea     ................
   1ae30:	ffd5fff1 0005ffdd 00290029 000b000a     ........).).....
   1ae40:	004e0030 002d004b 00300023 0038003c     0.N.K.-.#.0.<.8.
   1ae50:	00160027 00040008 00050003 ffdefff4     '...............
   1ae60:	ffcdffcc ffdfffde ffd0ffd8 fff0ffd6     ................
   1ae70:	000e0000 0002000b 00080003 00130016     ................
   1ae80:	ffdefff5 ffebffd9 fff90002 ffefffee     ................
   1ae90:	0018fff7 00130019 ffee0013 fff2fff6     ................
   1aea0:	fffeffe6 ffd0ffd1 ffdcffd8 000f0016     ................
   1aeb0:	0028001d 003f001f 0049003f 0026004d     ..(...?.?.I.M.&.
   1aec0:	00000007 00040004 ffd6fff1 ffeeffe5     ................
   1aed0:	fff0ffec 0018fff8 ffe10007 fff6ffe2     ................
   1aee0:	00000018 ffa6ffc2 0008ffc4 000e002d     ............-...
   1aef0:	ffd5ffd9 006e001d 002a0070 000dffee     ......n.p.*.....
   1af00:	006a0058 ffd40024 fff7ffce ffe1000a     X.j.$...........
   1af10:	ffadffb0 ffc7ffbc ffbcffbd ffdaffce     ................
   1af20:	ffccffd5 ffefffd5 000b000b ffeafff3     ................
   1af30:	002f0006 00360041 002e001d 00710056     ../.A.6.....V.q.
   1af40:	00370061 004c0036 003c0059 fffd000c     a.7.6.L.Y.<.....
   1af50:	fffeffff ffc9ffe7 ffbfffbd ffb2ffc0     ................
   1af60:	ffbaffab ffd3ffcc ffd8ffce 001afff8     ................
   1af70:	00140020 001f000b 00400040 fffc001e      .......@.@.....
   1af80:	0015fffd 000c0022 ffdfffea 0012fff5     ...."...........
   1af90:	fffa0010 ffd4ffdf ffe5fff1 ffceffdc     ................
   1afa0:	ffc3ffab ffcdffbf fff2fff3 fff80007     ................
   1afb0:	0063001d 0067006f 00260030 00660057     ..c.o.g.0.&.W.f.
   1afc0:	0016004c ffe6ffe6 000dfff9 ffef0011     L...............
   1afd0:	ffc2ffc1 0030fff1 ffcb001a ffd5ffaf     ......0.........
   1afe0:	00110017 ffadffcd 0004ffc7 0007001f     ................
   1aff0:	fffcfffa 004a0022 002d0046 00280016     ....".J.F.-...(.
   1b000:	003b004b ffd3fffe 0004ffe2 ff9dffe8     K.;.............
   1b010:	ff9eff7f ffc0ffca ff9eff96 ffefffcc     ................
   1b020:	ffddffea 0014fffa 00220021 0032001b     ........!."...2.
   1b030:	003a0038 0047004a 004c004f 006d004e     8.:.J.G.O.L.N.m.
   1b040:	004a0063 002c0035 002e0040 ffe00001     c.J.5.,.@.......
   1b050:	ffd2ffca ffaaffc3 ff9dffa5 ff98ff99     ................
   1b060:	ffc6ffa2 ffc6ffd1 ffedffce 002f001a     ............../.
   1b070:	002c0028 00480035 003a0050 0031003a     (.,.5.H.P.:.:.1.
   1b080:	0016001e 00060008 ffe5fff9 ffeaffe6     ................
   1b090:	ffdbffe1 ffcfffd3 ffc3ffda ffd1ffcc     ................
   1b0a0:	ffcaffb5 ffd1ffbb ffe9ffff 0008fffb     ................
   1b0b0:	00670025 005f005c 005b0066 005b0065     %.g.\._.f.[.e.[.
   1b0c0:	00540055 ffee001c 0000ffef ffdb0009     U.T.............
   1b0d0:	ffccffb7 ffe8ffe6 ffdeffdb ffe5fff2     ................
   1b0e0:	ffd0ffca 0009fff7 ffbcffe1 0000ffca     ................
   1b0f0:	0025002c 00030011 00410013 0056005e     ,.%.......A.^.V.
   1b100:	ffef0018 00380009 ffe1002a ffb0ffa8     ......8.*.......
   1b110:	ffd3ffd5 ff97ffaa ffb5ffa4 ffbbffb6     ................
   1b120:	ffeaffd5 ffe7ffe4 0024ffff 0023003b     ..........$.;.#.
   1b130:	003d002f 005b0050 00530042 00480055     /.=.P.[.B.S.U.H.
   1b140:	002f0040 0043004c 00050018 001d000a     @./.L.C.........
   1b150:	ffd8000e ffd1ffc2 ffd3ffdd ffa7ffb2     ................
   1b160:	ffbcffb8 ffccffc6 ffdfffd1 ffffffe3     ................
   1b170:	002f0021 00320032 00510044 003e004e     !./.2.2.D.Q.N.>.
   1b180:	001c002b 00010016 ffdbffec ffd0ffd6     +...............
   1b190:	ffbbffbd ffc0ffc3 ffbbffc7 ffcaffc2     ................
   1b1a0:	ffcfffcd ffdeffbe ffebffe2 fff8fff1     ................
   1b1b0:	00450020 00480039 00690060 007e0083      .E.9.H.`.i...~.
   1b1c0:	006b0079 00400045 0032003a ffde0025     y.k.E.@.:.2.%...
   1b1d0:	ffeaffd9 ffd4ffdf ffc9ffbd ffbaffd2     ................
   1b1e0:	ffccffb6 ffe6fff0 ffb8ffb3 001bfff0     ................
   1b1f0:	ffe1000e 0008ffdc 0034002c 001a0029     ........,.4.)...
   1b200:	000b000e 004a002f fffd002f ffffffdf     ..../.J./.......
   1b210:	00070028 ffaaffc9 ffceffbe ff9cffb1     (...............
   1b220:	ffa6ffa1 ffa7ffa3 fffeffce fff80006     ................
   1b230:	003c000a 00610068 004e0049 005e0057     ..<.h.a.I.N.W.^.
   1b240:	0044004d 0037004a 002e0024 00470045     M.D.J.7.$...E.G.
   1b250:	000c0028 002a0018 ffed001b ffcaffc8     (.....*.........
   1b260:	ffb4ffce ff9aff9d ffa4ffa8 ffafff9c     ................
   1b270:	fff1ffd8 ffefffe8 002b000a 002f0038     ..........+.8./.
   1b280:	00290025 00290028 00250025 fff20012     %.).(.).%.%.....
   1b290:	fffdffed fff7000b ffc8ffcc ffe2ffdc     ................
   1b2a0:	ffc6ffd7 ffcdffc3 ffcfffbf ffeeffe1     ................
   1b2b0:	ffd8fffa 0026fff3 0048003d 0036002d     ......&.=.H.-.6.
   1b2c0:	0075005a 005f006f 004c005b 0047004b     Z.u.o._.[.L.K.G.
   1b2d0:	0028003d fff6000c fff9ffef ffc2ffe5     =.(.............
   1b2e0:	ffc5ffb5 ffc2ffd6 ffabffa7 ffe3ffcd     ................
   1b2f0:	ffb0ffc4 fff3ffd1 ffe5fff9 fffdffdc     ................
   1b300:	00130010 0029001d 000e0022 0043001d     ......).".....C.
   1b310:	0017004c 0001ffed 001f002c ffb9ffdd     L.......,.......
   1b320:	ffe7ffd6 ffabffcb ffccffb1 ffb6ffc6     ................
   1b330:	0001ffd0 fff3000c 002bfff8 00380051     ..........+.Q.8.
   1b340:	00360024 00520050 003a002e 0044004d     $.6.P.R...:.M.D.
   1b350:	00290036 0054004a 000d002b 002f0014     6.).J.T.+...../.
   1b360:	ffdc0018 ffd1ffc0 ffbeffd7 ff9dff99     ................
   1b370:	ffb4ffbe ffb7ffaa ffe7ffcf ffdbffdb     ................
   1b380:	0014fffb 00020013 002e000e 00270036     ............6.'.
   1b390:	002b001d 00200030 000b0014 fffa000d     ..+.0. .........
   1b3a0:	ffe1ffe2 ffd4ffdf ffbaffbf ffd1ffcc     ................
   1b3b0:	ffbeffc8 ffecffd8 ffebfffc 0029ffec     ..............).
   1b3c0:	00350020 00250027 0058005a 004b0060      .5.'.%.Z.X.`.K.
   1b3d0:	005b005b 005b0050 00440044 0006001a     [.[.P.[.D.D.....
   1b3e0:	0018000f ffc10000 ffdaffc6 ffbfffd8     ................
   1b3f0:	ffc3ffa8 ffaeffc6 ffc7ffa7 ffc7ffe7     ................
   1b400:	ffcaffa9 000d0002 ffe6ffe9 0024000a     ..............$.
   1b410:	001d0026 00310032 00140016 003b0031     &...2.1.....1.;.
   1b420:	ffde0005 0016ffef ffd0000c ffd8ffb9     ................
   1b430:	ffdaffee ffceffc0 ffe0ffe1 ffedffd9     ................
   1b440:	000b000c 000b0000 00430032 00300037     ........2.C.7.0.
   1b450:	00570043 0041004f 004c0044 00320046     C.W.O.A.D.L.F.2.
   1b460:	002e0027 0010002b fff6fffc ffeefff9     '...+...........
   1b470:	ffc3ffd0 ffc2ffc2 ffa9ffb4 ffb3ffae     ................
   1b480:	ffbbffba ffc6ffc4 ffe1ffd0 fffefff5     ................
   1b490:	00080003 002c0015 0035003c 0031002f     ......,.<.5./.1.
   1b4a0:	00390034 001e0031 fffc000a fff4fff5     4.9.1...........
   1b4b0:	ffcfffea ffc4ffc3 ffccffc5 ffc9ffc8     ................
   1b4c0:	ffdbffcd fff9ffe6 000d0005 0023000a     ..............#.
   1b4d0:	00350048 00380046 006b0053 00510046     H.5.F.8.S.k.F.Q.
   1b4e0:	005a0045 002a003e 00220039 fff30017     E.Z.>.*.9.".....
   1b4f0:	fffcffef ffc9ffe9 ffc6ffae ffafffc9     ................
   1b500:	ff9eff9d ffb1ffc0 ffb0ff9f ffe5ffcf     ................
   1b510:	ffd3ffce 001f0002 0007001d 003c001c     ..............<.
   1b520:	002b0035 00390027 000f0031 0023000c     5.+.'.9.1.....#.
   1b530:	fff80028 ffeeffd5 ffff000c ffbbffc6     (...............
   1b540:	fff4ffe4 ffbfffdc fffaffdb ffeafff4     ................
   1b550:	0028ffff 00170028 004d0025 003f005b     ..(.(...%.M.[.?.
   1b560:	004b0033 0046005e 00310031 002f003d     3.K.^.F.1.1.=./.
   1b570:	00120014 00070012 ffd4ffe6 ffd7ffdd     ................
   1b580:	ffa5ffc4 ffb3ffa5 ffa9ffb4 ffb4ffa1     ................
   1b590:	ffcdffc5 ffdeffd1 ffefffed 000dfffa     ................
   1b5a0:	00190017 0023001a 0047003a 00360040     ......#.:.G.@.6.
   1b5b0:	0045003d 002b003c 000f0018 ffe40001     =.E.<.+.........
   1b5c0:	ffd4ffdc ffafffce ffb8ffa4 ffcbffbe     ................
   1b5d0:	ffcaffb2 ffffffe6 0006000e 002a0027     ............'.*.
   1b5e0:	003b004b 00500058 00650041 006f0033     K.;.X.P.A.e.3.o.
   1b5f0:	00440049 0017003b 001c004a fff20016     I.D.;...J.......
   1b600:	ffffffe8 ffc0ffcb ffb8ffb5 ff8fffad     ................
   1b610:	ffa6ffa2 ff9bffa6 ffcfffa8 ffc4ffc7     ................
   1b620:	0002ffda 0004001e 0030000b 00460049     ..........0.I.F.
   1b630:	003a0028 00390042 002d0034 00170035     (.:.B.9.4.-.5...
   1b640:	0016fffe 00120023 ffd6ffdb fffbfffb     ....#...........
   1b650:	ffb5ffdd ffd8ffca ffc7ffce ffe5ffd0     ................
   1b660:	ffe1ffdc 00220003 00160027 004c002a     ......".'...*.L.
   1b670:	00480056 0044003e 00370043 002f002a     V.H.>.D.C.7.*./.
   1b680:	00080021 0002ffff fff50004 ffcaffe1     !...............
   1b690:	ffd6ffdb ffc4ffd0 ffc1ffb4 ffbfffb5     ................
   1b6a0:	ffc8ffc5 ffc6ffd1 fff1ffdc 0000fffe     ................
   1b6b0:	00160004 00300022 003b0033 00430045     ....".0.3.;.E.C.
   1b6c0:	0040003f 003d0044 00110026 0005000b     ?.@.D.=.&.......
   1b6d0:	ffd4fff0 ffc2ffc7 ffaeffbb ffb5ffa3     ................
   1b6e0:	ffbcffb2 ffceffb7 ffeaffea 00050006     ................
   1b6f0:	0030002f 00510041 00690057 007c0045     /.0.A.Q.W.i.E.|.
   1b700:	0070004f 002d0057 00150069 000a0040     O.p.W.-.i...@...
   1b710:	000bfff6 ffe8ffc6 ffbfffb7 ff89ffb2     ................
   1b720:	ff99ffa6 ff93ffae ffb4ff8e ffc5ffb5     ................
   1b730:	ffdbffc6 fff2ffff 0023000a 003f003d     ..........#.=.?.
   1b740:	003c0023 00560054 0021003c 002f0034     #.<.T.V.<.!.4./.
   1b750:	001e002d 00140012 fff7fff2 fffc0001     -...............
   1b760:	ffbdffe1 ffe4ffcc ffc6ffe2 ffd1ffb5     ................
   1b770:	fff0ffec fff4ffea 0015000d 0032001e     ..............2.
   1b780:	0038003e 0035002c 0046004d 0020002c     >.8.,.5.M.F.,. .
   1b790:	00360020 0011001f 00050007 ffec000f      .6.............
   1b7a0:	ffe4fff8 ffd0ffe2 ffd9ffb6 ffc9ffc2     ................
   1b7b0:	ffafffab ffd0ffd4 ffcbffde fffdffe6     ................
   1b7c0:	000afffc 00160009 00140011 00230027     ............'.#.
   1b7d0:	0017001c 00320020 00200028 0017001e     .... .2.(. .....
   1b7e0:	000d001d fff50005 ffe0ffe1 ffceffcd     ................
   1b7f0:	ffb9ffc4 ffbfffbb ffd4ffd7 ffe4ffe3     ................
   1b800:	0013ffff 0035001f 00550029 0063003d     ......5.).U.=.c.
   1b810:	00560057 003d0058 00250066 000a005b     W.V.X.=.f.%.[...
   1b820:	002c001c 0034ffdb ffedffc4 ffacffd3     ..,...4.........
   1b830:	ff93fff2 ff9cffbe ffbdff9a ffb2ff85     ................
   1b840:	ffb9ffa2 ffb7ffc4 ffe4fff5 0004fffc     ................
   1b850:	00450015 00320024 004f003e 002b005c     ..E.$.2.>.O.\.+.
   1b860:	00490037 0030003e 0028000f 000c0022     7.I.>.0...(."...
   1b870:	ffff000e ffe30012 fff6ffda ffe2ffed     ................
   1b880:	ffcaffb4 ffe1ffe5 ffc0ffd0 fff3ffe7     ................
   1b890:	fff1fff4 0016fffe 000b000c 002b0021     ............!.+.
   1b8a0:	00140029 0031001b 0028002e 0026000e     ).....1...(...&.
   1b8b0:	00270028 00020017 fffc0019 ffe90005     (.'.............
   1b8c0:	fff3ffe7 ffd8ffc3 ffdcffc7 ffb8ffdd     ................
   1b8d0:	ffd9ffd6 ffeafffb fffbffd7 000bffff     ................
   1b8e0:	fffcfff1 0000000b fffa0000 000b0015     ................
   1b8f0:	000d0002 00380021 0014001d 002d001e     ....!.8.......-.
   1b900:	fffe0027 fffbfffa ffd9ffe5 ffdaffcc     '...............
   1b910:	ffb4ffca ffdbffc8 ffe7fff3 000effe6     ................
   1b920:	00340025 00310034 003d0050 004b004d     %.4.4.1.P.=.M.K.
   1b930:	004e0038 00480008 00170018 ffc80037     8.N...H.....7...
   1b940:	ffdc003e 0015fffb 000effa6 ffdaffa4     >...............
   1b950:	ff8effd2 ff7fffd1 ffa5ffbf ffc8ff89     ................
   1b960:	ffdbffa2 ffe0ffc5 fff0000b 00220020     ............ .".
   1b970:	004a004b 004c002c 006c0057 00280048     K.J.,.L.W.l.H.(.
   1b980:	0048004b 00210043 00200015 00090009     K.H.C.!... .....
   1b990:	fffc0005 ffc0ffe9 ffe5ffd7 ffb8ffd7     ................
   1b9a0:	ffc3ff9f ffd7ffd4 ffc0ffc0 fff3ffe7     ................
   1b9b0:	fffb0002 001c0009 0029001b 00420031     ..........).1.B.
   1b9c0:	0030003e 004e0034 00370051 0021001d     >.0.4.N.Q.7...!.
   1b9d0:	001d003b ffe30001 fff5fff2 ffd0ffc3     ;...............
   1b9e0:	ffd3ffc1 ffa7ffbf ffdaffdd ffc2ffde     ................
   1b9f0:	0008ffc8 ffebfff7 fff3ffda ffec001d     ................
   1ba00:	fffeffef 000c0009 0021fff0 001c002c     ..........!.,...
   1ba10:	0024001d 00420056 00250026 00340023     ..$.V.B.&.%.#.4.
   1ba20:	ffee0008 ffd8ffe9 ffbcffd0 ffcbffc9     ................
   1ba30:	ffbfffb5 fffcffd8 fff6fffd 002e0007     ................
   1ba40:	0039003a 002a0038 002b004f 003c003a     :.9.8.*.O.+.:.<.
   1ba50:	00390013 0040ffef fffd001b ffc10033     ..9...@.....3...
   1ba60:	ffec0044 0013ffdf 0000ff96 ffb9ffa1     D...............
   1ba70:	ff72ffc6 ff79ffc1 ffb9ffc0 ffdbff89     ..r...y.........
   1ba80:	000dffbf fff3fff5 001a0032 0039004b     ........2...K.9.
   1ba90:	005f0052 004b0036 0060004d 00140045     R._.6.K.M.`.E...
   1baa0:	0036002f 00130035 0006ffee fff5fff7     /.6.5...........
   1bab0:	ffd7ffe5 ffb1ffdf ffd0ffc5 ffc1ffd2     ................
   1bac0:	ffc3ff9e fff0ffe5 ffd1ffd9 0016fff6     ................
   1bad0:	00160018 00270014 002f002f 0046003e     ......'././.>.F.
   1bae0:	002a0048 004a0034 00310053 00140001     H.*.4.J.S.1.....
   1baf0:	0015001e ffc8ffe4 ffd2ffd8 ffb1ffc7     ................
   1bb00:	ffcbffc3 ffc0ffb3 fff9ffd7 ffcbffec     ................
   1bb10:	000affe6 fffb0019 ffffffe3 000c0014     ................
   1bb20:	fffbfff9 000a000e 00180008 002c0032     ............2.,.
   1bb30:	002a0018 004b0047 000e0024 001b0017     ..*.G.K.$.......
   1bb40:	ffd5ffff ffc6ffcd ffb4ffba ffc6ffb7     ................
   1bb50:	ffc6ffbe 000fffe6 00120018 00340021     ............!.4.
   1bb60:	0036005a 00380040 0044002a 00490016     Z.6.@.8.*.D...I.
   1bb70:	001d000a fff9000f ffbd0072 fffc0033     ........r...3...
   1bb80:	0054ffc6 0005ff94 ff9cffb8 ff74ffdc     ..T...........t.
   1bb90:	ff8affd4 ffa9ffa2 000bffa6 ffe0ff9c     ................
   1bba0:	0012fff8 ffef0046 003a0037 004c0041     ....F...7.:.A.L.
   1bbb0:	0060002b 002b0032 003e002d fffb0065     +.`.2.+.-.>.e...
   1bbc0:	00170002 002d002e ffddffbf ffecffeb     ......-.........
   1bbd0:	ffb9fff3 ffd0ffde ffddffc3 0000ffdb     ................
   1bbe0:	ffc1ffca 0022ffe9 ffcf0027 0017ffdf     ......".'.......
   1bbf0:	00240037 000dffec 00260031 00340022     7.$.....1.&.".4.
   1bc00:	0034004f 00300011 0052005b ffe3fff8     O.4...0.[.R.....
   1bc10:	0022000d ffa2fff9 ffc9ffbf ffbaffdc     ..".............
   1bc20:	ffeeffb2 ffd7ffbd 0003ffdd ffd90021     ............!...
   1bc30:	fffaffda 00160015 ffc4ffd3 000dfff4     ................
   1bc40:	ffd9fff7 000efff6 000b0010 004b0038     ............8.K.
   1bc50:	00230031 006b0043 001d004b 000cfffb     1.#.C.k.K.......
   1bc60:	ffe4001b ffa9ffb1 ffb4ffb8 ffc7ffa5     ................
   1bc70:	ffc7ffd4 0003ffe2 002f0038 002c0014     ........8./...,.
   1bc80:	004e0043 00190042 00250024 002f0030     C.N.B...$.%.0./.
   1bc90:	00440013 0035ffed 000a002c ff830062     ..D...5.,...b...
   1bca0:	ffea0027 000cffa3 ffb7ff5a ff92ff96     '.......Z.......
   1bcb0:	ff8dffbe ffa8ffb8 ffe5ffef 0044ffec     ..............D.
   1bcc0:	002fffb0 002c0039 ffe5007a 005d0042     ../.9.,.z...B.].
   1bcd0:	005e004c 00400021 00310041 0017000d     L.^.!.@.A.1.....
   1bce0:	ffc0002b ffd0ffbb ffe1ffed ff9cff6f     +...........o...
   1bcf0:	fff2ffed ffdbfffa 00360004 00100016     ..........6.....
   1bd00:	00340032 ffe7fffe 0039fff2 ffb60022     2.4.......9."...
   1bd10:	001cffd4 0017002f fffaffdd 00170039     ..../.......9...
   1bd20:	001b000d 00170027 0002fffe 0033002f     ....'......./.3.
   1bd30:	ffcaffe0 0010fff8 ffb8fff5 fffbff9c     ................
   1bd40:	ffecffdf ffe2ffdd fff90031 00190011     ........1.......
   1bd50:	00120034 ffd3ffce 0000ffff ff8effb0     4...............
   1bd60:	fff7ffd7 ffd3fff1 0039ffe8 001a001c     ..........9.....
   1bd70:	004c002e 0020004d 00460024 000d004c     ..L.M. .$.F.L...
   1bd80:	0004ffe6 fff3000c ffb6ffbe ffddffe3     ................
   1bd90:	ffd9ffbe fff7ffe4 ffe7fff4 001d001c     ................
   1bda0:	000c001c 004a0021 0033002b 003f001e     ....!.J.+.3...?.
   1bdb0:	00250050 002f0036 001d002c 000efff8     P.%.6./.,.......
   1bdc0:	0002ffbd ff83ff92 ff56ffef ff9bffd7     ..........V.....
   1bdd0:	000dff8d ffc9ffd6 ffe4001f 00320004     ..............2.
   1bde0:	0008ffd8 ffc5003f 00270020 009f0007     ....?... .'.....
   1bdf0:	00240000 0038007f 0010004c 001ffff2     ..$...8.L.......
   1be00:	ff9dffe6 fff8ffbd ffb6ffb6 0005ffbe     ................
   1be10:	ffe1004f 002affee 004a0038 00080006     O.....*.8.J.....
   1be20:	0000003b fffbffeb fffa000e ffbdffd5     ;...............
   1be30:	00310003 ffbfffe1 0015ffda ffec0031     ..1.........1...
   1be40:	0022ffe7 00250033 00360025 00260055     ..".3.%.%.6.U.&.
   1be50:	0017ffee 00030033 ff9fffb3 fff7ffc4     ....3...........
   1be60:	ff8effc2 ffe7ffd8 ffff001d 0044fff9     ..............D.
   1be70:	fff80020 0018ffed ffd20010 ffccff9b      ...............
   1be80:	000d001b ffeaffd6 004c0026 fff80020     ........&.L. ...
   1be90:	001f0010 ffc6ffe9 001d000a ffe20000     ................
   1bea0:	006a0017 00130042 fffb0001 ffd20008     ..j.B...........
   1beb0:	ffadffa3 ffb2ffa9 fff8ffce 0021002c     ............,.!.
   1bec0:	00510026 00740082 00240036 00180013     &.Q...t.6.$.....
   1bed0:	fff20019 0008ffe8 003bffea 002f001b     ..........;.../.
   1bee0:	ffe00000 ffc2ffed ff35000f ffadffab     ..........5.....
   1bef0:	0014ff7a ffceffb4 ffd7004e 00560031     z.......N...1.V.
   1bf00:	0036ffc3 ffb4ffe4 fff70038 0024ffa1     ..6.....8.....$.
   1bf10:	007cffee ffde0084 0049005a 0030001f     ..|.....Z.I...0.
   1bf20:	ffd6ffcc ff8dffeb 0005ffb7 ffeb0017     ................
   1bf30:	0023ffd7 005f0096 ffeffff3 003d0025     ..#..._.....%.=.
   1bf40:	ffdb0014 0000fff7 ffdaffd9 0003fffe     ................
   1bf50:	ffa1ffd3 0021ffb0 ffc60027 0002ffb8     ......!.'.......
   1bf60:	00580056 00160001 003c0052 0013001e     V.X.....R.<.....
   1bf70:	00300029 ffb6ffd2 001a0013 ff90ffdc     ).0.............
   1bf80:	fffdff9c ffacfff5 ffecff97 00000007     ................
   1bf90:	0018fffe 002a0069 0036ffee 002e004f     ....i.*...6.O...
   1bfa0:	ffa4ffe7 002f000b ffbeffe9 0026ffe9     ....../.......&.
   1bfb0:	ffcc0015 0033ffd8 ffa6fff0 0010ffd1     ......3.........
   1bfc0:	fffb002d 0041ffef 00340058 000d0019     -.....A.X.4.....
   1bfd0:	0006001e ffb4ffb3 fff1fffb ffdeffc7     ................
   1bfe0:	00560014 00130022 002d0036 fff50025     ..V."...6.-.%...
   1bff0:	000efff3 ffd6ffeb 0007ffe9 fff30050     ............P...
   1c000:	002b0006 000d0039 fff1ffdd 0017ffb1     ..+.9...........
   1c010:	ffd9ff61 ff910006 ffe60023 0089ffd0     a.......#.......
   1c020:	ffb8ffde ff7d0051 ffde0024 0031ff78     ....Q.}.$...x.1.
   1c030:	ffaaffff 00170057 0091006c 0051ffdb     ....W...l.....Q.
   1c040:	0015004a ffc50002 0004ffd6 ffcbffae     J...............
   1c050:	003c000a ffe8000c 0065003a ffec0044     ..<.....:.e.D...
   1c060:	0000ffb6 ffe0000a ffe2ffec ffef0008     ................
   1c070:	001cffd7 ffe8001b ffafffc7 0030001d     ..............0.
   1c080:	ffd2ffd1 003affef 000a004b 003f0024     ......:.K...$.?.
   1c090:	0011001b 00250016 ffd80032 fff5ffc4     ......%.2.......
   1c0a0:	fffa0024 ff9bffad ffe2ffdd ffadffc8     $...............
   1c0b0:	0015ffdb 0037ffe3 006a0032 00010051     ......7.2.j.Q...
   1c0c0:	0040000c ffdb0024 ffbfff8e ffd70012     ..@.$...........
   1c0d0:	ffebffd8 0000002b fffcfff6 ffeb001a     ....+...........
   1c0e0:	ffaaffbe 001dffe1 00040007 0070001b     ..............p.
   1c0f0:	003f0067 003a0042 ffc60006 ffe1ffc5     g.?.B.:.........
   1c100:	ffb2ffcc fff7ffd1 00380027 002a0026     ........'.8.&.*.
   1c110:	0028001e ffe60006 ffc9fff4 ffd5ffc5     ..(.............
   1c120:	00120012 00240016 00470033 0016003e     ......$.3.G.>...
   1c130:	0004fffd 001fff92 ffb9ff7f ff6b0027     ............'.k.
   1c140:	0023000a 0075ffbc ff9affd6 ff5c0090     ..#...u.......\.
   1c150:	001b0009 0033ff7a ffb80003 0019008d     ....z.3.........
   1c160:	0092003a 005cfff8 fff60020 ffe1fff6     :.....\. .......
   1c170:	ffe7ffcd ffecffbc 0031ffec ffe70016     ..........1.....
   1c180:	000c0040 fffb001a fff1ffa9 ffccffec     @...............
   1c190:	fff6002f 0023001e 0032ffe4 ffea0025     /.....#...2.%...
   1c1a0:	ffb9fff0 001fffed fff4ffe0 00290002     ..............).
   1c1b0:	001e0048 00460029 fff4001a fffcffdc     H...).F.........
   1c1c0:	ffdb0017 ffdcffbd fffd0013 ffceffd9     ................
   1c1d0:	ffefffe2 ffaaffcb fffffff8 000cfff9     ................
   1c1e0:	006b0000 fffa0054 001a0023 000a0008     ..k.T...#.......
   1c1f0:	ffd9ff99 ffd30017 fff4ffef 003f0029     ............).?.
   1c200:	ffe6fff2 fff6000f ffb0ffd1 fff9ffc6     ................
   1c210:	fffefff7 00540018 00470051 002e0031     ......T.Q.G.1...
   1c220:	fff50035 ffd6ffc4 ffe5ffe6 ffeeffef     5...............
   1c230:	002d0025 00270019 00100013 ffc7fff3     %.-...'.........
   1c240:	ffd5ffc3 ffd8ffcd 0007ffe2 00280030     ............0.(.
   1c250:	0042004a 0026003d fff00017 ffb30012     J.B.=.&.........
   1c260:	ffefffd9 002eff92 ffd9ffcb ffbf0039     ............9...
   1c270:	0034ffe7 0013ff7e ff81ffb3 ffa6003d     ..4.~.......=...
   1c280:	003bfff2 0047fffe 002d004d 003b00a2     ..;...G.M.-...;.
   1c290:	0005001b 0025000a ffe3ffe0 ffedffe6     ......%.........
   1c2a0:	ffe50013 004b000a ffeaffd3 ffd6ffe2     ......K.........
   1c2b0:	ffa40011 ffe3ff96 002afff7 0014001d     ..........*.....
   1c2c0:	00380049 00190021 00200020 ffccffd6     I.8.!... . .....
   1c2d0:	001ffffe ffec0026 0046ffff 00040031     ....&.....F.1...
   1c2e0:	ffe5fff0 ffc3ffe8 ffdeffa6 fff00007     ................
   1c2f0:	fff0ffd0 002e001b ffd40000 0005fff0     ................
   1c300:	ffd1ffd9 0007fff7 ffef0025 0059000c     ........%.....Y.
   1c310:	00150038 ffe8ffef ffee0026 ffebffbb     8.......&.......
   1c320:	0010ffed ffedffec 00140049 ffdcffe5     ........I.......
   1c330:	000cffdf ffabffe3 0000ffd4 001d001d     ................
   1c340:	004e0020 00320049 00320019 ffee003a      .N.I.2...2.:...
   1c350:	ffdeffd6 001afff6 ffe6fff9 00050011     ................
   1c360:	0003001a fff9ffed ffb6ffcf ffe5ffc8     ................
   1c370:	ffe0fff2 0018ffe2 00520040 0033002e     ........@.R...3.
   1c380:	0028003b fff60014 fff80002 ffd2ffc0     ;.(.............
   1c390:	0000ffe7 ffc5fff1 fff2fffa ffeefff3     ................
   1c3a0:	ffdbffbc ffb6ffcf ffd7ffe5 001bffff     ................
   1c3b0:	004a0005 00530057 002b004d 00440041     ..J.W.S.M.+.A.D.
   1c3c0:	00050016 0001ffe6 fff5000b 00020004     ................
   1c3d0:	fff1fffe fff6ffde ffc4fffb ffbdffb7     ................
   1c3e0:	ffe9ffdc ffd7ffd8 0021ffff 002c001f     ..........!...,.
   1c3f0:	002b003a 000e0027 002c000b fff70005     :.+.'.....,.....
   1c400:	00050003 00140023 000cfff6 fff2fffc     ....#...........
   1c410:	ffdcffea ffeafff1 ffdcffcd fff8ffe9     ................
   1c420:	ffdffff2 0003ffee fff7fffe 0008fff6     ................
   1c430:	fff8000c 0005fffa 0013001f 0012fff9     ................
   1c440:	001d001c 00030020 001a0018 fffffff2     .... ...........
   1c450:	ffedfff8 ffc5fff3 ffecffdb ffe3ffe1     ................
   1c460:	ffe8ffe1 0001fffa fffa0000 00190007     ................
   1c470:	00280011 0039001c 0024003e 003c0036     ..(...9.>.$.6.<.
   1c480:	0020002b fff1fffa ffe2fffd ffc8ffd8     +. .............
   1c490:	ffe2ffd6 ffe8ffdc fffcfff2 fff3fffb     ................
   1c4a0:	00000002 00050004 0007fff2 00140011     ................
   1c4b0:	0019001c 002a002a 00080007 fff8fffa     ....*.*.........
   1c4c0:	ffcaffe7 ffd5ffd3 ffe5ffd9 fff9ffde     ................
   1c4d0:	fff00002 00010004 0000000c ffedffdb     ................
   1c4e0:	fffbfffa 0000000b 002b0017 002a0023     ..........+.#.*.
   1c4f0:	002d0033 00020022 000dfffe fff00007     3.-."...........
   1c500:	fff5ffe7 000e0007 00050005 fffd0009     ................
   1c510:	ffeeffef ffecfff0 ffcdffdd fffeffe1     ................
   1c520:	0002000a 00120003 00210021 00090005     ........!.!.....
   1c530:	fffa000e fff1fff2 0015fffc ffeefff9     ................
   1c540:	0014000d ffff000e fffcffea ffd4fff3     ................
   1c550:	ffe9ffe0 ffeffff2 fffbffe3 000b0013     ................
   1c560:	ffff0001 00180014 00010007 00130008     ................
   1c570:	fffa000c 00140008 00020009 fffdfff5     ................
   1c580:	ffed0008 fff0ffe9 fffcfff6 fff6ffed     ................
   1c590:	000c0010 00090007 001b0010 0008000b     ................
   1c5a0:	0012000b 00070010 0014000e 0002000c     ................
   1c5b0:	fffefff4 ffeafffc ffe6ffe7 fff2fff0     ................
   1c5c0:	fff8ffea fffeffff fffbfffe 00050008     ................
   1c5d0:	fff4fff6 fffefff7 fff80001 000e0002     ................
   1c5e0:	00080007 000b0006 fff80007 fff6ffef     ................
   1c5f0:	fff3fffb fff2fff2 0005fffc 00060008     ................
   1c600:	00080013 fffe0002 fffdfffe ffedfffb     ................
   1c610:	fffafff0 0004fffe 00070008 000d0009     ................
   1c620:	000c0008 fffe0003 fff5fff5 fffffffa     ................
   1c630:	00030008 00120007 0014000f 00020013     ................
   1c640:	fff80001 fff9fff3 fff1fff2 fffbfff6     ................
   1c650:	00070002 000a0005 0008000d ffff0003     ................
   1c660:	fff9fffe fff7fff6 fffafff5 fffbfff9     ................
   1c670:	00050002 fffc0000 fff3fff2 fff4fffd     ................
   1c680:	fff0fff6 0000fff8 00070003 000c0009     ................
   1c690:	00050006 00120008 fffc0003 fffafff6     ................
   1c6a0:	fffe0001 fffafff9 fffbfffe 0002fffe     ................
   1c6b0:	fffe0003 fff5fff9 00080000 00060003     ................
   1c6c0:	0006fffc 000d000e 0011000d 0006000b     ................
   1c6d0:	00080004 fffd000a fff1fff9 fffffffd     ................
   1c6e0:	fffafff4 fff4fffa fff50001 0008fffb     ................
   1c6f0:	fffafff1 fffafffc fffb0006 0002fff8     ................
   1c700:	0005fffd 00000007 00060006 00000002     ................
   1c710:	fffd0003 fff7fffb 0001fff8 ffff0003     ................
   1c720:	0003ffff 00070004 00010000 0002000b     ................
   1c730:	00020004 000a0002 00000002 ffff0007     ................
   1c740:	fffb0006 fff9fff6 fff6fffc fff5fff5     ................
   1c750:	fffbffff fffefff7 0007fff9 fff9fffe     ................
   1c760:	0001ffff fffa0000 0002fff5 fffb0000     ................
   1c770:	ffff0001 00050008 0003ffff 000b0001     ................
   1c780:	fff80003 00010009 00050004 000bfff6     ................
   1c790:	fffa0001 fff80006 00020000 fff9fff2     ................
   1c7a0:	fffcfffb fff1fff9 00000003 00070001     ................
   1c7b0:	00080005 00010007 00030004 00040004     ................
   1c7c0:	0000fff4 fffc0002 ffffffff fffafffa     ................
   1c7d0:	fff9fff7 fffbfff7 fffafff6 0003fffb     ................
   1c7e0:	00030007 00070007 00070006 00050006     ................
   1c7f0:	00020005 0001ffff fffd0002 fffb0000     ................
   1c800:	fffdfff9 fff9fff6 fff7fffc fffefffd     ................
   1c810:	000afff8 0000fffd ffff000b 000a0005     ................
   1c820:	0007fffc fff70002 00010007 00030003     ................
   1c830:	00040002 00000000 fffafffe fff8fffe     ................
   1c840:	fffefff6 0004fff9 fffefffd 00000004     ................
   1c850:	fffe0003 00020008 00030000 00030004     ................
   1c860:	fff80007 00010001 00050001 fffbfffa     ................
   1c870:	fff50002 fffdfff9 0001fff8 fffbfff8     ................
   1c880:	fff60004 fffd0007 000cfffb 0003fffc     ................
   1c890:	fffb0002 fffb0009 0005fffa 0000fffe     ................
   1c8a0:	fffffffa fffc0004 00000001 00030002     ................
   1c8b0:	fffb0001 0002fff9 fffbfff8 fffafffb     ................
   1c8c0:	fff70004 0005fffc 0004fffc fffefffd     ................
   1c8d0:	00030000 fff90000 00020005 00060001     ................
   1c8e0:	000bfff9 fffa0002 fffd0006 fffd0005     ................
   1c8f0:	0003fffc 00000001 fff80003 fffe0002     ................
   1c900:	0008fff8 0011fff5 fffafffe fffd000e     ................
   1c910:	00020007 000bfff7 fffcfff3 fff30002     ................
   1c920:	fffb0007 0006fffe 000bffff fff8fffa     ................
   1c930:	fff60006 fffbfffb fffbfffc fffc0000     ................
   1c940:	fffa0008 fffd000e 0009fffa 0000fffe     ................
   1c950:	0002fff7 fff90002 00090002 000dfffc     ................
   1c960:	0008fffb fff90001 fff7000a 0007fff9     ................
   1c970:	fffefff6 00040000 fffc0006 0005000a     ................
   1c980:	00090000 fffdfff8 fff80002 fff70003     ................
   1c990:	00040000 0002fffd fff8000b fff70005     ................
   1c9a0:	fffffffb fff8fff9 fffdfffd 000bfff8     ................
   1c9b0:	0002fffa 00030007 0003fffd ffffffff     ................
   1c9c0:	fff9fffc fffe0005 0001fffc 00000001     ................
   1c9d0:	00010004 00000000 fffefffb 0000fff8     ................
   1c9e0:	fffbffff 0009fffc fffffffc fffc0004     ................
   1c9f0:	fffc0006 fffc0003 00020000 fffdfffd     ................
   1ca00:	00040005 fffb0003 00060001 0001fffb     ................
   1ca10:	ffff0000 fffe0005 00050000 0007fffd     ................
   1ca20:	fffefff6 fffb0005 fffefffc 0002fffe     ................
   1ca30:	0002fffe 00020005 fffe0006 0002fffc     ................
   1ca40:	fffb0001 fffbfffd fffa0002 00050001     ................
   1ca50:	00040005 fffe0000 fffc0000 fff9ffff     ................
   1ca60:	fffefffb fffcfff8 00010001 fffe0002     ................
   1ca70:	00010000 fffffffe fffbfffd 00000000     ................
   1ca80:	0000ffff fffefffe fffdfffe 00000000     ................
   1ca90:	0001fffc fffbfffa fffcffff fffdfffd     ................
   1caa0:	00030000 0001ffff 00000004 fffd0003     ................
   1cab0:	ffff0001 fffe0001 00000002 00010006     ................
   1cac0:	0008fffd 0006fffa 0002fffe 00020001     ................
   1cad0:	0001fffc 0000fffb fffcffff fffb0001     ................
   1cae0:	fffe0002 ffffffff ffff0001 fffdfffe     ................
   1caf0:	fffffffc 00000000 00030000 00040004     ................
   1cb00:	00030002 ffff0005 0000fffe 00020002     ................
   1cb10:	0002ffff 00040004 00010004 0002ffff     ................
   1cb20:	fffeffff 0000fffd fffbfffe fffd0000     ................
   1cb30:	ffffffff fffdfffb fffffffe fffcfffe     ................
   1cb40:	ffffffff ffffffff 00010002 fffe0000     ................
   1cb50:	fffeffff fffe0001 fffffffe 0001ffff     ................
   1cb60:	0000ffff fffc0000 0002fffe 0003fffe     ................
   1cb70:	0001fffe 00000000 00020004 00020002     ................
   1cb80:	0001ffff 0001ffff fffe0002 ffffffff     ................
   1cb90:	00010000 0002ffff fffe0001 fffdffff     ................
   1cba0:	fffcffff fffefffb fffefffe fffc0000     ................
   1cbb0:	fffefffe 0000ffff 0000fffe fffefffe     ................
   1cbc0:	fffffffe ffffffff 0001ffff 0002ffff     ................
   1cbd0:	00000001 fffe0001 fffe0000 fffe0000     ................
   1cbe0:	fffeffff ffff0001 00020001 00010002     ................
   1cbf0:	0003ffff 00020002 00010001 00020001     ................
   1cc00:	00010002 00020000 fffd0000 fffd0000     ................
   1cc10:	ffff0000 fffefffe fffffffe fffeffff     ................
   1cc20:	ffff0000 fffefffe ffffffff fffefffe     ................
   1cc30:	ffffffff 00010000 00000000 00000000     ................
   1cc40:	00000000 ffff0000 ffffffff 00010000     ................
   1cc50:	00010000 0002ffff ffff0000 00000000     ................
   1cc60:	ffffffff fffefffe fffefffe fffc0000     ................
   1cc70:	ffff0001 ffffffff ffff0002 fffeffff     ................
	...
   1cc88:	fffffffe 0000fffe fffefffe fffeffff     ................
   1cc98:	0000fffc fffdfffd fffffffe ffffffff     ................
   1cca8:	00010001 00000000 ffff0000 ffffffff     ................
   1ccb8:	00010001 00010003 00040001 00020004     ................
   1ccc8:	00010004 00000001 00010000 0000ffff     ................
   1ccd8:	ffff0000 0001fffe 0001fffd fffffffc     ................
   1cce8:	fffefffd fffefffe fffffffe 0002ffff     ................
   1ccf8:	0001ffff fffe0001 ffff0003 00000000     ................
   1cd08:	00000000 ffff0000 ffff0000 ffff0000     ................
   1cd18:	0000ffff fffeffff fffe0000 ffffffff     ................
   1cd28:	0001ffff 00020001 00010001 00000002     ................
   1cd38:	0001ffff 00000000 fffffffd 0000fffe     ................
   1cd48:	0000ffff 0000ffff 0000ffff fffeffff     ................
   1cd58:	fffffffe 0000ffff ffffffff ffffffff     ................
   1cd68:	fffffffe fffe0000 fffeffff fffeffff     ................
   1cd78:	ffff0000 00000000 00020001 00010002     ................
   1cd88:	fffffffe fffd0000 fffefffe fffefffd     ................
   1cd98:	ffffffff 00010001 ffffffff 0001ffff     ................
	...
   1cdb0:	00010001 00020002 00000001 0000ffff     ................
   1cdc0:	0000ffff fffffffd fffffffe 0001ffff     ................
   1cdd0:	0001ffff 00000000 ffff0000 fffeffff     ................
   1cde0:	fffefffd ffff0001 00000001 00020001     ................
   1cdf0:	00020003 00020002 0001ffff ffff0001     ................
   1ce00:	ffffffff fffefffd fffffffe fffe0000     ................
   1ce10:	fffeffff fffdffff fffcfffe fffdfffd     ................
   1ce20:	ffffffff 00000000 00000000 00020001     ................
   1ce30:	00010001 00000000 0000ffff ffffffff     ................
   1ce40:	0000ffff 0001ffff 0001ffff 00010001     ................
   1ce50:	00000001 ffff0001 0000ffff 00000000     ................
   1ce60:	ffff0000 0001ffff 00010001 00000000     ................
   1ce70:	fffffffe fffffffe fffeffff 0000fffd     ................
   1ce80:	fffefffd fffefffe fffefffe fffefffd     ................
   1ce90:	fffefffd fffefffd 0000fffe ffffffff     ................
   1cea0:	fffeffff ffffffff 0000fffe ffff0001     ................
   1ceb0:	ffffffff ffffffff ffffffff fffe0000     ................
   1cec0:	00000001 ffff0002 00010000 00010002     ................
   1ced0:	00020001 00010001 ffff0001 00000001     ................
   1cee0:	00020002 00000001 00010001 00020001     ................
   1cef0:	0000ffff ffffffff ffff0001 ffff0001     ................
   1cf00:	00000000 00000001 00000000 ffff0000     ................
   1cf10:	fffe0000 0000ffff 00030000 00020001     ................
   1cf20:	ffff0001 fffffffe ffff0000 ffffffff     ................
   1cf30:	00000000 ffff0000 ffff0000 ffff0000     ................
   1cf40:	fffeffff fffdfffd ffffffff ffffffff     ................
   1cf50:	0000fffd fffffffe fffdfffe 0000fffd     ................
   1cf60:	ffff0000 0000fffe 0000fffe 0001fffe     ................
   1cf70:	ffffffff fffefffd 0000fffe fffeffff     ................
   1cf80:	fffdffff 0000fffd 00010002 fffc0000     ................
   1cf90:	fffffffe 00020001 ffff0000 ffffffff     ................
   1cfa0:	00030002 00000002 00010000 00000003     ................
   1cfb0:	fffeffff 00030000 00040003 00000001     ................
   1cfc0:	0001fffe 00020003 fffe0000 fffffffe     ................
	...
   1cfd8:	0001ffff fffeffff fffeffff 00030000     ................
   1cfe8:	00000000 fffefffd 00020001 00020000     ................
   1cff8:	fffcfffb 0000fffa 00000004 00020004     ................
   1d008:	fffe0003 fffefffb 00020003 fffffffe     ................
   1d018:	00040002 ffff0005 fffe0001 fffb0001     ................
   1d028:	fffefffc fffefffe fffeffff fff7fffc     ................
   1d038:	fffcfff8 00030001 00020001 00000002     ................
   1d048:	0000fffb fff7fffc fff7000d 0006fffd     ................
   1d058:	fffffffb 00080009 0008ffef 0008fffa     ................
   1d068:	00020018 fff20000 0005ffe5 001d001a     ................
   1d078:	ffe40007 ffebffea 0028000c fff3002e     ..........(.....
   1d088:	ffdaffd0 0028fffc 000c0031 ffd4ffde     ......(.1.......
   1d098:	0003ffde 001d001d ffe7fff9 0014fffb     ................
   1d0a8:	ffe60006 fff9ffd7 00260020 ffee0010     ........ .&.....
   1d0b8:	ffe4ffd6 0036000f fffb002f ffc6ffca     ......6./.......
   1d0c8:	0026fffa 00120022 ffef0004 fff4ffe1     ..&."...........
   1d0d8:	fffd0003 000ffffe 00160010 ffc9fffc     ................
   1d0e8:	0000ffd7 00340021 0005001f ffc6ffe0     ....!.4.........
   1d0f8:	0011fff2 00280021 ffc7fff9 fff7ffd7     ....!.(.........
   1d108:	00270019 fff8001c ffdaffdd 00070003     ..'.............
   1d118:	fff8fff9 00180009 fffd0015 ffdaffd5     ................
   1d128:	00210001 000a002d ffc9ffde 001fffe0     ..!.-...........
   1d138:	0019003c ffcbffe4 0017ffeb 000c001e     <...............
   1d148:	ffe8ffdc 00180012 ffed000b ffe7ffd0     ................
   1d158:	00330018 ffea001e 0006ffe1 000f000a     ..3.............
   1d168:	ffef0009 0006fff4 00020007 fff0fff7     ................
   1d178:	000ffff0 00150010 ffe6fff4 fffdffef     ................
   1d188:	0026001e ffe2fff6 ffedfff0 0021000e     ..&...........!.
   1d198:	ffebffff 000cffec 000e0029 ffd1fff0     ........).......
   1d1a8:	0002ffdc 0005000e ffe1ffed 0008fff9     ................
   1d1b8:	001f0008 ffd70014 0008ffe8 00040003     ................
   1d1c8:	fff70006 fffbfff1 00210001 ffed0012     ..........!.....
   1d1d8:	ffc8ffdb 0040001e ffe8fff7 ffd6ffd3     ......@.........
   1d1e8:	001a0026 0003001b ffd8ffce 00320016     &.............2.
   1d1f8:	fff5000b fff6ffeb 0009000e fff2fff2     ................
   1d208:	fffcfffc 000f0003 ffea0009 fffdffde     ................
   1d218:	00110021 ffd6fffb 001cfff3 00010011     !...............
   1d228:	0003ffe4 0017fff4 ffec0038 fff4ffe1     ........8.......
   1d238:	002b000e fffb0016 ffefffdf 00140005     ..+.............
   1d248:	000b0002 ffec001b 0004ffd7 0023000c     ..............#.
   1d258:	ffdd000d fff4ffe5 0015001d ffdb0004     ................
   1d268:	fffdffe5 0010000c ffd7ffec 000ffffa     ................
   1d278:	ffe50009 fff80008 001fffe2 000e0005     ................
   1d288:	ffe1000f ffeeffde 00340026 ffdd0008     ........&.4.....
   1d298:	ffe9ffd2 004e001d ffbb0007 ffe9ffd1     ......N.........
   1d2a8:	002a002d ffec0006 0002ffd4 001e0022     -.*........."...
   1d2b8:	ffedfff9 0006ffe3 0016001b ffeffffa     ................
   1d2c8:	000cfff3 001a0000 00040030 ffe2ffc0     ........0.......
   1d2d8:	00270027 000a001e ffc9ffea 000cfffb     '.'.............
   1d2e8:	00070014 ffe00009 0010fff3 ffec000f     ................
   1d2f8:	0023ffee fffcfffe 0000000f fff5fff2     ..#.............
   1d308:	0033fff7 fffa002f ffd7ffcc 002f000b     ..3./........./.
   1d318:	fff30029 ffe2ffe6 002ffffe ffe50016     )........./.....
   1d328:	0008ffdc 0033002a ffdbffe0 0014fff3     ....*.3.........
   1d338:	0013001a ffed0002 00040000 fff6002c     ............,...
   1d348:	fff40000 00140008 fffcfff4 fff60008     ................
   1d358:	001cfff6 fff80007 ffea0000 0028fff8     ..............(.
   1d368:	ffea0004 fff4fff0 fffb000e 00100000     ................
   1d378:	ffe9fff1 000d0002 ffee0009 0002ffed     ................
   1d388:	fff2fffd 00240016 ffe4ffe6 0005ffea     ......$.........
   1d398:	000f0024 ffddfff2 00120005 0020fffd     $............. .
   1d3a8:	ffddfff8 0006ffe6 00180039 ffd2ffd7     ........9.......
   1d3b8:	0018ffff 001b003f ffe7ffee 0019ffe3     ....?...........
   1d3c8:	0028005a ffd4ffe9 001fffe3 00100048     Z.(.........H...
   1d3d8:	fff3ffe6 0011ffe8 000d001e ffd60006     ................
   1d3e8:	002cffe3 fff50013 fff3fff1 0016ffff     ..,.............
   1d3f8:	ffec0017 fff7ffea 000d0008 0006fffc     ................
   1d408:	fffbfff7 fff30005 ffebffeb 0019001b     ................
   1d418:	ffeffff7 fffaffe5 00120011 fff1fffb     ................
   1d428:	0005fffa ffdf0006 000efff4 00180018     ................
   1d438:	ffe6fff1 0018ffee 00030021 00010001     ........!.......
   1d448:	0013fffc fffe0019 fffdffec 001d0021     ............!...
   1d458:	fff30005 0003ffee 0029000d fffe0019     ..........).....
   1d468:	ffedfffc 0020001b 000f0015 0017ffeb     ...... .........
   1d478:	00090017 fff90007 000efffb 000d002d     ............-...
   1d488:	ffe5ffe0 001b0003 00050017 ffd8fff2     ................
   1d498:	00150000 ffef0002 fff1fff2 000dfffc     ................
   1d4a8:	ffe4fffe fffcffe2 fffc0005 fffdfff8     ................
   1d4b8:	fff5ffe4 fffbfff6 fff10009 fff5fff4     ................
   1d4c8:	fff6fffe 0002fff3 fff8fffd fff8fffc     ................
   1d4d8:	0001fffa fffa0000 ffff0003 000dffef     ................
   1d4e8:	fffc0000 fff20003 000bfffe ffec0006     ................
   1d4f8:	000efffb 0009001d fff7ffe6 00040001     ................
   1d508:	00140022 ffeefff1 0022ffef 000d0017     ".........".....
   1d518:	ffe9fff4 001d0014 fff90015 fffeffff     ................
   1d528:	0019fff8 fff6001b fffbfff5 0009000a     ................
   1d538:	00000012 000ffff0 fffe0002 0005fff7     ................
   1d548:	fff70003 fffa0000 fff60000 00090008     ................
   1d558:	fff7ffe5 fff2fff5 00000018 ffeaffec     ................
   1d568:	fffcfff1 00050000 ffeaffe6 0000ffef     ................
   1d578:	fff70012 ffe2ffe3 0000fffd fff50002     ................
   1d588:	ffebffd6 001d0008 ffdc0001 0005fff2     ................
   1d598:	0009000f fff8fff7 0001ffee 00010002     ................
   1d5a8:	ffeafff7 0009fff6 ffee0006 fff2fff5     ................
   1d5b8:	fff9fff7 0009fffc ffe7fff8 fffafff7     ................
   1d5c8:	000d0007 ffedfff3 0012fffb 00020005     ................
   1d5d8:	0003fff3 fffe0006 00000011 fff8ffe7     ................
   1d5e8:	00030012 fffcfff9 fff70004 fff2fff4     ................
   1d5f8:	0005000e fff3fff5 fffffffb 0019fff8     ................
   1d608:	ffe4fff1 fffbfffb 0013001e ffe6ffee     ................
   1d618:	000effef 00000018 ffe7ffed 0001fffe     ................
   1d628:	fffbfffc fff6fff3 0017fffa ffe9000e     ................
   1d638:	ffeaffd7 001e001a fff5fff8 ffe2ffef     ................
   1d648:	000effdf fff60019 ffe9ffdf fffb0002     ................
   1d658:	ffedffee fff6fff5 0006fff4 ffe00002     ................
   1d668:	ffecffe3 0016000a fff7fff9 fffffff0     ................
   1d678:	fff9fff8 00000008 fffe0009 fffc0004     ................
   1d688:	fffcfff8 00110011 000dfffe fff40001     ................
   1d698:	fffd000d 0017fff8 0012000f fffbffee     ................
   1d6a8:	fff30006 000a0018 fff80011 0000ffeb     ................
   1d6b8:	fffd0006 0006fffd fff3fffc 0000fffa     ................
   1d6c8:	fff0ffde 0007fff6 fffb000c ffd9ffdb     ................
   1d6d8:	0001ffe0 fff90016 ffd0ffe2 ffe3ffe1     ................
   1d6e8:	ffff0000 ffe5fffb ffecffe4 fffbfff7     ................
   1d6f8:	fff8ffe5 fff4fffe fffeffe9 fff5fff9     ................
   1d708:	fffcffe8 00050008 ffebfff2 fffdfffe     ................
   1d718:	fffb0010 fffc000b 0008fff1 000f000e     ................
   1d728:	0002fffd 001c0007 fffe000d 00030000     ................
   1d738:	00200015 000a0019 ffee0005 00190007     .. .............
   1d748:	00130029 fffcfff5 0015fff3 00130015     )...............
   1d758:	fffa0006 000e0007 0006000d fff4fff6     ................
   1d768:	00120005 fff80016 fff5fffc 0011fffe     ................
   1d778:	ffff0007 fffcfff8 000affff fff7fffe     ................
   1d788:	fffefff9 0008000c fff7fff5 fff3ffe6     ................
   1d798:	0010000c ffee0010 fff2ffe9 0008fff5     ................
   1d7a8:	00070013 fff8fff7 fff6fff7 fffefffb     ................
   1d7b8:	0002000b 0007ffff fffdfff2 fffefffe     ................
   1d7c8:	00090010 00050015 fff3fffa 000efffc     ................
   1d7d8:	00200006 fff9000c ffecfff9 000f0004     .. .............
   1d7e8:	00220006 fff5000d ffddfff8 00200010     .."........... .
   1d7f8:	000d001d fffdffe7 0015fff2 0017001e     ................
   1d808:	ffd9fff9 0004000f 001f0033 ffc0ffbe     ........3.......
   1d818:	0030ffee 00450049 ffa5003a ffb1ff4f     ..0.I.E.:...O...
   1d828:	00af008b 0010005f ff86ffae 0027ff65     ...._.......e.'.
   1d838:	007600e8 ffb4ffff 0008ffb0 001b002f     ..v........./...
   1d848:	00130012 0031001e ffd8000d ffc8ffa3     ......1.........
   1d858:	00c20042 ffec009e ff80ff5f 0016ffce     B......._.......
   1d868:	007e005b 000a0084 ff7dff7f 001bffd7     [.~.......}.....
   1d878:	004d002d 000e0059 ffbeffc6 fff0ffdd     -.M.Y...........
   1d888:	0034ffeb 003a006f ffa4ffdb ffeeffbf     ..4.o.:.........
   1d898:	0035000f fff60030 ffcdffd6 0028ffee     ..5.0.........(.
   1d8a8:	001d0028 ffe20024 001cffea 001f001e     (...$...........
   1d8b8:	ffd3ffe6 ffe5ffdc 00300020 ffdc0013     ........ .0.....
   1d8c8:	ffc2ffb3 0020ffe1 002a003f fff3fffb     ...... .?.*.....
   1d8d8:	002f000b 004d005a fff1001d 0032fff5     ../.Z.M.......2.
   1d8e8:	00180041 ffb0ffeb ffe2ffb8 0043001b     A.............C.
   1d8f8:	ffbf0005 ffbfffa2 0019000c 002a0027     ............'.*.
   1d908:	ffeafffb 0027fff1 00210031 00340013     ......'.1.!...4.
   1d918:	00150027 ffff001f 000fffef 00100001     '...............
   1d928:	ffa70003 ff9f0028 ffe0fff3 0022ff99     ....(.........".
   1d938:	0049ff9a ffde0015 ff97ffe6 0009ffdb     ..I.............
   1d948:	009f0062 ffa4006c ff7bff38 0103003c     b...l...8.{.<...
   1d958:	004b012f ff0fff7b fffbff56 011800a0     /.K.{...V.......
   1d968:	ff990037 ffabff4e 0011004e fff6ffd4     7...N...N.......
   1d978:	00150021 ffe6ffd1 ffc2ffe9 007b0042     !...........B.{.
   1d988:	00130082 ff81ff77 0016ffca 00a4006b     ....w.......k...
   1d998:	00360089 ff3effa8 0009ff75 00810082     ..6...>.u.......
   1d9a8:	002b0054 ff9dffe1 ffe3ff92 0041003e     T.+.........>.A.
   1d9b8:	00440048 ffadffff ffc8ff94 0026000f     H.D...........&.
   1d9c8:	fff6000b ffeeffee 0010ffe6 001d002e     ................
   1d9d8:	ffd5000c 001cffec 004b002e ffd0000b     ..........K.....
   1d9e8:	ffbeffb2 0013fffa 001f003d ff80ffb1     ........=.......
   1d9f8:	ffe8ff93 00140016 fffc002a 002cfff6     ........*.....,.
   1da08:	005a005c ffb9ffe9 0009ffc2 00590056     \.Z.........V.Y.
   1da18:	ffa00016 ff9aff75 002cfff0 ffde0027     ....u.....,.'...
   1da28:	ff9bffa3 001fffde 00100020 0014000d     ........ .......
   1da38:	000e0009 002f002f 0017001d 00440045     ...././.....E.D.
   1da48:	ffec000e fff1ffc9 ffe7ffe0 ffcffffe     ................
   1da58:	ffadffce ffc9ffa6 ffc6ffc6 ffb4000c     ................
   1da68:	00040029 0063ffda 0033ff9f 0037001f     ).....c...3...7.
   1da78:	fff80083 ffe10010 003affe3 0053006c     ..........:.l.S.
   1da88:	ff9bffef ffb5ff8f 006bffec 002c00c8     ..........k...,.
   1da98:	ff72ffbe 0015ff79 007b0033 ffe60054     ..r.y...3.{.T...
   1daa8:	ff91ffb8 001dffeb fff70014 ffeaffd2     ................
   1dab8:	ffd2ffea ffdfffda 0059002a fffb0030     ........*.Y.0...
   1dac8:	ff73ff9a fff8ff90 007e0065 00040050     ..s.....e.~.P...
   1dad8:	ff98ffbf ffcfffa9 0055001e 000c0030     ..........U.0...
   1dae8:	ffbbffe2 ffa7ffb1 0014ffce 00440043     ............C.D.
   1daf8:	ffce0009 ffd7ffbb 0015fffb 0004001f     ................
   1db08:	ffdeffe3 00640019 001b0056 ffecffe9     ......d.V.......
   1db18:	002a000c 0064005a ffc40019 ffd4ffaf     ..*.Z.d.........
   1db28:	001c0008 ffd6000d ffb7ffaf ffd3ffdb     ................
   1db38:	0002ffe8 00420025 00b20075 004c0087     ....%.B.u.....L.
   1db48:	00340029 00490050 00070032 ffd7ffd6     ).4.P.I.2.......
   1db58:	ffc1ffd0 ff73ff9e ff8aff7b ffaeffaf     ......s.{.......
   1db68:	ffc0ffac 0012ffc9 0043002e fff50027     ..........C.'...
   1db78:	00380014 009c006c 0038009d ffa2ffe1     ..8.l.....8.....
   1db88:	0000ffd7 fffe0004 ff76ffa1 ffb8ff54     ..........v.T...
   1db98:	ffd0ffb8 ff7eff64 ffb1fff4 ffeb0077     ....d.~.....w...
   1dba8:	fff3ffec 009affc8 0094008c ffe50061     ............a...
   1dbb8:	0046fff1 00d700ad ffd50071 ff63ff71     ..F.....q...q.c.
   1dbc8:	00beffcd 003100ae fed8ff6d ffc9ff67     ......1.m...g...
   1dbd8:	00980063 ffa80009 ffa4ff50 0095005b     c.......P...[...
   1dbe8:	001a0080 fff9ffd0 00620037 00580071     ........7.b.q.X.
   1dbf8:	002b0037 ffe0ffff ff70ffad ffb7ff6d     7.+.......p.m...
   1dc08:	0078002d 00150063 ff2dff87 ffa9ff32     -.x.c.....-.2...
   1dc18:	00a30067 00260081 ffd3ffe0 ffdaffce     g.....&.........
   1dc28:	0007fff7 00240016 0036002c ffda0011     ......$.,.6.....
   1dc38:	ff95ffa2 ffecffac 001d0013 fff50039     ............9...
   1dc48:	ffa3ffe5 0005ffc0 0004ffea 005d0031     ............1.].
   1dc58:	00160049 ffb2ffcb fffbffc6 0051003d     I...........=.Q.
   1dc68:	ffe60036 ffa6ff88 00590007 004c0063     6.........Y.c.L.
   1dc78:	000c0040 004c0015 002d004f ffc2ffe6     @.....L.O.-.....
   1dc88:	ffd9ffcf ffedfff5 ffb0ffc3 ffd2ffb6     ................
   1dc98:	ffc9ffdd ffa4ffb8 0046fffc 0064006f     ..........F.o.d.
   1dca8:	fff80020 000cffd0 006b004a 005b0070      .......J.k.p.[.
   1dcb8:	ffdb000f ffdcffd4 ffd0ffe5 ffc2ffe2     ................
   1dcc8:	ff95ffbf ff9cffd9 ffcfffb5 002cff69     ............i.,.
   1dcd8:	000dffb5 fff8002e 00030068 00170017     ........h.......
   1dce8:	002affe8 00890065 001f006a ff9bffcf     ..*.e...j.......
   1dcf8:	ffd9ffb0 00760094 fff90031 ffc1ff89     ......v.1.......
   1dd08:	0014ffad 00350069 fff3003a 0018ffe1     ....i.5.:.......
   1dd18:	fffa000a ffd6ffe9 000affeb 003c0022     ............".<.
   1dd28:	00300047 00120028 ffb2ffdb ffbdff8f     G.0.(...........
   1dd38:	005f001b 0039006c ffc70011 ff9fff8f     .._.l.9.........
   1dd48:	0043ffe2 002d0052 fff4000b 0012000b     ..C.R.-.........
   1dd58:	000b0011 ffeafffa ffe5ffde 0010fff9     ................
   1dd68:	000f000c ffddfff8 ffa9ffac fffcffca     ................
   1dd78:	00430058 000d005e ffd4ffc4 fff0ffbb     X.C.^...........
   1dd88:	002e001a ffea0028 fff2ffe8 ffc8ffdd     ....(...........
   1dd98:	ffc4ffc5 ffe0ffac 0062002f 002a0045     ......../.b.E.*.
   1dda8:	ffe50011 0069000f 00a000a5 0012004b     ......i.....K...
   1ddb8:	ffa8ffce ffd6ffcc ffc1ffdb ffc5ffaa     ................
   1ddc8:	ffdfffce ffbcffde ffc6ffb2 00530007     ..............S.
   1ddd8:	007d0078 00290066 00270010 008e005f     x.}.f.)...'._...
   1dde8:	002a0071 ffed0003 000cffe7 ffebfff9     q.*.............
   1ddf8:	ff79ffad ff82ffbc ffd0ffee ffe5ffab     ..y.............
   1de08:	ffedff6e 0011ffea fffa004d 00040019     n.......M.......
   1de18:	0058000d 00890062 00310073 ffd8ffef     ..X.b...s.1.....
   1de28:	0016ffe3 00390076 ffac0004 ffa8ff68     ....v.9.....h...
   1de38:	0029ffc6 ffff004b ffb7fff0 0017ffcb     ..).K...........
   1de48:	002b001e ffe80007 ffd6ffda 002afff3     ..+...........*.
   1de58:	006f006f 00150054 ff8dffb1 ffa8ff79     o.o.T.......y...
   1de68:	00390008 0051005b ffcc0015 ff86ff90     ..9.[.Q.........
   1de78:	000effc1 00440037 003e0040 0025003c     ....7.D.@.>.<.%.
   1de88:	fff5000d ffc4ffd6 ffdaffbc 00310019     ..............1.
   1de98:	000c0032 ff9cffce ffa1ff83 002cffe5     2.............,.
   1dea8:	006a0068 001c0044 ffe4ffed fffbffe4     h.j.D...........
   1deb8:	0024001f 0005001f 00160003 ffd2fff8     ..$.............
   1dec8:	ff9dffab ffa3ffa1 0036fff4 004d0053     ..........6.S.M.
   1ded8:	00500042 0046003c 00390043 0034003d     B.P.<.F.C.9.=.4.
   1dee8:	002e0040 fff6000e ff8fffbc ff97ff81     @...............
   1def8:	ffcbffc7 ffb8ffc2 ffc9ffb0 001cfff0     ................
   1df08:	0029002b 001e001d 0052002d 00900076     +.).....-.R.v...
   1df18:	0048007b fffc0019 0003fff6 000b0012     {.H.............
   1df28:	ffc3ffd2 ffb8ffa1 ff8fffb3 ff81ffd0     ................
   1df38:	ffdbffd9 002bffda 0024ffd8 00110016     ......+...$.....
   1df48:	0024005a 00550053 0092005c 005a006d     Z.$.S.U.\...m.Z.
   1df58:	ffe00014 ffeeffc6 0036003e ffc1002a     ........>.6.*...
   1df68:	ff8cff82 fff5ff81 fff60007 ffadfffd     ................
   1df78:	0003ffe1 0023000e ffe7fff1 0001ffed     ......#.........
   1df88:	005f0037 006d0082 00030041 ffb8ffc9     7._...m.A.......
   1df98:	ffbaff9d ffeaffcc 00260013 fff7002c     ..........&.,...
   1dfa8:	ffa0ffbe ffcdff9a 001c0000 002c002b     ............+.,.
   1dfb8:	00470040 00200043 ffb7ffe9 ffaaff93     @.G.C. .........
   1dfc8:	0030fff6 00350046 ffdc0009 ffc7ffbf     ..0.F.5.........
   1dfd8:	fffbffdf fff6fff6 0020000c 0042004a     .......... .J.B.
   1dfe8:	fff3001f ffb8ffc0 ffcdffb1 000dfffe     ................
   1dff8:	00290026 00140025 ffbeffd8 ffbbffab     &.).%...........
   1e008:	002ffff5 008b0071 008c0098 00320056     ../.q.......V.2.
   1e018:	ffdd0006 ffbdffb9 0023fff4 00190034     ..........#.4...
   1e028:	ffa7ffe1 ff68ff6d ff86ff74 ffcdffa4     ....m.h.t.......
   1e038:	003f0014 0058005a 0011002e 00240006     ..?.Z.X.......$.
   1e048:	00510049 0057005b 0045004a 0035003d     I.Q.[.W.J.E.=.5.
   1e058:	ffbbfffa ff7eff91 ffa1ff8f ffc6ffc4     ......~.........
   1e068:	ffbcffc7 ffd8ffca ffb7ffb9 ffb3ff92     ................
   1e078:	000effdd 00630065 005b0070 003b002a     ....e.c.p.[.*.;.
   1e088:	004d0037 0049005f 0041004b 0028003c     7.M._.I.K.A.<.(.
   1e098:	fffe001e ffbeffcf ffb6ff97 ffb8ffc1     ................
   1e0a8:	ffbeffd8 ffc1ffbf ffc0ffaf fff6ffd6     ................
   1e0b8:	00410027 00510055 00270040 005d003b     '.A.U.Q.@.'.;.].
   1e0c8:	0071006a fff20031 ffa1ffc4 ffd3ffbe     j.q.1...........
   1e0d8:	fff1ffe8 ffc6ffd6 ffc3ffc4 ffcdffc6     ................
   1e0e8:	ffe0ffd5 000dfff7 0020001d 00200017     .......... ... .
   1e0f8:	001d0023 00190026 000b000f 00190004     #...&...........
   1e108:	00070010 ffe7fff8 ffe8ffe5 000d0001     ................
   1e118:	ffef000e ffd2ffd2 ffe9ffd4 00060001     ................
   1e128:	fff0fffd 000bfff7 00220017 ffff001a     ..........".....
   1e138:	ffd8ffe5 fffdffea 0039001b 00460043     ..........9.C.F.
   1e148:	0041003f 001a0030 00120013 000a0011     ?.A.0...........
   1e158:	fff80000 ffdaffe5 ffd9ffd9 ffcbffd5     ................
   1e168:	ffbaffc1 ffc9ffbf fff7ffe1 00170003     ................
   1e178:	001e0022 001e0025 001d001e 00200012     "...%......... .
   1e188:	00230021 000f0019 0005000f fffd0002     !.#.............
   1e198:	ffe9fff6 ffd6ffda ffddffd9 ffd8ffe2     ................
   1e1a8:	ffbbffc8 ffcbffc2 ffdeffd0 fff7ffe3     ................
   1e1b8:	fffeffec 001b0013 00260031 0052003c     ........1.&.<.R.
   1e1c8:	00650052 0044005f 001c0039 00070008     R.e._.D.9.......
   1e1d8:	0011000d 0007001b ffe5ffed ffabffbc     ................
   1e1e8:	ffaeffac ffbfffc2 ffd7ffbf 0007ffec     ................
   1e1f8:	001e0018 fffd0012 ffecfff0 002e0010     ................
   1e208:	004a0042 002a0036 000b0021 fff20000     B.J.6.*.!.......
   1e218:	ffe6ffe5 0002ffe8 00160013 fff50003     ................
   1e228:	ffd2ffe2 ffd1ffd1 ffe0ffdb fffcffe1     ................
   1e238:	00170010 00030017 fff8fffe fffefff6     ................
   1e248:	fffbfffb 0011fffe 00270019 001d002e     ..........'.....
   1e258:	fff3000e 0001fff6 000affff 00170010     ................
   1e268:	0011001a 000b0012 fff2ffff ffe7ffec     ................
   1e278:	ffecffec fff9fff1 00170002 000c0013     ................
   1e288:	00030008 0005ffff 001b0012 00070016     ................
   1e298:	00060006 fffd0003 ffebfff6 ffe0ffe2     ................
   1e2a8:	ffedffe7 fffafff4 fff3fff7 ffeaffea     ................
   1e2b8:	fff8fff3 00100002 001d0016 00170019     ................
   1e2c8:	ffff000e 00000001 00070008 000c0008     ................
   1e2d8:	00000007 ffe8fff8 ffcaffdd ffd4ffd2     ................
   1e2e8:	fff1ffdd fffeffe9 ffe9ffea ffd4ffe8     ................
   1e2f8:	ffe3ffed 000efffc 0037000f 00510040     ..........7.@.Q.
   1e308:	00450056 00220038 001e0017 004b0033     V.E.8.".....3.K.
   1e318:	00570050 00180033 ffcefff9 ffb9ffcb     P.W.3...........
   1e328:	ffbbffb3 ffc8ffb4 ffdfffd9 ffcaffdf     ................
   1e338:	ffabffbf ffc6ffb2 0027ffef 004c003b     ..........'.;.L.
   1e348:	002d0045 00140027 00220015 0027001b     E.-.'....."...'.
   1e358:	0031002b 0031003b 0004001c ffc6ffe3     +.1.;.1.........
   1e368:	ffb5ffb3 ffdcffc4 ffedffe6 fff0fff7     ................
   1e378:	ffdbffed ffceffca ffe8ffd2 00200002     .............. .
   1e388:	0045003e 0033003f 0021002e 000c000d     >.E.?.3...!.....
   1e398:	001a0008 002a0023 00230034 ffe9000c     ....#.*.4.#.....
   1e3a8:	ffc2ffc5 ffd3ffc5 ffe4ffe1 ffedfff1     ................
   1e3b8:	ffeaffe8 ffe7ffec ffe0ffdc 0019fff3     ................
   1e3c8:	0054003d 00490060 0006002e ffe7ffea     =.T.`.I.........
   1e3d8:	ffecffe8 fff5fff0 00060007 ffe7fffb     ................
   1e3e8:	ffc1ffd1 ffbcffb4 ffebffce 0024000c     ..............$.
   1e3f8:	0049003f 00360044 0010001c 000b0009     ?.I.D.6.........
   1e408:	0028001b 002c0031 000e0023 ffd5fff6     ..(.1.,.#.......
   1e418:	ffa3ffb2 ffa8ff94 ffd1ffb7 ffe4ffea     ................
   1e428:	ffd5fff6 ffc4ffd5 ffd5ffba 0008ffcd     ................
   1e438:	003f0024 004b005d 004a0057 004c003d     $.?.].K.W.J.=.L.
   1e448:	0040003e 00320030 0049003f 0043005c     >.@.0.2.?.I.\.C.
   1e458:	ffe00021 ffabffb2 ffa9ff93 ffb0ffb4     !...............
   1e468:	ffb1ffbc ffe9ffca ffe6ffe7 ffc4ffce     ................
   1e478:	ffdaffc7 003e000d 007d0074 004f0070     ......>.t.}.p.O.
   1e488:	0006001d ffe5ffee 000bfff9 003f002d     ............-.?.
   1e498:	0033003c ffe3000c ffabffc2 ffa4ffa4     <.3.............
   1e4a8:	ffdcffba 000ffffb 0012001b ffcbfff2     ................
   1e4b8:	ffaeffb4 ffedffca 003c0019 0058004c     ..........<.L.X.
   1e4c8:	0036004f 00030018 fff8fffc 00210008     O.6...........!.
   1e4d8:	0046003f 00240038 ffd7fffd ff9dffb0     ?.F.8.$.........
   1e4e8:	ffbdffab fff7ffe1 000d0009 ffe6fffa     ................
   1e4f8:	ffcaffce ffeeffd4 0036000e 0075005f     ..........6._.u.
   1e508:	005b0075 00150039 ffd7ffeb ffebffdb     u.[.9...........
   1e518:	00110003 00160019 ffd6fff6 ff92ffae     ................
   1e528:	ff9cff8d fff0ffc1 003e001e 003b0041     ..........>.A.;.
   1e538:	001b0028 0010000f 00290017 0050003c     (.........).<.P.
   1e548:	005a005b 00170042 ffb9ffe4 ff95ff9c     [.Z.B...........
   1e558:	ffb8ffa4 ffd2ffc9 ffd0ffd3 ffb0ffb6     ................
   1e568:	ffaeff9f ffd4ffb7 000ffffc 003f0038     ............8.?.
   1e578:	005e0059 00550050 00420041 00580050     Y.^.P.U.A.B.P.X.
   1e588:	00670075 002d0051 fff20005 fff3ffeb     u.g.Q.-.........
   1e598:	ffcbffe9 ff90ffac ff94ff93 ffb7ffab     ................
   1e5a8:	ffb0ffac ffd7ffb5 00160006 00180026     ............&...
   1e5b8:	0015000d 002d0016 005c0043 005d0067     ......-.C.\.g.].
   1e5c8:	0027004b fff2000e ffd7ffd8 fff7ffdf     K.'.............
   1e5d8:	00150010 fff50012 ffc4ffda ffa9ffad     ................
   1e5e8:	ffb6ffa5 fff3ffd6 002c0016 001d002e     ..........,.....
   1e5f8:	ffe6fffb ffecffdb 00230009 004b003e     ..........#.>.K.
   1e608:	0044004e 00150027 ffeefffc ffe4ffe5     N.D.'...........
   1e618:	000dfffd 0019001a fff80009 ffbfffd3     ................
   1e628:	ffc0ffb5 fff3ffdf 00160009 0018001b     ................
   1e638:	ffeffffa fff0ffea 0018ffff 005c003f     ............?.\.
   1e648:	00560066 00170034 ffe6fff7 ffdaffdb     f.V.4...........
   1e658:	ffeaffea 0001fffa ffeffffe ffabffc6     ................
   1e668:	ffa3ff9c ffd9ffbe 00260005 0043003f     ..........&.?.C.
   1e678:	002c0033 001c0021 0021001d 00470037     3.,.!.....!.7.G.
   1e688:	004f0053 001b0037 ffd1fff7 ffa6ffb7     S.O.7...........
   1e698:	ffafffab ffc7ffb9 ffcfffcb ffbeffc4     ................
   1e6a8:	ffbaffc0 ffdcffd6 00220010 00430033     ..........".3.C.
   1e6b8:	004a0035 0054003c 00610063 004d0067     5.J.<.T.c.a.g.M.
   1e6c8:	00480047 003f003a fff2001d ffbaffce     G.H.:.?.........
   1e6d8:	ffdbffc7 ffe5fff4 ff87ffb9 ff7aff69     ............i.z.
   1e6e8:	ffb6ff8e ffdeffce 0006fff2 004f002e     ..............O.
   1e6f8:	00320042 0004000b 00240012 0067004d     B.2.......$.M.g.
   1e708:	00720075 002d0055 ffd5fff7 ffa1ffb4     u.r.U.-.........
   1e718:	ffd2ffb1 001f0001 0006001f ffb0ffd6     ................
   1e728:	ff8dff93 ffabff97 0007ffd6 00550032     ............2.U.
   1e738:	004f005f fff50023 ffd8ffda 001dfff8     _.O.#...........
   1e748:	005a0042 004d005b 0004002a ffcbffe3     B.Z.[.M.*.......
   1e758:	ffc5ffc4 0000ffdc 0030001e 00110027     ..........0.'...
   1e768:	ffc4fff1 ffa9ffab ffefffc5 00260010     ..............&.
   1e778:	0029002d fff50015 ffdaffe2 ffe8ffdb     -.).............
   1e788:	0041000b 007a006c 00360061 ffe50009     ..A.l.z.a.6.....
   1e798:	ffc9ffcf ffe6ffd4 0009fff7 00160017     ................
   1e7a8:	ffc7fff8 ff83ff99 ffabff8d 000affd6     ................
   1e7b8:	00500036 0035004b 00130023 00000005     6.P.K.5.#.......
   1e7c8:	0027000a 00620049 00530067 fffc002d     ..'.I.b.g.S.-...
   1e7d8:	ffa4ffc8 ffa2ff98 ffcaffb4 ffe6ffd9     ................
   1e7e8:	ffdcffe7 ffb7ffd0 ffa5ffaf ffdcffc3     ................
   1e7f8:	00330015 005a004f 00460048 00440036     ..3.O.Z.H.F.6.D.
   1e808:	0054004e 00520057 0056004e 00480053     N.T.W.R.N.V.S.H.
   1e818:	ffe6001f ffa0ffb9 ffbeffa4 ffd5ffdc     ................
   1e828:	ff93ffb6 ff8aff80 ffbfff9c ffdfffcc     ................
   1e838:	0014fff1 00660049 00520064 0025002e     ....I.f.d.R...%.
   1e848:	002a0023 0042003a 0052004e 002c0046     #.*.:.B.N.R.F.,.
   1e858:	ffd70000 ff98ffae ffb5ff9c fff8ffd6     ................
   1e868:	ffff0006 ffd5ffe6 ffbdffc7 ffb7ffb4     ................
   1e878:	0001ffd8 004f002e 00660068 0024004e     ......O.h.f.N.$.
   1e888:	ffe7ffff fff7ffe9 0020000d 00370032     .......... .2.7.
   1e898:	000f0027 ffe1fff8 ffc1ffd0 ffd9ffc8     '...............
   1e8a8:	001afff8 002f002b ffff001f ffc3ffd9     ....+./.........
   1e8b8:	ffdeffc8 fffefff0 00160008 000b0018     ................
   1e8c8:	fff0fffd ffe0ffe6 0002ffe6 004b002a     ............*.K.
   1e8d8:	004f0056 0024003a ffe60004 ffd9ffd6     V.O.:.$.........
   1e8e8:	fff1ffe5 000efffd fffb000f ffb9ffd9     ................
   1e8f8:	ffa1ffa8 ffc3ffaa 000fffe7 00320027     ............'.2.
   1e908:	002c0033 000d0021 fff8fff9 00260006     3.,.!.........&.
   1e918:	005a0043 0047005d ffed001d ffb5ffc9     C.Z.].G.........
   1e928:	ffabffaf ffc4ffb2 fff9ffde ffeffffc     ................
   1e938:	ffc1ffd9 ffaeffad fff3ffc9 003d001e     ..............=.
   1e948:	00630055 00670066 003c004e 00200024     U.c.f.g.N.<.$. .
   1e958:	003a002a 0054004e 002a0045 ffed0008     *.:.N.T.E.*.....
   1e968:	ffb3ffd5 ff90ffa0 ffadff98 ffe9ffcf     ................
   1e978:	ffdcffef ffbbffc3 ffdbffc0 0004fff1     ................
   1e988:	002a0017 00580044 004c005b 00090028     ..*.D.X.[.L.(...
   1e998:	fff7fff7 00130007 002e0023 001c002b     ........#...+...
   1e9a8:	ffe90004 ffc1ffd5 ffbeffb8 ffedffd1     ................
   1e9b8:	000d0003 fffb0007 ffeafff1 ffdcffe2     ................
   1e9c8:	fff5ffe3 001c000d 002e0029 001a002b     ........)...+...
   1e9d8:	fff20004 fff8fff0 000a0002 00160011     ................
   1e9e8:	00110015 00040008 fffeffff fffffffc     ................
   1e9f8:	00070002 00010007 ffeefff8 ffdbffe4     ................
   1ea08:	ffe3ffd9 fff8fff1 fff4fff8 ffeefff1     ................
   1ea18:	ffefffec 0006fffa 00200012 00440037     .......... .7.D.
   1ea28:	00330047 000d001c 00000006 fff7fffd     G.3.............
   1ea38:	fffbfff8 fffafffb ffe8fff6 ffbeffd4     ................
   1ea48:	ffc5ffb9 ffeaffd9 fffafff1 0003ffff     ................
   1ea58:	00000001 fffcffff 0005fffd 002a0019     ..............*.
   1ea68:	002a0030 00160020 ffff000c ffedfff3     0.*. ...........
   1ea78:	fff2ffee fff4fff2 fff4fff5 ffe2ffe8     ................
   1ea88:	ffeaffe0 fffcfff4 00090003 00190013     ................
   1ea98:	001f001c 0018001c 00190016 00270021     ............!.'.
   1eaa8:	00140021 00000007 fff5fff8 fff9fff5     !...............
   1eab8:	fff7fff9 fffafff7 fff8fffe ffe2ffee     ................
   1eac8:	ffeaffe2 0001fff7 000e000b 0007000c     ................
   1ead8:	fffe0000 fff5fff9 ffecffef fffdfff3     ................
   1eae8:	00010000 fff4fffb ffeaffef fff0ffe9     ................
   1eaf8:	fffcfff5 000a0001 00190016 000d0016     ................
   1eb08:	000a0008 000d000d 00110011 0004000d     ................
   1eb18:	fffe0000 fff8fffe fff0fff2 fff0fff0     ................
   1eb28:	fff3fff0 fff3fff5 fff1fff0 0007fffc     ................
   1eb38:	000f000c 0010000c 00110012 000e000e     ................
   1eb48:	000a000e 00010003 00030002 ffeffffc     ................
   1eb58:	ffe6ffe7 ffecffe9 fff7fff0 fffdfffa     ................
   1eb68:	fffffffd 00020003 fffe0000 00120007     ................
   1eb78:	001b001a 00190019 000d0015 00040007     ................
   1eb88:	00010003 00070000 00140010 fffe000a     ................
   1eb98:	ffebfff0 ffebffea ffeeffeb fff9fff4     ................
   1eba8:	0004fffe fffc0006 ffe1ffeb fff1ffe6     ................
   1ebb8:	fffcfff9 fffffffd fffd0000 fff6fff9     ................
   1ebc8:	fff0fff4 fff3ffec 000f0000 00160015     ................
   1ebd8:	00120011 000e000f 000f000e 000e0010     ................
   1ebe8:	0013000c 00170017 00020010 fff6fffa     ................
   1ebf8:	fff7fff6 fff8fff7 fff1fff5 fff4ffef     ................
   1ec08:	fff9fff9 fff3fff7 fffcfff5 00030001     ................
   1ec18:	fffcfffe fff6fffa fffafff6 00040001     ................
   1ec28:	fffaffff fff9fff8 fff0fff9 ffedffed     ................
   1ec38:	fff8fff2 00080000 0009000b ffff0004     ................
   1ec48:	ffffffff ffff0000 00040001 000d0009     ................
   1ec58:	000a000e fff60000 fff2fff0 fffafff8     ................
   1ec68:	fffffffd 00070004 00070009 fffb0002     ................
   1ec78:	fffcfff8 000a0003 000e000f 0004000b     ................
   1ec88:	00080005 00010006 fff8fff9 0000fffb     ................
   1ec98:	00070005 00000003 fff5fff8 fff7fff5     ................
   1eca8:	fffcfffa 0003fffd 00040005 00030004     ................
   1ecb8:	fff8fffd fffcfff5 00030000 00040003     ................
   1ecc8:	00050007 fff7fffe fff4fff5 fffdfff9     ................
   1ecd8:	00060001 0008000b 00020005 00030004     ................
   1ece8:	fffcfffe 000b0002 000f000e 0009000c     ................
   1ecf8:	fffb0003 fffdfff9 fffdfffe fffcfffc     ................
   1ed08:	00020002 fff90001 ffedfff0 ffeaffec     ................
   1ed18:	fffbfff2 fffdfffa fff8fff9 fff9fffc     ................
   1ed28:	fff3fffa fff6ffee 0007fffd 000d0011     ................
   1ed38:	00040007 fffaffff 00000000 00040001     ................
   1ed48:	0016000d 00110016 00080010 00030003     ................
   1ed58:	00090003 000e000f 000b000c 000a000b     ................
   1ed68:	fff70000 fff4fff5 fff9fff6 0001fffc     ................
   1ed78:	fff90000 fff8fff9 fff6fff9 fff6fff2     ................
   1ed88:	fffdfffb 0003fffe fffd0001 fff6fff8     ................
   1ed98:	fff8fff7 fff6fffa fffafff7 fffdfffe     ................
   1eda8:	fffefffd fffafffa fffffff9 00030001     ................
   1edb8:	00050004 00060002 000c0009 0008000b     ................
   1edc8:	00070005 00080008 00000004 fffffffe     ................
   1edd8:	fffcfffc fffafffa fffbfffb fffbfffc     ................
   1ede8:	fffeffff 00050001 00030004 00060002     ................
   1edf8:	00030005 00050002 000b0007 000a000d     ................
   1ee08:	00070008 00030004 fffe0000 fffcfffd     ................
   1ee18:	00030002 00030003 fffc0000 fff0fff4     ................
   1ee28:	fff4fff1 fff5fff6 fffafff4 00000001     ................
   1ee38:	fff4fffb fff0fff2 fff8fff3 0001fffd     ................
   1ee48:	00040004 00020003 fffd0002 fff8fffc     ................
   1ee58:	fffdfff8 00090003 00050006 fffa0001     ................
   1ee68:	fffbfffb fffcfffc 00050000 00040003     ................
   1ee78:	00050008 00010001 fffe0001 000b0003     ................
   1ee88:	00100010 000d000d 00060009 fffb0001     ................
   1ee98:	fff9fff8 fffffffd 00060004 fffe0004     ................
   1eea8:	fffbfffb fff2fffb fff3fff0 0005ffff     ................
   1eeb8:	00070007 000a0008 fffd0003 0000fffd     ................
   1eec8:	ffffffff 000d0005 00120011 0005000a     ................
   1eed8:	fffbfffd fff8fff9 fffdfffc 00000001     ................
   1eee8:	00020002 fff3fffd ffedffee fff5fff0     ................
   1eef8:	0004fffd 000b0003 00030009 fffd0004     ................
   1ef08:	fff70001 000f0000 00180012 0006000a     ................
   1ef18:	000a0002 fffb000c ffebffed fff9fff4     ................
   1ef28:	00160007 fffb0016 ffd9ffda fff2ffe8     ................
   1ef38:	ffeafff3 fffbfff2 00080007 00120011     ................
   1ef48:	ffe2fffa fffaffe0 00180013 00150010     ................
   1ef58:	0038002c 00080029 ffd8ffe3 fff9ffe5     ,.8.)...........
   1ef68:	000c0002 00200014 0003001e ffeeffec     ...... .........
   1ef78:	ffe2fff3 ffd9ffd0 002b0001 0019002f     ..........+./...
   1ef88:	00090006 fff30009 ffd9ffda 0006fff0     ................
   1ef98:	00130011 001c001d fff6000c ffefffe9     ................
   1efa8:	fffefffc fffbfff6 001a000a 00070017     ................
   1efb8:	ffd9ffec ffdaffcf 0001ffe8 fff70003     ................
   1efc8:	ffff0004 0005fffc ffe8fff6 0009fffd     ................
   1efd8:	00360021 004a0049 00130031 fffb0003     !.6.I.J.1.......
   1efe8:	ffe7fff3 ffddffda 0010fff5 00060015     ................
   1eff8:	ffdbfff2 ffc3ffc8 ffe1ffcd fffcfff1     ................
   1f008:	001f000c 00310031 0005001d fff1fff2     ....1.1.........
   1f018:	000cfff8 00340029 001a0029 ffff0009     ....).4.).......
   1f028:	ffd8fff7 ffaeffb4 ffebffc8 fff8fff6     ................
   1f038:	00030001 ffec0000 ffdeffdd fffdfff4     ................
   1f048:	001f0006 0056003b 002a0049 000d0016     ....;.V.I.*.....
   1f058:	00050010 fff8fff8 00140008 00020012     ................
   1f068:	ffe6fff3 ffd0ffdb ffd0ffc2 ffefffdf     ................
   1f078:	fff4ffea 00070003 fff50008 fff4ffe9     ................
   1f088:	001f000e 001a001c 001b0018 00110011     ................
   1f098:	00180025 ffd4fff2 fff5ffd9 0004000b     %...............
   1f0a8:	fffcfff8 fffa0005 fff6ffe8 fff90007     ................
   1f0b8:	ffd4ffdb 001fffee 00090029 0016fffb     ........).......
   1f0c8:	002b0034 ffcefffd 0006ffd5 00120022     4.+........."...
   1f0d8:	00120005 00290031 ffc7fff2 0003ffdc     ....1.).........
   1f0e8:	ffcffff8 0001ffcc 003c003e ffdf0001     ........>.<.....
   1f0f8:	000dfff4 ffc9fffb ffedffc1 00130011     ................
   1f108:	fffb0001 000e0007 ffdefff5 0012ffef     ................
   1f118:	0012001d 00150008 002e002a ffee0011     ........*.......
   1f128:	ffebffe4 0006fffa fffe0006 fff7fffb     ................
   1f138:	ffecfff2 ffd9ffe1 fff9ffe2 00200011     .............. .
   1f148:	0038002f 0023002e ffe9ffff fff1ffea     /.8...#.........
   1f158:	ffd9ffed 0009ffef 000d0010 ffdffff0     ................
   1f168:	ffdfffdf ffc3ffd2 0002ffdd 0018000f     ................
   1f178:	00210025 fff7000d fffffff2 00150014     %.!.............
   1f188:	000e000e 00340029 000a0027 ffe8fff4     ....).4.'.......
   1f198:	ffd9ffdd fff1ffdf 0003fffe 000e000a     ................
   1f1a8:	fffb0007 ffd2ffe0 fffbffe1 0015000a     ................
   1f1b8:	0027001d 00200027 fffd000d 0006fffd     ..'.'. .........
   1f1c8:	fff80006 000c0000 000e001b ffe2ffee     ................
   1f1d8:	ffebffdb ffe5ffe7 0000ffef fff70009     ................
   1f1e8:	fff0ffe5 fffcfff3 fff3ffef 0027000e     ..............'.
   1f1f8:	00150032 fffffffd 0003000e ffe7fff1     2...............
   1f208:	0003ffff 0005fff9 002a0023 ffdb000d     ........#.*.....
   1f218:	ffe4ffcb 000c0005 00180006 00180023     ............#...
   1f228:	00030004 ffe90004 ffaeffbc 0017ffd3     ................
   1f238:	00120030 0011fff9 003f0044 ffb0fff3     0.......D.?.....
   1f248:	fffaffba 001e0029 001d0007 00320040     ....).......@.2.
   1f258:	ffaeffe9 ffe7ffc2 ffb8ffde 000affc3     ................
   1f268:	004a004f ffe4000e 0003ffee ffc1ffe8     O.J.............
   1f278:	fffbffc9 0039002e 0026002b 00190028     ......9.+.&.(...
   1f288:	ffcbffec fff9ffd3 00110011 00120009     ................
   1f298:	002c0026 ffe1000f ffc2ffc3 fffdffe0     &.,.............
   1f2a8:	00030003 00030002 00020008 ffd9ffe9     ................
   1f2b8:	0002ffe5 00270016 00490038 002b0049     ......'.8.I.I.+.
   1f2c8:	ffd3fff5 ffdcffd2 ffcbffd5 fffbffd7     ................
   1f2d8:	0019001b ffdcfffc ffc4ffcd ffe1ffcb     ................
   1f2e8:	000efffb 003a0021 005d0053 001d0046     ....!.:.S.].F...
   1f2f8:	fff2fffe 000afff7 002b0019 001f002c     ..........+.,...
   1f308:	0001000c ffd4fff3 ff98ffab ffdcffad     ................
   1f318:	00130003 00150017 00150018 ffe3fffe     ................
   1f328:	ffe8ffd9 00220005 00460036 00450052     ......".6.F.R.E.
   1f338:	ffe9001d ffd1ffd2 ffd6ffde ffe4ffce     ................
   1f348:	00210006 ffec0013 ffc9ffcf ffc7ffcf     ..!.............
   1f358:	fff4ffd5 002d0015 002e002c 001e001c     ......-.,.......
   1f368:	ffec0009 fff1ffe3 0025001b 0028002c     ..........%.,.(.
   1f378:	ffff0011 ffd0ffeb ffc2ffc5 ffdeffe1     ................
   1f388:	000dffe3 003b0035 fff20018 ffd9ffdc     ....5.;.........
   1f398:	fffeffea 003e0017 0026003d 0025001c     ......>.=.&...%.
   1f3a8:	ffe80014 ffa8ffaf 0008ffd6 001e001e     ................
   1f3b8:	002a001f 00260035 ffa3ffe3 ffc5ff9a     ..*.5.&.........
   1f3c8:	00200001 002a0025 004e0046 ffca0014     .. .%.*.F.N.....
   1f3d8:	ffd2ffbe ffd8ffdd 0023ffef 005b0053     ..........#.S.[.
   1f3e8:	00010031 ffe0ffec ffafffc2 ffe7ffbf     1...............
   1f3f8:	0025000a 00330035 fff9001c ffd4ffd8     ..%.5.3.........
   1f408:	fffeffe8 001c000a 004a003a 001e0041     ........:.J.A...
   1f418:	ffdefff8 ffbfffc8 ffe5ffc8 00130001     ................
   1f428:	000c0012 fff30006 ffb2ffca fff7ffc7     ................
   1f438:	002f001e 0055003f 00450063 ffcf0008     ../.?.U.c.E.....
   1f448:	ffcaffc5 ffc8ffc4 0024fff1 0016002b     ..........$.+...
   1f458:	fff10001 ffc7ffe5 ffb4ffa6 002afff1     ..............*.
   1f468:	003e002f 005e005c 00120040 ffdfffeb     /.>.\.^.@.......
   1f478:	fff0ffe2 00210000 00420042 00030024     ......!.B.B.$...
   1f488:	ffcdffe8 ff95ffa9 ffd0ffa7 001dffff     ................
   1f498:	002d002a 002c0032 ffd50003 ffe1ffcd     *.-.2.,.........
   1f4a8:	000cfffa 004f002a 004f0061 ffe30014     ....*.O.a.O.....
   1f4b8:	ffd3ffd5 ffb0ffbf 0001ffce 001e001d     ................
   1f4c8:	00050013 ffd8fff7 ffb8ffbe 0000ffdc     ................
   1f4d8:	0029000b 00520044 00180042 ffd7ffe9     ..).D.R.B.......
   1f4e8:	ffe6ffe2 fff8ffe9 00240019 00130021     ..........$.!...
   1f4f8:	ffdcfff4 ffc2ffcd ffd6ffc2 001c0003     ................
   1f508:	002c001c 00410044 ffe80015 ffdaffd4     ..,.D.A.........
   1f518:	000dfff7 00310019 002d0041 0000000c     ......1.A.-.....
   1f528:	ffe4fffd ffbaffbe 0002ffdb 001f001a     ................
   1f538:	0026001e 00080024 ffaeffd7 ffc5ffab     ..&.$...........
   1f548:	0025fffe 00250029 00470039 ffe90023     ..%.).%.9.G.#...
   1f558:	ffdfffd1 ffebffed 0007ffef 003d0030     ............0.=.
   1f568:	ffea0019 ffd6ffda ffafffbf ffe6ffbc     ................
   1f578:	0020000a 00270026 001e0028 ffef0003     .. .&.'.(.......
   1f588:	000dfff9 00210015 00350035 00140026     ......!.5.5.&...
   1f598:	ffe3fffc ffc3ffd4 ffc5ffb4 000ffff5     ................
   1f5a8:	fff60003 fff2fff9 ffd2ffde 0005ffe4     ................
   1f5b8:	00360027 00500043 00550063 ffe40018     '.6.C.P.c.U.....
   1f5c8:	ffdeffdc ffcfffce ffefffe9 fffffff3     ................
   1f5d8:	ffe1fff6 ffc8ffdc ffc0ffaa 0014fffa     ................
   1f5e8:	0041001c 004f005a 00250037 00100013     ..A.Z.O.7.%.....
   1f5f8:	00130017 00100003 0029002e fff70010     ..........).....
   1f608:	ffb4ffd3 ffb4ffab ffb7ffb5 0008ffd9     ................
   1f618:	001b001d 000a0012 0010000b 000d000c     ................
   1f628:	00440025 002f0040 002e002b fff5001b     %.D.@./.+.......
   1f638:	ffcdffdc ffdeffd0 ffddffde ffefffe2     ................
   1f648:	ffd2ffe6 ffe7ffd5 fff4ffe6 00180008     ................
   1f658:	003a002a 001c003b 0012000f 00070010     *.:.;...........
   1f668:	000a000e ffff0000 0006000e ffdcffee     ................
   1f678:	ffb4ffc2 ffe9ffcb ffdfffe5 0021fffe     ..............!.
   1f688:	0010001f 00020008 0004ffff 001e0005     ................
   1f698:	00470043 000e0025 0018001a ffc0ffed     C.G.%...........
   1f6a8:	ffd1ffb8 fff5ffe9 0002fffb 00150013     ................
   1f6b8:	ffd8fffa ffc3ffc7 ffeeffd1 001f000c     ................
   1f6c8:	004d0031 002b004d fff40002 fff7fff7     1.M.M.+.........
   1f6d8:	ffecffec 002d0007 001c0034 ffe7fffe     ......-.4.......
   1f6e8:	ffb1ffcf ffb3ffa6 ffe2ffcc 0018fffb     ................
   1f6f8:	00390030 00100027 000f0008 00110011     0.9.'...........
   1f708:	00360023 0030003a 00180028 ffd5fffd     #.6.:.0.(.......
   1f718:	ffaeffb5 ffd4ffc6 ffceffcc fffcffeb     ................
   1f728:	ffdffff4 fff6ffe4 001a000a 00440028     ............(.D.
   1f738:	0065005f 0036004b 00060022 ffd1ffdd     _.e.K.6.".......
   1f748:	ffdaffd4 ffdfffd8 ffe0ffe2 ffc0ffd2     ................
   1f758:	ffc2ffb6 ffdeffd8 000affea 004b0036     ............6.K.
   1f768:	00510053 002f0049 001f0023 001c0021     S.Q.I./.#...!...
   1f778:	000c0014 000e0009 ffda0000 ffb1ffbb     ................
   1f788:	ffaeffb0 ffcbffb8 ffeeffde 00150005     ................
   1f798:	00210021 00100019 002e001b 0028002d     !.!.........-.(.
   1f7a8:	003f0031 00240036 fffa000d ffdbffec     1.?.6.$.........
   1f7b8:	ffb9ffbf ffd9ffcc ffd7ffd4 ffe7ffe2     ................
   1f7c8:	ffe9ffe7 fff2ffea 000e000a 0031001e     ..............1.
   1f7d8:	003d0049 002a0031 00160020 fff70006     I.=.1.*. .......
   1f7e8:	fff6ffec ffe5fff2 ffe8ffda ffd1ffe0     ................
   1f7f8:	ffd2ffc5 ffe4ffdc 0007ffee 002b001e     ..............+.
   1f808:	001b0028 002e0021 001d0030 00180016     (...!...0.......
   1f818:	00090016 00030008 ffecfff8 ffe1ffe8     ................
   1f828:	ffebffe2 fff1fff2 fff6fff1 ffe9ffef     ................
   1f838:	ffd9ffdf ffffffe2 00180013 00340020     ............ .4.
   1f848:	00250034 00120017 000a0011 fff9fffd     4.%.............
   1f858:	0015000b fff4000a ffe0ffeb ffb9ffcc     ................
   1f868:	ffc7ffb8 ffdcffd6 0010ffea 002b002e     ..............+.
   1f878:	001b0019 0037002c 0026002f 003c002c     ....,.7./.&.,.<.
   1f888:	00240039 00050011 ffcfffeb ffbfffb9     9.$.............
   1f898:	ffc4ffc6 ffcbffba ffd8ffe1 ffe8ffe2     ................
   1f8a8:	fff8fff2 002b0024 005a0032 0042006b     ....$.+.2.Z.k.B.
   1f8b8:	00430039 ffec0018 ffeefffd ffcbffbc     9.C.............
   1f8c8:	ffd1ffe5 ffe6ffca ffa0ffbf ffcbffbc     ................
   1f8d8:	ffe8ffbd 001b001d 00590027 0049005e     ........'.Y.^.I.
   1f8e8:	00400045 00210025 001b0025 0023001a     E.@.%.!.%.....#.
   1f8f8:	0002001b ffddfff4 ff9affba ff9aff8b     ................
   1f908:	ffbdffad 0000ffd9 00170012 001e0022     ............"...
   1f918:	00210015 001a0024 00480027 004a004f     ..!.$...'.H.O.J.
   1f928:	002a0046 fff80009 ffb1ffdb ffb8ffad     F.*.............
   1f938:	ffbeffb3 ffe8ffdd ffefffe7 ffe9ffed     ................
   1f948:	0006fffb 000fffff 003a002c 004a003f     ........,.:.?.J.
   1f958:	00340045 000e0021 fff2fff6 ffe6fff0     E.4.!...........
   1f968:	ffe4ffde ffe1ffe6 ffd6ffd7 ffe5ffde     ................
   1f978:	ffdaffdc 0009fff0 0023001b 00230025     ..........#.%.#.
   1f988:	0025002d 00160015 00160024 00050002     -.%.....$.......
   1f998:	00100016 fffa0006 ffedffee ffe0ffee     ................
   1f9a8:	ffdaffd0 ffe4ffe5 fff8ffea fff4fff5     ................
   1f9b8:	00070000 00130009 001c001c 002a0022     ............".*.
   1f9c8:	00210024 001f0027 0000000a fff3fffe     $.!.'...........
   1f9d8:	ffe0ffe3 ffdaffe4 ffd1ffd1 ffe4ffdd     ................
   1f9e8:	ffeaffe6 0002fff7 0013000e 00240017     ..............$.
   1f9f8:	002c002f 002d0022 00250036 00180015     /.,.".-.6.%.....
   1fa08:	fffd0012 ffe8fff7 ffd5ffd7 ffc2ffd6     ................
   1fa18:	ffddffc2 ffd1ffe0 fff1ffe3 fffefff1     ................
   1fa28:	00130015 00300019 00370033 004b0047     ......0.3.7.G.K.
   1fa38:	001e002d 00050018 ffebffee ffcaffdc     -...............
   1fa48:	ffcaffc9 ffcbffc3 ffd1ffd6 ffe7ffd1     ................
   1fa58:	fff9fff7 00180009 00310023 003d003c     ........#.1.<.=.
   1fa68:	00380039 002a0030 001f0025 00080014     9.8.0.*.%.......
   1fa78:	ffeafff9 ffcbffd9 ffbfffbf ffc2ffc1     ................
   1fa88:	ffd2ffc9 fff5ffe4 000b0004 00200018     .............. .
   1fa98:	002b0026 00340034 00310035 00170025     &.+.4.4.5.1.%...
   1faa8:	00050010 ffebfff3 ffddffe8 ffdcffda     ................
   1fab8:	ffd6ffda ffdbffd4 ffdfffd7 fff0ffec     ................
   1fac8:	0010fffa 0024001d 00280026 0016001c     ......$.&.(.....
   1fad8:	00150015 00130010 00090012 00070004     ................
   1fae8:	ffe7fff9 ffcfffde ffcaffc8 ffd6ffd2     ................
   1faf8:	fff5ffe6 000d0000 00180019 00140012     ................
   1fb08:	0020001c 002e0026 0028002e 001c0027     .. .&.....(.'...
   1fb18:	0002000c ffe5fff6 ffdaffd9 ffd7ffd9     ................
   1fb28:	ffe9ffe0 fff0ffeb ffedfff1 fffaffef     ................
   1fb38:	00060000 00250017 002b0029 0025002d     ......%.).+.-.%.
   1fb48:	0019001e ffff000e fff0fff7 ffeaffea     ................
   1fb58:	ffe5ffea ffddffdf ffdfffdf ffe8ffe0     ................
   1fb68:	fffafff1 000f0006 00190019 00250020     ............ .%.
   1fb78:	00200026 0019001e 00120014 0000000c     &. .............
   1fb88:	fff7fff9 ffe5ffef ffe1ffe4 ffe1ffde     ................
   1fb98:	ffe6ffe6 fff1ffe7 fff5fff0 000effff     ................
   1fba8:	001c0013 00240024 00240022 0015001d     ....$.$.".$.....
   1fbb8:	0006000f fff8fffa ffeffff7 ffebffeb     ................
   1fbc8:	ffe3ffe7 ffe3ffe4 ffe4ffde fff4ffec     ................
   1fbd8:	000effff 00160014 001d001a 001d001c     ................
   1fbe8:	001b0021 00190016 00130017 0007000e     !...............
   1fbf8:	ffeefff9 ffdfffe7 ffdcffd9 ffdeffde     ................
   1fc08:	fff1ffe6 fffafff7 00030001 000f0008     ................
   1fc18:	00130014 001d0016 0019001c 00160019     ................
   1fc28:	0001000a ffeefff8 ffecffea ffe4ffe8     ................
   1fc38:	ffebffe8 ffe9ffe6 fff3fff1 fffdfff5     ................
   1fc48:	00070000 001b0014 00150017 0018001c     ................
   1fc58:	000a0010 ffff0008 fff8fffc ffeffff2     ................
   1fc68:	ffeafff2 ffe5ffe4 ffe9ffeb fff3ffe8     ................
   1fc78:	0000fffb 000d0006 00140010 00150017     ................
   1fc88:	00170012 000f0015 000c000b 00030008     ................
   1fc98:	fffc0000 fff7fff9 ffebfff1 fff0ffee     ................
   1fca8:	ffeffff1 fff4ffef fffcfff8 0002fffd     ................
   1fcb8:	00080008 000b0008 000f000e 0009000f     ................
   1fcc8:	00050007 fffb0003 fff9fff9 fff2fff5     ................
   1fcd8:	fff0fff1 fff2ffef fff3fff2 fffffff8     ................
   1fce8:	00020000 00090007 000f000c 000b000e     ................
   1fcf8:	000b000b 00080007 00030007 fffdfffd     ................
   1fd08:	fff6fffc fff7fff8 fff7fff5 fff8fff7     ................
   1fd18:	fffbfff7 fff9fffa 0001fffe 00060004     ................
   1fd28:	00070007 000d000b 000b000d 0008000a     ................
   1fd38:	00030006 fffcffff fffbfffb fff4fff4     ................
   1fd48:	fff5fff5 fff7fff3 fffafffa 0000fffe     ................
   1fd58:	0003ffff 00040004 000d0007 000b000c     ................
   1fd68:	000d000d 000b000c fffe0005 fff6fffc     ................
   1fd78:	ffeffff2 fff3fff2 fff5fff3 fff9fff7     ................
   1fd88:	fffafffc 0001fffd 00060005 000d0008     ................
   1fd98:	000e000f 000b000e 00060009 fffd0001     ................
   1fda8:	fff8fffa fff6fff6 fff8fff8 fff3fff7     ................
   1fdb8:	fff4fff4 fff7fff5 fffcfff8 0005fffe     ................
   1fdc8:	000c0009 0010000f 0008000d 00060008     ................
   1fdd8:	fffd0001 fff9fffc fff8fff9 fff4fff7     ................
   1fde8:	fff5fff7 fff5fff4 fffbfff9 0000fffc     ................
   1fdf8:	00050003 000b0008 00090008 00090009     ................
   1fe08:	00050005 00020004 00000000 fffeffff     ................
   1fe18:	fffbfffc fff7fff8 fff9fff9 fffdfffa     ................
   1fe28:	fffcfffd 0001fffe 00040002 00040004     ................
   1fe38:	00030003 00030002 00020002 ffff0000     ................
   1fe48:	fffdfffd fffbfffd fff9fff9 fffafffa     ................
   1fe58:	fffdfffa fffefffe 0000ffff 0000ffff     ................
   1fe68:	00010002 00030002 00010004 00000002     ................
   1fe78:	0000ffff ffffffff 00000000 ffffffff     ................
   1fe88:	00000001 fffcfffe fffafffb fffbfffa     ................
   1fe98:	fffefffd 00010000 00010003 00020004     ................
   1fea8:	00010002 00020000 00030002 00010002     ................
   1feb8:	fffeffff fff9fffc fff8fffa fff7fff8     ................
   1fec8:	fffbfffb 0000ffff 0000ffff 00010002     ................
   1fed8:	00010000 00050003 00060005 00070007     ................
   1fee8:	00050007 00020002 fffe0000 fffcfffb     ................
   1fef8:	fffcfffd 0000fffe 00030002 00010003     ................
   1ff08:	00030003 00040006 00060006 00030005     ................
   1ff18:	00010003 00000000 fffbfffc fffbfffb     ................
   1ff28:	fffbfffa fffefffd fffcfffc fffefffc     ................
   1ff38:	fffffffd fffffffe 00030003 00040004     ................
   1ff48:	00040006 00050005 00030003 00020003     ................
   1ff58:	0000ffff fffbfffe fff9fff9 fff9fff8     ................
   1ff68:	fffafffa fffcfffb ffffffff 00040000     ................
   1ff78:	00050005 00050003 00030002 00010003     ................
   1ff88:	0001ffff fffdffff fffafffa fff8fff9     ................
   1ff98:	fffafffa fffcfffa fffdfffc fffffffe     ................
   1ffa8:	fffeffff 00010001 00030004 00030005     ................
   1ffb8:	00030003 00010002 ffff0001 fffcfffe     ................
   1ffc8:	fffcfffb fffafffa fffdfffb fffdfffb     ................
   1ffd8:	ffffffff 0000ffff 00000000 00010001     ................
   1ffe8:	00020000 00000003 00020002 00000002     ................
   1fff8:	00000000 0000ffff fffeffff 0000fffe     ................
   20008:	fffdfffe ffffffff 0000fffd 0000ffff     ................
   20018:	00020000 00030002 00010003 00010002     ................
   20028:	00000001 00000000 0000fffe fffe0000     ................
   20038:	fffdfffe fffdfffc fffefffd fffffffd     ................
   20048:	00010000 00020002 00020003 00010003     ................
   20058:	00020001 00020001 00020003 00030003     ................
   20068:	00010003 ffff0000 fffefffe fffefffd     ................
   20078:	fffdfffc 0000ffff 00010001 00010001     ................
   20088:	00010001 00020002 00020003 00030002     ................
   20098:	00030004 00010002 00010000 ffff0000     ................
   200a8:	00000000 ffffffff 00000000 fffeffff     ................
   200b8:	fffffffe fffffffe fffefffe ffff0000     ................
   200c8:	00020000 ffff0002 fffffffe fffefffe     ................
   200d8:	fffdfffe fffdfffd fffcfffe fffdfffd     ................
   200e8:	fffdfffe fffefffe 00000000 00010000     ................
   200f8:	00010001 0000ffff ffffffff fffeffff     ................
   20108:	fffdffff fffdffff fffdfffe fffdfffe     ................
   20118:	fffefffe ffffffff 0000ffff 00010000     ................
   20128:	0002ffff 00030001 00030002 00010002     ................
   20138:	00000001 fffe0000 fffdfffe fffefffc     ................
   20148:	fffffffe fffffffe 0001fffe 00020000     ................
   20158:	00010002 00010001 00020002 00030003     ................
   20168:	00010000 00000001 ffffffff fffefffe     ................
   20178:	fffefffd fffefffd fffdffff fffffffe     ................
   20188:	ffff0000 00000000 00010000 00020001     ................
   20198:	00030002 00010001 00000000 00000000     ................
   201a8:	fffe0000 fffcfffd fffbfffd fffcfffc     ................
   201b8:	fffdfffd fffdfffd fffffffe 0000fffe     ................
   201c8:	0001ffff 0001ffff fffefffe fffdfffe     ................
   201d8:	fffefffd fffdfffe ffffffff ffffffff     ................
	...
   201f0:	00010001 00010002 00010001 00010002     ................
   20200:	00010002 00020002 00010002 00010001     ................
   20210:	00000001 00000000 fffe0000 fffdfffe     ................
   20220:	fffffffe ffffffff ffff0000 00010000     ................
   20230:	00020002 00000002 00010000 00010001     ................
   20240:	00010001 00000001 ffffffff ffffffff     ................
   20250:	fffefffe 0000fffd ffffffff 0000ffff     ................
   20260:	ffffffff fffffffe ffffffff fffefffe     ................
   20270:	00000000 ffff0000 00000000 00000000     ................
   20280:	ffffffff fffefffe ffffffff 0000fffe     ................
   20290:	fffffffe 0000ffff 00030003 00010002     ................
   202a0:	00000000 fffeffff ffffffff ffffffff     ................
   202b0:	ffffffff fffefffe fffdfffd fffffffe     ................
   202c0:	00000000 0000ffff 00010001 00010001     ................
   202d0:	00020002 00000001 00010001 00020000     ................
   202e0:	00010000 fffeffff fffdfffe fffcfffd     ................
   202f0:	fffcfffc fffcfffc fffdfffc fffefffd     ................
   20300:	fffdfffc fffcfffc fffdfffd 0000ffff     ................
   20310:	00010000 00000000 ffff0001 ffff0000     ................
   20320:	fffe0000 00000000 0000ffff ffffffff     ................
   20330:	ffffffff fffefffe fffdfffe ffffffff     ................
   20340:	00000001 00010001 00020001 00010001     ................
   20350:	0000ffff ffffffff 0000ffff fffeffff     ................
   20360:	fffffffe fffefffd 0000fffe 00010001     ................
   20370:	00010001 00020001 00020002 00010002     ................
   20380:	00000001 ffff0001 00000000 00000000     ................
   20390:	00010000 00010000 00000000 0000ffff     ................
   203a0:	00000000 00010002 00000000 0000ffff     ................
   203b0:	00010000 00020001 00020002 00020001     ................
   203c0:	00010001 00020001 00000000 ffff0000     ................
   203d0:	00000000 0000ffff ffffffff fffdfffe     ................
   203e0:	fffefffe fffffffe 0000ffff 00010000     ................
   203f0:	00010002 00000002 00010001 00010000     ................
   20400:	0000ffff 00000000 00000001 fffeffff     ................
   20410:	fffefffe fffeffff ffff0000 00000000     ................
   20420:	00010001 00000000 0000ffff 00000000     ................
   20430:	fffe0000 fffeffff fffdfffe fffefffe     ................
   20440:	fffefffd fffffffe ffffffff ffffffff     ................
   20450:	fffeffff ffffffff fffe0000 00000000     ................
   20460:	00010000 ffff0000 fffefffe fffdfffe     ................
   20470:	fffdfffc fffefffc fffdfffc fffefffd     ................
   20480:	fffffffd fffffffe fffffffe 0000ffff     ................
	...
   2049c:	00000001 00000000 ffff0001 fffeffff     ................
   204ac:	ffffffff ffffffff 0000ffff 00000000     ................
   204bc:	00010001 00000001 00010000 0001ffff     ................
   204cc:	00010000 00000000 ffff0000 00000000     ................
   204dc:	ffff0000 ffffffff 0000ffff 00010000     ................
   204ec:	ffffffff ffffffff 0000ffff 00000001     ................
   204fc:	00000000 00000001 00000001 00010001     ................
   2050c:	00000001 ffffffff ffffffff fffffffe     ................
   2051c:	0000ffff 00020001 00020002 00020001     ................
   2052c:	00020001 00020002 00010002 00000001     ................
   2053c:	fffe0000 ffff0001 ffff0000 ffffffff     ................
   2054c:	fffdfffe fffefffc 0000fffd 0000fffe     ................
   2055c:	fffffffe fffffffe fffdfffe ffffffff     ................
   2056c:	ffffffff fffeffff 00000000 0001ffff     ................
   2057c:	0000ffff ffffffff fffe0000 00000001     ................
   2058c:	00000000 00010000 00020000 00020000     ................
   2059c:	00020001 00020001 00010002 00000000     ................
   205ac:	fffefffe ffffffff fffefffe fffcfffe     ................
   205bc:	ffffffff 0000ffff ffff0000 00000000     ................
   205cc:	00010000 0001ffff ffff0000 00000001     ................
   205dc:	00000001 00000000 00010000 00000000     ................
   205ec:	ffffffff 0000fffe fffffffe fffffffe     ................
   205fc:	0000ffff 00010001 00020000 00000000     ................
   2060c:	00000000 fffeffff fffefffe fffdffff     ................
   2061c:	fffdffff fffdffff fffeffff fffdfffe     ................
   2062c:	fffefffe ffffffff 0000ffff ffffffff     ................
	...
   20648:	0000ffff fffefffe fffefffd fffeffff     ................
   20658:	fffefffe fffefffd 0000ffff 00010000     ................
   20668:	00010001 00020001 00020001 00010001     ................
   20678:	00010001 00000001 00000000 0000ffff     ................
   20688:	0000ffff fffffffd fffcfffe fffdfffe     ................
   20698:	fffcfffd fffbfffd fffcfffe fffeffff     ................
   206a8:	00000000 00010000 00010000 0001ffff     ................
   206b8:	0000fffe 0000fffe 0000ffff ffffffff     ................
   206c8:	0001ffff 0001ffff 00000000 ffff0000     ................
   206d8:	00000000 ffffffff ffffffff 00010000     ................
   206e8:	00000001 00000001 00000001 ffff0000     ................
   206f8:	ffff0000 ffff0000 0001ffff 00000000     ................
   20708:	00000000 00000001 ffff0000 fffeffff     ................
   20718:	0000ffff ffffffff ffff0000 00000000     ................
   20728:	ffff0000 ffff0000 fffeffff fffefffd     ................
   20738:	fffefffd fffffffe fffefffe fffefffe     ................
   20748:	0000ffff 00000000 00010000 00000000     ................
   20758:	fffe0000 00000000 00010000 00020001     ................
   20768:	00010001 00000000 fffeffff ffffffff     ................
   20778:	fffffffe fffffffe fffefffe fffffffe     ................
   20788:	fffefffe fffefffe ffffffff fffffffe     ................
   20798:	ffffffff 00000001 00010001 00000001     ................
   207a8:	00010001 00010001 00010001 00000002     ................
   207b8:	00010002 00000000 00010000 00000000     ................
   207c8:	ffff0000 fffeffff fffefffe fffffffe     ................
   207d8:	fffefffe fffbfffd fffdfffc fffeffff     ................
   207e8:	fffeffff fffefffe fffefffe ffffffff     ................
   207f8:	00010000 ffffffff fffefffd ffffffff     ................
   20808:	00010001 ffff0000 fffeffff fffefffe     ................
   20818:	0001ffff 00010001 fffe0000 ffffffff     ................
   20828:	0000fffe 0000ffff ffffffff ffff0001     ................
   20838:	00000001 ffffffff fffffffe 0000fffe     ................
   20848:	0000ffff 00010001 00020001 00020001     ................
   20858:	00020002 00040003 00040004 00010001     ................
   20868:	0001ffff 00020000 0001ffff ffffffff     ................
   20878:	fffe0000 fffe0000 fffe0000 ffffffff     ................
   20888:	00000000 00000002 fffd0001 fffdffff     ................
   20898:	fffffffe ffff0000 00000001 ffff0000     ................
   208a8:	fffdfffe fffffffe 00000000 fffefffe     ................
   208b8:	0000fffe 00030001 00020001 00030002     ................
   208c8:	00000000 00090001 0009000d ffecfffb     ................
   208d8:	0000ffec 0026001d fffb0017 ffe0ffe2     ......&.........
   208e8:	0003fff4 000e000d ffff0006 ffdfffec     ................
   208f8:	ffe1ffd4 000ffff8 001b0025 fff3000e     ........%.......
   20908:	ffe5ffe4 fffbffec 0013000a 000f0017     ................
   20918:	ffe8fffb ffe5ffdc 0015fffc 001e0023     ............#...
   20928:	00020010 fffdfffd fff9fffd ffeefff7     ................
   20938:	fff9fff1 0018000a 0016001d fff20005     ................
   20948:	ffe1ffe1 0004ffef 00220016 000d001e     ..........".....
   20958:	ffe1fff6 ffdeffd6 000ffff3 00260022     ............".&.
   20968:	00030018 ffe4ffef fff0ffe4 0010ffff     ................
   20978:	00110016 fff20004 ffeaffe8 0008fff6     ................
   20988:	00130012 ffff000a fff9fff8 0007fffe     ................
   20998:	000d000d ffff0009 ffeffff5 fff9fff1     ................
   209a8:	00120006 00170018 ffff000e ffebfff3     ................
   209b8:	fff4ffec 000c0000 000f0011 fffc0006     ................
   209c8:	fff4fff6 fffefff7 00090003 000b000c     ................
   209d8:	00000007 ffeffff7 ffefffeb 0003fff8     ................
   209e8:	0012000e 0006000f ffeefff9 ffeeffea     ................
   209f8:	0000fff6 000b0007 00030008 fff8fffc     ................
   20a08:	fffcfff8 00050002 00010005 fffafffe     ................
   20a18:	0001fffc 00050004 00000006 fffafffd     ................
   20a28:	fffcfff9 00050001 00050007 fffc0001     ................
   20a38:	fff7fff7 fffefff9 00080005 0006000a     ................
   20a48:	fffd0000 fffafffa fffffffb 00050002     ................
   20a58:	00070006 00030006 fff90000 fff4fff6     ................
   20a68:	fffbfff7 00050000 00050006 ffff0002     ................
   20a78:	fff8fffa fff9fff9 0000ffff 00040004     ................
   20a88:	00010004 fffcfffd fffbfff9 0003fffd     ................
   20a98:	000a0005 0004000a fff80001 fff6fff6     ................
   20aa8:	fffefff8 00060002 00080007 00000005     ................
   20ab8:	fff9fffc fffdfff9 00050001 00080007     ................
   20ac8:	00030006 fffc0000 fffbfffa 00020000     ................
   20ad8:	00050005 00030004 fffe0000 fffcfffb     ................
   20ae8:	fffffffd 00020000 00000002 fffe0000     ................
   20af8:	0000fffe 00030000 00030002 00030003     ................
   20b08:	00020003 00000000 fffeffff fffffffe     ................
   20b18:	fffefffd 0000fffe 00010002 ffff0002     ................
   20b28:	fffdffff fffdfffd fffdfffc 0001fffe     ................
   20b38:	00030003 ffff0002 fffbfffd fffcfffa     ................
   20b48:	0000fffe 00010002 fffbffff fff9fff8     ................
   20b58:	fffdfff9 0003ffff 00040004 fffc0001     ................
   20b68:	fff6fff8 fffafff7 0004ffff 00070008     ................
   20b78:	00020006 fffcfffe fffafff9 0000fffd     ................
   20b88:	00060004 00020004 fffafffe fffafffa     ................
   20b98:	0001ffff 00050005 ffff0002 fffcfffd     ................
   20ba8:	fffefffc 00040000 00060005 00020004     ................
   20bb8:	fffcfffe fffdfffc fffffffe fffdfffe     ................
   20bc8:	fffafffb fffefffb 00030000 00000002     ................
   20bd8:	fffbfffc fffcfffb fffefffe 00020000     ................
   20be8:	00040004 00010003 ffff0000 fffffffe     ................
   20bf8:	00020002 00000004 fffbfffe fffbfffb     ................
   20c08:	fffdfffb 0001ffff 00020003 ffff0002     ................
   20c18:	fffdfffd 0000fffe 00030003 00020004     ................
   20c28:	ffff0001 fffdffff fffeffff 00000000     ................
   20c38:	00000001 ffff0000 00020001 ffff0003     ................
   20c48:	fffdfffd 0001fffe 00020001 00020000     ................
   20c58:	00010000 00030003 00030003 00030002     ................
   20c68:	00020001 00000000 00020001 00020002     ................
   20c78:	00020001 00030003 ffff0001 fffffffe     ................
   20c88:	ffffffff ffff0000 ffff0000 ffffffff     ................
   20c98:	00010000 00020000 00010001 00000000     ................
   20ca8:	00010001 00020003 00000000 00010000     ................
   20cb8:	00000000 00020000 00020001 fffeffff     ................
   20cc8:	fffefffd 0000ffff 00000001 fffeffff     ................
   20cd8:	fffbfffd fffbfffb fffdfffc fffdfffd     ................
   20ce8:	fffefffd 0000ffff fffe0000 fffcffff     ................
   20cf8:	fffbfffc fffafffa fffafff9 fffefffa     ................
   20d08:	0002ffff ffffffff fffcfffc fffefffc     ................
   20d18:	0000ffff 00010000 fffdffff fffbfffc     ................
   20d28:	0000fffe 00040002 00020003 00000002     ................
   20d38:	fffe0000 fffefffe 00000000 00000000     ................
   20d48:	fffeffff fffdfffc fffefffd 00020000     ................
   20d58:	00020001 00000001 fffefffe fffefffc     ................
   20d68:	0000ffff 00000001 fffcfffe fffbfffb     ................
   20d78:	fffefffd 00000001 00000002 fffdffff     ................
   20d88:	fffdfffc 0000fffe 00040003 00010003     ................
	...
   20da4:	ffff0001 fffdffff fffcfffd fffdfffd     ................
   20db4:	0000ffff 00010002 00000002 fffcfffe     ................
   20dc4:	fffefffc 00020000 00020003 fffe0000     ................
   20dd4:	fffefffc 0003fffe 00050004 00020003     ................
   20de4:	00010000 0001fffe 0002fffe 00050003     ................
   20df4:	00040005 00010003 fffffffe 00020001     ................
   20e04:	00020003 00000001 ffff0000 fffeffff     ................
   20e14:	ffffffff 00010001 00020001 00000001     ................
   20e24:	fffcffff fffdfffd fffffffe fffefffe     ................
   20e34:	fffcfffd fffcfffb fffdfffc ffffffff     ................
   20e44:	00000000 fffeffff fffcfffd fffdfffc     ................
   20e54:	fffffffe ffffffff ffff0000 0000ffff     ................
   20e64:	ffffffff ffffffff ffffffff 0000ffff     ................
   20e74:	0000ffff 00010000 00000000 00010000     ................
   20e84:	00010001 ffff0003 ffff0001 00010000     ................
   20e94:	fffefffe 0000fffe 00010000 0000ffff     ................
   20ea4:	0000ffff 00010000 00000000 fffffffe     ................
   20eb4:	fffffffe 00010000 00030001 00000001     ................
   20ec4:	00000001 00020000 00000001 ffffffff     ................
   20ed4:	ffffffff 00010000 00020001 00010002     ................
   20ee4:	00020003 00010002 fffe0000 fffeffff     ................
   20ef4:	ffffffff 00020000 00020001 00020001     ................
   20f04:	00020002 00030003 00020003 00010002     ................
   20f14:	00010000 00010000 00020001 00000000     ................
   20f24:	fffdfffd fffefffe ffff0000 fffefffe     ................
   20f34:	fffffffe 0000ffff ffff0001 fffe0000     ................
   20f44:	00000000 00000001 00000001 fffeffff     ................
   20f54:	fffffffe fffe0000 fffdfffe fffbfffc     ................
   20f64:	fffbfffc fffcfffd fffffffe fffdfffe     ................
   20f74:	ffffffff ffffffff fffdfffe fffcfffc     ................
   20f84:	fffdfffc fffefffd fffffffe ffffffff     ................
   20f94:	fffffffe fffefffe ffffffff fffefffe     ................
   20fa4:	fffdfffd fffffffd 0000ffff 0001ffff     ................
   20fb4:	00020001 00010002 00000001 00000000     ................
   20fc4:	00020001 00020003 00000001 00030001     ................
   20fd4:	00040003 00000002 ffff0000 0001ffff     ................
   20fe4:	00010000 00010002 00000000 00010002     ................
   20ff4:	00010001 00000001 ffff0001 ffff0000     ................
   21004:	ffff0000 ffffffff 0001ffff ffff0000     ................
   21014:	ffff0000 00000001 00000000 0000ffff     ................
   21024:	00020001 00010002 00000000 0000ffff     ................
   21034:	0000ffff 00010001 00000001 00000001     ................
   21044:	ffff0000 00000001 ffffffff 0000ffff     ................
   21054:	ffffffff fffffffe fffffffe ffffffff     ................
	...
   21070:	00010001 00020002 00010000 0000ffff     ................
   21080:	0000ffff 00000000 ffff0000 ffffffff     ................
   21090:	fffefffd fffffffd fffffffe fffffffe     ................
   210a0:	fffefffe fffdfffd fffffffe fffeffff     ................
   210b0:	fffdfffe fffefffe fffcfffe fffdfffe     ................
   210c0:	fffdffff fffdffff fffdfffd fffffffe     ................
   210d0:	ffff0000 00010001 00000000 fffffffe     ................
   210e0:	fffffffd 0000ffff 00000001 ffff0000     ................
   210f0:	fffffffe ffffffff ffff0000 00000001     ................
   21100:	ffff0000 fffeffff ffffffff 0000ffff     ................
   21110:	0001ffff 00010000 00020000 00020000     ................
   21120:	00020001 00020002 00010003 00010002     ................
   21130:	00020001 00020001 00010002 00000001     ................
   21140:	ffff0000 00000000 00010000 00000000     ................
   21150:	ffffffff 0000ffff 00000000 00010000     ................
   21160:	00020001 00040003 00040004 00030004     ................
   21170:	00010002 00000001 00000001 00000000     ................
   21180:	00000000 00010001 00010001 00000001     ................
   21190:	ffff0001 ffffffff 0000ffff ffff0001     ................
   211a0:	fffdffff fffefffe fffeffff ffff0000     ................
   211b0:	ffff0000 fffeffff fffeffff fffffffe     ................
   211c0:	ffffffff fffffffe 0000ffff 0000ffff     ................
   211d0:	0000fffe ffffffff ffffffff fffefffe     ................
   211e0:	fffefffe fffdfffd fffefffd ffffffff     ................
   211f0:	fffefffe fffefffe fffefffe fffeffff     ................
   21200:	fffdfffe fffdfffe fffffffe ffff0000     ................
   21210:	ffffffff ffffffff ffffffff ffff0000     ................
	...
   21228:	ffffffff 0000ffff 00010001 00010001     ................
   21238:	ffff0000 ffffffff 00010000 00010001     ................
   21248:	fffeffff fffefffd fffefffd ffffffff     ................
   21258:	0000ffff ffffffff ffffffff fffeffff     ................
   21268:	fffffffe fffd0000 fffcfffe fffefffd     ................
   21278:	fffffffe fffefffe fffefffe fffdfffe     ................
   21288:	fffdfffc fffefffd fffefffe fffefffe     ................
   21298:	fffdfffe fffefffd fffefffe ffffffff     ................
   212a8:	fffeffff fffffffe 0000ffff 00000000     ................
   212b8:	00000001 00000001 0000ffff 00020000     ................
   212c8:	00030001 00020001 00000000 ffff0000     ................
   212d8:	ffffffff 0000ffff 0000fffe 0000ffff     ................
   212e8:	00000000 00010002 00000002 00000002     ................
   212f8:	00000001 00010001 00000002 00000002     ................
   21308:	ffff0000 fffefffe fffefffe 0000fffe     ................
   21318:	00010000 0000ffff 00000000 00010000     ................
   21328:	0001ffff 00020001 00010001 00000001     ................
   21338:	00000001 00010000 00010001 ffff0001     ................
   21348:	ffff0000 ffff0000 00000000 ffffffff     ................
   21358:	fffffffe fffeffff fffefffd 0000ffff     ................
   21368:	00000000 ffff0000 00000000 00010000     ................
   21378:	00020001 00010001 ffff0000 fffffffe     ................
   21388:	0000ffff 00010001 ffff0001 00000001     ................
   21398:	00000001 00010002 00010002 00000000     ................
   213a8:	00000000 00000001 00000001 00000000     ................
   213b8:	00000000 00010000 ffff0000 fffffffe     ................
   213c8:	0000ffff 00000000 ffffffff fffefffe     ................
   213d8:	fffdfffe fffcfffd fffdfffd fffefffe     ................
   213e8:	fffeffff fffeffff fffe0000 fffe0000     ................
   213f8:	ffffffff fffefffe fffefffe fffcfffd     ................
   21408:	fffefffe fffffffe ffff0000 ffff0000     ................
   21418:	0000ffff 0001fffe ffffffff ffffffff     ................
   21428:	fffffffe fffffffd fffffffe 00000000     ................
   21438:	00000000 ffff0000 fffeffff 00000000     ................
	...
   21454:	00010001 00010001 00010001 00000001     ................
	...
   2146c:	ffff0000 fffeffff fffdfffe fffefffd     ................
   2147c:	00000000 00000001 ffff0001 fffe0000     ................
   2148c:	00000000 ffffffff 0000ffff 0000ffff     ................
   2149c:	00010000 00020000 00020001 00010000     ................
   214ac:	00000000 00010000 ffffffff ffffffff     ................
   214bc:	0001ffff fffffffe fffffffe fffffffe     ................
   214cc:	fffeffff ffffffff 0000ffff 00000000     ................
   214dc:	00000000 00000001 00010000 00010000     ................
   214ec:	00010000 00000002 00020002 00000002     ................
   214fc:	ffff0001 00000001 00000001 00000000     ................
   2150c:	00010001 00020001 00010001 00010001     ................
   2151c:	00010001 00000001 00000001 fffffffe     ................
   2152c:	fffefffd fffdfffd fffdfffd fffefffd     ................
   2153c:	00000000 ffff0000 fffeffff fffefffe     ................
   2154c:	fffe0000 ffff0000 00000000 00000001     ................
   2155c:	00010001 00000000 0000ffff ffffffff     ................
   2156c:	00010000 0000ffff 00000000 00010000     ................
   2157c:	00000001 00000001 ffff0001 ffff0000     ................
   2158c:	0000ffff 00000000 ffff0000 00010000     ................
   2159c:	00010001 00010001 ffff0000 ffff0000     ................
   215ac:	fffeffff fffdffff fffdfffe fffffffe     ................
   215bc:	fffefffe ffffffff 00000000 ffff0000     ................
   215cc:	0000fffe 0000ffff 0000ffff ffff0000     ................
   215dc:	0000ffff 0001ffff 00010001 00020001     ................
   215ec:	00000000 ffff0000 ffff0001 ffff0000     ................
   215fc:	fffeffff fffdfffe fffcfffb fffdfffb     ................
   2160c:	fffefffc fffefffd fffefffe fffeffff     ................
	...
   21628:	0000ffff ffffffff ffffffff 00000000     ................
   21638:	00010001 00020002 00010002 00000002     ................
   21648:	ffff0000 00000001 00010000 ffff0001     ................
   21658:	ffff0000 0000ffff fffffffe ffffffff     ................
   21668:	fffffffe fffffffe 0000ffff 0000fffe     ................
   21678:	0000ffff 00000000 fffeffff ffffffff     ................
   21688:	ffffffff ffffffff ffffffff ffff0000     ................
   21698:	ffff0000 ffffffff 0000ffff 0001ffff     ................
   216a8:	00000000 00010000 00010001 00000001     ................
   216b8:	ffff0000 ffff0000 ffff0000 ffffffff     ................
   216c8:	ffff0000 fffefffe fffdfffe fffeffff     ................
   216d8:	fffeffff 0000ffff 00000000 0000ffff     ................
   216e8:	0000ffff 0000ffff 0000ffff 0000ffff     ................
   216f8:	fffe0000 fffeffff fffeffff fffffffe     ................
   21708:	ffffffff 00000001 00000001 00020001     ................
   21718:	00010002 00010002 00010002 00000002     ................
   21728:	ffff0000 fffeffff ffffffff fffffffe     ................
   21738:	0000ffff 0000ffff 00000000 00000000     ................
   21748:	00010001 00010001 ffff0001 fffeffff     ................
   21758:	fffefffe fffdfffe fffffffe fffffffe     ................
   21768:	fffffffe fffffffe 00000000 00000000     ................
   21778:	0000ffff ffffffff 0000ffff 00000000     ................
   21788:	ffff0000 ffffffff ffffffff ffff0000     ................
   21798:	0000ffff 00000000 00000000 00000000     ................
   217a8:	0000ffff ffffffff ffffffff 0000ffff     ................
   217b8:	00010000 00020000 00010000 00000000     ................
   217c8:	ffff0000 fffeffff fffeffff ffff0000     ................
   217d8:	fffffffe fffffffe 0000ffff 0000fffe     ................
   217e8:	0001fffe 0002ffff 00030001 00000002     ................
   217f8:	00000001 00010001 00010001 00010001     ................
   21808:	ffff0001 ffff0000 00000000 ffff0000     ................
   21818:	fffe0000 ffffffff ffff0000 fffefffe     ................
   21828:	fffcfffd fffdfffc fffdfffc fffdfffc     ................
   21838:	fffdfffd fffefffe fffefffe ffffffff     ................
   21848:	ffff0000 fffe0000 fffdffff fffdfffe     ................
   21858:	fffefffe fffffffe 0001ffff 0000ffff     ................
   21868:	0000ffff 00000001 00000001 00000001     ................
   21878:	00000001 00010001 00000001 ffffffff     ................
   21888:	ffff0000 ffffffff 00000000 00010000     ................
   21898:	00010000 00000001 00010001 00010001     ................
   218a8:	00010001 00010000 0000ffff 00000000     ................
   218b8:	ffffffff fffeffff fffefffe fffffffe     ................
   218c8:	fffffffe 00010000 00010001 00030001     ................
   218d8:	00040002 00020002 00010002 ffff0000     ................
   218e8:	00000000 0000ffff 00000000 00000000     ................
   218f8:	00000000 00020000 00010000 00010001     ................
   21908:	00010002 00010002 ffff0001 fffe0000     ................
   21918:	fffeffff ffffffff fffeffff fffefffe     ................
   21928:	fffeffff 0000ffff 00000000 00000001     ................
   21938:	ffffffff ffff0000 ffff0000 0000ffff     ................
   21948:	fffffffe ffffffff fffefffe fffdfffe     ................
   21958:	fffefffe fffefffe fffefffd fffefffe     ................
   21968:	fffdfffe fffefffd fffefffd fffffffe     ................
   21978:	fffefffe fffffffd ffffffff 0000ffff     ................
   21988:	ffff0000 00000000 00000001 00000000     ................
   21998:	00000000 00010000 00010000 0000ffff     ................
   219a8:	0000ffff 00000000 0001ffff 00010000     ................
   219b8:	00000001 ffff0000 ffffffff fffeffff     ................
   219c8:	fffd0000 fffefffe fffffffe 0000ffff     ................
   219d8:	ffffffff ffffffff 0000fffe 0000ffff     ................
   219e8:	fffffffe fffefffe fffffffe 00000000     ................
   219f8:	00000001 00000001 00000001 ffff0001     ................
   21a08:	00010001 00000001 00010002 00010001     ................
   21a18:	00000001 ffff0000 00000000 00010000     ................
   21a28:	00000000 0000ffff 0000ffff ffffffff     ................
   21a38:	fffffffe ffffffff 0000ffff 0000fffe     ................
   21a48:	00000000 00010000 00010000 00000000     ................
   21a58:	00000000 00020002 00020001 00000000     ................
   21a68:	fffefffe fffefffe ffffffff fffffffe     ................
   21a78:	fffffffe ffffffff ffff0000 fffeffff     ................
   21a88:	fffdffff fffffffe ffffffff ffff0001     ................
	...
   21aa0:	00000001 00000001 00030002 00030003     ................
   21ab0:	00020003 00020002 00020002 00010001     ................
   21ac0:	00020001 00000001 ffff0000 ffff0000     ................
   21ad0:	0000ffff 0000fffe fffffffe fffdfffe     ................
   21ae0:	fffdfffd fffdfffd fffcfffd fffdfffd     ................
   21af0:	fffefffe fffdfffd fffefffe fffffffe     ................
   21b00:	fffffffe ffff0000 ffff0000 ffffffff     ................
   21b10:	fffefffd fffefffe fffffffe ffffffff     ................
   21b20:	ffffffff ffffffff 00010000 00000000     ................
   21b30:	00000001 ffff0000 ffff0000 0000ffff     ................
   21b40:	0000fffe ffffffff 00000000 00010000     ................
   21b50:	00000000 00000001 00010001 00010001     ................
   21b60:	00000000 ffff0000 fffeffff fffdffff     ................
   21b70:	fffdffff fffeffff fffeffff ffff0000     ................
   21b80:	ffffffff ffff0000 ffffffff 00000000     ................
   21b90:	ffff0000 ffffffff ffff0000 00000002     ................
   21ba0:	00000001 00000001 00000000 00010000     ................
   21bb0:	00000000 0000ffff 00010000 00010000     ................
   21bc0:	00010000 00000000 ffff0000 ffff0000     ................
   21bd0:	ffffffff ffffffff 00000000 ffff0000     ................
   21be0:	fffdffff fffefffe fffffffe 0000ffff     ................
   21bf0:	0001ffff 00000001 00020001 00020002     ................
   21c00:	00020001 00010001 ffff0000 ffff0000     ................
   21c10:	0001ffff 0001ffff 00010001 00010001     ................
   21c20:	00010001 00010000 00000000 00010000     ................
   21c30:	0001ffff 00000000 ffff0000 0000ffff     ................
   21c40:	fffeffff 0000ffff ffffffff 0000ffff     ................
   21c50:	ffffffff ffffffff fffdfffe fffdfffd     ................
   21c60:	fffefffb 0000fffd 0000ffff ffff0000     ................
   21c70:	ffff0001 00000000 ffffffff fffffffe     ................
   21c80:	fffefffe ffff0000 ffffffff ffffffff     ................
   21c90:	00000001 ffffffff ffff0000 fffeffff     ................
   21ca0:	ffffffff fffefffe fffefffe 0000ffff     ................
   21cb0:	00010000 00010001 00010000 00010000     ................
   21cc0:	00000000 00000001 00000001 ffff0000     ................
   21cd0:	fffeffff fffefffe 0000ffff 00000000     ................
   21ce0:	00000000 ffffffff fffeffff fffefffe     ................
   21cf0:	fffffffe fffdffff fffe0000 ffffffff     ................
   21d00:	fffffffe ffffffff 0000ffff 0000fffe     ................
	...
   21d18:	00010000 00000000 0000ffff 00000000     ................
   21d28:	ffff0000 ffff0000 00010000 00000000     ................
   21d38:	00010001 00010002 00000002 00010001     ................
   21d48:	00010001 00010001 00000000 fffe0000     ................
   21d58:	fffefffe fffefffe fffeffff fffcfffe     ................
   21d68:	fffcfffd fffdfffe ffffffff ffffffff     ................
   21d78:	0000ffff fffffffd 0001fffe 0000fffd     ................
   21d88:	ffffffff ffffffff 0000ffff 0000fffe     ................
   21d98:	0000ffff 00000000 00000000 ffff0000     ................
   21da8:	ffff0000 ffffffff 00000000 0000ffff     ................
   21db8:	00000000 00010002 00010002 00020001     ................
   21dc8:	ffff0002 ffff0001 fffd0001 ffffffff     ................
   21dd8:	ffffffff ffffffff ffff0000 00010000     ................
   21de8:	00010000 00000000 ffffffff ffffffff     ................
   21df8:	0000ffff ffffffff 0000fffe 0000ffff     ................
   21e08:	0001ffff 00000000 00010000 00000000     ................
   21e18:	0000fffe 0000ffff 00010000 00000001     ................
   21e28:	00010002 00010001 ffff0001 ffff0001     ................
   21e38:	ffff0000 ffff0000 fffd0000 fffdffff     ................
   21e48:	fffdfffd fffdfffd fffefffd fffefffd     ................
   21e58:	fffffffe 0000ffff 0001ffff 00010000     ................
   21e68:	00010001 00010000 00000001 fffeffff     ................
   21e78:	0000ffff 00000000 00010001 00000001     ................
   21e88:	ffff0001 ffff0000 ffffffff ffffffff     ................
   21e98:	00000000 ffff0000 0000ffff 00000000     ................
   21ea8:	0000ffff 0000ffff fffefffe fffefffd     ................
   21eb8:	fffefffd fffffffe fffeffff fffdffff     ................
   21ec8:	fffeffff fffeffff ffff0001 0000ffff     ................
   21ed8:	00010001 00010001 ffff0001 fffeffff     ................
   21ee8:	fffeffff fffeffff ffffffff 0000fffe     ................
   21ef8:	0001ffff 00020000 00010000 00010001     ................
   21f08:	00010001 00010001 00000000 00010000     ................
   21f18:	00000001 00000001 00000001 00000001     ................
   21f28:	fffe0000 fffeffff fffefffd fffdfffe     ................
   21f38:	fffefffe ffffffff 0000ffff 0001ffff     ................
   21f48:	00000001 00000000 00000000 00000001     ................
   21f58:	00000000 0000ffff 0001fffe 00010000     ................
   21f68:	00010000 00000000 ffffffff fffffffe     ................
   21f78:	fffffffe fffeffff fffefffe fffffffe     ................
   21f88:	ffffffff 0000ffff fffeffff fffe0000     ................
   21f98:	fffeffff ffffffff fffefffe ffffffff     ................
	...
   21fb0:	fffeffff fffeffff fffe0000 fffeffff     ................
	...
   21fc8:	00010000 00020000 00020000 00010000     ................
   21fd8:	00000000 00010000 00000001 ffff0000     ................
   21fe8:	00000000 ffff0000 ffffffff ffffffff     ................
   21ff8:	ffff0000 ffff0000 ffff0000 00000000     ................
   22008:	00010001 00010000 00010000 0000ffff     ................
   22018:	00000000 00010000 00000000 00000000     ................
   22028:	00000001 00000000 00000000 fffeffff     ................
   22038:	ffffffff fffeffff ffffffff 00000001     ................
   22048:	00010002 00020001 00010001 00010002     ................
   22058:	00010001 ffff0001 00000000 00000000     ................
   22068:	00000001 0000ffff fffffffe fffefffe     ................
   22078:	fffefffe fffefffd fffefffe fffefffe     ................
   22088:	fffefffe fffdfffe fffefffe ffffffff     ................
   22098:	ffffffff fffeffff fffefffe ffffffff     ................
   220a8:	fffefffe fffffffe ffffffff 0000ffff     ................
   220b8:	0000fffe fffefffd fffeffff ffffffff     ................
   220c8:	00000000 ffffffff ffffffff ffffffff     ................
   220d8:	ffffffff 00000000 00000000 00000000     ................
   220e8:	00000000 ffff0000 ffff0001 fffe0000     ................
   220f8:	ffff0000 00010002 00010003 00010003     ................
   22108:	00010001 0000ffff 0000ffff 00000000     ................
   22118:	0001ffff 0000ffff ffffffff ffffffff     ................
   22128:	ffffffff ffffffff 00000000 ffff0002     ................
   22138:	00010002 00000000 ffffffff 0000fffe     ................
   22148:	0000ffff 00000000 00000000 0001ffff     ................
   22158:	0001ffff 00000000 ffff0000 fffe0001     ................
   22168:	fffe0000 fffd0000 fffffffe ffffffff     ................
	...
   22180:	0000ffff ffffffff ffff0000 ffffffff     ................
   22190:	0001fffe 0000fffe 0000ffff 00010000     ................
   221a0:	00010000 00020001 00020002 00010001     ................
   221b0:	00000000 ffff0000 fffeffff fffeffff     ................
   221c0:	fffeffff fffefffe fffffffe fffffffe     ................
   221d0:	ffffffff ffff0000 fffefffe fffffffd     ................
   221e0:	fffefffc fffefffe fffeffff fffdfffe     ................
   221f0:	fffdfffc fffefffd fffdfffd fffdfffd     ................
   22200:	fffefffe ffffffff ffff0000 ffff0001     ................
   22210:	00000001 00000000 00010001 00010001     ................
   22220:	00020002 00020002 00030002 00020001     ................
   22230:	00010000 0000ffff ffffffff ffffffff     ................
   22240:	00000000 00010000 ffff0001 00000001     ................
   22250:	00010001 00010001 ffff0001 fffe0001     ................
   22260:	ffff0000 fffffffe fffffffe ffffffff     ................
   22270:	ffffffff ffffffff ffff0000 0000ffff     ................
   22280:	ffff0000 00000000 00000000 00010000     ................
   22290:	00010001 00000000 fffe0000 fffefffe     ................
   222a0:	ffffffff fffeffff fffefffd fffdfffd     ................
   222b0:	fffefffd fffefffe fffffffe 00000000     ................
   222c0:	00010002 00000001 ffff0000 ffffffff     ................
   222d0:	0000ffff 0001ffff 0001ffff 00010001     ................
   222e0:	00010001 00020002 00010001 00000000     ................
   222f0:	ffff0000 ffffffff ffffffff ffff0000     ................
   22300:	ffff0000 0000fffe 0000ffff 0000ffff     ................
   22310:	ffffffff 00000000 00000000 0000ffff     ................
   22320:	fffffffd fffffffe ffff0000 ffffffff     ................
   22330:	0000ffff 00000000 00000000 00000000     ................
   22340:	ffffffff ffffffff ffff0000 ffff0001     ................
   22350:	0000ffff 00000001 00010001 00000001     ................
   22360:	00010001 00010001 00010001 00010000     ................
   22370:	00010000 00010000 00000000 ffffffff     ................
   22380:	ffff0000 ffff0001 ffff0001 ffffffff     ................
   22390:	ffffffff fffffffe fffffffd fffefffd     ................
   223a0:	fffffffe ffff0000 ffff0000 ffff0000     ................
   223b0:	ffff0000 ffff0000 fffefffe fffefffe     ................
   223c0:	fffeffff fffeffff fffeffff fffefffe     ................
   223d0:	fffefffe fffefffe fffeffff fffe0000     ................
   223e0:	fffefffe fffefffe fffeffff ffffffff     ................
   223f0:	ffffffff 0000fffe 0000ffff fffefffd     ................
   22400:	fffdfffe fffefffe fffefffe 0000fffd     ................
   22410:	0000fffe ffffffff 00000000 00010001     ................
   22420:	00020001 00030002 00030002 00040002     ................
   22430:	00020002 00010000 00000001 00010000     ................
   22440:	00020002 00010002 00010002 00010001     ................
   22450:	00010000 0000ffff ffffffff 0000ffff     ................
   22460:	0000ffff ffff0000 00000000 0000ffff     ................
   22470:	00000001 00000000 00000000 ffff0000     ................
   22480:	0000ffff 0000ffff ffff0000 fffe0000     ................
   22490:	ffff0000 ffff0000 fffeffff ffffffff     ................
   224a0:	00000000 00010000 00010001 00000001     ................
   224b0:	00010001 00000002 00000000 ffffffff     ................
   224c0:	fffdfffe fffeffff 0000ffff ffffffff     ................
   224d0:	0000ffff ffff0000 ffff0000 ffff0001     ................
   224e0:	ffff0000 fffffffe ffffffff ffffffff     ................
   224f0:	fffeffff fffffffe fffefffe ffffffff     ................
   22500:	0000ffff ffffffff fffffffe 0000ffff     ................
	...
   22518:	00020000 00020001 00000001 00000000     ................
   22528:	ffff0000 ffff0000 fffeffff fffffffe     ................
   22538:	fffefffd fffefffe ffffffff 0000ffff     ................
   22548:	00000000 00010001 00000000 ffff0000     ................
   22558:	00000000 00010001 00030002 00030003     ................
   22568:	00030003 00030002 00020001 00020000     ................
   22578:	00020001 00020001 00010002 00010001     ................
   22588:	ffffffff fffefffe fffdfffd fffefffd     ................
   22598:	fffefffe fffefffc fffeffff fffeffff     ................
   225a8:	fffeffff fffefffe fffd0000 fffeffff     ................
   225b8:	0000ffff ffffffff ffff0000 0000ffff     ................
   225c8:	ffff0000 ffff0000 fffffffe ffffffff     ................
   225d8:	fffffffe 0000fffe ffff0000 ffff0000     ................
   225e8:	00000001 00000001 0000ffff 00000000     ................
   225f8:	00000000 00000001 ffff0000 ffff0000     ................
   22608:	ffff0000 ffff0000 00010000 ffffffff     ................
   22618:	ffffffff fffeffff fffdfffe fffffffe     ................
   22628:	0000ffff 0000ffff 00000001 ffff0000     ................
   22638:	fffffffe 0000ffff 0000ffff 0000ffff     ................
   22648:	0000ffff ffffffff 0000ffff 0000fffe     ................
   22658:	ffffffff fffeffff fffdfffe fffdfffe     ................
   22668:	ffffffff ffffffff 00010000 00020000     ................
   22678:	00030001 00010001 00010001 00000000     ................
   22688:	00010000 ffff0000 00000000 00000000     ................
   22698:	ffff0001 ffffffff fffeffff fffffffe     ................
   226a8:	fffffffe 0000ffff ffff0000 ffffffff     ................
   226b8:	ffffffff fffefffe ffffffff 00000000     ................
   226c8:	00000001 00020001 00000001 0000ffff     ................
   226d8:	ffffffff 0000ffff 0000ffff ffffffff     ................
   226e8:	fffffffe fffffffe ffffffff ffffffff     ................
   226f8:	fffefffe fffefffe fffefffd fffdfffe     ................
   22708:	fffdfffe fffeffff fffffffe 0000ffff     ................
   22718:	0000ffff 0000ffff 0000ffff 00000000     ................
   22728:	00000000 ffff0000 0000fffe 0000fffe     ................
   22738:	ffffffff 00010001 00010002 00020002     ................
   22748:	00020003 00010002 00000002 00000001     ................
   22758:	ffff0000 ffff0001 00010001 00000000     ................
   22768:	00000000 ffffffff 0000ffff 0001ffff     ................
	...
   22784:	00010000 fffe0000 fffdffff fffefffe     ................
   22794:	ffffffff 0000fffe 0001ffff 00000001     ................
   227a4:	00000001 00000000 0000ffff 00000001     ................
   227b4:	00000000 0001ffff 00000000 ffffffff     ................
   227c4:	ffff0000 ffffffff ffff0000 fffefffe     ................
   227d4:	fffffffe fffeffff fffefffe fffefffe     ................
   227e4:	fffefffe fffefffd fffefffe fffefffe     ................
   227f4:	fffffffe fffffffe fffefffe fffeffff     ................
   22804:	fffeffff fffeffff fffffffd fffffffe     ................
   22814:	ffffffff ffffffff 00000000 ffff0000     ................
   22824:	fffeffff fffeffff fffffffe 0000fffe     ................
   22834:	ffff0000 00000000 00000000 ffffffff     ................
   22844:	fffeffff fffeffff 00010000 00010001     ................
   22854:	00010001 00000000 00000000 ffff0000     ................
   22864:	00010000 00010001 00010001 00000001     ................
   22874:	ffff0000 ffff0000 00010000 00020002     ................
   22884:	00020002 00020001 00010000 00010001     ................
   22894:	00010000 00010000 00000000 00000000     ................
   228a4:	ffff0000 fffe0000 fffeffff fffeffff     ................
   228b4:	ffffffff ffff0000 ffffffff fffefffd     ................
   228c4:	fffdfffd fffdfffd fffdffff ffffffff     ................
   228d4:	ffff0000 fffe0000 fffefffe fffefffe     ................
   228e4:	0000ffff 0000fffe 00000000 00010001     ................
   228f4:	00010001 00010000 00000000 00000000     ................
   22904:	00000001 00000000 ffff0000 ffffffff     ................
   22914:	00000000 00010001 00000000 00010001     ................
   22924:	00020002 00020000 00010000 0000ffff     ................
   22934:	0000fffe ffffffff ffff0000 ffffffff     ................
   22944:	00000000 fffeffff fffeffff ffffffff     ................
   22954:	0000ffff 00000001 00000001 ffff0001     ................
   22964:	ffff0000 0000ffff ffffffff ffffffff     ................
   22974:	0000fffe 0000fffe fffffffe 0000ffff     ................
   22984:	ffff0000 00010000 00000000 0000ffff     ................
   22994:	ffffffff 0000ffff ffffffff ffffffff     ................
   229a4:	ffff0000 ffffffff ffffffff ffffffff     ................
   229b4:	fffffffe fffffffe ffffffff 00000001     ................
   229c4:	00020002 00010001 00000001 00000001     ................
   229d4:	ffff0000 0000ffff 0000ffff 0000fffe     ................
   229e4:	0000ffff 0000fffe ffffffff 00000000     ................
   229f4:	00000002 ffff0001 00000001 fffe0001     ................
   22a04:	fffe0000 ffffffff fffefffd fffffffd     ................
   22a14:	fffefffe fffcfffe fffdfffd fffefffe     ................
   22a24:	fffffffe fffffffe ffffffff 0000ffff     ................
   22a34:	00010000 00000001 fffe0001 ffff0000     ................
   22a44:	00010001 00010000 0000ffff 00010001     ................
   22a54:	00010001 00020002 00020000 00010000     ................
   22a64:	ffff0001 0000ffff ffff0000 ffff0001     ................
   22a74:	ffff0001 ffffffff ffffffff fffeffff     ................
   22a84:	fffffffd fffffffe fffffffe 0000fffe     ................
   22a94:	00000000 ffff0000 ffffffff 0000ffff     ................
   22aa4:	fffefffe fffefffe fffffffe 0001ffff     ................
   22ab4:	ffffffff fffeffff 0000fffe fffffffe     ................
   22ac4:	fffdfffe fffefffe fffdfffe fffefffd     ................
   22ad4:	fffffffe 00000000 00000001 00010001     ................
   22ae4:	00020002 00020003 00000002 ffff0000     ................
   22af4:	ffffffff ffffffff 00000000 0001ffff     ................
   22b04:	0000ffff 00000001 00000002 00000001     ................
   22b14:	00000000 00010000 00010002 00010002     ................
   22b24:	ffff0001 ffff0000 ffffffff 00000001     ................
   22b34:	ffff0001 0000ffff ffffffff fffefffd     ................
   22b44:	fffefffe fffcfffc fffcfffd fffdfffd     ................
   22b54:	fffefffe fffffffe 0000ffff 00000000     ................
   22b64:	00000000 00000001 00000000 ffffffff     ................
   22b74:	0000ffff 0002ffff 00030000 00040002     ................
   22b84:	00020003 00020003 00010001 00010001     ................
   22b94:	00010002 00010000 00020001 00010001     ................
   22ba4:	00010002 00010002 00010000 0001ffff     ................
   22bb4:	0001ffff 0000ffff 00000001 ffff0001     ................
   22bc4:	ffff0001 ffff0001 ffff0000 fffe0000     ................
   22bd4:	fffdfffe fffefffe fffffffe fffffffe     ................
   22be4:	00000000 00000001 ffffffff fffefffe     ................
   22bf4:	fffefffe fffefffe fffeffff fffdfffe     ................
   22c04:	0000ffff 00010000 00000000 fffeffff     ................
   22c14:	fffeffff fffdfffe fffefffd fffffffd     ................
   22c24:	fffffffe 0000ffff 0000ffff 00000000     ................
   22c34:	00000000 ffffffff fffeffff fffeffff     ................
   22c44:	fffeffff ffffffff fffffffe ffffffff     ................
   22c54:	ffffffff ffffffff ffff0000 00000000     ................
   22c64:	00010001 00000000 00000000 00000000     ................
   22c74:	00000000 fffffffe fffeffff fffdffff     ................
   22c84:	fffeffff ffffffff fffefffe fffdfffe     ................
   22c94:	ffffffff 00010000 00010000 00020000     ................
   22ca4:	0001ffff 00020000 00010000 0000ffff     ................
   22cb4:	00010001 00010001 00010001 00010001     ................
   22cc4:	00000001 00000000 00010000 0001ffff     ................
   22cd4:	00020001 00020003 00010003 00010001     ................
   22ce4:	ffff0000 ffffffff fffdfffd fffefffe     ................
   22cf4:	fffeffff fffdffff fffeffff ffffffff     ................
   22d04:	fffeffff fffe0000 ffff0001 ffff0000     ................
   22d14:	ffffffff fffffffe fffeffff fffdfffe     ................
   22d24:	fffcfffe fffdfffe fffeffff ffffffff     ................
   22d34:	ffff0000 ffff0000 0000ffff 00000000     ................
   22d44:	0001ffff 0001ffff 0000ffff ffffffff     ................
   22d54:	ffffffff fffeffff fffeffff ffff0000     ................
   22d64:	00010001 00000001 00020002 00020002     ................
   22d74:	00020002 00010001 00010000 00010000     ................
   22d84:	00000000 ffff0000 00000000 00000000     ................
   22d94:	0000ffff ffffffff fffeffff fffefffe     ................
   22da4:	0000ffff 0000ffff 00010000 ffff0000     ................
   22db4:	fffeffff fffdfffd fffdfffd fffdfffd     ................
   22dc4:	fffefffd fffefffd fffffffe ffffffff     ................
   22dd4:	0000ffff fffffffe 00000000 00000000     ................
   22de4:	ffffffff 0001ffff 00010001 00000000     ................
   22df4:	ffffffff 0000ffff fffffffe 0000fffe     ................
   22e04:	0000ffff ffff0000 fffeffff ffffffff     ................
   22e14:	ffffffff 00000000 00010001 00010001     ................
	...
   22e2c:	00010000 00000001 ffff0000 fffefffe     ................
   22e3c:	fffefffe 0000ffff 00000000 0000ffff     ................
	...
   22e54:	00010000 00000001 00000000 0000ffff     ................
	...
   22e6c:	ffff0000 ffffffff fffefffe fffdfffe     ................
   22e7c:	fffefffe fffefffe fffffffd fffefffe     ................
   22e8c:	fffffffe ffffffff 00000000 ffffffff     ................
   22e9c:	fffeffff fffe0000 ffffffff ffff0000     ................
   22eac:	00000000 0000ffff 0000ffff 0000ffff     ................
   22ebc:	0001ffff 00000000 00000000 00010001     ................
   22ecc:	00000000 00000001 ffff0001 ffff0000     ................
   22edc:	00000000 00010001 00010001 00020000     ................
   22eec:	00000001 00010000 00010001 00010002     ................
   22efc:	00000002 ffff0001 ffffffff fffffffe     ................
   22f0c:	fffefffe ffffffff fffffffe fffffffe     ................
   22f1c:	fffefffe fffefffd fffdfffd fffdfffd     ................
   22f2c:	fffdfffd fffefffe fffefffe ffffffff     ................
   22f3c:	ffff0000 0000ffff 0001ffff 00010000     ................
   22f4c:	0000ffff 0000ffff 00000001 00010001     ................
   22f5c:	00020001 00010001 00000001 00000000     ................
   22f6c:	ffff0000 fffffffe ffffffff ffffffff     ................
   22f7c:	ffff0000 ffffffff ffffffff ffff0000     ................
   22f8c:	ffff0000 fffefffe fffefffe ffffffff     ................
   22f9c:	fffeffff fffefffe ffffffff ffff0000     ................
   22fac:	ffffffff 0000ffff ffffffff ffffffff     ................
   22fbc:	ffffffff ffff0000 00000000 00010001     ................
   22fcc:	00020002 00010002 00010001 00010001     ................
   22fdc:	00000002 00000000 00000000 0000ffff     ................
   22fec:	0001ffff 00010000 00010001 00010001     ................
   22ffc:	00000001 00010000 00000001 00000001     ................
   2300c:	00000000 00010000 ffffffff 0000ffff     ................
   2301c:	0000ffff 00000000 ffffffff ffff0000     ................
   2302c:	fffe0000 0000ffff ffffffff fffeffff     ................
   2303c:	fffefffe fffdfffe fffcfffd fffefffc     ................
   2304c:	fffefffe fffeffff ffffffff ffffffff     ................
   2305c:	fffefffe fffffffd fffffffe ffff0000     ................
	...
   23078:	ffff0000 ffffffff ffff0000 ffffffff     ................
   23088:	00000000 00010000 00010001 00000000     ................
   23098:	00010000 00000000 ffff0000 ffff0000     ................
   230a8:	ffffffff ffffffff ffffffff ffffffff     ................
   230b8:	0000fffe ffffffff ffffffff 0000fffe     ................
   230c8:	fffffffe ffff0000 00000001 00010001     ................
   230d8:	00020001 00030002 00020003 00010001     ................
   230e8:	00000001 ffff0001 ffff0000 ffffffff     ................
   230f8:	fffffffe fffffffe fffefffe fffffffe     ................
   23108:	ffffffff fffeffff ffff0000 00010000     ................
   23118:	00010001 00000000 00000000 00000001     ................
   23128:	ffff0000 fffffffe fffefffe fffffffe     ................
   23138:	00010000 00010000 00010001 00010001     ................
   23148:	00010000 ffff0001 fffeffff ffffffff     ................
   23158:	ffffffff ffffffff ffffffff 00000000     ................
   23168:	00000000 ffff0000 ffff0001 ffff0001     ................
   23178:	ffffffff fffefffd fffefffd fffdfffe     ................
   23188:	fffdfffe fffdfffe fffe0000 fffe0000     ................
   23198:	fffefffe fffefffe fffffffe ffffffff     ................
   231a8:	ffffffff 0001ffff 00000000 00010001     ................
   231b8:	00010000 0000ffff 00010000 00020002     ................
   231c8:	00020001 00020001 00020002 00020001     ................
   231d8:	00020000 00010001 00000001 ffff0001     ................
   231e8:	00000000 ffff0000 ffff0000 ffff0000     ................
   231f8:	ffff0000 fffeffff ffff0000 0000ffff     ................
   23208:	fffefffe fffefffe fffeffff ffff0000     ................
   23218:	00000000 fffffffe ffffffff ffffffff     ................
   23228:	0000ffff 00000000 00010001 ffff0000     ................
   23238:	fffeffff fffefffd fffffffe ffff0000     ................
   23248:	ffff0000 ffff0000 00000000 0000ffff     ................
   23258:	0000ffff 00000000 ffffffff ffff0000     ................
   23268:	fffe0000 ffffffff fffffffd 0000ffff     ................
   23278:	00000000 00010001 00020002 00010001     ................
   23288:	00000000 0000ffff 0001ffff fffffffe     ................
   23298:	ffffffff fffe0000 fffeffff fffdfffe     ................
   232a8:	ffffffff ffffffff ffffffff fffdfffe     ................
   232b8:	fffe0000 fffdffff fffdfffe ffffffff     ................
   232c8:	fffeffff fffeffff 0000ffff 00010000     ................
   232d8:	00010001 00010000 00010001 00010001     ................
   232e8:	ffff0000 ffff0000 ffff0000 ffffffff     ................
   232f8:	00010000 00020000 00020000 0001ffff     ................
   23308:	00010000 ffff0000 ffff0000 ffffffff     ................
   23318:	ffff0000 00000000 ffff0000 ffffffff     ................
   23328:	0000ffff 00010000 00020001 00000000     ................
   23338:	00000000 ffffffff 00000002 00000001     ................
   23348:	ffffffff fffffffe fffffffe ffffffff     ................
   23358:	fffffffe fffffffd fffffffe 0000ffff     ................
   23368:	0000ffff ffff0000 ffffffff fffdfffd     ................
   23378:	fffcfffe fffefffe fffffffe fffffffe     ................
   23388:	0001ffff 0000ffff ffffffff ffffffff     ................
   23398:	ffffffff fffe0000 fffe0000 fffe0000     ................
   233a8:	00000000 00010001 00000000 00010001     ................
   233b8:	00020002 00010003 00010002 ffff0000     ................
   233c8:	fffe0000 fffdffff fffeffff fffffffe     ................
   233d8:	ffffffff ffff0000 00010000 00000000     ................
   233e8:	ffffffff 0000ffff ffffffff ffffffff     ................
   233f8:	ffffffff 0000ffff 0000ffff 00010000     ................
   23408:	00010000 00010000 00010000 00010000     ................
	...
   23420:	0000ffff ffffffff 0000ffff 00000000     ................
   23430:	0000ffff 00010000 00020000 00010001     ................
   23440:	00010000 00000000 00000000 fffffffe     ................
   23450:	fffffffe fffeffff fffe0000 0001ffff     ................
	...
   23468:	ffffffff fffefffe fffdfffe fffdfffe     ................
   23478:	fffefffd fffeffff ffffffff 0000ffff     ................
   23488:	00010000 00010001 00000000 00000000     ................
   23498:	00000000 00010000 0000ffff 0000ffff     ................
   234a8:	0000ffff ffff0000 00000001 ffff0000     ................
   234b8:	fffeffff fffdfffe fffdfffe fffcfffc     ................
   234c8:	fffdfffd fffefffe ffffffff ffff0000     ................
   234d8:	ffff0000 ffff0000 ffffffff 0000ffff     ................
   234e8:	fffeffff ffff0001 00000000 00010000     ................
	...
   23500:	00010001 00000002 00010001 00010002     ................
   23510:	00020001 00010001 ffff0001 ffff0001     ................
   23520:	ffff0000 00000000 0001ffff 0000ffff     ................
   23530:	00000000 ffffffff fffefffe fffefffd     ................
   23540:	fffdfffd fffdfffd fffefffd ffffffff     ................
   23550:	0001ffff 00010000 00010001 00000000     ................
   23560:	ffff0001 ffff0001 ffffffff fffffffe     ................
   23570:	0000ffff ffff0000 ffff0001 ffff0001     ................
   23580:	ffff0000 0000fffe fffffffe ffffffff     ................
   23590:	ffffffff 00000000 00000001 00010001     ................
   235a0:	00020001 00030001 00020000 00020000     ................
   235b0:	00010000 00000000 0000ffff ffff0000     ................
   235c0:	00000001 00000000 00000000 00000000     ................
   235d0:	ffffffff fffffffe ffffffff ffffffff     ................
   235e0:	fffeffff fffdffff fffefffe ffffffff     ................
   235f0:	ffff0000 00010000 00010001 00000001     ................
   23600:	00010001 00000000 ffff0000 00000000     ................
   23610:	0000ffff ffff0000 ffff0000 ffff0000     ................
   23620:	00000000 ffff0000 fffffffe ffffffff     ................
   23630:	fffeffff ffffffff 0000ffff 00000000     ................
   23640:	0000ffff fffffffe 00010000 00000000     ................
   23650:	00000001 00000001 00000001 0000ffff     ................
   23660:	0000ffff ffffffff fffffffe fffefffe     ................
   23670:	fffdfffe fffdfffd fffcfffd fffdfffd     ................
   23680:	fffefffd fffefffe fffefffe fffffffe     ................
   23690:	0000fffe ffffffff 00000000 00000001     ................
   236a0:	00000001 00000000 0000ffff 0000ffff     ................
   236b0:	0000ffff 00000001 00010001 ffff0000     ................
   236c0:	ffffffff 0000fffe 0001ffff 00010001     ................
   236d0:	00020001 00020002 00000001 0001ffff     ................
   236e0:	00010000 ffff0000 ffff0000 00000001     ................
   236f0:	00000000 00000001 ffff0001 00000001     ................
   23700:	00000000 fffe0000 fffdfffd fffefffd     ................
   23710:	fffefffe fffeffff ffffffff 00010000     ................
   23720:	00000000 0000ffff fffeffff fffeffff     ................
   23730:	fffefffe fffefffd fffffffe fffffffe     ................
   23740:	0000ffff 0000fffe 00000000 00010000     ................
   23750:	00020001 00020001 00000001 ffff0000     ................
	...
   23768:	00010001 00020001 00020002 00010002     ................
   23778:	00010002 00000002 00000001 00000000     ................
   23788:	fffeffff fffeffff fffdfffe fffefffd     ................
   23798:	fffffffe ffffffff 00000000 00000001     ................
   237a8:	00010001 00000001 00000000 fffeffff     ................
   237b8:	fffefffe fffeffff fffffffe fffffffe     ................
   237c8:	ffffffff ffffffff fffffffe fffffffe     ................
   237d8:	fffeffff fffefffe fffefffd fffefffe     ................
   237e8:	ffffffff ffffffff ffff0001 ffff0000     ................
   237f8:	ffffffff ffffffff fffffffe fffffffe     ................
   23808:	fffeffff fffeffff fffeffff fffffffe     ................
	...
   23820:	00010000 0002ffff 00020001 00020001     ................
   23830:	00010000 00010001 00020002 00010002     ................
   23840:	00010002 ffff0001 ffffffff fffffffe     ................
   23850:	fffefffe fffdffff fffeffff fffeffff     ................
   23860:	fffffffe fffefffe fffcfffd fffcfffd     ................
   23870:	fffefffe ffffffff 00000000 00010001     ................
   23880:	00000000 ffffffff 00000000 00000001     ................
   23890:	fffe0000 ffffffff ffffffff 0001ffff     ................
   238a0:	0001ffff 00010000 00000000 ffff0000     ................
   238b0:	ffffffff 00000000 00000000 00000000     ................
   238c0:	00000001 00000001 ffffffff ffffffff     ................
   238d0:	0000ffff 0000ffff 0000ffff 0000ffff     ................
   238e0:	0001ffff 00010000 00010002 00010001     ................
   238f0:	00010000 00000000 ffff0000 00000000     ................
   23900:	00000000 fffe0000 fffeffff ffffffff     ................
   23910:	fffefffe fffefffc fffefffc fffffffc     ................
   23920:	fffffffe ffff0000 ffff0000 ffff0000     ................
   23930:	00000000 0000ffff 00000000 ffff0000     ................
   23940:	00010000 00000000 ffff0001 0000ffff     ................
   23950:	0000ffff fffeffff fffeffff 0000ffff     ................
   23960:	0000ffff 0001ffff 00020001 00020003     ................
   23970:	00000002 00010001 00010001 00010000     ................
   23980:	00000000 00010000 00030001 00030003     ................
   23990:	00020003 00020001 00010000 00000001     ................
   239a0:	ffffffff fffdffff fffdffff fffdffff     ................
   239b0:	fffdfffe fffeffff ffffffff fffefffe     ................
   239c0:	fffdfffd fffcfffd fffcfffc fffefffe     ................
   239d0:	fffffffe fffeffff fffefffe fffffffe     ................
   239e0:	ffff0000 0000ffff fffffffe 00010000     ................
   239f0:	00020001 00040003 00050005 00000003     ................
   23a00:	fffcfffc fffcfffb fff9fffc fff3fff5     ................
   23a10:	fff6fff3 0001fffb 00070005 00040007     ................
   23a20:	00010003 00010001 ffff0000 fffafffa     ................
   23a30:	fffafff8 0001fffc 00060003 000a0007     ................
   23a40:	000b000a 0006000a 00000003 fffafffc     ................
   23a50:	fff6fff6 fffbfff7 00020000 00050004     ................
   23a60:	00020002 00020000 00020002 fffc0000     ................
   23a70:	fff6fff9 fff8fff7 fffdfffb 00010000     ................
   23a80:	00020002 00020001 00000002 fffefffe     ................
   23a90:	fffefffe fffefffc 0000fffe 00010001     ................
   23aa0:	00040002 00040005 00050006 00040006     ................
   23ab0:	00030004 00000002 fffcfffe fffafffa     ................
   23ac0:	fffcfffb fffffffd ffff0000 ffffffff     ................
   23ad0:	fffdfffe fffbfffc fffbfffb fffdfffc     ................
   23ae0:	fffefffe 0000ffff 00030001 00030004     ................
   23af0:	ffff0003 fffbffff fff8fffa fff9fffa     ................
   23b00:	fffefffb 0002ffff 00030002 00030002     ................
   23b10:	00030001 00000001 fffeffff 0002ffff     ................
   23b20:	00060002 00060007 00040005 00020001     ................
   23b30:	00020002 00010002 fffdffff fffdfffc     ................
   23b40:	0001ffff 00030003 00020003 00010001     ................
   23b50:	00020000 00010002 00010002 00020002     ................
   23b60:	00010001 ffff0000 fffcfffe fffafffb     ................
   23b70:	fffcfffb fffefffe fffdfffe fffbfffb     ................
   23b80:	6d726554 6c616e69 00000000 00545452     Terminal....RTT.
   23b90:	47474553 00005245 56737953 00776569     SEGGER..SysView.

00023ba0 <_abSync>:
	...
   23bac:	50413d4e 55415f33 5f4f4944 54414c50     N=AP3_AUDIO_PLAT
   23bbc:	4d524f46 433d442c 6574726f 344d2d78     FORM,D=Cortex-M4
   23bcc:	00000000 35312349 7379533d 6b636954     ....I#15=SysTick
   23bdc:	00000000                                ....

00023be0 <g_sBspUartConfig>:
   23be0:	0001c200 00000060 00000000 00000000     ....`...........
   23bf0:	00000000 00000012 00000000 00000000     ................
	...

00023c08 <g_AM_BSP_GPIO_COM_UART_TX>:
   23c08:	00000000                                ....

00023c0c <g_AM_BSP_GPIO_COM_UART_RX>:
   23c0c:	00000000                                ....

00023c10 <am_hal_cachectrl_defaults>:
   23c10:	00000308                                ....

00023c14 <g_am_hal_mcuctrl_flash_size>:
   23c14:	00004000 00008000 00010000 00020000     .@..............
   23c24:	00040000 00080000 00100000 00200000     .............. .
	...

00023c54 <g_am_hal_mcuctrl_sram_size>:
   23c54:	00004000 00008000 00010000 00020000     .@..............
   23c64:	00040000 00080000 00100000 00060000     ................
	...

00023c94 <am_hal_pwrctrl_peripheral_control>:
	...
   23ca0:	00000001 00000004 00000004 00000002     ................
   23cb0:	00000008 00000008 00000004 00000008     ................
   23cc0:	00000008 00000008 00000008 00000008     ................
   23cd0:	00000010 00000010 00000010 00000020     ............ ...
   23ce0:	00000010 00000010 00000040 00000010     ........@.......
   23cf0:	00000010 00000080 00000004 00000004     ................
   23d00:	00000100 00000004 00000004 00000200     ................
   23d10:	00000020 00000020 00000400 00000004      ... ...........
   23d20:	00000004 00000800 00000040 00000040     ........@...@...
   23d30:	00001000 00000080 00000080 00002000     ............. ..
   23d40:	00000100 00000100                       ........
