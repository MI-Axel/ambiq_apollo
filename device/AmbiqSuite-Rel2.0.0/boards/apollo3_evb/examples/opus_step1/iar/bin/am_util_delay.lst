###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         12/Mar/2019  10:07:10
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\utils\am_util_delay.c
#    Command line =  
#        -f C:\temp\EW8E42.tmp
#        (C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\utils\am_util_delay.c
#        -D iar -D AM_PART_APOLLO3 -D AM_PACKAGE_BGA -lcN
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\bin
#        --diag_suppress Pa050 -o
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\bin
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\..\..\..\..\utils\
#        -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\..\..\..\..\CMSIS\ARM\Include\
#        -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\..\..\..\..\CMSIS\AmbiqMicro\Include\
#        -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\..\..\..\..\mcu\apollo3\
#        -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\..\..\..\..\devices\
#        -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\..\..\bsp\
#        -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\..\..\..\..\
#        -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\src\
#        -I
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\..\src\sound\
#        -On)
#    Locale       =  C
#    List file    =  
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\bin\am_util_delay.lst
#    Object file  =  
#        C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\boards\apollo3_evb\examples\opus_step1\iar\bin\am_util_delay.o
#
###############################################################################

C:\Users\agao\ambiq_apollo\device\AmbiqSuite-Rel2.0.0\utils\am_util_delay.c
      1          //*****************************************************************************
      2          //
      3          //! @file am_util_delay.c
      4          //!
      5          //! @brief A few useful delay functions.
      6          //!
      7          //! Functions for fixed delays.
      8          //
      9          //*****************************************************************************
     10          
     11          //*****************************************************************************
     12          //
     13          // Copyright (c) 2019, Ambiq Micro
     14          // All rights reserved.
     15          // 
     16          // Redistribution and use in source and binary forms, with or without
     17          // modification, are permitted provided that the following conditions are met:
     18          // 
     19          // 1. Redistributions of source code must retain the above copyright notice,
     20          // this list of conditions and the following disclaimer.
     21          // 
     22          // 2. Redistributions in binary form must reproduce the above copyright
     23          // notice, this list of conditions and the following disclaimer in the
     24          // documentation and/or other materials provided with the distribution.
     25          // 
     26          // 3. Neither the name of the copyright holder nor the names of its
     27          // contributors may be used to endorse or promote products derived from this
     28          // software without specific prior written permission.
     29          // 
     30          // Third party software included in this distribution is subject to the
     31          // additional license terms as defined in the /docs/licenses directory.
     32          // 
     33          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     34          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     35          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
     36          // ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
     37          // LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
     38          // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
     39          // SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
     40          // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
     41          // CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
     42          // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
     43          // POSSIBILITY OF SUCH DAMAGE.
     44          //
     45          // This is part of revision v2.0.0 of the AmbiqSuite Development Package.
     46          //
     47          //*****************************************************************************
     48          #include <stdint.h>
     49          #include <stdbool.h>
     50          #include "am_mcu_apollo.h"
     51          #include "am_util_delay.h"
     52          
     53          //*****************************************************************************
     54          //
     55          //! @brief Delays for a desired amount of loops.
     56          //!
     57          //! @param ui32CycleLoops - Desired number of cycle loops to delay for.
     58          //!
     59          //! This function will delay for a number of cycle loops.
     60          //!
     61          //! @note - the number of cycles each loops takes to execute is approximately 3.
     62          //! Therefore the actual number of cycles executed will be ~3x ui32CycleLoops.
     63          //!
     64          //! For example, a ui32CycleLoops value of 100 will delay for 300 cycles.
     65          //!
     66          //! @returns None
     67          //
     68          //*****************************************************************************
     69          void
     70          am_util_delay_cycles(uint32_t ui32Iterations)
     71          {
     72              //
     73              // Call the BOOTROM cycle delay function
     74              //
     75              am_hal_flash_delay(ui32Iterations);
     76          }
     77          
     78          //*****************************************************************************
     79          //
     80          //! @brief Delays for a desired amount of milliseconds.
     81          //!
     82          //! @param ui32MilliSeconds - number of milliseconds to delay for.
     83          //!
     84          //! This function will delay for a number of milliseconds.
     85          //!
     86          //! @returns None
     87          //
     88          //*****************************************************************************
     89          void
     90          am_util_delay_ms(uint32_t ui32MilliSeconds)
     91          {
     92              uint32_t ui32Loops, ui32HFRC;
     93          
     94          #if AM_APOLLO3_CLKGEN
     95              am_hal_clkgen_status_t sClkgenStatus;
     96              am_hal_clkgen_status_get(&sClkgenStatus);
     97              ui32HFRC = sClkgenStatus.ui32SysclkFreq;
     98          #else // AM_APOLLO3_CLKGEN
     99              ui32HFRC = am_hal_clkgen_sysclk_get();
    100          #endif // AM_APOLLO3_CLKGEN
    101              ui32Loops = ui32MilliSeconds * (ui32HFRC / 3000);
    102          
    103              //
    104              // Call the BOOTROM cycle delay function
    105              //
    106              am_hal_flash_delay(ui32Loops);
    107          }
    108          
    109          //*****************************************************************************
    110          //
    111          //! @brief Delays for a desired amount of microseconds.
    112          //!
    113          //! @param ui32MicroSeconds - number of microseconds to delay for.
    114          //!
    115          //! This function will delay for a number of microseconds.
    116          //!
    117          //! @returns None
    118          //
    119          //*****************************************************************************
    120          void
    121          am_util_delay_us(uint32_t ui32MicroSeconds)
    122          {
    123              uint32_t ui32Loops, ui32HFRC;
    124          
    125          #if AM_APOLLO3_CLKGEN
    126              am_hal_clkgen_status_t sClkgenStatus;
    127              am_hal_clkgen_status_get(&sClkgenStatus);
    128              ui32HFRC = sClkgenStatus.ui32SysclkFreq;
    129          #else // AM_APOLLO3_CLKGEN
    130              ui32HFRC = am_hal_clkgen_sysclk_get();
    131          #endif // AM_APOLLO3_CLKGEN
    132              ui32Loops = ui32MicroSeconds * (ui32HFRC / 3000000);
    133          
    134              //
    135              // Call the BOOTROM cycle delay function
    136              //
    137              am_hal_flash_delay(ui32Loops);
    138          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   am_util_delay_cycles
         8   -> am_hal_flash_delay
      32   am_util_delay_ms
        32   -> am_hal_clkgen_status_get
        32   -> am_hal_flash_delay
      32   am_util_delay_us
        32   -> am_hal_clkgen_status_get
        32   -> am_hal_flash_delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      12  am_util_delay_cycles
      32  am_util_delay_ms
      30  am_util_delay_us

 
 78 bytes in section .text
 
 78 bytes of CODE memory

Errors: none
Warnings: none
