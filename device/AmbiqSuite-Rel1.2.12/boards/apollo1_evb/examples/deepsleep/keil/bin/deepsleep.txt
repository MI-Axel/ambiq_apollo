
========================================================================

** ELF Header Information

    File Name: bin\deepsleep.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x00000099
    Flags: EF_ARM_HASENTRY + EF_ARM_ABI_FLOAT_HARD (0x05000402)

    ARM ELF revision: 5 (ABI version 2)

    Conforms to Hard float procedure-call standard

    Built with
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armasm [4d35e1]
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 16

    Program header offset: 60208 (0x0000eb30)
    Section header offset: 60240 (0x0000eb50)

    Section header string table index: 15

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_W + PF_R + PF_ARM_ENTRY]
    Size : 8660 bytes (4212 bytes in file)
    Virtual address: 0x00000000 (Alignment 8)


========================================================================

** Section #1 'FLASH' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 4180 bytes (alignment 4)
    Address: 0x00000000

    $d
    RESET
    __Vectors
        0x00000000:    10001180    ....    DCD    268439936
        0x00000004:    00000071    q...    DCD    113
        0x00000008:    0000008d    ....    DCD    141
        0x0000000c:    00000139    9...    DCD    313
        0x00000010:    00000139    9...    DCD    313
        0x00000014:    00000139    9...    DCD    313
        0x00000018:    00000139    9...    DCD    313
        0x0000001c:    00000000    ....    DCD    0
        0x00000020:    00000000    ....    DCD    0
        0x00000024:    00000000    ....    DCD    0
        0x00000028:    00000000    ....    DCD    0
        0x0000002c:    00000093    ....    DCD    147
        0x00000030:    00000093    ....    DCD    147
        0x00000034:    00000000    ....    DCD    0
        0x00000038:    00000093    ....    DCD    147
        0x0000003c:    00000093    ....    DCD    147
        0x00000040:    00000093    ....    DCD    147
        0x00000044:    00000093    ....    DCD    147
        0x00000048:    00000093    ....    DCD    147
        0x0000004c:    00000093    ....    DCD    147
        0x00000050:    00000093    ....    DCD    147
        0x00000054:    00000093    ....    DCD    147
        0x00000058:    00000093    ....    DCD    147
        0x0000005c:    00000093    ....    DCD    147
        0x00000060:    00000093    ....    DCD    147
        0x00000064:    00000093    ....    DCD    147
        0x00000068:    00000093    ....    DCD    147
        0x0000006c:    00000093    ....    DCD    147
    $t
    $v0
    Reset_Handler
        0x00000070:    f64e5088    N..P    MOV      r0,#0xed88
        0x00000074:    f2ce0000    ....    MOVT     r0,#0xe000
        0x00000078:    6801        .h      LDR      r1,[r0,#0]
        0x0000007a:    f4410170    A.p.    ORR      r1,r1,#0xf00000
        0x0000007e:    6001        .`      STR      r1,[r0,#0]
        0x00000080:    f3bf8f4f    ..O.    DSB      
        0x00000084:    f3bf8f6f    ..o.    ISB      
        0x00000088:    4802        .H      LDR      r0,[pc,#8] ; [0x94] = 0x99
        0x0000008a:    4700        .G      BX       r0
    am_nmi_isr
        0x0000008c:    e7fe        ..      B        am_nmi_isr ; 0x8c
        0x0000008e:    e7fe        ..      B        0x8e ; am_nmi_isr + 2
    am_memmanage_isr
        0x00000090:    e7fe        ..      B        am_memmanage_isr ; 0x90
    am_adc_isr
    am_brownout_isr
    am_clkgen_isr
    am_ctimer_isr
    am_debugmon_isr
    am_gpio_isr
    am_iomaster0_isr
    am_iomaster1_isr
    am_ioslave_acc_isr
    am_ioslave_ios_isr
    am_pendsv_isr
    am_svcall_isr
    am_systick_isr
    am_uart_isr
    am_vcomp_isr
    am_watchdog_isr
        0x00000092:    e7fe        ..      B        am_adc_isr ; 0x92
    $d
        0x00000094:    00000099    ....    DCD    153
    $t
    !!!main
    __main
        0x00000098:    f000f802    ....    BL       __scatterload ; 0xa0
        0x0000009c:    f000f83c    ..<.    BL       __rt_entry ; 0x118
    !!!scatter
    __scatterload
    __scatterload_rt2
    __scatterload_rt2_thumb_only
        0x000000a0:    a00a        ..      ADR      r0,{pc}+0x2c ; 0xcc
        0x000000a2:    e8900c00    ....    LDM      r0,{r10,r11}
        0x000000a6:    4482        .D      ADD      r10,r10,r0
        0x000000a8:    4483        .D      ADD      r11,r11,r0
        0x000000aa:    f1aa0701    ....    SUB      r7,r10,#1
    __scatterload_null
        0x000000ae:    45da        .E      CMP      r10,r11
        0x000000b0:    d101        ..      BNE      0xb6 ; __scatterload_null + 8
        0x000000b2:    f000f831    ..1.    BL       __rt_entry ; 0x118
        0x000000b6:    f2af0e09    ....    ADR      lr,{pc}-7 ; 0xaf
        0x000000ba:    e8ba000f    ....    LDM      r10!,{r0-r3}
        0x000000be:    f0130f01    ....    TST      r3,#1
        0x000000c2:    bf18        ..      IT       NE
        0x000000c4:    1afb        ..      SUBNE    r3,r7,r3
        0x000000c6:    f0430301    C...    ORR      r3,r3,#1
        0x000000ca:    4718        .G      BX       r3
    $d
        0x000000cc:    00000f68    h...    DCD    3944
        0x000000d0:    00000f88    ....    DCD    3976
    $t
    !!handler_copy
    __scatterload_copy
        0x000000d4:    3a10        .:      SUBS     r2,r2,#0x10
        0x000000d6:    bf24        $.      ITT      CS
        0x000000d8:    c878        x.      LDMCS    r0!,{r3-r6}
        0x000000da:    c178        x.      STMCS    r1!,{r3-r6}
        0x000000dc:    d8fa        ..      BHI      __scatterload_copy ; 0xd4
        0x000000de:    0752        R.      LSLS     r2,r2,#29
        0x000000e0:    bf24        $.      ITT      CS
        0x000000e2:    c830        0.      LDMCS    r0!,{r4,r5}
        0x000000e4:    c130        0.      STMCS    r1!,{r4,r5}
        0x000000e6:    bf44        D.      ITT      MI
        0x000000e8:    6804        .h      LDRMI    r4,[r0,#0]
        0x000000ea:    600c        .`      STRMI    r4,[r1,#0]
        0x000000ec:    4770        pG      BX       lr
        0x000000ee:    0000        ..      MOVS     r0,r0
    !!handler_zi
    __scatterload_zeroinit
        0x000000f0:    2300        .#      MOVS     r3,#0
        0x000000f2:    2400        .$      MOVS     r4,#0
        0x000000f4:    2500        .%      MOVS     r5,#0
        0x000000f6:    2600        .&      MOVS     r6,#0
        0x000000f8:    3a10        .:      SUBS     r2,r2,#0x10
        0x000000fa:    bf28        (.      IT       CS
        0x000000fc:    c178        x.      STMCS    r1!,{r3-r6}
        0x000000fe:    d8fb        ..      BHI      0xf8 ; __scatterload_zeroinit + 8
        0x00000100:    0752        R.      LSLS     r2,r2,#29
        0x00000102:    bf28        (.      IT       CS
        0x00000104:    c130        0.      STMCS    r1!,{r4,r5}
        0x00000106:    bf48        H.      IT       MI
        0x00000108:    600b        .`      STRMI    r3,[r1,#0]
        0x0000010a:    4770        pG      BX       lr
    .ARM.Collect$$libinit$$00000000
    __rt_lib_init
        0x0000010c:    b51f        ..      PUSH     {r0-r4,lr}
    .ARM.Collect$$libinit$$00000001
    __rt_lib_init_fp_1
        0x0000010e:    f000ff86    ....    BL       _fp_init ; 0x101e
    .ARM.Collect$$libinit$$00000004
    .ARM.Collect$$libinit$$0000000A
    .ARM.Collect$$libinit$$0000000C
    .ARM.Collect$$libinit$$0000000E
    .ARM.Collect$$libinit$$00000011
    .ARM.Collect$$libinit$$00000013
    .ARM.Collect$$libinit$$00000015
    .ARM.Collect$$libinit$$00000017
    .ARM.Collect$$libinit$$00000019
    .ARM.Collect$$libinit$$0000001B
    .ARM.Collect$$libinit$$0000001D
    .ARM.Collect$$libinit$$0000001F
    .ARM.Collect$$libinit$$00000021
    .ARM.Collect$$libinit$$00000023
    .ARM.Collect$$libinit$$00000025
    .ARM.Collect$$libinit$$0000002C
    .ARM.Collect$$libinit$$0000002E
    .ARM.Collect$$libinit$$00000030
    .ARM.Collect$$libinit$$00000032
    .ARM.Collect$$libinit$$00000033
    __rt_lib_init_alloca_1
    __rt_lib_init_argv_1
    __rt_lib_init_atexit_1
    __rt_lib_init_clock_1
    __rt_lib_init_cpp_1
    __rt_lib_init_exceptions_1
    __rt_lib_init_fp_trap_1
    __rt_lib_init_getenv_1
    __rt_lib_init_heap_1
    __rt_lib_init_lc_collate_1
    __rt_lib_init_lc_ctype_1
    __rt_lib_init_lc_monetary_1
    __rt_lib_init_lc_numeric_1
    __rt_lib_init_lc_time_1
    __rt_lib_init_preinit_1
    __rt_lib_init_rand_1
    __rt_lib_init_return
    __rt_lib_init_signal_1
    __rt_lib_init_stdio_1
    __rt_lib_init_user_alloc_1
        0x00000112:    bd1f        ..      POP      {r0-r4,pc}
    .ARM.Collect$$libshutdown$$00000000
    __rt_lib_shutdown
        0x00000114:    b510        ..      PUSH     {r4,lr}
    .ARM.Collect$$libshutdown$$00000002
    .ARM.Collect$$libshutdown$$00000004
    .ARM.Collect$$libshutdown$$00000007
    .ARM.Collect$$libshutdown$$0000000A
    .ARM.Collect$$libshutdown$$0000000C
    .ARM.Collect$$libshutdown$$0000000F
    .ARM.Collect$$libshutdown$$00000010
    __rt_lib_shutdown_cpp_1
    __rt_lib_shutdown_fp_trap_1
    __rt_lib_shutdown_heap_1
    __rt_lib_shutdown_return
    __rt_lib_shutdown_signal_1
    __rt_lib_shutdown_stdio_1
    __rt_lib_shutdown_user_alloc_1
        0x00000116:    bd10        ..      POP      {r4,pc}
    .ARM.Collect$$rtentry$$00000000
    .ARM.Collect$$rtentry$$00000002
    .ARM.Collect$$rtentry$$00000004
    __rt_entry
    __rt_entry_presh_1
    __rt_entry_sh
        0x00000118:    f000f852    ..R.    BL       __user_setup_stackheap ; 0x1c0
        0x0000011c:    4611        .F      MOV      r1,r2
    .ARM.Collect$$rtentry$$00000009
    .ARM.Collect$$rtentry$$0000000A
    __rt_entry_li
    __rt_entry_postsh_1
        0x0000011e:    f7fffff5    ....    BL       __rt_lib_init ; 0x10c
    .ARM.Collect$$rtentry$$0000000C
    .ARM.Collect$$rtentry$$0000000D
    __rt_entry_main
    __rt_entry_postli_1
        0x00000122:    f000fd7d    ..}.    BL       main ; 0xc20
        0x00000126:    f000f870    ..p.    BL       exit ; 0x20a
    .ARM.Collect$$rtexit$$00000000
    __rt_exit
        0x0000012a:    b403        ..      PUSH     {r0,r1}
    .ARM.Collect$$rtexit$$00000002
    .ARM.Collect$$rtexit$$00000003
    __rt_exit_ls
    __rt_exit_prels_1
        0x0000012c:    f7fffff2    ....    BL       __rt_lib_shutdown ; 0x114
    .ARM.Collect$$rtexit$$00000004
    __rt_exit_exit
        0x00000130:    bc03        ..      POP      {r0,r1}
        0x00000132:    f000f877    ..w.    BL       _sys_exit ; 0x224
        0x00000136:    0000        ..      MOVS     r0,r0
    .emb_text
    $v0
    am_fault_isr
        0x00000138:    b580        ..      PUSH     {r7,lr}
        0x0000013a:    4668        hF      MOV      r0,sp
        0x0000013c:    3008        .0      ADDS     r0,r0,#8
        0x0000013e:    f000f9c7    ....    BL       am_util_faultisr_collect_data ; 0x4d0
        0x00000142:    bd01        ..      POP      {r0,pc}
    getStackedReg
        0x00000144:    0080        ..      LSLS     r0,r0,#2
        0x00000146:    1840        @.      ADDS     r0,r0,r1
        0x00000148:    6800        .h      LDR      r0,[r0,#0]
        0x0000014a:    4770        pG      BX       lr
    .emb_text
    $v0
    am_hal_flash_delay
        0x0000014c:    3801        .8      SUBS     r0,#1
        0x0000014e:    d1fd        ..      BNE      am_hal_flash_delay ; 0x14c
        0x00000150:    4770        pG      BX       lr
        0x00000152:    0000        ..      MOVS     r0,r0
    .text
    $v0
    __user_initial_stackheap
        0x00000154:    4802        .H      LDR      r0,[pc,#8] ; [0x160] = 0x10000180
        0x00000156:    4903        .I      LDR      r1,[pc,#12] ; [0x164] = 0x10001180
        0x00000158:    4a01        .J      LDR      r2,[pc,#4] ; [0x160] = 0x10000180
        0x0000015a:    4b03        .K      LDR      r3,[pc,#12] ; [0x168] = 0x10000180
        0x0000015c:    4770        pG      BX       lr
    $d
        0x0000015e:    0000        ..      DCW    0
        0x00000160:    10000180    ....    DCD    268435840
        0x00000164:    10001180    ....    DCD    268439936
        0x00000168:    10000180    ....    DCD    268435840
    $t
    .text
    __aeabi_memclr4
    __aeabi_memclr8
    __rt_memclr_w
        0x0000016c:    f04f0200    O...    MOV      r2,#0
    _memset_w
        0x00000170:    b500        ..      PUSH     {lr}
        0x00000172:    4613        .F      MOV      r3,r2
        0x00000174:    4694        .F      MOV      r12,r2
        0x00000176:    4696        .F      MOV      lr,r2
        0x00000178:    3920         9      SUBS     r1,r1,#0x20
        0x0000017a:    bf22        ".      ITTT     CS
        0x0000017c:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x00000180:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x00000184:    f1b10120    .. .    SUBSCS   r1,r1,#0x20
        0x00000188:    f4bfaff7    ....    BCS.W    0x17a ; _memset_w + 10
        0x0000018c:    0709        ..      LSLS     r1,r1,#28
        0x0000018e:    bf28        (.      IT       CS
        0x00000190:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x00000194:    bf48        H.      IT       MI
        0x00000196:    c00c        ..      STMMI    r0!,{r2,r3}
        0x00000198:    f85deb04    ]...    POP      {lr}
        0x0000019c:    0089        ..      LSLS     r1,r1,#2
        0x0000019e:    bf28        (.      IT       CS
        0x000001a0:    f8402b04    @..+    STRCS    r2,[r0],#4
        0x000001a4:    bf08        ..      IT       EQ
        0x000001a6:    4770        pG      BXEQ     lr
        0x000001a8:    bf48        H.      IT       MI
        0x000001aa:    f8202b02     ..+    STRHMI   r2,[r0],#2
        0x000001ae:    f0114f80    ...O    TST      r1,#0x40000000
        0x000001b2:    bf18        ..      IT       NE
        0x000001b4:    f8002b01    ...+    STRBNE   r2,[r0],#1
        0x000001b8:    4770        pG      BX       lr
    .text
    __use_two_region_memory
        0x000001ba:    4770        pG      BX       lr
    __rt_heap_escrow$2region
        0x000001bc:    4770        pG      BX       lr
    __rt_heap_expand$2region
        0x000001be:    4770        pG      BX       lr
    .text
    __user_setup_stackheap
        0x000001c0:    4675        uF      MOV      r5,lr
        0x000001c2:    f000f82b    ..+.    BL       __user_libspace ; 0x21c
        0x000001c6:    46ae        .F      MOV      lr,r5
        0x000001c8:    0005        ..      MOVS     r5,r0
        0x000001ca:    4669        iF      MOV      r1,sp
        0x000001cc:    4653        SF      MOV      r3,r10
        0x000001ce:    f0200007     ...    BIC      r0,r0,#7
        0x000001d2:    4685        .F      MOV      sp,r0
        0x000001d4:    b018        ..      ADD      sp,sp,#0x60
        0x000001d6:    b520         .      PUSH     {r5,lr}
        0x000001d8:    f7ffffbc    ....    BL       __user_initial_stackheap ; 0x154
        0x000001dc:    e8bd4020    .. @    POP      {r5,lr}
        0x000001e0:    f04f0600    O...    MOV      r6,#0
        0x000001e4:    f04f0700    O...    MOV      r7,#0
        0x000001e8:    f04f0800    O...    MOV      r8,#0
        0x000001ec:    f04f0b00    O...    MOV      r11,#0
        0x000001f0:    f0210107    !...    BIC      r1,r1,#7
        0x000001f4:    46ac        .F      MOV      r12,r5
        0x000001f6:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x000001fa:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x000001fe:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x00000202:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x00000206:    468d        .F      MOV      sp,r1
        0x00000208:    4770        pG      BX       lr
    .text
    exit
        0x0000020a:    b510        ..      PUSH     {r4,lr}
        0x0000020c:    4604        .F      MOV      r4,r0
        0x0000020e:    f3af8000    ....    NOP.W    
        0x00000212:    4620         F      MOV      r0,r4
        0x00000214:    e8bd4010    ...@    POP      {r4,lr}
        0x00000218:    f7ffbf87    ....    B.W      __rt_exit ; 0x12a
    .text
    __user_libspace
    __user_perproc_libspace
    __user_perthread_libspace
        0x0000021c:    4800        .H      LDR      r0,[pc,#0] ; [0x220] = 0x10000120
        0x0000021e:    4770        pG      BX       lr
    $d
        0x00000220:    10000120     ...    DCD    268435744
    $t
    .text
    _sys_exit
        0x00000224:    4901        .I      LDR      r1,[pc,#4] ; [0x22c] = 0x20026
        0x00000226:    2018        .       MOVS     r0,#0x18
        0x00000228:    beab        ..      BKPT     #0xab
        0x0000022a:    e7fe        ..      B        0x22a ; _sys_exit + 6
    $d
        0x0000022c:    00020026    &...    DCD    131110
    $t
    .text
    __I$use$semihosting
    __use_no_semihosting_swi
        0x00000230:    4770        pG      BX       lr
    i.am_bsp_low_power_init
    .text
    __semihosting_library_function
    am_bsp_low_power_init
        0x00000232:    b510        ..      PUSH     {r4,lr}
        0x00000234:    f000f85c    ..\.    BL       am_hal_mcuctrl_bucks_enable ; 0x2f0
        0x00000238:    f000f934    ..4.    BL       am_hal_vcomp_disable ; 0x4a4
        0x0000023c:    2001        .       MOVS     r0,#1
        0x0000023e:    f000f896    ....    BL       am_hal_rtc_osc_select ; 0x36e
        0x00000242:    2001        .       MOVS     r0,#1
        0x00000244:    f000f80a    ....    BL       am_hal_clkgen_osc_stop ; 0x25c
        0x00000248:    f000f88a    ....    BL       am_hal_rtc_osc_disable ; 0x360
        0x0000024c:    e8bd4010    ...@    POP      {r4,lr}
        0x00000250:    f000b846    ..F.    B.W      am_hal_mcuctrl_bandgap_disable ; 0x2e0
    i.am_bsp_uart_string_print
    am_bsp_uart_string_print
        0x00000254:    4601        .F      MOV      r1,r0
        0x00000256:    2000        .       MOVS     r0,#0
        0x00000258:    f000b912    ....    B.W      am_hal_uart_string_transmit_polled ; 0x480
    i.am_hal_clkgen_osc_stop
    am_hal_clkgen_osc_stop
        0x0000025c:    f0100f03    ....    TST      r0,#3
        0x00000260:    bf08        ..      IT       EQ
        0x00000262:    4770        pG      BXEQ     lr
        0x00000264:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000268:    68ca        .h      LDR      r2,[r1,#0xc]
        0x0000026a:    4310        .C      ORRS     r0,r0,r2
        0x0000026c:    60c8        .`      STR      r0,[r1,#0xc]
        0x0000026e:    4770        pG      BX       lr
    i.am_hal_clkgen_sysclk_get
    am_hal_clkgen_sysclk_get
        0x00000270:    f04f2040    O.@     MOV      r0,#0x40004000
        0x00000274:    6980        .i      LDR      r0,[r0,#0x18]
        0x00000276:    f0000007    ....    AND      r0,r0,#7
        0x0000027a:    2808        .(      CMP      r0,#8
        0x0000027c:    d215        ..      BCS      0x2aa ; am_hal_clkgen_sysclk_get + 58
        0x0000027e:    e8dff000    ....    TBB      [pc,r0]
    $d
        0x00000282:    0604        ..      DCW    1540
        0x00000284:    0e0c0a08    ....    DCD    235670024
        0x00000288:    1210        ..      DCW    4624
    $t
        0x0000028a:    4809        .H      LDR      r0,[pc,#36] ; [0x2b0] = 0x16e3600
        0x0000028c:    4770        pG      BX       lr
        0x0000028e:    4809        .H      LDR      r0,[pc,#36] ; [0x2b4] = 0xb71b00
        0x00000290:    4770        pG      BX       lr
        0x00000292:    4809        .H      LDR      r0,[pc,#36] ; [0x2b8] = 0x7a1200
        0x00000294:    4770        pG      BX       lr
        0x00000296:    4809        .H      LDR      r0,[pc,#36] ; [0x2bc] = 0x5b8d80
        0x00000298:    4770        pG      BX       lr
        0x0000029a:    4809        .H      LDR      r0,[pc,#36] ; [0x2c0] = 0x493e00
        0x0000029c:    4770        pG      BX       lr
        0x0000029e:    4809        .H      LDR      r0,[pc,#36] ; [0x2c4] = 0x3d0900
        0x000002a0:    4770        pG      BX       lr
        0x000002a2:    4809        .H      LDR      r0,[pc,#36] ; [0x2c8] = 0x3450db
        0x000002a4:    4770        pG      BX       lr
        0x000002a6:    4809        .H      LDR      r0,[pc,#36] ; [0x2cc] = 0x2dc6c0
        0x000002a8:    4770        pG      BX       lr
        0x000002aa:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x000002ae:    4770        pG      BX       lr
    $d
        0x000002b0:    016e3600    .6n.    DCD    24000000
        0x000002b4:    00b71b00    ....    DCD    12000000
        0x000002b8:    007a1200    ..z.    DCD    8000000
        0x000002bc:    005b8d80    ..[.    DCD    6000000
        0x000002c0:    00493e00    .>I.    DCD    4800000
        0x000002c4:    003d0900    ..=.    DCD    4000000
        0x000002c8:    003450db    .P4.    DCD    3428571
        0x000002cc:    002dc6c0    ..-.    DCD    3000000
    $t
    i.am_hal_clkgen_sysclk_select
    am_hal_clkgen_sysclk_select
        0x000002d0:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x000002d4:    2247        G"      MOVS     r2,#0x47
        0x000002d6:    614a        Ja      STR      r2,[r1,#0x14]
        0x000002d8:    6188        .a      STR      r0,[r1,#0x18]
        0x000002da:    2000        .       MOVS     r0,#0
        0x000002dc:    6148        Ha      STR      r0,[r1,#0x14]
        0x000002de:    4770        pG      BX       lr
    i.am_hal_mcuctrl_bandgap_disable
    am_hal_mcuctrl_bandgap_disable
        0x000002e0:    4902        .I      LDR      r1,[pc,#8] ; [0x2ec] = 0x40020000
        0x000002e2:    f06f0001    o...    MVN      r0,#1
        0x000002e6:    f8c100fc    ....    STR      r0,[r1,#0xfc]
        0x000002ea:    4770        pG      BX       lr
    $d
        0x000002ec:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_bucks_enable
    am_hal_mcuctrl_bucks_enable
        0x000002f0:    4808        .H      LDR      r0,[pc,#32] ; [0x314] = 0x40020000
        0x000002f2:    6901        .i      LDR      r1,[r0,#0x10]
        0x000002f4:    f0410102    A...    ORR      r1,r1,#2
        0x000002f8:    6101        .a      STR      r1,[r0,#0x10]
        0x000002fa:    6901        .i      LDR      r1,[r0,#0x10]
        0x000002fc:    f0410101    A...    ORR      r1,r1,#1
        0x00000300:    6101        .a      STR      r1,[r0,#0x10]
        0x00000302:    6941        Ai      LDR      r1,[r0,#0x14]
        0x00000304:    f0110f02    ....    TST      r1,#2
        0x00000308:    d0fb        ..      BEQ      0x302 ; am_hal_mcuctrl_bucks_enable + 18
        0x0000030a:    6941        Ai      LDR      r1,[r0,#0x14]
        0x0000030c:    f0110f01    ....    TST      r1,#1
        0x00000310:    d0fb        ..      BEQ      0x30a ; am_hal_mcuctrl_bucks_enable + 26
        0x00000312:    4770        pG      BX       lr
    $d
        0x00000314:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_fault_status
    am_hal_mcuctrl_fault_status
        0x00000318:    490c        .I      LDR      r1,[pc,#48] ; [0x34c] = 0x40020000
        0x0000031a:    f8d121cc    ...!    LDR      r2,[r1,#0x1cc]
        0x0000031e:    f0020301    ....    AND      r3,r2,#1
        0x00000322:    7003        .p      STRB     r3,[r0,#0]
        0x00000324:    f3c20340    ..@.    UBFX     r3,r2,#1,#1
        0x00000328:    7203        .r      STRB     r3,[r0,#8]
        0x0000032a:    f3c20280    ....    UBFX     r2,r2,#2,#1
        0x0000032e:    7402        .t      STRB     r2,[r0,#0x10]
        0x00000330:    f8d121c4    ...!    LDR      r2,[r1,#0x1c4]
        0x00000334:    60c2        .`      STR      r2,[r0,#0xc]
        0x00000336:    6842        Bh      LDR      r2,[r0,#4]
        0x00000338:    f8d131c0    ...1    LDR      r3,[r1,#0x1c0]
        0x0000033c:    431a        .C      ORRS     r2,r2,r3
        0x0000033e:    6042        B`      STR      r2,[r0,#4]
        0x00000340:    6942        Bi      LDR      r2,[r0,#0x14]
        0x00000342:    f8d111c8    ....    LDR      r1,[r1,#0x1c8]
        0x00000346:    4311        .C      ORRS     r1,r1,r2
        0x00000348:    6141        Aa      STR      r1,[r0,#0x14]
        0x0000034a:    4770        pG      BX       lr
    $d
        0x0000034c:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_sram_power_set
    am_hal_mcuctrl_sram_power_set
        0x00000350:    4a02        .J      LDR      r2,[pc,#8] ; [0x35c] = 0x40020000
        0x00000352:    f8c20144    ..D.    STR      r0,[r2,#0x144]
        0x00000356:    f8c21140    ..@.    STR      r1,[r2,#0x140]
        0x0000035a:    4770        pG      BX       lr
    $d
        0x0000035c:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_rtc_osc_disable
    am_hal_rtc_osc_disable
        0x00000360:    f04f2040    O.@     MOV      r0,#0x40004000
        0x00000364:    6d01        .m      LDR      r1,[r0,#0x50]
        0x00000366:    f0410110    A...    ORR      r1,r1,#0x10
        0x0000036a:    6501        .e      STR      r1,[r0,#0x50]
        0x0000036c:    4770        pG      BX       lr
    i.am_hal_rtc_osc_select
    am_hal_rtc_osc_select
        0x0000036e:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000372:    2800        .(      CMP      r0,#0
        0x00000374:    68c8        .h      LDR      r0,[r1,#0xc]
        0x00000376:    bf14        ..      ITE      NE
        0x00000378:    f0400080    @...    ORRNE    r0,r0,#0x80
        0x0000037c:    f0200080     ...    BICEQ    r0,r0,#0x80
        0x00000380:    60c8        .`      STR      r0,[r1,#0xc]
        0x00000382:    4770        pG      BX       lr
    i.am_hal_sysctrl_sleep
    am_hal_sysctrl_sleep
        0x00000384:    4908        .I      LDR      r1,[pc,#32] ; [0x3a8] = 0xe000ed10
        0x00000386:    b148        H.      CBZ      r0,0x39c ; am_hal_sysctrl_sleep + 24
        0x00000388:    4808        .H      LDR      r0,[pc,#32] ; [0x3ac] = 0x40020000
        0x0000038a:    f8d00250    ..P.    LDR      r0,[r0,#0x250]
        0x0000038e:    f0100f01    ....    TST      r0,#1
        0x00000392:    bf04        ..      ITT      EQ
        0x00000394:    6808        .h      LDREQ    r0,[r1,#0]
        0x00000396:    f0400004    @...    ORREQ    r0,r0,#4
        0x0000039a:    d002        ..      BEQ      0x3a2 ; am_hal_sysctrl_sleep + 30
        0x0000039c:    6808        .h      LDR      r0,[r1,#0]
        0x0000039e:    f0200004     ...    BIC      r0,r0,#4
        0x000003a2:    6008        .`      STR      r0,[r1,#0]
        0x000003a4:    bf30        0.      WFI      
        0x000003a6:    4770        pG      BX       lr
    $d
        0x000003a8:    e000ed10    ....    DCD    3758157072
        0x000003ac:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_uart_clock_disable
    am_hal_uart_clock_disable
        0x000003b0:    4805        .H      LDR      r0,[pc,#20] ; [0x3c8] = 0x4001c000
        0x000003b2:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000003b4:    f0210108    !...    BIC      r1,r1,#8
        0x000003b8:    6301        .c      STR      r1,[r0,#0x30]
        0x000003ba:    f04f2040    O.@     MOV      r0,#0x40004000
        0x000003be:    6ac1        .j      LDR      r1,[r0,#0x2c]
        0x000003c0:    f0210101    !...    BIC      r1,r1,#1
        0x000003c4:    62c1        .b      STR      r1,[r0,#0x2c]
        0x000003c6:    4770        pG      BX       lr
    $d
        0x000003c8:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_clock_enable
    am_hal_uart_clock_enable
        0x000003cc:    f04f2040    O.@     MOV      r0,#0x40004000
        0x000003d0:    6ac1        .j      LDR      r1,[r0,#0x2c]
        0x000003d2:    f0410101    A...    ORR      r1,r1,#1
        0x000003d6:    62c1        .b      STR      r1,[r0,#0x2c]
        0x000003d8:    4804        .H      LDR      r0,[pc,#16] ; [0x3ec] = 0x4001c000
        0x000003da:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000003dc:    f0410108    A...    ORR      r1,r1,#8
        0x000003e0:    6301        .c      STR      r1,[r0,#0x30]
        0x000003e2:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000003e4:    f0410110    A...    ORR      r1,r1,#0x10
        0x000003e8:    6301        .c      STR      r1,[r0,#0x30]
        0x000003ea:    4770        pG      BX       lr
    $d
        0x000003ec:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_config
    am_hal_uart_config
        0x000003f0:    b570        p.      PUSH     {r4-r6,lr}
        0x000003f2:    460c        .F      MOV      r4,r1
        0x000003f4:    680d        .h      LDR      r5,[r1,#0]
        0x000003f6:    f7ffff3b    ..;.    BL       am_hal_clkgen_sysclk_get ; 0x270
        0x000003fa:    0129        ).      LSLS     r1,r5,#4
        0x000003fc:    fbb0f2f1    ....    UDIV     r2,r0,r1
        0x00000400:    0180        ..      LSLS     r0,r0,#6
        0x00000402:    fbb0f0f1    ....    UDIV     r0,r0,r1
        0x00000406:    0191        ..      LSLS     r1,r2,#6
        0x00000408:    1a41        A.      SUBS     r1,r0,r1
        0x0000040a:    b1ba        ..      CBZ      r2,0x43c ; am_hal_uart_config + 76
        0x0000040c:    480c        .H      LDR      r0,[pc,#48] ; [0x440] = 0x4001c000
        0x0000040e:    6242        Bb      STR      r2,[r0,#0x24]
        0x00000410:    6242        Bb      STR      r2,[r0,#0x24]
        0x00000412:    6281        .b      STR      r1,[r0,#0x28]
        0x00000414:    7a22        "z      LDRB     r2,[r4,#8]
        0x00000416:    6861        ah      LDR      r1,[r4,#4]
        0x00000418:    2a00        .*      CMP      r2,#0
        0x0000041a:    bf18        ..      IT       NE
        0x0000041c:    2208        ."      MOVNE    r2,#8
        0x0000041e:    4311        .C      ORRS     r1,r1,r2
        0x00000420:    68e2        .h      LDR      r2,[r4,#0xc]
        0x00000422:    4311        .C      ORRS     r1,r1,r2
        0x00000424:    6ac2        .j      LDR      r2,[r0,#0x2c]
        0x00000426:    4311        .C      ORRS     r1,r1,r2
        0x00000428:    62c1        .b      STR      r1,[r0,#0x2c]
        0x0000042a:    6b01        .k      LDR      r1,[r0,#0x30]
        0x0000042c:    6922        "i      LDR      r2,[r4,#0x10]
        0x0000042e:    4311        .C      ORRS     r1,r1,r2
        0x00000430:    6301        .c      STR      r1,[r0,#0x30]
        0x00000432:    6b01        .k      LDR      r1,[r0,#0x30]
        0x00000434:    f0410110    A...    ORR      r1,r1,#0x10
        0x00000438:    6301        .c      STR      r1,[r0,#0x30]
        0x0000043a:    bd70        p.      POP      {r4-r6,pc}
        0x0000043c:    e7fe        ..      B        0x43c ; am_hal_uart_config + 76
    $d
        0x0000043e:    0000        ..      DCW    0
        0x00000440:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_disable
    am_hal_uart_disable
        0x00000444:    4803        .H      LDR      r0,[pc,#12] ; [0x454] = 0x4001c000
        0x00000446:    6b01        .k      LDR      r1,[r0,#0x30]
        0x00000448:    f0210101    !...    BIC      r1,r1,#1
        0x0000044c:    f4217140    !.@q    BIC      r1,r1,#0x300
        0x00000450:    6301        .c      STR      r1,[r0,#0x30]
        0x00000452:    4770        pG      BX       lr
    $d
        0x00000454:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_enable
    am_hal_uart_enable
        0x00000458:    4803        .H      LDR      r0,[pc,#12] ; [0x468] = 0x4001c000
        0x0000045a:    6b01        .k      LDR      r1,[r0,#0x30]
        0x0000045c:    f2403201    @..2    MOV      r2,#0x301
        0x00000460:    4311        .C      ORRS     r1,r1,r2
        0x00000462:    6301        .c      STR      r1,[r0,#0x30]
        0x00000464:    4770        pG      BX       lr
    $d
        0x00000466:    0000        ..      DCW    0
        0x00000468:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_fifo_config
    am_hal_uart_fifo_config
        0x0000046c:    4803        .H      LDR      r0,[pc,#12] ; [0x47c] = 0x4001c000
        0x0000046e:    6ac2        .j      LDR      r2,[r0,#0x2c]
        0x00000470:    f0420210    B...    ORR      r2,r2,#0x10
        0x00000474:    62c2        .b      STR      r2,[r0,#0x2c]
        0x00000476:    6341        Ac      STR      r1,[r0,#0x34]
        0x00000478:    4770        pG      BX       lr
    $d
        0x0000047a:    0000        ..      DCW    0
        0x0000047c:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_string_transmit_polled
    am_hal_uart_string_transmit_polled
        0x00000480:    7808        .x      LDRB     r0,[r1,#0]
        0x00000482:    2800        .(      CMP      r0,#0
        0x00000484:    bf14        ..      ITE      NE
        0x00000486:    4806        .H      LDRNE    r0,[pc,#24] ; [0x4a0] = 0x4001c000
        0x00000488:    4770        pG      BXEQ     lr
        0x0000048a:    6982        .i      LDR      r2,[r0,#0x18]
        0x0000048c:    f0120f20    .. .    TST      r2,#0x20
        0x00000490:    d1fb        ..      BNE      0x48a ; am_hal_uart_string_transmit_polled + 10
        0x00000492:    f8112b01    ...+    LDRB     r2,[r1],#1
        0x00000496:    6002        .`      STR      r2,[r0,#0]
        0x00000498:    780a        .x      LDRB     r2,[r1,#0]
        0x0000049a:    2a00        .*      CMP      r2,#0
        0x0000049c:    d1f5        ..      BNE      0x48a ; am_hal_uart_string_transmit_polled + 10
        0x0000049e:    4770        pG      BX       lr
    $d
        0x000004a0:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_vcomp_disable
    am_hal_vcomp_disable
        0x000004a4:    4901        .I      LDR      r1,[pc,#4] ; [0x4ac] = 0x4000c000
        0x000004a6:    2037        7       MOVS     r0,#0x37
        0x000004a8:    6088        .`      STR      r0,[r1,#8]
        0x000004aa:    4770        pG      BX       lr
    $d
        0x000004ac:    4000c000    ...@    DCD    1073790976
    $t
    i.am_util_delay_ms
    am_util_delay_ms
        0x000004b0:    b570        p.      PUSH     {r4-r6,lr}
        0x000004b2:    4604        .F      MOV      r4,r0
        0x000004b4:    f7fffedc    ....    BL       am_hal_clkgen_sysclk_get ; 0x270
        0x000004b8:    4606        .F      MOV      r6,r0
        0x000004ba:    f64030b8    @..0    MOV      r0,#0xbb8
        0x000004be:    fbb6f0f0    ....    UDIV     r0,r6,r0
        0x000004c2:    fb00f504    ....    MUL      r5,r0,r4
        0x000004c6:    4628        (F      MOV      r0,r5
        0x000004c8:    f7fffe40    ..@.    BL       am_hal_flash_delay ; 0x14c
        0x000004cc:    bd70        p.      POP      {r4-r6,pc}
        0x000004ce:    0000        ..      MOVS     r0,r0
    i.am_util_faultisr_collect_data
    am_util_faultisr_collect_data
        0x000004d0:    b092        ..      SUB      sp,sp,#0x48
        0x000004d2:    4604        .F      MOV      r4,r0
        0x000004d4:    2118        .!      MOVS     r1,#0x18
        0x000004d6:    4668        hF      MOV      r0,sp
        0x000004d8:    f7fffe48    ..H.    BL       __aeabi_memclr4 ; 0x16c
        0x000004dc:    2500        .%      MOVS     r5,#0
        0x000004de:    9510        ..      STR      r5,[sp,#0x40]
        0x000004e0:    4828        (H      LDR      r0,[pc,#160] ; [0x584] = 0xe000ed28
        0x000004e2:    6800        .h      LDR      r0,[r0,#0]
        0x000004e4:    9010        ..      STR      r0,[sp,#0x40]
        0x000004e6:    9810        ..      LDR      r0,[sp,#0x40]
        0x000004e8:    b2c0        ..      UXTB     r0,r0
        0x000004ea:    f88d0044    ..D.    STRB     r0,[sp,#0x44]
        0x000004ee:    9810        ..      LDR      r0,[sp,#0x40]
        0x000004f0:    0a00        ..      LSRS     r0,r0,#8
        0x000004f2:    f88d0045    ..E.    STRB     r0,[sp,#0x45]
        0x000004f6:    9810        ..      LDR      r0,[sp,#0x40]
        0x000004f8:    f64f71ff    O..q    MOV      r1,#0xffff
        0x000004fc:    ea014010    ...@    AND      r0,r1,r0,LSR #16
        0x00000500:    f8ad0046    ..F.    STRH     r0,[sp,#0x46]
        0x00000504:    481f        .H      LDR      r0,[pc,#124] ; [0x584] = 0xe000ed28
        0x00000506:    3010        .0      ADDS     r0,r0,#0x10
        0x00000508:    6800        .h      LDR      r0,[r0,#0]
        0x0000050a:    900f        ..      STR      r0,[sp,#0x3c]
        0x0000050c:    f89d0045    ..E.    LDRB     r0,[sp,#0x45]
        0x00000510:    f0000002    ....    AND      r0,r0,#2
        0x00000514:    b120         .      CBZ      r0,0x520 ; am_util_faultisr_collect_data + 80
        0x00000516:    4621        !F      MOV      r1,r4
        0x00000518:    2006        .       MOVS     r0,#6
        0x0000051a:    f7fffe13    ....    BL       getStackedReg ; 0x144
        0x0000051e:    e001        ..      B        0x524 ; am_util_faultisr_collect_data + 84
        0x00000520:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x00000524:    900e        ..      STR      r0,[sp,#0x38]
        0x00000526:    4621        !F      MOV      r1,r4
        0x00000528:    2000        .       MOVS     r0,#0
        0x0000052a:    f7fffe0b    ....    BL       getStackedReg ; 0x144
        0x0000052e:    9006        ..      STR      r0,[sp,#0x18]
        0x00000530:    4621        !F      MOV      r1,r4
        0x00000532:    2001        .       MOVS     r0,#1
        0x00000534:    f7fffe06    ....    BL       getStackedReg ; 0x144
        0x00000538:    9007        ..      STR      r0,[sp,#0x1c]
        0x0000053a:    4621        !F      MOV      r1,r4
        0x0000053c:    2002        .       MOVS     r0,#2
        0x0000053e:    f7fffe01    ....    BL       getStackedReg ; 0x144
        0x00000542:    9008        ..      STR      r0,[sp,#0x20]
        0x00000544:    4621        !F      MOV      r1,r4
        0x00000546:    2003        .       MOVS     r0,#3
        0x00000548:    f7fffdfc    ....    BL       getStackedReg ; 0x144
        0x0000054c:    9009        ..      STR      r0,[sp,#0x24]
        0x0000054e:    4621        !F      MOV      r1,r4
        0x00000550:    2004        .       MOVS     r0,#4
        0x00000552:    f7fffdf7    ....    BL       getStackedReg ; 0x144
        0x00000556:    900a        ..      STR      r0,[sp,#0x28]
        0x00000558:    4621        !F      MOV      r1,r4
        0x0000055a:    2005        .       MOVS     r0,#5
        0x0000055c:    f7fffdf2    ....    BL       getStackedReg ; 0x144
        0x00000560:    900b        ..      STR      r0,[sp,#0x2c]
        0x00000562:    4621        !F      MOV      r1,r4
        0x00000564:    2006        .       MOVS     r0,#6
        0x00000566:    f7fffded    ....    BL       getStackedReg ; 0x144
        0x0000056a:    900c        ..      STR      r0,[sp,#0x30]
        0x0000056c:    4621        !F      MOV      r1,r4
        0x0000056e:    2007        .       MOVS     r0,#7
        0x00000570:    f7fffde8    ....    BL       getStackedReg ; 0x144
        0x00000574:    900d        ..      STR      r0,[sp,#0x34]
        0x00000576:    4668        hF      MOV      r0,sp
        0x00000578:    f7fffece    ....    BL       am_hal_mcuctrl_fault_status ; 0x318
        0x0000057c:    bf00        ..      NOP      
        0x0000057e:    bf00        ..      NOP      
        0x00000580:    e7fe        ..      B        0x580 ; am_util_faultisr_collect_data + 176
    $d
        0x00000582:    0000        ..      DCW    0
        0x00000584:    e000ed28    (...    DCD    3758157096
    $t
    i.am_util_stdio_printf
    am_util_stdio_printf
        0x00000588:    b40f        ..      PUSH     {r0-r3}
        0x0000058a:    b538        8.      PUSH     {r3-r5,lr}
        0x0000058c:    a805        ..      ADD      r0,sp,#0x14
        0x0000058e:    9000        ..      STR      r0,[sp,#0]
        0x00000590:    4807        .H      LDR      r0,[pc,#28] ; [0x5b0] = 0x10000020
        0x00000592:    9a00        ..      LDR      r2,[sp,#0]
        0x00000594:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000596:    f000f825    ..%.    BL       am_util_stdio_vsprintf ; 0x5e4
        0x0000059a:    4604        .F      MOV      r4,r0
        0x0000059c:    2000        .       MOVS     r0,#0
        0x0000059e:    9000        ..      STR      r0,[sp,#0]
        0x000005a0:    4803        .H      LDR      r0,[pc,#12] ; [0x5b0] = 0x10000020
        0x000005a2:    4904        .I      LDR      r1,[pc,#16] ; [0x5b4] = 0x10000014
        0x000005a4:    6809        .h      LDR      r1,[r1,#0]
        0x000005a6:    4788        .G      BLX      r1
        0x000005a8:    4620         F      MOV      r0,r4
        0x000005aa:    bc38        8.      POP      {r3-r5}
        0x000005ac:    f85dfb14    ]...    LDR      pc,[sp],#0x14
    $d
        0x000005b0:    10000020     ...    DCD    268435488
        0x000005b4:    10000014    ....    DCD    268435476
    $t
    i.am_util_stdio_printf_init
    am_util_stdio_printf_init
        0x000005b8:    4901        .I      LDR      r1,[pc,#4] ; [0x5c0] = 0x10000014
        0x000005ba:    6008        .`      STR      r0,[r1,#0]
        0x000005bc:    4770        pG      BX       lr
    $d
        0x000005be:    0000        ..      DCW    0
        0x000005c0:    10000014    ....    DCD    268435476
    $t
    i.am_util_stdio_terminal_clear
    am_util_stdio_terminal_clear
        0x000005c4:    b510        ..      PUSH     {r4,lr}
        0x000005c6:    a002        ..      ADR      r0,{pc}+0xa ; 0x5d0
        0x000005c8:    f7ffffde    ....    BL       am_util_stdio_printf ; 0x588
        0x000005cc:    bd10        ..      POP      {r4,pc}
    $d
        0x000005ce:    0000        ..      DCW    0
        0x000005d0:    0a0a0a0a    ....    DCD    168430090
        0x000005d4:    0a0a0a0a    ....    DCD    168430090
        0x000005d8:    0a0a0a0a    ....    DCD    168430090
        0x000005dc:    0a0a0a0a    ....    DCD    168430090
        0x000005e0:    00000a0a    ....    DCD    2570
    $t
    i.am_util_stdio_vsprintf
    am_util_stdio_vsprintf
        0x000005e4:    e92d4ff7    -..O    PUSH     {r0-r2,r4-r11,lr}
        0x000005e8:    ed2d8b02    -...    VPUSH    {d8}
        0x000005ec:    b08a        ..      SUB      sp,sp,#0x28
        0x000005ee:    4604        .F      MOV      r4,r0
        0x000005f0:    460d        .F      MOV      r5,r1
        0x000005f2:    f04f0900    O...    MOV      r9,#0
        0x000005f6:    2000        .       MOVS     r0,#0
        0x000005f8:    9000        ..      STR      r0,[sp,#0]
        0x000005fa:    e1b9        ..      B        0x970 ; am_util_stdio_vsprintf + 908
        0x000005fc:    2006        .       MOVS     r0,#6
        0x000005fe:    9006        ..      STR      r0,[sp,#0x18]
        0x00000600:    7828        (x      LDRB     r0,[r5,#0]
        0x00000602:    2825        %(      CMP      r0,#0x25
        0x00000604:    d012        ..      BEQ      0x62c ; am_util_stdio_vsprintf + 72
        0x00000606:    b16c        l.      CBZ      r4,0x624 ; am_util_stdio_vsprintf + 64
        0x00000608:    7828        (x      LDRB     r0,[r5,#0]
        0x0000060a:    280a        .(      CMP      r0,#0xa
        0x0000060c:    d107        ..      BNE      0x61e ; am_util_stdio_vsprintf + 58
        0x0000060e:    48de        .H      LDR      r0,[pc,#888] ; [0x988] = 0x10000018
        0x00000610:    7800        .x      LDRB     r0,[r0,#0]
        0x00000612:    b120         .      CBZ      r0,0x61e ; am_util_stdio_vsprintf + 58
        0x00000614:    200d        .       MOVS     r0,#0xd
        0x00000616:    f8040b01    ....    STRB     r0,[r4],#1
        0x0000061a:    f1090901    ....    ADD      r9,r9,#1
        0x0000061e:    7828        (x      LDRB     r0,[r5,#0]
        0x00000620:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000624:    1c6d        m.      ADDS     r5,r5,#1
        0x00000626:    f1090901    ....    ADD      r9,r9,#1
        0x0000062a:    e1a1        ..      B        0x970 ; am_util_stdio_vsprintf + 908
        0x0000062c:    1c6d        m.      ADDS     r5,r5,#1
        0x0000062e:    2000        .       MOVS     r0,#0
        0x00000630:    9002        ..      STR      r0,[sp,#8]
        0x00000632:    9003        ..      STR      r0,[sp,#0xc]
        0x00000634:    2020                MOVS     r0,#0x20
        0x00000636:    9004        ..      STR      r0,[sp,#0x10]
        0x00000638:    7828        (x      LDRB     r0,[r5,#0]
        0x0000063a:    2830        0(      CMP      r0,#0x30
        0x0000063c:    d101        ..      BNE      0x642 ; am_util_stdio_vsprintf + 94
        0x0000063e:    9004        ..      STR      r0,[sp,#0x10]
        0x00000640:    1c6d        m.      ADDS     r5,r5,#1
        0x00000642:    a907        ..      ADD      r1,sp,#0x1c
        0x00000644:    4628        (F      MOV      r0,r5
        0x00000646:    f000f9a7    ....    BL       decstr_to_int ; 0x998
        0x0000064a:    4606        .F      MOV      r6,r0
        0x0000064c:    9807        ..      LDR      r0,[sp,#0x1c]
        0x0000064e:    4405        .D      ADD      r5,r5,r0
        0x00000650:    7828        (x      LDRB     r0,[r5,#0]
        0x00000652:    2873        s(      CMP      r0,#0x73
        0x00000654:    d002        ..      BEQ      0x65c ; am_util_stdio_vsprintf + 120
        0x00000656:    2e00        ..      CMP      r6,#0
        0x00000658:    da00        ..      BGE      0x65c ; am_util_stdio_vsprintf + 120
        0x0000065a:    4276        vB      RSBS     r6,r6,#0
        0x0000065c:    7828        (x      LDRB     r0,[r5,#0]
        0x0000065e:    282e        .(      CMP      r0,#0x2e
        0x00000660:    d107        ..      BNE      0x672 ; am_util_stdio_vsprintf + 142
        0x00000662:    1c6d        m.      ADDS     r5,r5,#1
        0x00000664:    a907        ..      ADD      r1,sp,#0x1c
        0x00000666:    4628        (F      MOV      r0,r5
        0x00000668:    f000f996    ....    BL       decstr_to_int ; 0x998
        0x0000066c:    9006        ..      STR      r0,[sp,#0x18]
        0x0000066e:    9807        ..      LDR      r0,[sp,#0x1c]
        0x00000670:    4405        .D      ADD      r5,r5,r0
        0x00000672:    7828        (x      LDRB     r0,[r5,#0]
        0x00000674:    286c        l(      CMP      r0,#0x6c
        0x00000676:    d106        ..      BNE      0x686 ; am_util_stdio_vsprintf + 162
        0x00000678:    1c6d        m.      ADDS     r5,r5,#1
        0x0000067a:    7828        (x      LDRB     r0,[r5,#0]
        0x0000067c:    286c        l(      CMP      r0,#0x6c
        0x0000067e:    d102        ..      BNE      0x686 ; am_util_stdio_vsprintf + 162
        0x00000680:    1c6d        m.      ADDS     r5,r5,#1
        0x00000682:    2001        .       MOVS     r0,#1
        0x00000684:    9002        ..      STR      r0,[sp,#8]
        0x00000686:    7828        (x      LDRB     r0,[r5,#0]
        0x00000688:    2866        f(      CMP      r0,#0x66
        0x0000068a:    d06f        o.      BEQ      0x76c ; am_util_stdio_vsprintf + 392
        0x0000068c:    dc08        ..      BGT      0x6a0 ; am_util_stdio_vsprintf + 188
        0x0000068e:    2846        F(      CMP      r0,#0x46
        0x00000690:    d06d        m.      BEQ      0x76e ; am_util_stdio_vsprintf + 394
        0x00000692:    2858        X(      CMP      r0,#0x58
        0x00000694:    d05c        \.      BEQ      0x750 ; am_util_stdio_vsprintf + 364
        0x00000696:    2863        c(      CMP      r0,#0x63
        0x00000698:    d00b        ..      BEQ      0x6b2 ; am_util_stdio_vsprintf + 206
        0x0000069a:    2864        d(      CMP      r0,#0x64
        0x0000069c:    d168        h.      BNE      0x770 ; am_util_stdio_vsprintf + 396
        0x0000069e:    e0c3        ..      B        0x828 ; am_util_stdio_vsprintf + 580
        0x000006a0:    2869        i(      CMP      r0,#0x69
        0x000006a2:    d07d        }.      BEQ      0x7a0 ; am_util_stdio_vsprintf + 444
        0x000006a4:    2873        s(      CMP      r0,#0x73
        0x000006a6:    d011        ..      BEQ      0x6cc ; am_util_stdio_vsprintf + 232
        0x000006a8:    2875        u(      CMP      r0,#0x75
        0x000006aa:    d07a        z.      BEQ      0x7a2 ; am_util_stdio_vsprintf + 446
        0x000006ac:    2878        x(      CMP      r0,#0x78
        0x000006ae:    d1f5        ..      BNE      0x69c ; am_util_stdio_vsprintf + 184
        0x000006b0:    e04b        K.      B        0x74a ; am_util_stdio_vsprintf + 358
        0x000006b2:    980e        ..      LDR      r0,[sp,#0x38]
        0x000006b4:    f8101b04    ....    LDRB     r1,[r0],#4
        0x000006b8:    900e        ..      STR      r0,[sp,#0x38]
        0x000006ba:    b2c8        ..      UXTB     r0,r1
        0x000006bc:    9005        ..      STR      r0,[sp,#0x14]
        0x000006be:    b114        ..      CBZ      r4,0x6c6 ; am_util_stdio_vsprintf + 226
        0x000006c0:    9805        ..      LDR      r0,[sp,#0x14]
        0x000006c2:    f8040b01    ....    STRB     r0,[r4],#1
        0x000006c6:    f1090901    ....    ADD      r9,r9,#1
        0x000006ca:    e14e        N.      B        0x96a ; am_util_stdio_vsprintf + 902
        0x000006cc:    980e        ..      LDR      r0,[sp,#0x38]
        0x000006ce:    f850bb04    P...    LDR      r11,[r0],#4
        0x000006d2:    900e        ..      STR      r0,[sp,#0x38]
        0x000006d4:    4658        XF      MOV      r0,r11
        0x000006d6:    f000fb27    ..'.    BL       simple_strlen ; 0xd28
        0x000006da:    9000        ..      STR      r0,[sp,#0]
        0x000006dc:    2e00        ..      CMP      r6,#0
        0x000006de:    dd11        ..      BLE      0x704 ; am_util_stdio_vsprintf + 288
        0x000006e0:    9800        ..      LDR      r0,[sp,#0]
        0x000006e2:    42b0        .B      CMP      r0,r6
        0x000006e4:    d20e        ..      BCS      0x704 ; am_util_stdio_vsprintf + 288
        0x000006e6:    9800        ..      LDR      r0,[sp,#0]
        0x000006e8:    1a36        6.      SUBS     r6,r6,r0
        0x000006ea:    4632        2F      MOV      r2,r6
        0x000006ec:    4620         F      MOV      r0,r4
        0x000006ee:    9904        ..      LDR      r1,[sp,#0x10]
        0x000006f0:    f000fb09    ....    BL       padbuffer ; 0xd06
        0x000006f4:    4606        .F      MOV      r6,r0
        0x000006f6:    b10c        ..      CBZ      r4,0x6fc ; am_util_stdio_vsprintf + 280
        0x000006f8:    4630        0F      MOV      r0,r6
        0x000006fa:    e000        ..      B        0x6fe ; am_util_stdio_vsprintf + 282
        0x000006fc:    2000        .       MOVS     r0,#0
        0x000006fe:    4404        .D      ADD      r4,r4,r0
        0x00000700:    44b1        .D      ADD      r9,r9,r6
        0x00000702:    2600        .&      MOVS     r6,#0
        0x00000704:    e008        ..      B        0x718 ; am_util_stdio_vsprintf + 308
        0x00000706:    b11c        ..      CBZ      r4,0x710 ; am_util_stdio_vsprintf + 300
        0x00000708:    f89b0000    ....    LDRB     r0,[r11,#0]
        0x0000070c:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000710:    f10b0b01    ....    ADD      r11,r11,#1
        0x00000714:    f1090901    ....    ADD      r9,r9,#1
        0x00000718:    f89b0000    ....    LDRB     r0,[r11,#0]
        0x0000071c:    2800        .(      CMP      r0,#0
        0x0000071e:    d1f2        ..      BNE      0x706 ; am_util_stdio_vsprintf + 290
        0x00000720:    b196        ..      CBZ      r6,0x748 ; am_util_stdio_vsprintf + 356
        0x00000722:    4276        vB      RSBS     r6,r6,#0
        0x00000724:    9800        ..      LDR      r0,[sp,#0]
        0x00000726:    42b0        .B      CMP      r0,r6
        0x00000728:    d20e        ..      BCS      0x748 ; am_util_stdio_vsprintf + 356
        0x0000072a:    9800        ..      LDR      r0,[sp,#0]
        0x0000072c:    1a36        6.      SUBS     r6,r6,r0
        0x0000072e:    4632        2F      MOV      r2,r6
        0x00000730:    4620         F      MOV      r0,r4
        0x00000732:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000734:    f000fae7    ....    BL       padbuffer ; 0xd06
        0x00000738:    4606        .F      MOV      r6,r0
        0x0000073a:    b10c        ..      CBZ      r4,0x740 ; am_util_stdio_vsprintf + 348
        0x0000073c:    4630        0F      MOV      r0,r6
        0x0000073e:    e000        ..      B        0x742 ; am_util_stdio_vsprintf + 350
        0x00000740:    2000        .       MOVS     r0,#0
        0x00000742:    4404        .D      ADD      r4,r4,r0
        0x00000744:    44b1        .D      ADD      r9,r9,r6
        0x00000746:    2600        .&      MOVS     r6,#0
        0x00000748:    e10f        ..      B        0x96a ; am_util_stdio_vsprintf + 902
        0x0000074a:    2001        .       MOVS     r0,#1
        0x0000074c:    9003        ..      STR      r0,[sp,#0xc]
        0x0000074e:    bf00        ..      NOP      
        0x00000750:    9802        ..      LDR      r0,[sp,#8]
        0x00000752:    b170        p.      CBZ      r0,0x772 ; am_util_stdio_vsprintf + 398
        0x00000754:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000756:    1dc0        ..      ADDS     r0,r0,#7
        0x00000758:    f0200007     ...    BIC      r0,r0,#7
        0x0000075c:    4601        .F      MOV      r1,r0
        0x0000075e:    900e        ..      STR      r0,[sp,#0x38]
        0x00000760:    6800        .h      LDR      r0,[r0,#0]
        0x00000762:    6849        Ih      LDR      r1,[r1,#4]
        0x00000764:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000766:    3208        .2      ADDS     r2,r2,#8
        0x00000768:    920e        ..      STR      r2,[sp,#0x38]
        0x0000076a:    e008        ..      B        0x77e ; am_util_stdio_vsprintf + 410
        0x0000076c:    e0c3        ..      B        0x8f6 ; am_util_stdio_vsprintf + 786
        0x0000076e:    e0c3        ..      B        0x8f8 ; am_util_stdio_vsprintf + 788
        0x00000770:    e0f4        ..      B        0x95c ; am_util_stdio_vsprintf + 888
        0x00000772:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000774:    6800        .h      LDR      r0,[r0,#0]
        0x00000776:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000778:    1d09        ..      ADDS     r1,r1,#4
        0x0000077a:    910e        ..      STR      r1,[sp,#0x38]
        0x0000077c:    2100        .!      MOVS     r1,#0
        0x0000077e:    4607        .F      MOV      r7,r0
        0x00000780:    4688        .F      MOV      r8,r1
        0x00000782:    b19e        ..      CBZ      r6,0x7ac ; am_util_stdio_vsprintf + 456
        0x00000784:    4638        8F      MOV      r0,r7
        0x00000786:    4641        AF      MOV      r1,r8
        0x00000788:    f000fa74    ..t.    BL       ndigits_in_hex ; 0xc74
        0x0000078c:    1a36        6.      SUBS     r6,r6,r0
        0x0000078e:    4632        2F      MOV      r2,r6
        0x00000790:    4620         F      MOV      r0,r4
        0x00000792:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000794:    f000fab7    ....    BL       padbuffer ; 0xd06
        0x00000798:    4606        .F      MOV      r6,r0
        0x0000079a:    b11c        ..      CBZ      r4,0x7a4 ; am_util_stdio_vsprintf + 448
        0x0000079c:    4630        0F      MOV      r0,r6
        0x0000079e:    e002        ..      B        0x7a6 ; am_util_stdio_vsprintf + 450
        0x000007a0:    e043        C.      B        0x82a ; am_util_stdio_vsprintf + 582
        0x000007a2:    e00e        ..      B        0x7c2 ; am_util_stdio_vsprintf + 478
        0x000007a4:    2000        .       MOVS     r0,#0
        0x000007a6:    4404        .D      ADD      r4,r4,r0
        0x000007a8:    44b1        .D      ADD      r9,r9,r6
        0x000007aa:    2600        .&      MOVS     r6,#0
        0x000007ac:    4622        "F      MOV      r2,r4
        0x000007ae:    4638        8F      MOV      r0,r7
        0x000007b0:    4641        AF      MOV      r1,r8
        0x000007b2:    9b03        ..      LDR      r3,[sp,#0xc]
        0x000007b4:    f000fb36    ..6.    BL       uint64_to_hexstr ; 0xe24
        0x000007b8:    4682        .F      MOV      r10,r0
        0x000007ba:    b104        ..      CBZ      r4,0x7be ; am_util_stdio_vsprintf + 474
        0x000007bc:    4454        TD      ADD      r4,r4,r10
        0x000007be:    44d1        .D      ADD      r9,r9,r10
        0x000007c0:    e0d3        ..      B        0x96a ; am_util_stdio_vsprintf + 902
        0x000007c2:    9802        ..      LDR      r0,[sp,#8]
        0x000007c4:    b158        X.      CBZ      r0,0x7de ; am_util_stdio_vsprintf + 506
        0x000007c6:    980e        ..      LDR      r0,[sp,#0x38]
        0x000007c8:    1dc0        ..      ADDS     r0,r0,#7
        0x000007ca:    f0200007     ...    BIC      r0,r0,#7
        0x000007ce:    4601        .F      MOV      r1,r0
        0x000007d0:    900e        ..      STR      r0,[sp,#0x38]
        0x000007d2:    6800        .h      LDR      r0,[r0,#0]
        0x000007d4:    6849        Ih      LDR      r1,[r1,#4]
        0x000007d6:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x000007d8:    3208        .2      ADDS     r2,r2,#8
        0x000007da:    920e        ..      STR      r2,[sp,#0x38]
        0x000007dc:    e005        ..      B        0x7ea ; am_util_stdio_vsprintf + 518
        0x000007de:    980e        ..      LDR      r0,[sp,#0x38]
        0x000007e0:    6800        .h      LDR      r0,[r0,#0]
        0x000007e2:    990e        ..      LDR      r1,[sp,#0x38]
        0x000007e4:    1d09        ..      ADDS     r1,r1,#4
        0x000007e6:    910e        ..      STR      r1,[sp,#0x38]
        0x000007e8:    2100        .!      MOVS     r1,#0
        0x000007ea:    4607        .F      MOV      r7,r0
        0x000007ec:    4688        .F      MOV      r8,r1
        0x000007ee:    b18e        ..      CBZ      r6,0x814 ; am_util_stdio_vsprintf + 560
        0x000007f0:    4638        8F      MOV      r0,r7
        0x000007f2:    4641        AF      MOV      r1,r8
        0x000007f4:    f000fa6a    ..j.    BL       ndigits_in_u64 ; 0xccc
        0x000007f8:    1a36        6.      SUBS     r6,r6,r0
        0x000007fa:    4632        2F      MOV      r2,r6
        0x000007fc:    4620         F      MOV      r0,r4
        0x000007fe:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000800:    f000fa81    ....    BL       padbuffer ; 0xd06
        0x00000804:    4606        .F      MOV      r6,r0
        0x00000806:    b10c        ..      CBZ      r4,0x80c ; am_util_stdio_vsprintf + 552
        0x00000808:    4630        0F      MOV      r0,r6
        0x0000080a:    e000        ..      B        0x80e ; am_util_stdio_vsprintf + 554
        0x0000080c:    2000        .       MOVS     r0,#0
        0x0000080e:    4404        .D      ADD      r4,r4,r0
        0x00000810:    44b1        .D      ADD      r9,r9,r6
        0x00000812:    2600        .&      MOVS     r6,#0
        0x00000814:    4622        "F      MOV      r2,r4
        0x00000816:    4638        8F      MOV      r0,r7
        0x00000818:    4641        AF      MOV      r1,r8
        0x0000081a:    f000fb48    ..H.    BL       uint64_to_str ; 0xeae
        0x0000081e:    4682        .F      MOV      r10,r0
        0x00000820:    b104        ..      CBZ      r4,0x824 ; am_util_stdio_vsprintf + 576
        0x00000822:    4454        TD      ADD      r4,r4,r10
        0x00000824:    44d1        .D      ADD      r9,r9,r10
        0x00000826:    e0a0        ..      B        0x96a ; am_util_stdio_vsprintf + 902
        0x00000828:    bf00        ..      NOP      
        0x0000082a:    9802        ..      LDR      r0,[sp,#8]
        0x0000082c:    b158        X.      CBZ      r0,0x846 ; am_util_stdio_vsprintf + 610
        0x0000082e:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000830:    1dc0        ..      ADDS     r0,r0,#7
        0x00000832:    f0200007     ...    BIC      r0,r0,#7
        0x00000836:    4601        .F      MOV      r1,r0
        0x00000838:    900e        ..      STR      r0,[sp,#0x38]
        0x0000083a:    6800        .h      LDR      r0,[r0,#0]
        0x0000083c:    6849        Ih      LDR      r1,[r1,#4]
        0x0000083e:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000840:    3208        .2      ADDS     r2,r2,#8
        0x00000842:    920e        ..      STR      r2,[sp,#0x38]
        0x00000844:    e005        ..      B        0x852 ; am_util_stdio_vsprintf + 622
        0x00000846:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000848:    6800        .h      LDR      r0,[r0,#0]
        0x0000084a:    990e        ..      LDR      r1,[sp,#0x38]
        0x0000084c:    1d09        ..      ADDS     r1,r1,#4
        0x0000084e:    910e        ..      STR      r1,[sp,#0x38]
        0x00000850:    17c1        ..      ASRS     r1,r0,#31
        0x00000852:    e9cd0108    ....    STRD     r0,r1,[sp,#0x20]
        0x00000856:    2300        .#      MOVS     r3,#0
        0x00000858:    e9dd0108    ....    LDRD     r0,r1,[sp,#0x20]
        0x0000085c:    1ac0        ..      SUBS     r0,r0,r3
        0x0000085e:    4199        .A      SBCS     r1,r1,r3
        0x00000860:    da08        ..      BGE      0x874 ; am_util_stdio_vsprintf + 656
        0x00000862:    2200        ."      MOVS     r2,#0
        0x00000864:    e9dd1008    ....    LDRD     r1,r0,[sp,#0x20]
        0x00000868:    424f        OB      RSBS     r7,r1,#0
        0x0000086a:    eb620800    b...    SBC      r8,r2,r0
        0x0000086e:    2001        .       MOVS     r0,#1
        0x00000870:    9001        ..      STR      r0,[sp,#4]
        0x00000872:    e003        ..      B        0x87c ; am_util_stdio_vsprintf + 664
        0x00000874:    e9dd7808    ...x    LDRD     r7,r8,[sp,#0x20]
        0x00000878:    2000        .       MOVS     r0,#0
        0x0000087a:    9001        ..      STR      r0,[sp,#4]
        0x0000087c:    b34e        N.      CBZ      r6,0x8d2 ; am_util_stdio_vsprintf + 750
        0x0000087e:    4638        8F      MOV      r0,r7
        0x00000880:    4641        AF      MOV      r1,r8
        0x00000882:    f000fa11    ....    BL       ndigits_in_i64 ; 0xca8
        0x00000886:    1a36        6.      SUBS     r6,r6,r0
        0x00000888:    9801        ..      LDR      r0,[sp,#4]
        0x0000088a:    b148        H.      CBZ      r0,0x8a0 ; am_util_stdio_vsprintf + 700
        0x0000088c:    1e76        v.      SUBS     r6,r6,#1
        0x0000088e:    9804        ..      LDR      r0,[sp,#0x10]
        0x00000890:    2830        0(      CMP      r0,#0x30
        0x00000892:    d105        ..      BNE      0x8a0 ; am_util_stdio_vsprintf + 700
        0x00000894:    b114        ..      CBZ      r4,0x89c ; am_util_stdio_vsprintf + 696
        0x00000896:    202d        -       MOVS     r0,#0x2d
        0x00000898:    f8040b01    ....    STRB     r0,[r4],#1
        0x0000089c:    f1090901    ....    ADD      r9,r9,#1
        0x000008a0:    4632        2F      MOV      r2,r6
        0x000008a2:    4620         F      MOV      r0,r4
        0x000008a4:    9904        ..      LDR      r1,[sp,#0x10]
        0x000008a6:    f000fa2e    ....    BL       padbuffer ; 0xd06
        0x000008aa:    4606        .F      MOV      r6,r0
        0x000008ac:    b10c        ..      CBZ      r4,0x8b2 ; am_util_stdio_vsprintf + 718
        0x000008ae:    4630        0F      MOV      r0,r6
        0x000008b0:    e000        ..      B        0x8b4 ; am_util_stdio_vsprintf + 720
        0x000008b2:    2000        .       MOVS     r0,#0
        0x000008b4:    4404        .D      ADD      r4,r4,r0
        0x000008b6:    44b1        .D      ADD      r9,r9,r6
        0x000008b8:    2600        .&      MOVS     r6,#0
        0x000008ba:    9801        ..      LDR      r0,[sp,#4]
        0x000008bc:    b188        ..      CBZ      r0,0x8e2 ; am_util_stdio_vsprintf + 766
        0x000008be:    9804        ..      LDR      r0,[sp,#0x10]
        0x000008c0:    2820         (      CMP      r0,#0x20
        0x000008c2:    d10e        ..      BNE      0x8e2 ; am_util_stdio_vsprintf + 766
        0x000008c4:    b114        ..      CBZ      r4,0x8cc ; am_util_stdio_vsprintf + 744
        0x000008c6:    202d        -       MOVS     r0,#0x2d
        0x000008c8:    f8040b01    ....    STRB     r0,[r4],#1
        0x000008cc:    f1090901    ....    ADD      r9,r9,#1
        0x000008d0:    e007        ..      B        0x8e2 ; am_util_stdio_vsprintf + 766
        0x000008d2:    9801        ..      LDR      r0,[sp,#4]
        0x000008d4:    b128        (.      CBZ      r0,0x8e2 ; am_util_stdio_vsprintf + 766
        0x000008d6:    b114        ..      CBZ      r4,0x8de ; am_util_stdio_vsprintf + 762
        0x000008d8:    202d        -       MOVS     r0,#0x2d
        0x000008da:    f8040b01    ....    STRB     r0,[r4],#1
        0x000008de:    f1090901    ....    ADD      r9,r9,#1
        0x000008e2:    4622        "F      MOV      r2,r4
        0x000008e4:    4638        8F      MOV      r0,r7
        0x000008e6:    4641        AF      MOV      r1,r8
        0x000008e8:    f000fae1    ....    BL       uint64_to_str ; 0xeae
        0x000008ec:    4682        .F      MOV      r10,r0
        0x000008ee:    b104        ..      CBZ      r4,0x8f2 ; am_util_stdio_vsprintf + 782
        0x000008f0:    4454        TD      ADD      r4,r4,r10
        0x000008f2:    44d1        .D      ADD      r9,r9,r10
        0x000008f4:    e039        9.      B        0x96a ; am_util_stdio_vsprintf + 902
        0x000008f6:    bf00        ..      NOP      
        0x000008f8:    b37c        |.      CBZ      r4,0x95a ; am_util_stdio_vsprintf + 886
        0x000008fa:    980e        ..      LDR      r0,[sp,#0x38]
        0x000008fc:    1dc0        ..      ADDS     r0,r0,#7
        0x000008fe:    f0200007     ...    BIC      r0,r0,#7
        0x00000902:    900e        ..      STR      r0,[sp,#0x38]
        0x00000904:    ecb01b02    ....    VLDM     r0!,{d1}
        0x00000908:    eeb00a41    ..A.    VMOV.F32 s0,s2
        0x0000090c:    eef00a61    ..a.    VMOV.F32 s1,s3
        0x00000910:    900e        ..      STR      r0,[sp,#0x38]
        0x00000912:    ec510b10    Q...    VMOV     r0,r1,d0
        0x00000916:    f000fb03    ....    BL       __aeabi_d2f ; 0xf20
        0x0000091a:    ee080a10    ....    VMOV     s16,r0
        0x0000091e:    2014        .       MOVS     r0,#0x14
        0x00000920:    6020         `      STR      r0,[r4,#0]
        0x00000922:    4620         F      MOV      r0,r4
        0x00000924:    eeb00a48    ..H.    VMOV.F32 s0,s16
        0x00000928:    9906        ..      LDR      r1,[sp,#0x18]
        0x0000092a:    f000f8bd    ....    BL       ftoa ; 0xaa8
        0x0000092e:    4682        .F      MOV      r10,r0
        0x00000930:    f1ba0f00    ....    CMP      r10,#0
        0x00000934:    da0e        ..      BGE      0x954 ; am_util_stdio_vsprintf + 880
        0x00000936:    f10a0101    ....    ADD      r1,r10,#1
        0x0000093a:    b909        ..      CBNZ     r1,0x940 ; am_util_stdio_vsprintf + 860
        0x0000093c:    4813        .H      LDR      r0,[pc,#76] ; [0x98c] = 0x302e30
        0x0000093e:    e005        ..      B        0x94c ; am_util_stdio_vsprintf + 872
        0x00000940:    f10a0102    ....    ADD      r1,r10,#2
        0x00000944:    b909        ..      CBNZ     r1,0x94a ; am_util_stdio_vsprintf + 870
        0x00000946:    4812        .H      LDR      r0,[pc,#72] ; [0x990] = 0x232e23
        0x00000948:    e000        ..      B        0x94c ; am_util_stdio_vsprintf + 872
        0x0000094a:    4812        .H      LDR      r0,[pc,#72] ; [0x994] = 0x3f2e3f
        0x0000094c:    6020         `      STR      r0,[r4,#0]
        0x0000094e:    f04f0a03    O...    MOV      r10,#3
        0x00000952:    bf00        ..      NOP      
        0x00000954:    44d1        .D      ADD      r9,r9,r10
        0x00000956:    4454        TD      ADD      r4,r4,r10
        0x00000958:    bf00        ..      NOP      
        0x0000095a:    e006        ..      B        0x96a ; am_util_stdio_vsprintf + 902
        0x0000095c:    b114        ..      CBZ      r4,0x964 ; am_util_stdio_vsprintf + 896
        0x0000095e:    7828        (x      LDRB     r0,[r5,#0]
        0x00000960:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000964:    f1090901    ....    ADD      r9,r9,#1
        0x00000968:    bf00        ..      NOP      
        0x0000096a:    bf00        ..      NOP      
        0x0000096c:    1c6d        m.      ADDS     r5,r5,#1
        0x0000096e:    bf00        ..      NOP      
        0x00000970:    7828        (x      LDRB     r0,[r5,#0]
        0x00000972:    2800        .(      CMP      r0,#0
        0x00000974:    f47fae42    ..B.    BNE      0x5fc ; am_util_stdio_vsprintf + 24
        0x00000978:    b104        ..      CBZ      r4,0x97c ; am_util_stdio_vsprintf + 920
        0x0000097a:    7020         p      STRB     r0,[r4,#0]
        0x0000097c:    4648        HF      MOV      r0,r9
        0x0000097e:    b00a        ..      ADD      sp,sp,#0x28
        0x00000980:    ecbd8b02    ....    VPOP     {d8}
        0x00000984:    e8bd8ffe    ....    POP      {r1-r11,pc}
    $d
        0x00000988:    10000018    ....    DCD    268435480
        0x0000098c:    00302e30    0.0.    DCD    3157552
        0x00000990:    00232e23    #.#.    DCD    2305571
        0x00000994:    003f2e3f    ?.?.    DCD    4140607
    $t
    i.decstr_to_int
    decstr_to_int
        0x00000998:    b530        0.      PUSH     {r4,r5,lr}
        0x0000099a:    4602        .F      MOV      r2,r0
        0x0000099c:    2500        .%      MOVS     r5,#0
        0x0000099e:    2300        .#      MOVS     r3,#0
        0x000009a0:    2400        .$      MOVS     r4,#0
        0x000009a2:    7810        .x      LDRB     r0,[r2,#0]
        0x000009a4:    282d        -(      CMP      r0,#0x2d
        0x000009a6:    d102        ..      BNE      0x9ae ; decstr_to_int + 22
        0x000009a8:    2501        .%      MOVS     r5,#1
        0x000009aa:    1c52        R.      ADDS     r2,r2,#1
        0x000009ac:    1c64        d.      ADDS     r4,r4,#1
        0x000009ae:    e007        ..      B        0x9c0 ; decstr_to_int + 40
        0x000009b0:    1c64        d.      ADDS     r4,r4,#1
        0x000009b2:    eb030083    ....    ADD      r0,r3,r3,LSL #2
        0x000009b6:    0043        C.      LSLS     r3,r0,#1
        0x000009b8:    7810        .x      LDRB     r0,[r2,#0]
        0x000009ba:    3830        08      SUBS     r0,r0,#0x30
        0x000009bc:    4403        .D      ADD      r3,r3,r0
        0x000009be:    1c52        R.      ADDS     r2,r2,#1
        0x000009c0:    7810        .x      LDRB     r0,[r2,#0]
        0x000009c2:    2830        0(      CMP      r0,#0x30
        0x000009c4:    db02        ..      BLT      0x9cc ; decstr_to_int + 52
        0x000009c6:    7810        .x      LDRB     r0,[r2,#0]
        0x000009c8:    2839        9(      CMP      r0,#0x39
        0x000009ca:    ddf1        ..      BLE      0x9b0 ; decstr_to_int + 24
        0x000009cc:    b101        ..      CBZ      r1,0x9d0 ; decstr_to_int + 56
        0x000009ce:    600c        .`      STR      r4,[r1,#0]
        0x000009d0:    b10d        ..      CBZ      r5,0x9d6 ; decstr_to_int + 62
        0x000009d2:    4258        XB      RSBS     r0,r3,#0
        0x000009d4:    bd30        0.      POP      {r4,r5,pc}
        0x000009d6:    4618        .F      MOV      r0,r3
        0x000009d8:    e7fc        ..      B        0x9d4 ; decstr_to_int + 60
    i.divu64_10
    divu64_10
        0x000009da:    e92d4ff0    -..O    PUSH     {r4-r11,lr}
        0x000009de:    4604        .F      MOV      r4,r0
        0x000009e0:    460d        .F      MOV      r5,r1
        0x000009e2:    2000        .       MOVS     r0,#0
        0x000009e4:    ea850100    ....    EOR      r1,r5,r0
        0x000009e8:    4040        @@      EORS     r0,r0,r0
        0x000009ea:    4301        .C      ORRS     r1,r1,r0
        0x000009ec:    d044        D.      BEQ      0xa78 ; divu64_10 + 158
        0x000009ee:    ea5f0a55    _.U.    LSRS     r10,r5,#1
        0x000009f2:    ea4f0134    O.4.    RRX      r1,r4
        0x000009f6:    ea4f0b94    O...    LSR      r11,r4,#2
        0x000009fa:    ea4b7085    K..p    ORR      r0,r11,r5,LSL #30
        0x000009fe:    180a        ..      ADDS     r2,r1,r0
        0x00000a00:    eb4a0395    J...    ADC      r3,r10,r5,LSR #2
        0x00000a04:    ea4f1012    O...    LSR      r0,r2,#4
        0x00000a08:    ea407a03    @..z    ORR      r10,r0,r3,LSL #28
        0x00000a0c:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000a10:    eb431313    C...    ADC      r3,r3,r3,LSR #4
        0x00000a14:    ea4f2012    O..     LSR      r0,r2,#8
        0x00000a18:    ea406a03    @..j    ORR      r10,r0,r3,LSL #24
        0x00000a1c:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000a20:    eb432313    C..#    ADC      r3,r3,r3,LSR #8
        0x00000a24:    ea4f4012    O..@    LSR      r0,r2,#16
        0x00000a28:    ea404a03    @..J    ORR      r10,r0,r3,LSL #16
        0x00000a2c:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000a30:    eb434313    C..C    ADC      r3,r3,r3,LSR #16
        0x00000a34:    189a        ..      ADDS     r2,r3,r2
        0x00000a36:    f1430300    C...    ADC      r3,r3,#0
        0x00000a3a:    08d0        ..      LSRS     r0,r2,#3
        0x00000a3c:    ea407243    @.Cr    ORR      r2,r0,r3,LSL #29
        0x00000a40:    08db        ..      LSRS     r3,r3,#3
        0x00000a42:    210a        .!      MOVS     r1,#0xa
        0x00000a44:    f04f0a00    O...    MOV      r10,#0
        0x00000a48:    fba20b01    ....    UMULL    r0,r11,r2,r1
        0x00000a4c:    fb03b101    ....    MLA      r1,r3,r1,r11
        0x00000a50:    fb02110a    ....    MLA      r1,r2,r10,r1
        0x00000a54:    1a26        &.      SUBS     r6,r4,r0
        0x00000a56:    eb650701    e...    SBC      r7,r5,r1
        0x00000a5a:    2106        .!      MOVS     r1,#6
        0x00000a5c:    eb160a01    ....    ADDS     r10,r6,r1
        0x00000a60:    f1470100    G...    ADC      r1,r7,#0
        0x00000a64:    ea4f101a    O...    LSR      r0,r10,#4
        0x00000a68:    ea407a01    @..z    ORR      r10,r0,r1,LSL #28
        0x00000a6c:    eb1a0002    ....    ADDS     r0,r10,r2
        0x00000a70:    eb431111    C...    ADC      r1,r3,r1,LSR #4
        0x00000a74:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000a78:    46a0        .F      MOV      r8,r4
        0x00000a7a:    ea4f0058    O.X.    LSR      r0,r8,#1
        0x00000a7e:    eb000c98    ....    ADD      r12,r0,r8,LSR #2
        0x00000a82:    eb0c1c1c    ....    ADD      r12,r12,r12,LSR #4
        0x00000a86:    eb0c2c1c    ...,    ADD      r12,r12,r12,LSR #8
        0x00000a8a:    eb0c4c1c    ...L    ADD      r12,r12,r12,LSR #16
        0x00000a8e:    ea4f0cdc    O...    LSR      r12,r12,#3
        0x00000a92:    eb0c008c    ....    ADD      r0,r12,r12,LSL #2
        0x00000a96:    eba80940    ..@.    SUB      r9,r8,r0,LSL #1
        0x00000a9a:    f1090006    ....    ADD      r0,r9,#6
        0x00000a9e:    eb0c1010    ....    ADD      r0,r12,r0,LSR #4
        0x00000aa2:    2100        .!      MOVS     r1,#0
        0x00000aa4:    e7e6        ..      B        0xa74 ; divu64_10 + 154
        0x00000aa6:    0000        ..      MOVS     r0,r0
    i.ftoa
    ftoa
        0x00000aa8:    e92d4ff3    -..O    PUSH     {r0,r1,r4-r11,lr}
        0x00000aac:    ed2d0b02    -...    VPUSH    {d0}
        0x00000ab0:    ed2d8b02    -...    VPUSH    {d8}
        0x00000ab4:    b081        ..      SUB      sp,sp,#4
        0x00000ab6:    eeb08a40    ..@.    VMOV.F32 s16,s0
        0x00000aba:    4604        .F      MOV      r4,r0
        0x00000abc:    f8d4b000    ....    LDR      r11,[r4,#0]
        0x00000ac0:    f1bb0f04    ....    CMP      r11,#4
        0x00000ac4:    da07        ..      BGE      0xad6 ; ftoa + 46
        0x00000ac6:    f06f0002    o...    MVN      r0,#2
        0x00000aca:    b001        ..      ADD      sp,sp,#4
        0x00000acc:    ecbd8b02    ....    VPOP     {d8}
        0x00000ad0:    b004        ..      ADD      sp,sp,#0x10
        0x00000ad2:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000ad6:    eeb58ac0    ....    VCMPE.F32 s16,#0.0
        0x00000ada:    eef1fa10    ....    VMRS     APSR_nzcv,FPSCR
        0x00000ade:    d103        ..      BNE      0xae8 ; ftoa + 64
        0x00000ae0:    484e        NH      LDR      r0,[pc,#312] ; [0xc1c] = 0x302e30
        0x00000ae2:    6020         `      STR      r0,[r4,#0]
        0x00000ae4:    2003        .       MOVS     r0,#3
        0x00000ae6:    e7f0        ..      B        0xaca ; ftoa + 34
        0x00000ae8:    46a2        .F      MOV      r10,r4
        0x00000aea:    ed8d8a00    ....    VSTR     s16,[sp,#0]
        0x00000aee:    9800        ..      LDR      r0,[sp,#0]
        0x00000af0:    f3c050c7    ...P    UBFX     r0,r0,#23,#8
        0x00000af4:    f1a0057f    ....    SUB      r5,r0,#0x7f
        0x00000af8:    9800        ..      LDR      r0,[sp,#0]
        0x00000afa:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x00000afe:    f4400900    @...    ORR      r9,r0,#0x800000
        0x00000b02:    f04f0800    O...    MOV      r8,#0
        0x00000b06:    2700        .'      MOVS     r7,#0
        0x00000b08:    2d1f        .-      CMP      r5,#0x1f
        0x00000b0a:    db01        ..      BLT      0xb10 ; ftoa + 104
        0x00000b0c:    1eb8        ..      SUBS     r0,r7,#2
        0x00000b0e:    e7dc        ..      B        0xaca ; ftoa + 34
        0x00000b10:    f1150f17    ....    CMN      r5,#0x17
        0x00000b14:    da02        ..      BGE      0xb1c ; ftoa + 116
        0x00000b16:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x00000b1a:    e7d6        ..      B        0xaca ; ftoa + 34
        0x00000b1c:    2d17        .-      CMP      r5,#0x17
        0x00000b1e:    db04        ..      BLT      0xb2a ; ftoa + 130
        0x00000b20:    f1a50017    ....    SUB      r0,r5,#0x17
        0x00000b24:    fa09f700    ....    LSL      r7,r9,r0
        0x00000b28:    e011        ..      B        0xb4e ; ftoa + 166
        0x00000b2a:    2d00        .-      CMP      r5,#0
        0x00000b2c:    db09        ..      BLT      0xb42 ; ftoa + 154
        0x00000b2e:    f1c50017    ....    RSB      r0,r5,#0x17
        0x00000b32:    fa49f700    I...    ASR      r7,r9,r0
        0x00000b36:    1c68        h.      ADDS     r0,r5,#1
        0x00000b38:    fa09f000    ....    LSL      r0,r9,r0
        0x00000b3c:    f020487f     ..H    BIC      r8,r0,#0xff000000
        0x00000b40:    e005        ..      B        0xb4e ; ftoa + 166
        0x00000b42:    f029407f    )..@    BIC      r0,r9,#0xff000000
        0x00000b46:    1c69        i.      ADDS     r1,r5,#1
        0x00000b48:    4249        IB      RSBS     r1,r1,#0
        0x00000b4a:    fa40f801    @...    ASR      r8,r0,r1
        0x00000b4e:    9800        ..      LDR      r0,[sp,#0]
        0x00000b50:    2800        .(      CMP      r0,#0
        0x00000b52:    da02        ..      BGE      0xb5a ; ftoa + 178
        0x00000b54:    202d        -       MOVS     r0,#0x2d
        0x00000b56:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b5a:    b91f        ..      CBNZ     r7,0xb64 ; ftoa + 188
        0x00000b5c:    2030        0       MOVS     r0,#0x30
        0x00000b5e:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b62:    e014        ..      B        0xb8e ; ftoa + 230
        0x00000b64:    2f00        ./      CMP      r7,#0
        0x00000b66:    dd05        ..      BLE      0xb74 ; ftoa + 204
        0x00000b68:    4622        "F      MOV      r2,r4
        0x00000b6a:    4638        8F      MOV      r0,r7
        0x00000b6c:    17f9        ..      ASRS     r1,r7,#31
        0x00000b6e:    f000f99e    ....    BL       uint64_to_str ; 0xeae
        0x00000b72:    e007        ..      B        0xb84 ; ftoa + 220
        0x00000b74:    202d        -       MOVS     r0,#0x2d
        0x00000b76:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b7a:    4622        "F      MOV      r2,r4
        0x00000b7c:    4278        xB      RSBS     r0,r7,#0
        0x00000b7e:    17c1        ..      ASRS     r1,r0,#31
        0x00000b80:    f000f995    ....    BL       uint64_to_str ; 0xeae
        0x00000b84:    e000        ..      B        0xb88 ; ftoa + 224
        0x00000b86:    1c64        d.      ADDS     r4,r4,#1
        0x00000b88:    7820         x      LDRB     r0,[r4,#0]
        0x00000b8a:    2800        .(      CMP      r0,#0
        0x00000b8c:    d1fb        ..      BNE      0xb86 ; ftoa + 222
        0x00000b8e:    202e        .       MOVS     r0,#0x2e
        0x00000b90:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b94:    f1b80f00    ....    CMP      r8,#0
        0x00000b98:    d103        ..      BNE      0xba2 ; ftoa + 250
        0x00000b9a:    2030        0       MOVS     r0,#0x30
        0x00000b9c:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000ba0:    e036        6.      B        0xc10 ; ftoa + 360
        0x00000ba2:    eba4020a    ....    SUB      r2,r4,r10
        0x00000ba6:    ebab0202    ....    SUB      r2,r11,r2
        0x00000baa:    1e51        Q.      SUBS     r1,r2,#1
        0x00000bac:    9a06        ..      LDR      r2,[sp,#0x18]
        0x00000bae:    4291        .B      CMP      r1,r2
        0x00000bb0:    dd01        ..      BLE      0xbb6 ; ftoa + 270
        0x00000bb2:    9a06        ..      LDR      r2,[sp,#0x18]
        0x00000bb4:    e000        ..      B        0xbb8 ; ftoa + 272
        0x00000bb6:    460a        .F      MOV      r2,r1
        0x00000bb8:    4611        .F      MOV      r1,r2
        0x00000bba:    2000        .       MOVS     r0,#0
        0x00000bbc:    e00b        ..      B        0xbd6 ; ftoa + 302
        0x00000bbe:    eb080288    ....    ADD      r2,r8,r8,LSL #2
        0x00000bc2:    ea4f0842    O.B.    LSL      r8,r2,#1
        0x00000bc6:    2230        0"      MOVS     r2,#0x30
        0x00000bc8:    eb026228    ..(b    ADD      r2,r2,r8,ASR #24
        0x00000bcc:    f8042b01    ...+    STRB     r2,[r4],#1
        0x00000bd0:    f028487f    (..H    BIC      r8,r8,#0xff000000
        0x00000bd4:    1c40        @.      ADDS     r0,r0,#1
        0x00000bd6:    4288        .B      CMP      r0,r1
        0x00000bd8:    dbf1        ..      BLT      0xbbe ; ftoa + 278
        0x00000bda:    eb080288    ....    ADD      r2,r8,r8,LSL #2
        0x00000bde:    0052        R.      LSLS     r2,r2,#1
        0x00000be0:    2305        .#      MOVS     r3,#5
        0x00000be2:    ebb36f22    .."o    CMP      r3,r2,ASR #24
        0x00000be6:    dc12        ..      BGT      0xc0e ; ftoa + 358
        0x00000be8:    1e66        f.      SUBS     r6,r4,#1
        0x00000bea:    e00d        ..      B        0xc08 ; ftoa + 352
        0x00000bec:    7832        2x      LDRB     r2,[r6,#0]
        0x00000bee:    2a2e        .*      CMP      r2,#0x2e
        0x00000bf0:    d009        ..      BEQ      0xc06 ; ftoa + 350
        0x00000bf2:    7832        2x      LDRB     r2,[r6,#0]
        0x00000bf4:    2a39        9*      CMP      r2,#0x39
        0x00000bf6:    d102        ..      BNE      0xbfe ; ftoa + 342
        0x00000bf8:    2230        0"      MOVS     r2,#0x30
        0x00000bfa:    7032        2p      STRB     r2,[r6,#0]
        0x00000bfc:    e003        ..      B        0xc06 ; ftoa + 350
        0x00000bfe:    7832        2x      LDRB     r2,[r6,#0]
        0x00000c00:    1c52        R.      ADDS     r2,r2,#1
        0x00000c02:    7032        2p      STRB     r2,[r6,#0]
        0x00000c04:    e002        ..      B        0xc0c ; ftoa + 356
        0x00000c06:    1e76        v.      SUBS     r6,r6,#1
        0x00000c08:    4556        VE      CMP      r6,r10
        0x00000c0a:    d2ef        ..      BCS      0xbec ; ftoa + 324
        0x00000c0c:    bf00        ..      NOP      
        0x00000c0e:    bf00        ..      NOP      
        0x00000c10:    2000        .       MOVS     r0,#0
        0x00000c12:    7020         p      STRB     r0,[r4,#0]
        0x00000c14:    eba4000a    ....    SUB      r0,r4,r10
        0x00000c18:    e757        W.      B        0xaca ; ftoa + 34
    $d
        0x00000c1a:    0000        ..      DCW    0
        0x00000c1c:    00302e30    0.0.    DCD    3157552
    $t
    i.main
    main
        0x00000c20:    2000        .       MOVS     r0,#0
        0x00000c22:    f7fffb55    ..U.    BL       am_hal_clkgen_sysclk_select ; 0x2d0
        0x00000c26:    f7fffb04    ....    BL       __semihosting_library_function ; 0x232
        0x00000c2a:    480c        .H      LDR      r0,[pc,#48] ; [0xc5c] = 0x255
        0x00000c2c:    f7fffcc4    ....    BL       am_util_stdio_printf_init ; 0x5b8
        0x00000c30:    2000        .       MOVS     r0,#0
        0x00000c32:    f000f8b9    ....    BL       uart_init ; 0xda8
        0x00000c36:    f7fffcc5    ....    BL       am_util_stdio_terminal_clear ; 0x5c4
        0x00000c3a:    a009        ..      ADR      r0,{pc}+0x26 ; 0xc60
        0x00000c3c:    f7fffca4    ....    BL       am_util_stdio_printf ; 0x588
        0x00000c40:    2000        .       MOVS     r0,#0
        0x00000c42:    f000f87d    ..}.    BL       uart_disable ; 0xd40
        0x00000c46:    f7fffaf4    ....    BL       __semihosting_library_function ; 0x232
        0x00000c4a:    21ff        .!      MOVS     r1,#0xff
        0x00000c4c:    4608        .F      MOV      r0,r1
        0x00000c4e:    f7fffb7f    ....    BL       am_hal_mcuctrl_sram_power_set ; 0x350
        0x00000c52:    e002        ..      B        0xc5a ; main + 58
        0x00000c54:    2001        .       MOVS     r0,#1
        0x00000c56:    f7fffb95    ....    BL       am_hal_sysctrl_sleep ; 0x384
        0x00000c5a:    e7fb        ..      B        0xc54 ; main + 52
    $d
        0x00000c5c:    00000255    U...    DCD    597
        0x00000c60:    70656544    Deep    DCD    1885693252
        0x00000c64:    65656c73    slee    DCD    1701145715
        0x00000c68:    78452070    p Ex    DCD    2017796208
        0x00000c6c:    6c706d61    ampl    DCD    1819307361
        0x00000c70:    00000a65    e...    DCD    2661
    $t
    i.ndigits_in_hex
    ndigits_in_hex
        0x00000c74:    b530        0.      PUSH     {r4,r5,lr}
        0x00000c76:    4602        .F      MOV      r2,r0
        0x00000c78:    460b        .F      MOV      r3,r1
        0x00000c7a:    2400        .$      MOVS     r4,#0
        0x00000c7c:    ea820104    ....    EOR      r1,r2,r4
        0x00000c80:    405c        \@      EORS     r4,r4,r3
        0x00000c82:    4321        !C      ORRS     r1,r1,r4
        0x00000c84:    d101        ..      BNE      0xc8a ; ndigits_in_hex + 22
        0x00000c86:    2101        .!      MOVS     r1,#1
        0x00000c88:    e000        ..      B        0xc8c ; ndigits_in_hex + 24
        0x00000c8a:    2100        .!      MOVS     r1,#0
        0x00000c8c:    4608        .F      MOV      r0,r1
        0x00000c8e:    e004        ..      B        0xc9a ; ndigits_in_hex + 38
        0x00000c90:    0911        ..      LSRS     r1,r2,#4
        0x00000c92:    ea417203    A..r    ORR      r2,r1,r3,LSL #28
        0x00000c96:    091b        ..      LSRS     r3,r3,#4
        0x00000c98:    1c40        @.      ADDS     r0,r0,#1
        0x00000c9a:    2400        .$      MOVS     r4,#0
        0x00000c9c:    ea820104    ....    EOR      r1,r2,r4
        0x00000ca0:    405c        \@      EORS     r4,r4,r3
        0x00000ca2:    4321        !C      ORRS     r1,r1,r4
        0x00000ca4:    d1f4        ..      BNE      0xc90 ; ndigits_in_hex + 28
        0x00000ca6:    bd30        0.      POP      {r4,r5,pc}
    i.ndigits_in_i64
    ndigits_in_i64
        0x00000ca8:    b570        p.      PUSH     {r4-r6,lr}
        0x00000caa:    4604        .F      MOV      r4,r0
        0x00000cac:    460d        .F      MOV      r5,r1
        0x00000cae:    2100        .!      MOVS     r1,#0
        0x00000cb0:    4608        .F      MOV      r0,r1
        0x00000cb2:    1a61        a.      SUBS     r1,r4,r1
        0x00000cb4:    eb750000    u...    SBCS     r0,r5,r0
        0x00000cb8:    da03        ..      BGE      0xcc2 ; ndigits_in_i64 + 26
        0x00000cba:    2200        ."      MOVS     r2,#0
        0x00000cbc:    4264        dB      RSBS     r4,r4,#0
        0x00000cbe:    eb620505    b...    SBC      r5,r2,r5
        0x00000cc2:    4620         F      MOV      r0,r4
        0x00000cc4:    4629        )F      MOV      r1,r5
        0x00000cc6:    f000f801    ....    BL       ndigits_in_u64 ; 0xccc
        0x00000cca:    bd70        p.      POP      {r4-r6,pc}
    i.ndigits_in_u64
    ndigits_in_u64
        0x00000ccc:    b570        p.      PUSH     {r4-r6,lr}
        0x00000cce:    4604        .F      MOV      r4,r0
        0x00000cd0:    460d        .F      MOV      r5,r1
        0x00000cd2:    2100        .!      MOVS     r1,#0
        0x00000cd4:    ea840001    ....    EOR      r0,r4,r1
        0x00000cd8:    4069        i@      EORS     r1,r1,r5
        0x00000cda:    4308        .C      ORRS     r0,r0,r1
        0x00000cdc:    d101        ..      BNE      0xce2 ; ndigits_in_u64 + 22
        0x00000cde:    2001        .       MOVS     r0,#1
        0x00000ce0:    e000        ..      B        0xce4 ; ndigits_in_u64 + 24
        0x00000ce2:    2000        .       MOVS     r0,#0
        0x00000ce4:    4606        .F      MOV      r6,r0
        0x00000ce6:    e006        ..      B        0xcf6 ; ndigits_in_u64 + 42
        0x00000ce8:    4620         F      MOV      r0,r4
        0x00000cea:    4629        )F      MOV      r1,r5
        0x00000cec:    f7fffe75    ..u.    BL       divu64_10 ; 0x9da
        0x00000cf0:    4604        .F      MOV      r4,r0
        0x00000cf2:    460d        .F      MOV      r5,r1
        0x00000cf4:    1c76        v.      ADDS     r6,r6,#1
        0x00000cf6:    2100        .!      MOVS     r1,#0
        0x00000cf8:    ea840001    ....    EOR      r0,r4,r1
        0x00000cfc:    4069        i@      EORS     r1,r1,r5
        0x00000cfe:    4308        .C      ORRS     r0,r0,r1
        0x00000d00:    d1f2        ..      BNE      0xce8 ; ndigits_in_u64 + 28
        0x00000d02:    4630        0F      MOV      r0,r6
        0x00000d04:    bd70        p.      POP      {r4-r6,pc}
    i.padbuffer
    padbuffer
        0x00000d06:    b530        0.      PUSH     {r4,r5,lr}
        0x00000d08:    4603        .F      MOV      r3,r0
        0x00000d0a:    2000        .       MOVS     r0,#0
        0x00000d0c:    2a00        .*      CMP      r2,#0
        0x00000d0e:    dc00        ..      BGT      0xd12 ; padbuffer + 12
        0x00000d10:    bd30        0.      POP      {r4,r5,pc}
        0x00000d12:    e003        ..      B        0xd1c ; padbuffer + 22
        0x00000d14:    b10b        ..      CBZ      r3,0xd1a ; padbuffer + 20
        0x00000d16:    f8031b01    ....    STRB     r1,[r3],#1
        0x00000d1a:    1c40        @.      ADDS     r0,r0,#1
        0x00000d1c:    1e14        ..      SUBS     r4,r2,#0
        0x00000d1e:    f1a20201    ....    SUB      r2,r2,#1
        0x00000d22:    d1f7        ..      BNE      0xd14 ; padbuffer + 14
        0x00000d24:    bf00        ..      NOP      
        0x00000d26:    e7f3        ..      B        0xd10 ; padbuffer + 10
    i.simple_strlen
    simple_strlen
        0x00000d28:    4601        .F      MOV      r1,r0
        0x00000d2a:    2000        .       MOVS     r0,#0
        0x00000d2c:    b901        ..      CBNZ     r1,0xd30 ; simple_strlen + 8
        0x00000d2e:    4770        pG      BX       lr
        0x00000d30:    e000        ..      B        0xd34 ; simple_strlen + 12
        0x00000d32:    1c40        @.      ADDS     r0,r0,#1
        0x00000d34:    f8113b01    ...;    LDRB     r3,[r1],#1
        0x00000d38:    2b00        .+      CMP      r3,#0
        0x00000d3a:    d1fa        ..      BNE      0xd32 ; simple_strlen + 10
        0x00000d3c:    bf00        ..      NOP      
        0x00000d3e:    e7f6        ..      B        0xd2e ; simple_strlen + 6
    i.uart_disable
    uart_disable
        0x00000d40:    b510        ..      PUSH     {r4,lr}
        0x00000d42:    4604        .F      MOV      r4,r0
        0x00000d44:    200a        .       MOVS     r0,#0xa
        0x00000d46:    f7fffbb3    ....    BL       am_util_delay_ms ; 0x4b0
        0x00000d4a:    4620         F      MOV      r0,r4
        0x00000d4c:    f7fffb7a    ..z.    BL       am_hal_uart_disable ; 0x444
        0x00000d50:    4620         F      MOV      r0,r4
        0x00000d52:    f7fffb2d    ..-.    BL       am_hal_uart_clock_disable ; 0x3b0
        0x00000d56:    bf00        ..      NOP      
        0x00000d58:    2073        s       MOVS     r0,#0x73
        0x00000d5a:    4912        .I      LDR      r1,[pc,#72] ; [0xda4] = 0x40010000
        0x00000d5c:    6608        .f      STR      r0,[r1,#0x60]
        0x00000d5e:    4608        .F      MOV      r0,r1
        0x00000d60:    6d00        .m      LDR      r0,[r0,#0x50]
        0x00000d62:    f42040e0     ..@    BIC      r0,r0,#0x7000
        0x00000d66:    6508        .e      STR      r0,[r1,#0x50]
        0x00000d68:    4608        .F      MOV      r0,r1
        0x00000d6a:    6a00        .j      LDR      r0,[r0,#0x20]
        0x00000d6c:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x00000d70:    f04050c0    @..P    ORR      r0,r0,#0x18000000
        0x00000d74:    6208        .b      STR      r0,[r1,#0x20]
        0x00000d76:    2000        .       MOVS     r0,#0
        0x00000d78:    6608        .f      STR      r0,[r1,#0x60]
        0x00000d7a:    bf00        ..      NOP      
        0x00000d7c:    bf00        ..      NOP      
        0x00000d7e:    2073        s       MOVS     r0,#0x73
        0x00000d80:    6608        .f      STR      r0,[r1,#0x60]
        0x00000d82:    4608        .F      MOV      r0,r1
        0x00000d84:    6d00        .m      LDR      r0,[r0,#0x50]
        0x00000d86:    f42020e0     ..     BIC      r0,r0,#0x70000
        0x00000d8a:    6508        .e      STR      r0,[r1,#0x50]
        0x00000d8c:    4608        .F      MOV      r0,r1
        0x00000d8e:    6a40        @j      LDR      r0,[r0,#0x24]
        0x00000d90:    f02000ff     ...    BIC      r0,r0,#0xff
        0x00000d94:    f0400018    @...    ORR      r0,r0,#0x18
        0x00000d98:    6248        Hb      STR      r0,[r1,#0x24]
        0x00000d9a:    2000        .       MOVS     r0,#0
        0x00000d9c:    6608        .f      STR      r0,[r1,#0x60]
        0x00000d9e:    bf00        ..      NOP      
        0x00000da0:    bd10        ..      POP      {r4,pc}
    $d
        0x00000da2:    0000        ..      DCW    0
        0x00000da4:    40010000    ...@    DCD    1073807360
    $t
    i.uart_init
    uart_init
        0x00000da8:    b510        ..      PUSH     {r4,lr}
        0x00000daa:    4604        .F      MOV      r4,r0
        0x00000dac:    bf00        ..      NOP      
        0x00000dae:    2073        s       MOVS     r0,#0x73
        0x00000db0:    491a        .I      LDR      r1,[pc,#104] ; [0xe1c] = 0x40010000
        0x00000db2:    6608        .f      STR      r0,[r1,#0x60]
        0x00000db4:    4608        .F      MOV      r0,r1
        0x00000db6:    6d00        .m      LDR      r0,[r0,#0x50]
        0x00000db8:    f42040e0     ..@    BIC      r0,r0,#0x7000
        0x00000dbc:    6508        .e      STR      r0,[r1,#0x50]
        0x00000dbe:    4608        .F      MOV      r0,r1
        0x00000dc0:    6a00        .j      LDR      r0,[r0,#0x20]
        0x00000dc2:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x00000dc6:    f0405080    @..P    ORR      r0,r0,#0x10000000
        0x00000dca:    6208        .b      STR      r0,[r1,#0x20]
        0x00000dcc:    2000        .       MOVS     r0,#0
        0x00000dce:    6608        .f      STR      r0,[r1,#0x60]
        0x00000dd0:    bf00        ..      NOP      
        0x00000dd2:    bf00        ..      NOP      
        0x00000dd4:    2073        s       MOVS     r0,#0x73
        0x00000dd6:    6608        .f      STR      r0,[r1,#0x60]
        0x00000dd8:    4608        .F      MOV      r0,r1
        0x00000dda:    6d00        .m      LDR      r0,[r0,#0x50]
        0x00000ddc:    f42020e0     ..     BIC      r0,r0,#0x70000
        0x00000de0:    6508        .e      STR      r0,[r1,#0x50]
        0x00000de2:    4608        .F      MOV      r0,r1
        0x00000de4:    6a40        @j      LDR      r0,[r0,#0x24]
        0x00000de6:    f02000ff     ...    BIC      r0,r0,#0xff
        0x00000dea:    f0400012    @...    ORR      r0,r0,#0x12
        0x00000dee:    6248        Hb      STR      r0,[r1,#0x24]
        0x00000df0:    2000        .       MOVS     r0,#0
        0x00000df2:    6608        .f      STR      r0,[r1,#0x60]
        0x00000df4:    bf00        ..      NOP      
        0x00000df6:    4620         F      MOV      r0,r4
        0x00000df8:    f7fffae8    ....    BL       am_hal_uart_clock_enable ; 0x3cc
        0x00000dfc:    4620         F      MOV      r0,r4
        0x00000dfe:    f7fffb21    ..!.    BL       am_hal_uart_disable ; 0x444
        0x00000e02:    4907        .I      LDR      r1,[pc,#28] ; [0xe20] = 0x10000000
        0x00000e04:    4620         F      MOV      r0,r4
        0x00000e06:    f7fffaf3    ....    BL       am_hal_uart_config ; 0x3f0
        0x00000e0a:    2112        .!      MOVS     r1,#0x12
        0x00000e0c:    4620         F      MOV      r0,r4
        0x00000e0e:    f7fffb2d    ..-.    BL       am_hal_uart_fifo_config ; 0x46c
        0x00000e12:    4620         F      MOV      r0,r4
        0x00000e14:    f7fffb20    .. .    BL       am_hal_uart_enable ; 0x458
        0x00000e18:    bd10        ..      POP      {r4,pc}
    $d
        0x00000e1a:    0000        ..      DCW    0
        0x00000e1c:    40010000    ...@    DCD    1073807360
        0x00000e20:    10000000    ....    DCD    268435456
    $t
    i.uint64_to_hexstr
    uint64_to_hexstr
        0x00000e24:    e92d41f0    -..A    PUSH     {r4-r8,lr}
        0x00000e28:    b085        ..      SUB      sp,sp,#0x14
        0x00000e2a:    4604        .F      MOV      r4,r0
        0x00000e2c:    460d        .F      MOV      r5,r1
        0x00000e2e:    461e        .F      MOV      r6,r3
        0x00000e30:    2100        .!      MOVS     r1,#0
        0x00000e32:    468c        .F      MOV      r12,r1
        0x00000e34:    ea84070c    ....    EOR      r7,r4,r12
        0x00000e38:    ea850c0c    ....    EOR      r12,r5,r12
        0x00000e3c:    ea57070c    W...    ORRS     r7,r7,r12
        0x00000e40:    d105        ..      BNE      0xe4e ; uint64_to_hexstr + 42
        0x00000e42:    f04f0830    O.0.    MOV      r8,#0x30
        0x00000e46:    460f        .F      MOV      r7,r1
        0x00000e48:    1c49        I.      ADDS     r1,r1,#1
        0x00000e4a:    f80d8007    ....    STRB     r8,[sp,r7]
        0x00000e4e:    e016        ..      B        0xe7e ; uint64_to_hexstr + 90
        0x00000e50:    270f        .'      MOVS     r7,#0xf
        0x00000e52:    4027        '@      ANDS     r7,r7,r4
        0x00000e54:    b2fb        ..      UXTB     r3,r7
        0x00000e56:    2b09        .+      CMP      r3,#9
        0x00000e58:    dd05        ..      BLE      0xe66 ; uint64_to_hexstr + 66
        0x00000e5a:    b10e        ..      CBZ      r6,0xe60 ; uint64_to_hexstr + 60
        0x00000e5c:    2727        ''      MOVS     r7,#0x27
        0x00000e5e:    e000        ..      B        0xe62 ; uint64_to_hexstr + 62
        0x00000e60:    2707        .'      MOVS     r7,#7
        0x00000e62:    441f        .D      ADD      r7,r7,r3
        0x00000e64:    b2fb        ..      UXTB     r3,r7
        0x00000e66:    f1030730    ..0.    ADD      r7,r3,#0x30
        0x00000e6a:    f00708ff    ....    AND      r8,r7,#0xff
        0x00000e6e:    460f        .F      MOV      r7,r1
        0x00000e70:    1c49        I.      ADDS     r1,r1,#1
        0x00000e72:    f80d8007    ....    STRB     r8,[sp,r7]
        0x00000e76:    0927        '.      LSRS     r7,r4,#4
        0x00000e78:    ea477405    G..t    ORR      r4,r7,r5,LSL #28
        0x00000e7c:    092d        -.      LSRS     r5,r5,#4
        0x00000e7e:    f04f0c00    O...    MOV      r12,#0
        0x00000e82:    ea84070c    ....    EOR      r7,r4,r12
        0x00000e86:    ea850c0c    ....    EOR      r12,r5,r12
        0x00000e8a:    ea57070c    W...    ORRS     r7,r7,r12
        0x00000e8e:    d1df        ..      BNE      0xe50 ; uint64_to_hexstr + 44
        0x00000e90:    4608        .F      MOV      r0,r1
        0x00000e92:    b14a        J.      CBZ      r2,0xea8 ; uint64_to_hexstr + 132
        0x00000e94:    e003        ..      B        0xe9e ; uint64_to_hexstr + 122
        0x00000e96:    f81d7001    ...p    LDRB     r7,[sp,r1]
        0x00000e9a:    f8027b01    ...{    STRB     r7,[r2],#1
        0x00000e9e:    1e0f        ..      SUBS     r7,r1,#0
        0x00000ea0:    f1a10101    ....    SUB      r1,r1,#1
        0x00000ea4:    d1f7        ..      BNE      0xe96 ; uint64_to_hexstr + 114
        0x00000ea6:    7017        .p      STRB     r7,[r2,#0]
        0x00000ea8:    b005        ..      ADD      sp,sp,#0x14
        0x00000eaa:    e8bd81f0    ....    POP      {r4-r8,pc}
    i.uint64_to_str
    uint64_to_str
        0x00000eae:    e92d4ff0    -..O    PUSH     {r4-r11,lr}
        0x00000eb2:    b087        ..      SUB      sp,sp,#0x1c
        0x00000eb4:    4607        .F      MOV      r7,r0
        0x00000eb6:    4688        .F      MOV      r8,r1
        0x00000eb8:    4616        .F      MOV      r6,r2
        0x00000eba:    f04f0900    O...    MOV      r9,#0
        0x00000ebe:    46cb        .F      MOV      r11,r9
        0x00000ec0:    bf00        ..      NOP      
        0x00000ec2:    4638        8F      MOV      r0,r7
        0x00000ec4:    4641        AF      MOV      r1,r8
        0x00000ec6:    f7fffd88    ....    BL       divu64_10 ; 0x9da
        0x00000eca:    4604        .F      MOV      r4,r0
        0x00000ecc:    460d        .F      MOV      r5,r1
        0x00000ece:    210a        .!      MOVS     r1,#0xa
        0x00000ed0:    fba40101    ....    UMULL    r0,r1,r4,r1
        0x00000ed4:    ebb70a00    ....    SUBS     r10,r7,r0
        0x00000ed8:    f10a0030    ..0.    ADD      r0,r10,#0x30
        0x00000edc:    b2c2        ..      UXTB     r2,r0
        0x00000ede:    4648        HF      MOV      r0,r9
        0x00000ee0:    f1090901    ....    ADD      r9,r9,#1
        0x00000ee4:    f80d2000    ...     STRB     r2,[sp,r0]
        0x00000ee8:    4627        'F      MOV      r7,r4
        0x00000eea:    46a8        .F      MOV      r8,r5
        0x00000eec:    f04f0200    O...    MOV      r2,#0
        0x00000ef0:    ea870002    ....    EOR      r0,r7,r2
        0x00000ef4:    ea880102    ....    EOR      r1,r8,r2
        0x00000ef8:    4308        .C      ORRS     r0,r0,r1
        0x00000efa:    d1e2        ..      BNE      0xec2 ; uint64_to_str + 20
        0x00000efc:    46cb        .F      MOV      r11,r9
        0x00000efe:    b156        V.      CBZ      r6,0xf16 ; uint64_to_str + 104
        0x00000f00:    e003        ..      B        0xf0a ; uint64_to_str + 92
        0x00000f02:    f81d0009    ....    LDRB     r0,[sp,r9]
        0x00000f06:    f8060b01    ....    STRB     r0,[r6],#1
        0x00000f0a:    f1b90000    ....    SUBS     r0,r9,#0
        0x00000f0e:    f1a90901    ....    SUB      r9,r9,#1
        0x00000f12:    d1f6        ..      BNE      0xf02 ; uint64_to_str + 84
        0x00000f14:    7030        0p      STRB     r0,[r6,#0]
        0x00000f16:    4658        XF      MOV      r0,r11
        0x00000f18:    b007        ..      ADD      sp,sp,#0x1c
        0x00000f1a:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000f1e:    0000        ..      MOVS     r0,r0
    x$fpl$d2f
    $v0
    __aeabi_d2f
    _d2f
        0x00000f20:    f0214200    !..B    BIC      r2,r1,#0x80000000
        0x00000f24:    f1a25260    ..`R    SUB      r2,r2,#0x38000000
        0x00000f28:    f5b21f80    ....    CMP      r2,#0x100000
        0x00000f2c:    f0014300    ...C    AND      r3,r1,#0x80000000
        0x00000f30:    bf28        (.      IT       CS
        0x00000f32:    f1d26c7f    ...l    RSBSCS   r12,r2,#0xff00000
        0x00000f36:    d90b        ..      BLS      0xf50 ; __aeabi_d2f + 48
        0x00000f38:    ea5f1c00    _...    LSLS     r12,r0,#4
        0x00000f3c:    ea4302c2    C...    ORR      r2,r3,r2,LSL #3
        0x00000f40:    eb427050    B.Pp    ADC      r0,r2,r0,LSR #29
        0x00000f44:    bf18        ..      IT       NE
        0x00000f46:    4770        pG      BXNE     lr
        0x00000f48:    bf28        (.      IT       CS
        0x00000f4a:    f0200001     ...    BICCS    r0,r0,#1
        0x00000f4e:    4770        pG      BX       lr
        0x00000f50:    f5b21f80    ....    CMP      r2,#0x100000
        0x00000f54:    bfbc        ..      ITT      LT
        0x00000f56:    4618        .F      MOVLT    r0,r3
        0x00000f58:    4770        pG      BXLT     lr
        0x00000f5a:    ea4f0c41    O.A.    LSL      r12,r1,#1
        0x00000f5e:    f51c1f00    ....    CMN      r12,#0x200000
        0x00000f62:    d202        ..      BCS      0xf6a ; __aeabi_d2f + 74
        0x00000f64:    4608        .F      MOV      r0,r1
        0x00000f66:    f000b85f    .._.    B.W      __fpl_fretinf ; 0x1028
        0x00000f6a:    b570        p.      PUSH     {r4-r6,lr}
        0x00000f6c:    f000f809    ....    BL       __fpl_dnaninf ; 0xf82
    $d
        0x00000f70:    89000000    ....    DCD    2298478592
    $t
        0x00000f74:    f7ffbff6    ....    B.W      0xf64 ; __aeabi_d2f + 68
        0x00000f78:    f04f4000    O..@    MOV      r0,#0x80000000
        0x00000f7c:    f5a00080    ....    SUB      r0,r0,#0x400000
        0x00000f80:    4770        pG      BX       lr
    x$fpl$dnaninf
    $v0
    __fpl_dnaninf
        0x00000f82:    f10e0e02    ....    ADD      lr,lr,#2
        0x00000f86:    f02e0e03    ....    BIC      lr,lr,#3
        0x00000f8a:    f85e6b04    ^..k    LDR      r6,[lr],#4
        0x00000f8e:    4236        6B      TST      r6,r6
        0x00000f90:    d405        ..      BMI      0xf9e ; __fpl_dnaninf + 28
        0x00000f92:    2a01        .*      CMP      r2,#1
        0x00000f94:    eb430503    C...    ADC      r5,r3,r3
        0x00000f98:    f5151f00    ....    CMN      r5,#0x200000
        0x00000f9c:    d812        ..      BHI      0xfc4 ; __fpl_dnaninf + 66
        0x00000f9e:    2801        .(      CMP      r0,#1
        0x00000fa0:    eb410c01    A...    ADC      r12,r1,r1
        0x00000fa4:    f51c1f00    ....    CMN      r12,#0x200000
        0x00000fa8:    d80c        ..      BHI      0xfc4 ; __fpl_dnaninf + 66
        0x00000faa:    d10e        ..      BNE      0xfca ; __fpl_dnaninf + 72
        0x00000fac:    ea4f7cd1    O..|    LSR      r12,r1,#31
        0x00000fb0:    f5151f00    ....    CMN      r5,#0x200000
        0x00000fb4:    eb0c0c4c    ..L.    ADD      r12,r12,r12,LSL #1
        0x00000fb8:    f10c0c02    ....    ADD      r12,r12,#2
        0x00000fbc:    bf08        ..      IT       EQ
        0x00000fbe:    eb4c7cd3    L..|    ADCEQ    r12,r12,r3,LSR #31
        0x00000fc2:    e004        ..      B        0xfce ; __fpl_dnaninf + 76
        0x00000fc4:    f04f0c08    O...    MOV      r12,#8
        0x00000fc8:    e001        ..      B        0xfce ; __fpl_dnaninf + 76
        0x00000fca:    ea4f7cd3    O..|    LSR      r12,r3,#31
        0x00000fce:    eb0c054c    ..L.    ADD      r5,r12,r12,LSL #1
        0x00000fd2:    fa26f605    &...    LSR      r6,r6,r5
        0x00000fd6:    f0060607    ....    AND      r6,r6,#7
        0x00000fda:    f1b60c04    ....    SUBS     r12,r6,#4
        0x00000fde:    d206        ..      BCS      0xfee ; __fpl_dnaninf + 108
        0x00000fe0:    eb0e0c86    ....    ADD      r12,lr,r6,LSL #2
        0x00000fe4:    e8bd4070    ..p@    POP      {r4-r6,lr}
        0x00000fe8:    f04c0c01    L...    ORR      r12,r12,#1
        0x00000fec:    4760        `G      BX       r12
        0x00000fee:    e8dff00c    ....    TBB      [pc,r12]
    $d
        0x00000ff2:    0b09        ..      DCW    2825
        0x00000ff4:    0202        ..      DCW    514
    $t
        0x00000ff6:    f04f4100    O..A    MOV      r1,#0x80000000
        0x00000ffa:    f04f0000    O...    MOV      r0,#0
        0x00000ffe:    f5a12100    ...!    SUB      r1,r1,#0x80000
        0x00001002:    bd70        p.      POP      {r4-r6,pc}
        0x00001004:    4619        .F      MOV      r1,r3
        0x00001006:    4610        .F      MOV      r0,r2
        0x00001008:    2801        .(      CMP      r0,#1
        0x0000100a:    eb510401    Q...    ADCS     r4,r1,r1
        0x0000100e:    bf18        ..      IT       NE
        0x00001010:    f5d41400    ....    RSBSNE   r4,r4,#0x200000
        0x00001014:    bf84        ..      ITT      HI
        0x00001016:    2000        .       MOVHI    r0,#0
        0x00001018:    f0014100    ...A    ANDHI    r1,r1,#0x80000000
        0x0000101c:    bd70        p.      POP      {r4-r6,pc}
    x$fpl$fpinit
    $v0
    _fp_init
        0x0000101e:    f04f7040    O.@p    MOV      r0,#0x3000000
        0x00001022:    eee10a10    ....    VMSR     FPSCR,r0
    __fplib_config_fpu_vfp
    __fplib_config_pureend_doubles
        0x00001026:    4770        pG      BX       lr
    x$fpl$fretinf
    $v0
    __fpl_fretinf
        0x00001028:    21ff        .!      MOVS     r1,#0xff
        0x0000102a:    ea4150d0    A..P    ORR      r0,r1,r0,LSR #23
        0x0000102e:    05c0        ..      LSLS     r0,r0,#23
        0x00001030:    4770        pG      BX       lr
    x$fpl$usenofp
    __I$use$fp
        0x00001032:    0000        ..      MOVS     r0,r0
    $d.realdata
    Region$$Table$$Base
        0x00001034:    00001054    T...    DCD    4180
        0x00001038:    10000000    ....    DCD    268435456
        0x0000103c:    00000020     ...    DCD    32
        0x00001040:    000000d4    ....    DCD    212
        0x00001044:    00001074    t...    DCD    4212
        0x00001048:    10000020     ...    DCD    268435488
        0x0000104c:    00001160    `...    DCD    4448
        0x00001050:    000000f0    ....    DCD    240
    Region$$Table$$Limit

** Section #2 'SRAM' (SHT_PROGBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 32 bytes (alignment 4)
    Address: 0x10000000

    0x10000000:   00 c2 01 00 60 00 00 00 00 00 00 00 00 00 00 00    ....`...........
    0x10000010:   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................


** Section #3 'SRAM' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4448 bytes (alignment 8)
    Address: 0x10000020


** Section #4 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 1476 bytes


** Section #5 '.debug_frame' (SHT_PROGBITS)
    Size   : 2360 bytes


** Section #6 '.debug_info' (SHT_PROGBITS)
    Size   : 11528 bytes


** Section #7 '.debug_line' (SHT_PROGBITS)
    Size   : 4628 bytes


** Section #8 '.debug_loc' (SHT_PROGBITS)
    Size   : 2084 bytes


** Section #9 '.debug_macinfo' (SHT_PROGBITS)
    Size   : 6312 bytes


** Section #10 '.debug_pubnames' (SHT_PROGBITS)
    Size   : 522 bytes


** Section #11 '.symtab' (SHT_SYMTAB)
    Size   : 6560 bytes (alignment 4)
    String table #12 '.strtab'
    Last local symbol no. 275

    Symbol table .symtab (409 symbols, 275 local)

      #  Symbol Name                Value      Bind  Sec  Type  Vis  Size
    ========================================================================

      1  $d                         0x00000000   Lc    1   --   De 
      2  $t                         0x00000070   Lc    1   --   De 
      3  $d                         0x00000094   Lc    1   --   De 
      4  $t                         0x00000098   Lc    1   --   De 
      5  $d                         0x000000cc   Lc    1   --   De 
      6  $t                         0x000000d4   Lc    1   --   De 
      7  $d                         0x0000015e   Lc    1   --   De 
      8  $t                         0x0000016c   Lc    1   --   De 
      9  $d                         0x00000220   Lc    1   --   De 
     10  $t                         0x00000224   Lc    1   --   De 
     11  $d                         0x0000022c   Lc    1   --   De 
     12  $t                         0x00000230   Lc    1   --   De 
     13  $d                         0x00000282   Lc    1   --   De 
     14  $t                         0x0000028a   Lc    1   --   De 
     15  $d                         0x000002b0   Lc    1   --   De 
     16  $t                         0x000002d0   Lc    1   --   De 
     17  $d                         0x000002ec   Lc    1   --   De 
     18  $t                         0x000002f0   Lc    1   --   De 
     19  $d                         0x00000314   Lc    1   --   De 
     20  $t                         0x00000318   Lc    1   --   De 
     21  $d                         0x0000034c   Lc    1   --   De 
     22  $t                         0x00000350   Lc    1   --   De 
     23  $d                         0x0000035c   Lc    1   --   De 
     24  $t                         0x00000360   Lc    1   --   De 
     25  $d                         0x000003a8   Lc    1   --   De 
     26  $t                         0x000003b0   Lc    1   --   De 
     27  $d                         0x000003c8   Lc    1   --   De 
     28  $t                         0x000003cc   Lc    1   --   De 
     29  $d                         0x000003ec   Lc    1   --   De 
     30  $t                         0x000003f0   Lc    1   --   De 
     31  $d                         0x0000043e   Lc    1   --   De 
     32  $t                         0x00000444   Lc    1   --   De 
     33  $d                         0x00000454   Lc    1   --   De 
     34  $t                         0x00000458   Lc    1   --   De 
     35  $d                         0x00000466   Lc    1   --   De 
     36  $t                         0x0000046c   Lc    1   --   De 
     37  $d                         0x0000047a   Lc    1   --   De 
     38  $t                         0x00000480   Lc    1   --   De 
     39  $d                         0x000004a0   Lc    1   --   De 
     40  $t                         0x000004a4   Lc    1   --   De 
     41  $d                         0x000004ac   Lc    1   --   De 
     42  $t                         0x000004b0   Lc    1   --   De 
     43  $d                         0x00000582   Lc    1   --   De 
     44  $t                         0x00000588   Lc    1   --   De 
     45  $d                         0x000005b0   Lc    1   --   De 
     46  $t                         0x000005b8   Lc    1   --   De 
     47  $d                         0x000005be   Lc    1   --   De 
     48  $t                         0x000005c4   Lc    1   --   De 
     49  $d                         0x000005ce   Lc    1   --   De 
     50  $t                         0x000005e4   Lc    1   --   De 
     51  $d                         0x00000988   Lc    1   --   De 
     52  $t                         0x00000998   Lc    1   --   De 
     53  $d                         0x00000c1a   Lc    1   --   De 
     54  $t                         0x00000c20   Lc    1   --   De 
     55  $d                         0x00000c5c   Lc    1   --   De 
     56  $t                         0x00000c74   Lc    1   --   De 
     57  $d                         0x00000da2   Lc    1   --   De 
     58  $t                         0x00000da8   Lc    1   --   De 
     59  $d                         0x00000e1a   Lc    1   --   De 
     60  $t                         0x00000e24   Lc    1   --   De 
     61  $d                         0x00000f70   Lc    1   --   De 
     62  $t                         0x00000f74   Lc    1   --   De 
     63  $d                         0x00000ff2   Lc    1   --   De 
     64  $t                         0x00000ff6   Lc    1   --   De 
     65  $d.realdata                0x00001034   Lc    1   --   De 
     66  $d.realdata                0x10000000   Lc    2   --   De 
     67  ../src/deepsleep.c         0x00000000   Lc  Abs  File  De 
     68  i.main                     0x00000c20   Lc    1  Sect  De 
     69  i.uart_disable             0x00000d40   Lc    1  Sect  De 
     70  i.uart_init                0x00000da8   Lc    1  Sect  De 
     71  .data                      0x10000000   Lc    2  Sect  De   0x14
     72  ../../../../../utils/am_util_delay.c
                                    0x00000000   Lc  Abs  File  De 
     73  i.am_util_delay_ms         0x000004b0   Lc    1  Sect  De 
     74  ..\..\..\..\..\utils\am_util_faultisr.c
                                    0x00000000   Lc  Abs  File  De 
     75  .emb_text                  0x00000138   Lc    1  Sect  De   0x14
     76  $v0                        0x00000138   Lc    1   --   De 
     77  ../../../../../utils/am_util_faultisr.c
                                    0x00000000   Lc  Abs  File  De 
     78  i.am_util_faultisr_collect_data
                                    0x000004d0   Lc    1  Sect  De 
     79  ../../../../../utils/am_util_stdio.c
                                    0x00000000   Lc  Abs  File  De 
     80  i.am_util_stdio_printf     0x00000588   Lc    1  Sect  De 
     81  i.am_util_stdio_printf_init
                                    0x000005b8   Lc    1  Sect  De 
     82  i.am_util_stdio_terminal_clear
                                    0x000005c4   Lc    1  Sect  De 
     83  i.am_util_stdio_vsprintf   0x000005e4   Lc    1  Sect  De 
     84  i.decstr_to_int            0x00000998   Lc    1  Sect  De 
     85  decstr_to_int              0x00000999   Lc    1  Code  De   0x42
     86  i.divu64_10                0x000009da   Lc    1  Sect  De 
     87  divu64_10                  0x000009db   Lc    1  Code  De   0xcc
     88  i.ftoa                     0x00000aa8   Lc    1  Sect  De 
     89  ftoa                       0x00000aa9   Lc    1  Code  De   0x172
     90  i.ndigits_in_hex           0x00000c74   Lc    1  Sect  De 
     91  ndigits_in_hex             0x00000c75   Lc    1  Code  De   0x34
     92  i.ndigits_in_i64           0x00000ca8   Lc    1  Sect  De 
     93  ndigits_in_i64             0x00000ca9   Lc    1  Code  De   0x24
     94  i.ndigits_in_u64           0x00000ccc   Lc    1  Sect  De 
     95  ndigits_in_u64             0x00000ccd   Lc    1  Code  De   0x3a
     96  i.padbuffer                0x00000d06   Lc    1  Sect  De 
     97  padbuffer                  0x00000d07   Lc    1  Code  De   0x22
     98  i.simple_strlen            0x00000d28   Lc    1  Sect  De 
     99  simple_strlen              0x00000d29   Lc    1  Code  De   0x18
    100  i.uint64_to_hexstr         0x00000e24   Lc    1  Sect  De 
    101  uint64_to_hexstr           0x00000e25   Lc    1  Code  De   0x8a
    102  i.uint64_to_str            0x00000eae   Lc    1  Sect  De 
    103  uint64_to_str              0x00000eaf   Lc    1  Code  De   0x70
    104  .bss                       0x10000020   Lc    3  Sect  De   0x100
    105  g_prfbuf                   0x10000020   Lc    3  Data  De   0x100
    106  .data                      0x10000014   Lc    2  Sect  De   0x5
    107  g_bTxtXlate                0x10000018   Lc    2  Data  De   0x1
    108  ../keil/startup_keil.s     0x00000000   Lc  Abs  File  De 
    109  STACK                      0x10000180   Lc    3  Sect  De   0x1000
    110  StackMem                   0x10000180   Lc    3  Data  De 
    111  HEAP                       0x10000180   Lc    3  Sect  De 
    112  HeapMem                    0x10000180   Lc    3  Data  De 
    113  RESET                      0x00000000   Lc    1  Sect  De   0x98
    114  $v0                        0x00000070   Lc    1   --   De 
    115  .text                      0x00000154   Lc    1  Sect  De   0x18
    116  $v0                        0x00000154   Lc    1   --   De 
    117  ../am_hal_global.c         0x00000000   Lc  Abs  File  De 
    118  .data                      0x1000001c   Lc    2  Sect  De   0x4
    119  ../am_bsp.c                0x00000000   Lc  Abs  File  De 
    120  i.am_bsp_low_power_init    0x00000232   Lc    1  Sect  De 
    121  i.am_bsp_uart_string_print 0x00000254   Lc    1  Sect  De 
    122  ../am_hal_clkgen.c         0x00000000   Lc  Abs  File  De 
    123  i.am_hal_clkgen_osc_stop   0x0000025c   Lc    1  Sect  De 
    124  i.am_hal_clkgen_sysclk_get 0x00000270   Lc    1  Sect  De 
    125  i.am_hal_clkgen_sysclk_select
                                    0x000002d0   Lc    1  Sect  De 
    126  ..\am_hal_flash.c          0x00000000   Lc  Abs  File  De 
    127  .emb_text                  0x0000014c   Lc    1  Sect  De   0x6
    128  $v0                        0x0000014c   Lc    1   --   De 
    129  ../am_hal_flash.c          0x00000000   Lc  Abs  File  De 
    130  ../am_hal_mcuctrl.c        0x00000000   Lc  Abs  File  De 
    131  i.am_hal_mcuctrl_bandgap_disable
                                    0x000002e0   Lc    1  Sect  De 
    132  i.am_hal_mcuctrl_bucks_enable
                                    0x000002f0   Lc    1  Sect  De 
    133  i.am_hal_mcuctrl_fault_status
                                    0x00000318   Lc    1  Sect  De 
    134  i.am_hal_mcuctrl_sram_power_set
                                    0x00000350   Lc    1  Sect  De 
    135  ../am_hal_sysctrl.c        0x00000000   Lc  Abs  File  De 
    136  i.am_hal_sysctrl_sleep     0x00000384   Lc    1  Sect  De 
    137  ../am_hal_uart.c           0x00000000   Lc  Abs  File  De 
    138  i.am_hal_uart_clock_disable
                                    0x000003b0   Lc    1  Sect  De 
    139  i.am_hal_uart_clock_enable 0x000003cc   Lc    1  Sect  De 
    140  i.am_hal_uart_config       0x000003f0   Lc    1  Sect  De 
    141  i.am_hal_uart_disable      0x00000444   Lc    1  Sect  De 
    142  i.am_hal_uart_enable       0x00000458   Lc    1  Sect  De 
    143  i.am_hal_uart_fifo_config  0x0000046c   Lc    1  Sect  De 
    144  i.am_hal_uart_string_transmit_polled
                                    0x00000480   Lc    1  Sect  De 
    145  ../am_hal_gpio.c           0x00000000   Lc  Abs  File  De 
    146  ..\am_hal_interrupt.c      0x00000000   Lc  Abs  File  De 
    147  ../am_hal_interrupt.c      0x00000000   Lc  Abs  File  De 
    148  ../am_hal_iom.c            0x00000000   Lc  Abs  File  De 
    149  ../am_hal_itm.c            0x00000000   Lc  Abs  File  De 
    150  ../am_hal_rtc.c            0x00000000   Lc  Abs  File  De 
    151  i.am_hal_rtc_osc_disable   0x00000360   Lc    1  Sect  De 
    152  i.am_hal_rtc_osc_select    0x0000036e   Lc    1  Sect  De 
    153  ../am_hal_tpiu.c           0x00000000   Lc  Abs  File  De 
    154  ../am_hal_vcomp.c          0x00000000   Lc  Abs  File  De 
    155  i.am_hal_vcomp_disable     0x000004a4   Lc    1  Sect  De 
    156  ../am_hal_debug.c          0x00000000   Lc  Abs  File  De 
    157  ../am_hal_i2c_bit_bang.c   0x00000000   Lc  Abs  File  De 
    158  ../am_hal_queue.c          0x00000000   Lc  Abs  File  De 
    159  dc.s                       0x00000000   Lc  Abs  File  De 
    160  ../clib/memcpset.s         0x00000000   Lc  Abs  File  De 
    161  .text                      0x0000016c   Lc    1  Sect  De   0x4e
    162  ../clib/heapaux.c          0x00000000   Lc  Abs  File  De 
    163  .text                      0x000001ba   Lc    1  Sect  De 
    164  ../clib/angel/startup.s    0x00000000   Lc  Abs  File  De 
    165  !!!main                    0x00000098   Lc    1  Sect  De   0x8
    166  ../fplib/d2f.s             0x00000000   Lc  Abs  File  De 
    167  x$fpl$d2f                  0x00000f20   Lc    1  Sect  De   0x62
    168  $v0                        0x00000f20   Lc    1   --   De 
    169  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    170  .ARM.Collect$$rtentry$$00000000
                                    0x00000118   Lc    1  Sect  De 
    171  ../fplib/dnaninf.s         0x00000000   Lc  Abs  File  De 
    172  x$fpl$dnaninf              0x00000f82   Lc    1  Sect  De   0x9c
    173  $v0                        0x00000f82   Lc    1   --   De 
    174  ../fplib/fretinf.s         0x00000000   Lc  Abs  File  De 
    175  x$fpl$fretinf              0x00001028   Lc    1  Sect  De   0xa
    176  $v0                        0x00001028   Lc    1   --   De 
    177  ../fplib/usenofp.s         0x00000000   Lc  Abs  File  De 
    178  x$fpl$usenofp              0x00001032   Lc    1  Sect  De 
    179  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    180  .ARM.Collect$$rtentry$$00000002
                                    0x00000118   Lc    1  Sect  De 
    181  .ARM.Collect$$rtentry$$00000009
                                    0x0000011e   Lc    1  Sect  De 
    182  .ARM.Collect$$rtentry$$0000000A
                                    0x0000011e   Lc    1  Sect  De   0x4
    183  .ARM.Collect$$rtentry$$0000000C
                                    0x00000122   Lc    1  Sect  De 
    184  .ARM.Collect$$rtentry$$0000000D
                                    0x00000122   Lc    1  Sect  De   0x8
    185  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    186  .ARM.Collect$$rtentry$$00000004
                                    0x00000118   Lc    1  Sect  De   0x6
    187  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    188  .text                      0x000001c0   Lc    1  Sect  De   0x4a
    189  ../clib/stdlib.c           0x00000000   Lc  Abs  File  De 
    190  .text                      0x0000020a   Lc    1  Sect  De 
    191  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    192  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    193  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    194  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    195  .ARM.Collect$$libinit$$00000000
                                    0x0000010c   Lc    1  Sect  De   0x2
    196  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    197  .text                      0x0000021c   Lc    1  Sect  De   0x8
    198  .bss                       0x10000120   Lc    3  Sect  De   0x60
    199  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    200  .ARM.Collect$$rtexit$$00000000
                                    0x0000012a   Lc    1  Sect  De   0x2
    201  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    202  .ARM.Collect$$libinit$$00000001
                                    0x0000010e   Lc    1  Sect  De   0x4
    203  .ARM.Collect$$libinit$$00000004
                                    0x00000112   Lc    1  Sect  De 
    204  .ARM.Collect$$libinit$$0000000A
                                    0x00000112   Lc    1  Sect  De 
    205  .ARM.Collect$$libinit$$0000000C
                                    0x00000112   Lc    1  Sect  De 
    206  .ARM.Collect$$libinit$$0000000E
                                    0x00000112   Lc    1  Sect  De 
    207  .ARM.Collect$$libinit$$00000011
                                    0x00000112   Lc    1  Sect  De 
    208  .ARM.Collect$$libinit$$00000013
                                    0x00000112   Lc    1  Sect  De 
    209  .ARM.Collect$$libinit$$00000015
                                    0x00000112   Lc    1  Sect  De 
    210  .ARM.Collect$$libinit$$00000017
                                    0x00000112   Lc    1  Sect  De 
    211  .ARM.Collect$$libinit$$00000019
                                    0x00000112   Lc    1  Sect  De 
    212  .ARM.Collect$$libinit$$0000001B
                                    0x00000112   Lc    1  Sect  De 
    213  .ARM.Collect$$libinit$$0000001D
                                    0x00000112   Lc    1  Sect  De 
    214  .ARM.Collect$$libinit$$0000001F
                                    0x00000112   Lc    1  Sect  De 
    215  .ARM.Collect$$libinit$$00000021
                                    0x00000112   Lc    1  Sect  De 
    216  .ARM.Collect$$libinit$$00000023
                                    0x00000112   Lc    1  Sect  De 
    217  .ARM.Collect$$libinit$$00000025
                                    0x00000112   Lc    1  Sect  De 
    218  .ARM.Collect$$libinit$$0000002C
                                    0x00000112   Lc    1  Sect  De 
    219  .ARM.Collect$$libinit$$0000002E
                                    0x00000112   Lc    1  Sect  De 
    220  .ARM.Collect$$libinit$$00000030
                                    0x00000112   Lc    1  Sect  De 
    221  .ARM.Collect$$libinit$$00000032
                                    0x00000112   Lc    1  Sect  De 
    222  .ARM.Collect$$libinit$$00000033
                                    0x00000112   Lc    1  Sect  De   0x2
    223  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    224  .ARM.Collect$$rtexit$$00000002
                                    0x0000012c   Lc    1  Sect  De 
    225  .ARM.Collect$$rtexit$$00000003
                                    0x0000012c   Lc    1  Sect  De   0x4
    226  .ARM.Collect$$rtexit$$00000004
                                    0x00000130   Lc    1  Sect  De   0x6
    227  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    228  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    229  ../fplib/fpinit.s          0x00000000   Lc  Abs  File  De 
    230  x$fpl$fpinit               0x0000101e   Lc    1  Sect  De   0xa
    231  $v0                        0x0000101e   Lc    1   --   De 
    232  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    233  .text                      0x00000224   Lc    1  Sect  De 
    234  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    235  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    236  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    237  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    238  .ARM.Collect$$libshutdown$$00000000
                                    0x00000114   Lc    1  Sect  De   0x2
    239  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    240  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    241  .text                      0x00000230   Lc    1  Sect  De   0x2
    242  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    243  .text                      0x00000232   Lc    1  Sect  De 
    244  ../clib/heapalloc.c        0x00000000   Lc  Abs  File  De 
    245  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    246  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    247  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    248  .ARM.Collect$$libshutdown$$00000002
                                    0x00000116   Lc    1  Sect  De 
    249  .ARM.Collect$$libshutdown$$00000004
                                    0x00000116   Lc    1  Sect  De 
    250  .ARM.Collect$$libshutdown$$00000007
                                    0x00000116   Lc    1  Sect  De 
    251  .ARM.Collect$$libshutdown$$0000000A
                                    0x00000116   Lc    1  Sect  De 
    252  .ARM.Collect$$libshutdown$$0000000C
                                    0x00000116   Lc    1  Sect  De 
    253  .ARM.Collect$$libshutdown$$0000000F
                                    0x00000116   Lc    1  Sect  De 
    254  .ARM.Collect$$libshutdown$$00000010
                                    0x00000116   Lc    1  Sect  De   0x2
    255  ../clib/angel/rt.s         0x00000000   Lc  Abs  File  De 
    256  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    257  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    258  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    259  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    260  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    261  ../clib/signal.s           0x00000000   Lc  Abs  File  De 
    262  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    263  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    264  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    265  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    266  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    267  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    268  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    269  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    270  ../clib/angel/scatter.s    0x00000000   Lc  Abs  File  De 
    271  !!!scatter                 0x000000a0   Lc    1  Sect  De   0x34
    272  ../clib/angel/handlers.s   0x00000000   Lc  Abs  File  De 
    273  !!handler_copy             0x000000d4   Lc    1  Sect  De   0x1a
    274  ../clib/angel/handlers.s   0x00000000   Lc  Abs  File  De 
    275  !!handler_zi               0x000000f0   Lc    1  Sect  De   0x1c
    276  BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2
                                    0x00000000   Gb  Abs   --   Hi 
    277  __ARM_use_no_argv          0x00000000   Gb  Abs   --   Hi 
    278  __Vectors                  0x00000000   Gb    1  Data  Hi 
    279  Reset_Handler              0x00000071   Wk    1  Code  Hi   0x1c
    280  am_nmi_isr                 0x0000008d   Wk    1  Code  Hi   0x2
    281  am_memmanage_isr           0x00000091   Wk    1  Code  Hi   0x2
    282  am_adc_isr                 0x00000093   Wk    1  Code  Hi 
    283  am_brownout_isr            0x00000093   Wk    1  Code  Hi 
    284  am_clkgen_isr              0x00000093   Wk    1  Code  Hi 
    285  am_ctimer_isr              0x00000093   Wk    1  Code  Hi 
    286  am_debugmon_isr            0x00000093   Wk    1  Code  Hi 
    287  am_gpio_isr                0x00000093   Wk    1  Code  Hi 
    288  am_iomaster0_isr           0x00000093   Wk    1  Code  Hi 
    289  am_iomaster1_isr           0x00000093   Wk    1  Code  Hi 
    290  am_ioslave_acc_isr         0x00000093   Wk    1  Code  Hi 
    291  am_ioslave_ios_isr         0x00000093   Wk    1  Code  Hi 
    292  am_pendsv_isr              0x00000093   Wk    1  Code  Hi 
    293  am_svcall_isr              0x00000093   Wk    1  Code  Hi 
    294  am_systick_isr             0x00000093   Wk    1  Code  Hi 
    295  am_uart_isr                0x00000093   Wk    1  Code  Hi 
    296  am_vcomp_isr               0x00000093   Wk    1  Code  Hi 
    297  am_watchdog_isr            0x00000093   Wk    1  Code  Hi 
    298  __main                     0x00000099   Gb    1  Code  Hi   0x8
    299  __scatterload              0x000000a1   Gb    1  Code  Hi 
    300  __scatterload_rt2          0x000000a1   Gb    1  Code  Hi   0x2c
    301  __scatterload_rt2_thumb_only
                                    0x000000a1   Gb    1  Code  Hi 
    302  __scatterload_null         0x000000af   Gb    1  Code  Hi 
    303  __scatterload_copy         0x000000d5   Gb    1  Code  Hi   0x1a
    304  __scatterload_zeroinit     0x000000f1   Gb    1  Code  Hi   0x1c
    305  __rt_lib_init              0x0000010d   Gb    1  Code  De 
    306  __rt_lib_init_fp_1         0x0000010f   Gb    1  Code  Hi 
    307  __rt_lib_init_alloca_1     0x00000113   Gb    1  Code  Hi 
    308  __rt_lib_init_argv_1       0x00000113   Gb    1  Code  Hi 
    309  __rt_lib_init_atexit_1     0x00000113   Gb    1  Code  Hi 
    310  __rt_lib_init_clock_1      0x00000113   Gb    1  Code  Hi 
    311  __rt_lib_init_cpp_1        0x00000113   Gb    1  Code  Hi 
    312  __rt_lib_init_exceptions_1 0x00000113   Gb    1  Code  Hi 
    313  __rt_lib_init_fp_trap_1    0x00000113   Gb    1  Code  Hi 
    314  __rt_lib_init_getenv_1     0x00000113   Gb    1  Code  Hi 
    315  __rt_lib_init_heap_1       0x00000113   Gb    1  Code  Hi 
    316  __rt_lib_init_lc_collate_1 0x00000113   Gb    1  Code  Hi 
    317  __rt_lib_init_lc_ctype_1   0x00000113   Gb    1  Code  Hi 
    318  __rt_lib_init_lc_monetary_1
                                    0x00000113   Gb    1  Code  Hi 
    319  __rt_lib_init_lc_numeric_1 0x00000113   Gb    1  Code  Hi 
    320  __rt_lib_init_lc_time_1    0x00000113   Gb    1  Code  Hi 
    321  __rt_lib_init_preinit_1    0x00000113   Gb    1  Code  Hi 
    322  __rt_lib_init_rand_1       0x00000113   Gb    1  Code  Hi 
    323  __rt_lib_init_return       0x00000113   Gb    1  Code  Hi 
    324  __rt_lib_init_signal_1     0x00000113   Gb    1  Code  Hi 
    325  __rt_lib_init_stdio_1      0x00000113   Gb    1  Code  Hi 
    326  __rt_lib_init_user_alloc_1 0x00000113   Gb    1  Code  Hi 
    327  __rt_lib_shutdown          0x00000115   Gb    1  Code  De 
    328  __rt_lib_shutdown_cpp_1    0x00000117   Gb    1  Code  Hi 
    329  __rt_lib_shutdown_fp_trap_1
                                    0x00000117   Gb    1  Code  Hi 
    330  __rt_lib_shutdown_heap_1   0x00000117   Gb    1  Code  Hi 
    331  __rt_lib_shutdown_return   0x00000117   Gb    1  Code  Hi 
    332  __rt_lib_shutdown_signal_1 0x00000117   Gb    1  Code  Hi 
    333  __rt_lib_shutdown_stdio_1  0x00000117   Gb    1  Code  Hi 
    334  __rt_lib_shutdown_user_alloc_1
                                    0x00000117   Gb    1  Code  Hi 
    335  __rt_entry                 0x00000119   Gb    1  Code  Hi 
    336  __rt_entry_presh_1         0x00000119   Gb    1  Code  Hi 
    337  __rt_entry_sh              0x00000119   Gb    1  Code  Hi 
    338  __rt_entry_li              0x0000011f   Gb    1  Code  Hi 
    339  __rt_entry_postsh_1        0x0000011f   Gb    1  Code  Hi 
    340  __rt_entry_main            0x00000123   Gb    1  Code  Hi 
    341  __rt_entry_postli_1        0x00000123   Gb    1  Code  Hi 
    342  __rt_exit                  0x0000012b   Gb    1  Code  De 
    343  __rt_exit_ls               0x0000012d   Gb    1  Code  Hi 
    344  __rt_exit_prels_1          0x0000012d   Gb    1  Code  Hi 
    345  __rt_exit_exit             0x00000131   Gb    1  Code  Hi 
    346  am_fault_isr               0x00000139   Gb    1  Code  Hi   0xc
    347  getStackedReg              0x00000145   Gb    1  Code  Hi   0x8
    348  am_hal_flash_delay         0x0000014d   Gb    1  Code  Hi   0x6
    349  __user_initial_stackheap   0x00000155   Gb    1  Code  Hi   0xa
    350  __aeabi_memclr4            0x0000016d   Gb    1  Code  Hi 
    351  __aeabi_memclr8            0x0000016d   Gb    1  Code  De 
    352  __rt_memclr_w              0x0000016d   Gb    1  Code  De   0x4e
    353  _memset_w                  0x00000171   Gb    1  Code  De 
    354  __use_two_region_memory    0x000001bb   Gb    1  Code  Hi   0x2
    355  __rt_heap_escrow$2region   0x000001bd   Gb    1  Code  De   0x2
    356  __rt_heap_expand$2region   0x000001bf   Gb    1  Code  De   0x2
    357  __user_setup_stackheap     0x000001c1   Gb    1  Code  De   0x4a
    358  exit                       0x0000020b   Gb    1  Code  De   0x12
    359  __user_libspace            0x0000021d   Wk    1  Code  De   0x8
    360  __user_perproc_libspace    0x0000021d   Wk    1  Code  De 
    361  __user_perthread_libspace  0x0000021d   Wk    1  Code  De 
    362  _sys_exit                  0x00000225   Gb    1  Code  De   0x8
    363  __I$use$semihosting        0x00000231   Gb    1  Code  Hi 
    364  __use_no_semihosting_swi   0x00000231   Gb    1  Code  Hi   0x2
    365  __semihosting_library_function
                                    0x00000233   Gb    1  Code  Hi 
    366  am_bsp_low_power_init      0x00000233   Gb    1  Code  Hi   0x22
    367  am_bsp_uart_string_print   0x00000255   Gb    1  Code  Hi   0x8
    368  am_hal_clkgen_osc_stop     0x0000025d   Gb    1  Code  Hi   0x14
    369  am_hal_clkgen_sysclk_get   0x00000271   Gb    1  Code  Hi   0x40
    370  am_hal_clkgen_sysclk_select
                                    0x000002d1   Gb    1  Code  Hi   0x10
    371  am_hal_mcuctrl_bandgap_disable
                                    0x000002e1   Gb    1  Code  Hi   0xc
    372  am_hal_mcuctrl_bucks_enable
                                    0x000002f1   Gb    1  Code  Hi   0x24
    373  am_hal_mcuctrl_fault_status
                                    0x00000319   Gb    1  Code  Hi   0x34
    374  am_hal_mcuctrl_sram_power_set
                                    0x00000351   Gb    1  Code  Hi   0xc
    375  am_hal_rtc_osc_disable     0x00000361   Gb    1  Code  Hi   0xe
    376  am_hal_rtc_osc_select      0x0000036f   Gb    1  Code  Hi   0x16
    377  am_hal_sysctrl_sleep       0x00000385   Gb    1  Code  Hi   0x24
    378  am_hal_uart_clock_disable  0x000003b1   Gb    1  Code  Hi   0x18
    379  am_hal_uart_clock_enable   0x000003cd   Gb    1  Code  Hi   0x20
    380  am_hal_uart_config         0x000003f1   Gb    1  Code  Hi   0x4e
    381  am_hal_uart_disable        0x00000445   Gb    1  Code  Hi   0x10
    382  am_hal_uart_enable         0x00000459   Gb    1  Code  Hi   0xe
    383  am_hal_uart_fifo_config    0x0000046d   Gb    1  Code  Hi   0xe
    384  am_hal_uart_string_transmit_polled
                                    0x00000481   Gb    1  Code  Hi   0x20
    385  am_hal_vcomp_disable       0x000004a5   Gb    1  Code  Hi   0x8
    386  am_util_delay_ms           0x000004b1   Gb    1  Code  Hi   0x1e
    387  am_util_faultisr_collect_data
                                    0x000004d1   Gb    1  Code  Hi   0xb2
    388  am_util_stdio_printf       0x00000589   Gb    1  Code  Hi   0x28
    389  am_util_stdio_printf_init  0x000005b9   Gb    1  Code  Hi   0x6
    390  am_util_stdio_terminal_clear
                                    0x000005c5   Gb    1  Code  Hi   0xa
    391  am_util_stdio_vsprintf     0x000005e5   Gb    1  Code  Hi   0x3a4
    392  main                       0x00000c21   Gb    1  Code  Hi   0x3c
    393  uart_disable               0x00000d41   Gb    1  Code  Hi   0x62
    394  uart_init                  0x00000da9   Gb    1  Code  Hi   0x72
    395  __aeabi_d2f                0x00000f21   Gb    1  Code  Hi 
    396  _d2f                       0x00000f21   Gb    1  Code  De   0x62
    397  __fpl_dnaninf              0x00000f83   Gb    1  Code  De   0x9c
    398  _fp_init                   0x0000101f   Gb    1  Code  De   0xa
    399  __fplib_config_fpu_vfp     0x00001027   Gb    1  Code  De 
    400  __fplib_config_pureend_doubles
                                    0x00001027   Gb    1  Code  De 
    401  __fpl_fretinf              0x00001029   Gb    1  Code  De   0xa
    402  __I$use$fp                 0x00001032   Gb    1   --   De 
    403  Region$$Table$$Base        0x00001034   Gb    1   --   Hi 
    404  Region$$Table$$Limit       0x00001054   Gb    1   --   Hi 
    405  g_sUartConfig              0x10000000   Gb    2  Data  Hi   0x14
    406  g_pfnCharPrint             0x10000014   Gb    2  Data  Hi   0x4
    407  g_ui32HALflags             0x1000001c   Gb    2  Data  Hi   0x4
    408  __libspace_start           0x10000120   Gb    3  Data  De   0x60
    409  __temporary_stack_top$libspace
                                    0x10000180   Gb    3  Data  De 


** Section #12 '.strtab' (SHT_STRTAB)
    Size   : 6336 bytes

            #  Offset String
        ====================================

            1      1: $d
            2      4: $t
            3      7: $d.realdata
            4     19: ../src/deepsleep.c
            5     38: i.main
            6     45: i.uart_disable
            7     60: i.uart_init
            8     72: .data
            9     78: ../../../../../utils/am_util_delay.c
           10    115: i.am_util_delay_ms
           11    134: ..\..\..\..\..\utils\am_util_faultisr.c
           12    174: .emb_text
           13    184: $v0
           14    188: ../../../../../utils/am_util_faultisr.c
           15    228: i.am_util_faultisr_collect_data
           16    260: ../../../../../utils/am_util_stdio.c
           17    297: i.am_util_stdio_printf
           18    320: i.am_util_stdio_printf_init
           19    348: i.am_util_stdio_terminal_clear
           20    379: i.am_util_stdio_vsprintf
           21    404: i.decstr_to_int
           22    420: decstr_to_int
           23    434: i.divu64_10
           24    446: divu64_10
           25    456: i.ftoa
           26    463: ftoa
           27    468: i.ndigits_in_hex
           28    485: ndigits_in_hex
           29    500: i.ndigits_in_i64
           30    517: ndigits_in_i64
           31    532: i.ndigits_in_u64
           32    549: ndigits_in_u64
           33    564: i.padbuffer
           34    576: padbuffer
           35    586: i.simple_strlen
           36    602: simple_strlen
           37    616: i.uint64_to_hexstr
           38    635: uint64_to_hexstr
           39    652: i.uint64_to_str
           40    668: uint64_to_str
           41    682: .bss
           42    687: g_prfbuf
           43    696: g_bTxtXlate
           44    708: ../keil/startup_keil.s
           45    731: STACK
           46    737: StackMem
           47    746: HEAP
           48    751: HeapMem
           49    759: RESET
           50    765: .text
           51    771: ../am_hal_global.c
           52    790: ../am_bsp.c
           53    802: i.am_bsp_low_power_init
           54    826: i.am_bsp_uart_string_print
           55    853: ../am_hal_clkgen.c
           56    872: i.am_hal_clkgen_osc_stop
           57    897: i.am_hal_clkgen_sysclk_get
           58    924: i.am_hal_clkgen_sysclk_select
           59    954: ..\am_hal_flash.c
           60    972: ../am_hal_flash.c
           61    990: ../am_hal_mcuctrl.c
           62   1010: i.am_hal_mcuctrl_bandgap_disable
           63   1043: i.am_hal_mcuctrl_bucks_enable
           64   1073: i.am_hal_mcuctrl_fault_status
           65   1103: i.am_hal_mcuctrl_sram_power_set
           66   1135: ../am_hal_sysctrl.c
           67   1155: i.am_hal_sysctrl_sleep
           68   1178: ../am_hal_uart.c
           69   1195: i.am_hal_uart_clock_disable
           70   1223: i.am_hal_uart_clock_enable
           71   1250: i.am_hal_uart_config
           72   1271: i.am_hal_uart_disable
           73   1293: i.am_hal_uart_enable
           74   1314: i.am_hal_uart_fifo_config
           75   1340: i.am_hal_uart_string_transmit_polled
           76   1377: ../am_hal_gpio.c
           77   1394: ..\am_hal_interrupt.c
           78   1416: ../am_hal_interrupt.c
           79   1438: ../am_hal_iom.c
           80   1454: ../am_hal_itm.c
           81   1470: ../am_hal_rtc.c
           82   1486: i.am_hal_rtc_osc_disable
           83   1511: i.am_hal_rtc_osc_select
           84   1535: ../am_hal_tpiu.c
           85   1552: ../am_hal_vcomp.c
           86   1570: i.am_hal_vcomp_disable
           87   1593: ../am_hal_debug.c
           88   1611: ../am_hal_i2c_bit_bang.c
           89   1636: ../am_hal_queue.c
           90   1654: dc.s
           91   1659: ../clib/memcpset.s
           92   1678: ../clib/heapaux.c
           93   1696: ../clib/angel/startup.s
           94   1720: !!!main
           95   1728: ../fplib/d2f.s
           96   1743: x$fpl$d2f
           97   1753: ../clib/angel/kernel.s
           98   1776: .ARM.Collect$$rtentry$$00000000
           99   1808: ../fplib/dnaninf.s
          100   1827: x$fpl$dnaninf
          101   1841: ../fplib/fretinf.s
          102   1860: x$fpl$fretinf
          103   1874: ../fplib/usenofp.s
          104   1893: x$fpl$usenofp
          105   1907: .ARM.Collect$$rtentry$$00000002
          106   1939: .ARM.Collect$$rtentry$$00000009
          107   1971: .ARM.Collect$$rtentry$$0000000A
          108   2003: .ARM.Collect$$rtentry$$0000000C
          109   2035: .ARM.Collect$$rtentry$$0000000D
          110   2067: .ARM.Collect$$rtentry$$00000004
          111   2099: ../clib/angel/sys.s
          112   2119: ../clib/stdlib.c
          113   2136: ../clib/angel/boardlib.s
          114   2161: ../clib/libinit.s
          115   2179: .ARM.Collect$$libinit$$00000000
          116   2211: .ARM.Collect$$rtexit$$00000000
          117   2242: .ARM.Collect$$libinit$$00000001
          118   2274: .ARM.Collect$$libinit$$00000004
          119   2306: .ARM.Collect$$libinit$$0000000A
          120   2338: .ARM.Collect$$libinit$$0000000C
          121   2370: .ARM.Collect$$libinit$$0000000E
          122   2402: .ARM.Collect$$libinit$$00000011
          123   2434: .ARM.Collect$$libinit$$00000013
          124   2466: .ARM.Collect$$libinit$$00000015
          125   2498: .ARM.Collect$$libinit$$00000017
          126   2530: .ARM.Collect$$libinit$$00000019
          127   2562: .ARM.Collect$$libinit$$0000001B
          128   2594: .ARM.Collect$$libinit$$0000001D
          129   2626: .ARM.Collect$$libinit$$0000001F
          130   2658: .ARM.Collect$$libinit$$00000021
          131   2690: .ARM.Collect$$libinit$$00000023
          132   2722: .ARM.Collect$$libinit$$00000025
          133   2754: .ARM.Collect$$libinit$$0000002C
          134   2786: .ARM.Collect$$libinit$$0000002E
          135   2818: .ARM.Collect$$libinit$$00000030
          136   2850: .ARM.Collect$$libinit$$00000032
          137   2882: .ARM.Collect$$libinit$$00000033
          138   2914: .ARM.Collect$$rtexit$$00000002
          139   2945: .ARM.Collect$$rtexit$$00000003
          140   2976: .ARM.Collect$$rtexit$$00000004
          141   3007: ../clib/armsys.c
          142   3024: ../fplib/fpinit.s
          143   3042: x$fpl$fpinit
          144   3055: ../clib/angel/sysapp.c
          145   3078: .ARM.Collect$$libshutdown$$00000000
          146   3114: ../clib/heapalloc.c
          147   3134: ../clib/signal.c
          148   3151: .ARM.Collect$$libshutdown$$00000002
          149   3187: .ARM.Collect$$libshutdown$$00000004
          150   3223: .ARM.Collect$$libshutdown$$00000007
          151   3259: .ARM.Collect$$libshutdown$$0000000A
          152   3295: .ARM.Collect$$libshutdown$$0000000C
          153   3331: .ARM.Collect$$libshutdown$$0000000F
          154   3367: .ARM.Collect$$libshutdown$$00000010
          155   3403: ../clib/angel/rt.s
          156   3422: ../clib/signal.s
          157   3439: ../clib/angel/scatter.s
          158   3463: !!!scatter
          159   3474: ../clib/angel/handlers.s
          160   3499: !!handler_copy
          161   3514: !!handler_zi
          162   3527: BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2
          163   3713: __ARM_use_no_argv
          164   3731: __Vectors
          165   3741: Reset_Handler
          166   3755: am_nmi_isr
          167   3766: am_memmanage_isr
          168   3783: am_adc_isr
          169   3794: am_brownout_isr
          170   3810: am_clkgen_isr
          171   3824: am_ctimer_isr
          172   3838: am_debugmon_isr
          173   3854: am_gpio_isr
          174   3866: am_iomaster0_isr
          175   3883: am_iomaster1_isr
          176   3900: am_ioslave_acc_isr
          177   3919: am_ioslave_ios_isr
          178   3938: am_pendsv_isr
          179   3952: am_svcall_isr
          180   3966: am_systick_isr
          181   3981: am_uart_isr
          182   3993: am_vcomp_isr
          183   4006: am_watchdog_isr
          184   4022: __main
          185   4029: __scatterload
          186   4043: __scatterload_rt2
          187   4061: __scatterload_rt2_thumb_only
          188   4090: __scatterload_null
          189   4109: __scatterload_copy
          190   4128: __scatterload_zeroinit
          191   4151: __rt_lib_init
          192   4165: __rt_lib_init_fp_1
          193   4184: __rt_lib_init_alloca_1
          194   4207: __rt_lib_init_argv_1
          195   4228: __rt_lib_init_atexit_1
          196   4251: __rt_lib_init_clock_1
          197   4273: __rt_lib_init_cpp_1
          198   4293: __rt_lib_init_exceptions_1
          199   4320: __rt_lib_init_fp_trap_1
          200   4344: __rt_lib_init_getenv_1
          201   4367: __rt_lib_init_heap_1
          202   4388: __rt_lib_init_lc_collate_1
          203   4415: __rt_lib_init_lc_ctype_1
          204   4440: __rt_lib_init_lc_monetary_1
          205   4468: __rt_lib_init_lc_numeric_1
          206   4495: __rt_lib_init_lc_time_1
          207   4519: __rt_lib_init_preinit_1
          208   4543: __rt_lib_init_rand_1
          209   4564: __rt_lib_init_return
          210   4585: __rt_lib_init_signal_1
          211   4608: __rt_lib_init_stdio_1
          212   4630: __rt_lib_init_user_alloc_1
          213   4657: __rt_lib_shutdown
          214   4675: __rt_lib_shutdown_cpp_1
          215   4699: __rt_lib_shutdown_fp_trap_1
          216   4727: __rt_lib_shutdown_heap_1
          217   4752: __rt_lib_shutdown_return
          218   4777: __rt_lib_shutdown_signal_1
          219   4804: __rt_lib_shutdown_stdio_1
          220   4830: __rt_lib_shutdown_user_alloc_1
          221   4861: __rt_entry
          222   4872: __rt_entry_presh_1
          223   4891: __rt_entry_sh
          224   4905: __rt_entry_li
          225   4919: __rt_entry_postsh_1
          226   4939: __rt_entry_main
          227   4955: __rt_entry_postli_1
          228   4975: __rt_exit
          229   4985: __rt_exit_ls
          230   4998: __rt_exit_prels_1
          231   5016: __rt_exit_exit
          232   5031: am_fault_isr
          233   5044: getStackedReg
          234   5058: am_hal_flash_delay
          235   5077: __user_initial_stackheap
          236   5102: __aeabi_memclr4
          237   5118: __aeabi_memclr8
          238   5134: __rt_memclr_w
          239   5148: _memset_w
          240   5158: __use_two_region_memory
          241   5182: __rt_heap_escrow$2region
          242   5207: __rt_heap_expand$2region
          243   5232: __user_setup_stackheap
          244   5255: exit
          245   5260: __user_libspace
          246   5276: __user_perproc_libspace
          247   5300: __user_perthread_libspace
          248   5326: _sys_exit
          249   5336: __I$use$semihosting
          250   5356: __use_no_semihosting_swi
          251   5381: __semihosting_library_function
          252   5412: am_bsp_low_power_init
          253   5434: am_bsp_uart_string_print
          254   5459: am_hal_clkgen_osc_stop
          255   5482: am_hal_clkgen_sysclk_get
          256   5507: am_hal_clkgen_sysclk_select
          257   5535: am_hal_mcuctrl_bandgap_disable
          258   5566: am_hal_mcuctrl_bucks_enable
          259   5594: am_hal_mcuctrl_fault_status
          260   5622: am_hal_mcuctrl_sram_power_set
          261   5652: am_hal_rtc_osc_disable
          262   5675: am_hal_rtc_osc_select
          263   5697: am_hal_sysctrl_sleep
          264   5718: am_hal_uart_clock_disable
          265   5744: am_hal_uart_clock_enable
          266   5769: am_hal_uart_config
          267   5788: am_hal_uart_disable
          268   5808: am_hal_uart_enable
          269   5827: am_hal_uart_fifo_config
          270   5851: am_hal_uart_string_transmit_polled
          271   5886: am_hal_vcomp_disable
          272   5907: am_util_delay_ms
          273   5924: am_util_faultisr_collect_data
          274   5954: am_util_stdio_printf
          275   5975: am_util_stdio_printf_init
          276   6001: am_util_stdio_terminal_clear
          277   6030: am_util_stdio_vsprintf
          278   6053: main
          279   6058: uart_disable
          280   6071: uart_init
          281   6081: __aeabi_d2f
          282   6093: _d2f
          283   6098: __fpl_dnaninf
          284   6112: _fp_init
          285   6121: __fplib_config_fpu_vfp
          286   6144: __fplib_config_pureend_doubles
          287   6175: __fpl_fretinf
          288   6189: __I$use$fp
          289   6200: Region$$Table$$Base
          290   6220: Region$$Table$$Limit
          291   6241: g_sUartConfig
          292   6255: g_pfnCharPrint
          293   6270: g_ui32HALflags
          294   6285: __libspace_start
          295   6302: __temporary_stack_top$libspace
          296   6333: 
          297   6334: 
          298   6335: 


** Section #13 '.note' (SHT_NOTE)
    Size   : 28 bytes (alignment 4)


** Section #14 '.comment' (SHT_PROGBITS)
    Size   : 13960 bytes


** Section #15 '.shstrtab' (SHT_STRTAB)
    Size   : 148 bytes

            #  Offset String
        ====================================

            1      1: FLASH
            2      7: SRAM
            3     12: .debug_abbrev
            4     26: .debug_frame
            5     39: .debug_info
            6     51: .debug_line
            7     63: .debug_loc
            8     74: .debug_macinfo
            9     89: .debug_pubnames
           10    105: .symtab
           11    113: .strtab
           12    121: .note
           13    127: .comment
           14    136: .shstrtab
           15    146: 
           16    147: 


