
========================================================================

** ELF Header Information

    File Name: bin\clkout.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x00000099
    Flags: EF_ARM_HASENTRY + EF_ARM_ABI_FLOAT_HARD (0x05000402)

    ARM ELF revision: 5 (ABI version 2)

    Conforms to Hard float procedure-call standard

    Built with
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armasm [4d35e1]
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 16

    Program header offset: 61392 (0x0000efd0)
    Section header offset: 61424 (0x0000eff0)

    Section header string table index: 15

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_W + PF_R + PF_ARM_ENTRY]
    Size : 9996 bytes (5544 bytes in file)
    Virtual address: 0x00000000 (Alignment 8)


========================================================================

** Section #1 'FLASH' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 5492 bytes (alignment 4)
    Address: 0x00000000

    $d
    RESET
    __Vectors
        0x00000000:    10001198    ....    DCD    268439960
        0x00000004:    00000071    q...    DCD    113
        0x00000008:    0000008d    ....    DCD    141
        0x0000000c:    00000139    9...    DCD    313
        0x00000010:    00000139    9...    DCD    313
        0x00000014:    00000139    9...    DCD    313
        0x00000018:    00000139    9...    DCD    313
        0x0000001c:    00000000    ....    DCD    0
        0x00000020:    00000000    ....    DCD    0
        0x00000024:    00000000    ....    DCD    0
        0x00000028:    00000000    ....    DCD    0
        0x0000002c:    00000093    ....    DCD    147
        0x00000030:    00000093    ....    DCD    147
        0x00000034:    00000000    ....    DCD    0
        0x00000038:    00000093    ....    DCD    147
        0x0000003c:    00000093    ....    DCD    147
        0x00000040:    00000093    ....    DCD    147
        0x00000044:    00000093    ....    DCD    147
        0x00000048:    00000093    ....    DCD    147
        0x0000004c:    00000093    ....    DCD    147
        0x00000050:    00000093    ....    DCD    147
        0x00000054:    00000093    ....    DCD    147
        0x00000058:    00000093    ....    DCD    147
        0x0000005c:    00000093    ....    DCD    147
        0x00000060:    00000093    ....    DCD    147
        0x00000064:    00000093    ....    DCD    147
        0x00000068:    00000093    ....    DCD    147
        0x0000006c:    00000093    ....    DCD    147
    $t
    $v0
    Reset_Handler
        0x00000070:    f64e5088    N..P    MOV      r0,#0xed88
        0x00000074:    f2ce0000    ....    MOVT     r0,#0xe000
        0x00000078:    6801        .h      LDR      r1,[r0,#0]
        0x0000007a:    f4410170    A.p.    ORR      r1,r1,#0xf00000
        0x0000007e:    6001        .`      STR      r1,[r0,#0]
        0x00000080:    f3bf8f4f    ..O.    DSB      
        0x00000084:    f3bf8f6f    ..o.    ISB      
        0x00000088:    4802        .H      LDR      r0,[pc,#8] ; [0x94] = 0x99
        0x0000008a:    4700        .G      BX       r0
    am_nmi_isr
        0x0000008c:    e7fe        ..      B        am_nmi_isr ; 0x8c
        0x0000008e:    e7fe        ..      B        0x8e ; am_nmi_isr + 2
    am_memmanage_isr
        0x00000090:    e7fe        ..      B        am_memmanage_isr ; 0x90
    am_adc_isr
    am_brownout_isr
    am_clkgen_isr
    am_ctimer_isr
    am_debugmon_isr
    am_gpio_isr
    am_iomaster0_isr
    am_iomaster1_isr
    am_ioslave_acc_isr
    am_ioslave_ios_isr
    am_pendsv_isr
    am_svcall_isr
    am_systick_isr
    am_uart_isr
    am_vcomp_isr
    am_watchdog_isr
        0x00000092:    e7fe        ..      B        am_adc_isr ; 0x92
    $d
        0x00000094:    00000099    ....    DCD    153
    $t
    !!!main
    __main
        0x00000098:    f000f802    ....    BL       __scatterload ; 0xa0
        0x0000009c:    f000f83c    ..<.    BL       __rt_entry ; 0x118
    !!!scatter
    __scatterload
    __scatterload_rt2
    __scatterload_rt2_thumb_only
        0x000000a0:    a00a        ..      ADR      r0,{pc}+0x2c ; 0xcc
        0x000000a2:    e8900c00    ....    LDM      r0,{r10,r11}
        0x000000a6:    4482        .D      ADD      r10,r10,r0
        0x000000a8:    4483        .D      ADD      r11,r11,r0
        0x000000aa:    f1aa0701    ....    SUB      r7,r10,#1
    __scatterload_null
        0x000000ae:    45da        .E      CMP      r10,r11
        0x000000b0:    d101        ..      BNE      0xb6 ; __scatterload_null + 8
        0x000000b2:    f000f831    ..1.    BL       __rt_entry ; 0x118
        0x000000b6:    f2af0e09    ....    ADR      lr,{pc}-7 ; 0xaf
        0x000000ba:    e8ba000f    ....    LDM      r10!,{r0-r3}
        0x000000be:    f0130f01    ....    TST      r3,#1
        0x000000c2:    bf18        ..      IT       NE
        0x000000c4:    1afb        ..      SUBNE    r3,r7,r3
        0x000000c6:    f0430301    C...    ORR      r3,r3,#1
        0x000000ca:    4718        .G      BX       r3
    $d
        0x000000cc:    00001488    ....    DCD    5256
        0x000000d0:    000014a8    ....    DCD    5288
    $t
    !!handler_copy
    __scatterload_copy
        0x000000d4:    3a10        .:      SUBS     r2,r2,#0x10
        0x000000d6:    bf24        $.      ITT      CS
        0x000000d8:    c878        x.      LDMCS    r0!,{r3-r6}
        0x000000da:    c178        x.      STMCS    r1!,{r3-r6}
        0x000000dc:    d8fa        ..      BHI      __scatterload_copy ; 0xd4
        0x000000de:    0752        R.      LSLS     r2,r2,#29
        0x000000e0:    bf24        $.      ITT      CS
        0x000000e2:    c830        0.      LDMCS    r0!,{r4,r5}
        0x000000e4:    c130        0.      STMCS    r1!,{r4,r5}
        0x000000e6:    bf44        D.      ITT      MI
        0x000000e8:    6804        .h      LDRMI    r4,[r0,#0]
        0x000000ea:    600c        .`      STRMI    r4,[r1,#0]
        0x000000ec:    4770        pG      BX       lr
        0x000000ee:    0000        ..      MOVS     r0,r0
    !!handler_zi
    __scatterload_zeroinit
        0x000000f0:    2300        .#      MOVS     r3,#0
        0x000000f2:    2400        .$      MOVS     r4,#0
        0x000000f4:    2500        .%      MOVS     r5,#0
        0x000000f6:    2600        .&      MOVS     r6,#0
        0x000000f8:    3a10        .:      SUBS     r2,r2,#0x10
        0x000000fa:    bf28        (.      IT       CS
        0x000000fc:    c178        x.      STMCS    r1!,{r3-r6}
        0x000000fe:    d8fb        ..      BHI      0xf8 ; __scatterload_zeroinit + 8
        0x00000100:    0752        R.      LSLS     r2,r2,#29
        0x00000102:    bf28        (.      IT       CS
        0x00000104:    c130        0.      STMCS    r1!,{r4,r5}
        0x00000106:    bf48        H.      IT       MI
        0x00000108:    600b        .`      STRMI    r3,[r1,#0]
        0x0000010a:    4770        pG      BX       lr
    .ARM.Collect$$libinit$$00000000
    __rt_lib_init
        0x0000010c:    b51f        ..      PUSH     {r0-r4,lr}
    .ARM.Collect$$libinit$$00000001
    __rt_lib_init_fp_1
        0x0000010e:    f001f9f2    ....    BL       _fp_init ; 0x14f6
    .ARM.Collect$$libinit$$00000004
    .ARM.Collect$$libinit$$0000000A
    .ARM.Collect$$libinit$$0000000C
    .ARM.Collect$$libinit$$0000000E
    .ARM.Collect$$libinit$$00000011
    .ARM.Collect$$libinit$$00000013
    .ARM.Collect$$libinit$$00000015
    .ARM.Collect$$libinit$$00000017
    .ARM.Collect$$libinit$$00000019
    .ARM.Collect$$libinit$$0000001B
    .ARM.Collect$$libinit$$0000001D
    .ARM.Collect$$libinit$$0000001F
    .ARM.Collect$$libinit$$00000021
    .ARM.Collect$$libinit$$00000023
    .ARM.Collect$$libinit$$00000025
    .ARM.Collect$$libinit$$0000002C
    .ARM.Collect$$libinit$$0000002E
    .ARM.Collect$$libinit$$00000030
    .ARM.Collect$$libinit$$00000032
    .ARM.Collect$$libinit$$00000033
    __rt_lib_init_alloca_1
    __rt_lib_init_argv_1
    __rt_lib_init_atexit_1
    __rt_lib_init_clock_1
    __rt_lib_init_cpp_1
    __rt_lib_init_exceptions_1
    __rt_lib_init_fp_trap_1
    __rt_lib_init_getenv_1
    __rt_lib_init_heap_1
    __rt_lib_init_lc_collate_1
    __rt_lib_init_lc_ctype_1
    __rt_lib_init_lc_monetary_1
    __rt_lib_init_lc_numeric_1
    __rt_lib_init_lc_time_1
    __rt_lib_init_preinit_1
    __rt_lib_init_rand_1
    __rt_lib_init_return
    __rt_lib_init_signal_1
    __rt_lib_init_stdio_1
    __rt_lib_init_user_alloc_1
        0x00000112:    bd1f        ..      POP      {r0-r4,pc}
    .ARM.Collect$$libshutdown$$00000000
    __rt_lib_shutdown
        0x00000114:    b510        ..      PUSH     {r4,lr}
    .ARM.Collect$$libshutdown$$00000002
    .ARM.Collect$$libshutdown$$00000004
    .ARM.Collect$$libshutdown$$00000007
    .ARM.Collect$$libshutdown$$0000000A
    .ARM.Collect$$libshutdown$$0000000C
    .ARM.Collect$$libshutdown$$0000000F
    .ARM.Collect$$libshutdown$$00000010
    __rt_lib_shutdown_cpp_1
    __rt_lib_shutdown_fp_trap_1
    __rt_lib_shutdown_heap_1
    __rt_lib_shutdown_return
    __rt_lib_shutdown_signal_1
    __rt_lib_shutdown_stdio_1
    __rt_lib_shutdown_user_alloc_1
        0x00000116:    bd10        ..      POP      {r4,pc}
    .ARM.Collect$$rtentry$$00000000
    .ARM.Collect$$rtentry$$00000002
    .ARM.Collect$$rtentry$$00000004
    __rt_entry
    __rt_entry_presh_1
    __rt_entry_sh
        0x00000118:    f000f852    ..R.    BL       __user_setup_stackheap ; 0x1c0
        0x0000011c:    4611        .F      MOV      r1,r2
    .ARM.Collect$$rtentry$$00000009
    .ARM.Collect$$rtentry$$0000000A
    __rt_entry_li
    __rt_entry_postsh_1
        0x0000011e:    f7fffff5    ....    BL       __rt_lib_init ; 0x10c
    .ARM.Collect$$rtentry$$0000000C
    .ARM.Collect$$rtentry$$0000000D
    __rt_entry_main
    __rt_entry_postli_1
        0x00000122:    f000fff5    ....    BL       main ; 0x1110
        0x00000126:    f000f870    ..p.    BL       exit ; 0x20a
    .ARM.Collect$$rtexit$$00000000
    __rt_exit
        0x0000012a:    b403        ..      PUSH     {r0,r1}
    .ARM.Collect$$rtexit$$00000002
    .ARM.Collect$$rtexit$$00000003
    __rt_exit_ls
    __rt_exit_prels_1
        0x0000012c:    f7fffff2    ....    BL       __rt_lib_shutdown ; 0x114
    .ARM.Collect$$rtexit$$00000004
    __rt_exit_exit
        0x00000130:    bc03        ..      POP      {r0,r1}
        0x00000132:    f000f877    ..w.    BL       _sys_exit ; 0x224
        0x00000136:    0000        ..      MOVS     r0,r0
    .emb_text
    $v0
    am_fault_isr
        0x00000138:    b580        ..      PUSH     {r7,lr}
        0x0000013a:    4668        hF      MOV      r0,sp
        0x0000013c:    3008        .0      ADDS     r0,r0,#8
        0x0000013e:    f000fc3f    ..?.    BL       am_util_faultisr_collect_data ; 0x9c0
        0x00000142:    bd01        ..      POP      {r0,pc}
    getStackedReg
        0x00000144:    0080        ..      LSLS     r0,r0,#2
        0x00000146:    1840        @.      ADDS     r0,r0,r1
        0x00000148:    6800        .h      LDR      r0,[r0,#0]
        0x0000014a:    4770        pG      BX       lr
    .emb_text
    $v0
    am_hal_flash_delay
        0x0000014c:    3801        .8      SUBS     r0,#1
        0x0000014e:    d1fd        ..      BNE      am_hal_flash_delay ; 0x14c
        0x00000150:    4770        pG      BX       lr
        0x00000152:    0000        ..      MOVS     r0,r0
    .text
    $v0
    __user_initial_stackheap
        0x00000154:    4802        .H      LDR      r0,[pc,#8] ; [0x160] = 0x10000198
        0x00000156:    4903        .I      LDR      r1,[pc,#12] ; [0x164] = 0x10001198
        0x00000158:    4a01        .J      LDR      r2,[pc,#4] ; [0x160] = 0x10000198
        0x0000015a:    4b03        .K      LDR      r3,[pc,#12] ; [0x168] = 0x10000198
        0x0000015c:    4770        pG      BX       lr
    $d
        0x0000015e:    0000        ..      DCW    0
        0x00000160:    10000198    ....    DCD    268435864
        0x00000164:    10001198    ....    DCD    268439960
        0x00000168:    10000198    ....    DCD    268435864
    $t
    .text
    __aeabi_memclr4
    __aeabi_memclr8
    __rt_memclr_w
        0x0000016c:    f04f0200    O...    MOV      r2,#0
    _memset_w
        0x00000170:    b500        ..      PUSH     {lr}
        0x00000172:    4613        .F      MOV      r3,r2
        0x00000174:    4694        .F      MOV      r12,r2
        0x00000176:    4696        .F      MOV      lr,r2
        0x00000178:    3920         9      SUBS     r1,r1,#0x20
        0x0000017a:    bf22        ".      ITTT     CS
        0x0000017c:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x00000180:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x00000184:    f1b10120    .. .    SUBSCS   r1,r1,#0x20
        0x00000188:    f4bfaff7    ....    BCS.W    0x17a ; _memset_w + 10
        0x0000018c:    0709        ..      LSLS     r1,r1,#28
        0x0000018e:    bf28        (.      IT       CS
        0x00000190:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x00000194:    bf48        H.      IT       MI
        0x00000196:    c00c        ..      STMMI    r0!,{r2,r3}
        0x00000198:    f85deb04    ]...    POP      {lr}
        0x0000019c:    0089        ..      LSLS     r1,r1,#2
        0x0000019e:    bf28        (.      IT       CS
        0x000001a0:    f8402b04    @..+    STRCS    r2,[r0],#4
        0x000001a4:    bf08        ..      IT       EQ
        0x000001a6:    4770        pG      BXEQ     lr
        0x000001a8:    bf48        H.      IT       MI
        0x000001aa:    f8202b02     ..+    STRHMI   r2,[r0],#2
        0x000001ae:    f0114f80    ...O    TST      r1,#0x40000000
        0x000001b2:    bf18        ..      IT       NE
        0x000001b4:    f8002b01    ...+    STRBNE   r2,[r0],#1
        0x000001b8:    4770        pG      BX       lr
    .text
    __use_two_region_memory
        0x000001ba:    4770        pG      BX       lr
    __rt_heap_escrow$2region
        0x000001bc:    4770        pG      BX       lr
    __rt_heap_expand$2region
        0x000001be:    4770        pG      BX       lr
    .text
    __user_setup_stackheap
        0x000001c0:    4675        uF      MOV      r5,lr
        0x000001c2:    f000f82b    ..+.    BL       __user_libspace ; 0x21c
        0x000001c6:    46ae        .F      MOV      lr,r5
        0x000001c8:    0005        ..      MOVS     r5,r0
        0x000001ca:    4669        iF      MOV      r1,sp
        0x000001cc:    4653        SF      MOV      r3,r10
        0x000001ce:    f0200007     ...    BIC      r0,r0,#7
        0x000001d2:    4685        .F      MOV      sp,r0
        0x000001d4:    b018        ..      ADD      sp,sp,#0x60
        0x000001d6:    b520         .      PUSH     {r5,lr}
        0x000001d8:    f7ffffbc    ....    BL       __user_initial_stackheap ; 0x154
        0x000001dc:    e8bd4020    .. @    POP      {r5,lr}
        0x000001e0:    f04f0600    O...    MOV      r6,#0
        0x000001e4:    f04f0700    O...    MOV      r7,#0
        0x000001e8:    f04f0800    O...    MOV      r8,#0
        0x000001ec:    f04f0b00    O...    MOV      r11,#0
        0x000001f0:    f0210107    !...    BIC      r1,r1,#7
        0x000001f4:    46ac        .F      MOV      r12,r5
        0x000001f6:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x000001fa:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x000001fe:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x00000202:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x00000206:    468d        .F      MOV      sp,r1
        0x00000208:    4770        pG      BX       lr
    .text
    exit
        0x0000020a:    b510        ..      PUSH     {r4,lr}
        0x0000020c:    4604        .F      MOV      r4,r0
        0x0000020e:    f3af8000    ....    NOP.W    
        0x00000212:    4620         F      MOV      r0,r4
        0x00000214:    e8bd4010    ...@    POP      {r4,lr}
        0x00000218:    f7ffbf87    ....    B.W      __rt_exit ; 0x12a
    .text
    __user_libspace
    __user_perproc_libspace
    __user_perthread_libspace
        0x0000021c:    4800        .H      LDR      r0,[pc,#0] ; [0x220] = 0x10000134
        0x0000021e:    4770        pG      BX       lr
    $d
        0x00000220:    10000134    4...    DCD    268435764
    $t
    .text
    _sys_exit
        0x00000224:    4901        .I      LDR      r1,[pc,#4] ; [0x22c] = 0x20026
        0x00000226:    2018        .       MOVS     r0,#0x18
        0x00000228:    beab        ..      BKPT     #0xab
        0x0000022a:    e7fe        ..      B        0x22a ; _sys_exit + 6
    $d
        0x0000022c:    00020026    &...    DCD    131110
    $t
    .text
    __I$use$semihosting
    __use_no_semihosting_swi
        0x00000230:    4770        pG      BX       lr
    .text
    __semihosting_library_function
        0x00000232:    0000        ..      MOVS     r0,r0
    i.am_bsp_debug_printf_disable
    am_bsp_debug_printf_disable
        0x00000234:    480e        .H      LDR      r0,[pc,#56] ; [0x270] = 0x10000008
        0x00000236:    6800        .h      LDR      r0,[r0,#0]
        0x00000238:    f0100f01    ....    TST      r0,#1
        0x0000023c:    bf18        ..      IT       NE
        0x0000023e:    4770        pG      BXNE     lr
        0x00000240:    b510        ..      PUSH     {r4,lr}
        0x00000242:    f000faeb    ....    BL       am_hal_itm_not_busy ; 0x81c
        0x00000246:    480b        .H      LDR      r0,[pc,#44] ; [0x274] = 0x40010000
        0x00000248:    2173        s!      MOVS     r1,#0x73
        0x0000024a:    6601        .f      STR      r1,[r0,#0x60]
        0x0000024c:    6d41        Am      LDR      r1,[r0,#0x54]
        0x0000024e:    f0210170    !.p.    BIC      r1,r1,#0x70
        0x00000252:    f0410120    A. .    ORR      r1,r1,#0x20
        0x00000256:    6541        Ae      STR      r1,[r0,#0x54]
        0x00000258:    6a81        .j      LDR      r1,[r0,#0x28]
        0x0000025a:    f421417f    !..A    BIC      r1,r1,#0xff00
        0x0000025e:    f44151c0    A..Q    ORR      r1,r1,#0x1800
        0x00000262:    6281        .b      STR      r1,[r0,#0x28]
        0x00000264:    2100        .!      MOVS     r1,#0
        0x00000266:    6601        .f      STR      r1,[r0,#0x60]
        0x00000268:    e8bd4010    ...@    POP      {r4,lr}
        0x0000026c:    f000bb4e    ..N.    B.W      am_hal_tpiu_disable ; 0x90c
    $d
        0x00000270:    10000008    ....    DCD    268435464
        0x00000274:    40010000    ...@    DCD    1073807360
    $t
    i.am_bsp_debug_printf_enable
    am_bsp_debug_printf_enable
        0x00000278:    480e        .H      LDR      r0,[pc,#56] ; [0x2b4] = 0x10000008
        0x0000027a:    6800        .h      LDR      r0,[r0,#0]
        0x0000027c:    f0100f01    ....    TST      r0,#1
        0x00000280:    bf18        ..      IT       NE
        0x00000282:    4770        pG      BXNE     lr
        0x00000284:    b500        ..      PUSH     {lr}
        0x00000286:    b085        ..      SUB      sp,sp,#0x14
        0x00000288:    480b        .H      LDR      r0,[pc,#44] ; [0x2b8] = 0xf4240
        0x0000028a:    9000        ..      STR      r0,[sp,#0]
        0x0000028c:    4668        hF      MOV      r0,sp
        0x0000028e:    f000fb45    ..E.    BL       am_hal_tpiu_enable ; 0x91c
        0x00000292:    480a        .H      LDR      r0,[pc,#40] ; [0x2bc] = 0x40010000
        0x00000294:    2173        s!      MOVS     r1,#0x73
        0x00000296:    6601        .f      STR      r1,[r0,#0x60]
        0x00000298:    6d41        Am      LDR      r1,[r0,#0x54]
        0x0000029a:    f0210170    !.p.    BIC      r1,r1,#0x70
        0x0000029e:    6541        Ae      STR      r1,[r0,#0x54]
        0x000002a0:    6a81        .j      LDR      r1,[r0,#0x28]
        0x000002a2:    f421417f    !..A    BIC      r1,r1,#0xff00
        0x000002a6:    f4415180    A..Q    ORR      r1,r1,#0x1000
        0x000002aa:    6281        .b      STR      r1,[r0,#0x28]
        0x000002ac:    2100        .!      MOVS     r1,#0
        0x000002ae:    6601        .f      STR      r1,[r0,#0x60]
        0x000002b0:    b005        ..      ADD      sp,sp,#0x14
        0x000002b2:    bd00        ..      POP      {pc}
    $d
        0x000002b4:    10000008    ....    DCD    268435464
        0x000002b8:    000f4240    @B..    DCD    1000000
        0x000002bc:    40010000    ...@    DCD    1073807360
    $t
    i.am_bsp_itm_string_print
    am_bsp_itm_string_print
        0x000002c0:    f000bac2    ....    B.W      am_hal_itm_print ; 0x848
    i.am_bsp_low_power_init
    am_bsp_low_power_init
        0x000002c4:    b510        ..      PUSH     {r4,lr}
        0x000002c6:    f000fadf    ....    BL       am_hal_mcuctrl_bucks_enable ; 0x888
        0x000002ca:    f000fb73    ..s.    BL       am_hal_vcomp_disable ; 0x9b4
        0x000002ce:    2001        .       MOVS     r0,#1
        0x000002d0:    f000fb11    ....    BL       am_hal_rtc_osc_select ; 0x8f6
        0x000002d4:    2001        .       MOVS     r0,#1
        0x000002d6:    f000fa1a    ....    BL       am_hal_clkgen_osc_stop ; 0x70e
        0x000002da:    f000fb05    ....    BL       am_hal_rtc_osc_disable ; 0x8e8
        0x000002de:    e8bd4010    ...@    POP      {r4,lr}
        0x000002e2:    f000bac9    ....    B.W      am_hal_mcuctrl_bandgap_disable ; 0x878
    i.am_devices_led_array_init
    am_devices_led_array_init
        0x000002e6:    b570        p.      PUSH     {r4-r6,lr}
        0x000002e8:    4605        .F      MOV      r5,r0
        0x000002ea:    460e        .F      MOV      r6,r1
        0x000002ec:    b10d        ..      CBZ      r5,0x2f2 ; am_devices_led_array_init + 12
        0x000002ee:    2e1f        ..      CMP      r6,#0x1f
        0x000002f0:    d900        ..      BLS      0x2f4 ; am_devices_led_array_init + 14
        0x000002f2:    bd70        p.      POP      {r4-r6,pc}
        0x000002f4:    2400        .$      MOVS     r4,#0
        0x000002f6:    e004        ..      B        0x302 ; am_devices_led_array_init + 28
        0x000002f8:    eb0500c4    ....    ADD      r0,r5,r4,LSL #3
        0x000002fc:    f000f806    ....    BL       am_devices_led_init ; 0x30c
        0x00000300:    1c64        d.      ADDS     r4,r4,#1
        0x00000302:    42b4        .B      CMP      r4,r6
        0x00000304:    d3f8        ..      BCC      0x2f8 ; am_devices_led_array_init + 18
        0x00000306:    bf00        ..      NOP      
        0x00000308:    e7f3        ..      B        0x2f2 ; am_devices_led_array_init + 12
        0x0000030a:    0000        ..      MOVS     r0,r0
    i.am_devices_led_init
    am_devices_led_init
        0x0000030c:    b110        ..      CBZ      r0,0x314 ; am_devices_led_init + 8
        0x0000030e:    6801        .h      LDR      r1,[r0,#0]
        0x00000310:    2932        2)      CMP      r1,#0x32
        0x00000312:    d300        ..      BCC      0x316 ; am_devices_led_init + 10
        0x00000314:    4770        pG      BX       lr
        0x00000316:    7901        .y      LDRB     r1,[r0,#4]
        0x00000318:    f0010102    ....    AND      r1,r1,#2
        0x0000031c:    2900        .)      CMP      r1,#0
        0x0000031e:    d073        s.      BEQ      0x408 ; am_devices_led_init + 252
        0x00000320:    bf00        ..      NOP      
        0x00000322:    6801        .h      LDR      r1,[r0,#0]
        0x00000324:    2900        .)      CMP      r1,#0
        0x00000326:    da00        ..      BGE      0x32a ; am_devices_led_init + 30
        0x00000328:    e035        5.      B        0x396 ; am_devices_led_init + 138
        0x0000032a:    2173        s!      MOVS     r1,#0x73
        0x0000032c:    4a70        pJ      LDR      r2,[pc,#448] ; [0x4f0] = 0x40010000
        0x0000032e:    6611        .f      STR      r1,[r2,#0x60]
        0x00000330:    7801        .x      LDRB     r1,[r0,#0]
        0x00000332:    f00101f8    ....    AND      r1,r1,#0xf8
        0x00000336:    eb020151    ..Q.    ADD      r1,r2,r1,LSR #1
        0x0000033a:    6c09        .l      LDR      r1,[r1,#0x40]
        0x0000033c:    7802        .x      LDRB     r2,[r0,#0]
        0x0000033e:    0752        R.      LSLS     r2,r2,#29
        0x00000340:    0ed3        ..      LSRS     r3,r2,#27
        0x00000342:    2207        ."      MOVS     r2,#7
        0x00000344:    409a        .@      LSLS     r2,r2,r3
        0x00000346:    4391        .C      BICS     r1,r1,r2
        0x00000348:    7802        .x      LDRB     r2,[r0,#0]
        0x0000034a:    0752        R.      LSLS     r2,r2,#29
        0x0000034c:    0ed3        ..      LSRS     r3,r2,#27
        0x0000034e:    2202        ."      MOVS     r2,#2
        0x00000350:    409a        .@      LSLS     r2,r2,r3
        0x00000352:    4311        .C      ORRS     r1,r1,r2
        0x00000354:    7802        .x      LDRB     r2,[r0,#0]
        0x00000356:    f00202f8    ....    AND      r2,r2,#0xf8
        0x0000035a:    4b65        eK      LDR      r3,[pc,#404] ; [0x4f0] = 0x40010000
        0x0000035c:    eb030252    ..R.    ADD      r2,r3,r2,LSR #1
        0x00000360:    6411        .d      STR      r1,[r2,#0x40]
        0x00000362:    7801        .x      LDRB     r1,[r0,#0]
        0x00000364:    f00101fc    ....    AND      r1,r1,#0xfc
        0x00000368:    461a        .F      MOV      r2,r3
        0x0000036a:    5889        .X      LDR      r1,[r1,r2]
        0x0000036c:    7802        .x      LDRB     r2,[r0,#0]
        0x0000036e:    0792        ..      LSLS     r2,r2,#30
        0x00000370:    0ed3        ..      LSRS     r3,r2,#27
        0x00000372:    22ff        ."      MOVS     r2,#0xff
        0x00000374:    409a        .@      LSLS     r2,r2,r3
        0x00000376:    4391        .C      BICS     r1,r1,r2
        0x00000378:    7802        .x      LDRB     r2,[r0,#0]
        0x0000037a:    0792        ..      LSLS     r2,r2,#30
        0x0000037c:    0ed3        ..      LSRS     r3,r2,#27
        0x0000037e:    2218        ."      MOVS     r2,#0x18
        0x00000380:    409a        .@      LSLS     r2,r2,r3
        0x00000382:    4311        .C      ORRS     r1,r1,r2
        0x00000384:    7802        .x      LDRB     r2,[r0,#0]
        0x00000386:    f00202fc    ....    AND      r2,r2,#0xfc
        0x0000038a:    4b59        YK      LDR      r3,[pc,#356] ; [0x4f0] = 0x40010000
        0x0000038c:    50d1        .P      STR      r1,[r2,r3]
        0x0000038e:    2100        .!      MOVS     r1,#0
        0x00000390:    461a        .F      MOV      r2,r3
        0x00000392:    6611        .f      STR      r1,[r2,#0x60]
        0x00000394:    bf00        ..      NOP      
        0x00000396:    bf00        ..      NOP      
        0x00000398:    7801        .x      LDRB     r1,[r0,#0]
        0x0000039a:    f001021f    ....    AND      r2,r1,#0x1f
        0x0000039e:    2101        .!      MOVS     r1,#1
        0x000003a0:    4091        .@      LSLS     r1,r1,r2
        0x000003a2:    7802        .x      LDRB     r2,[r0,#0]
        0x000003a4:    f0020220    .. .    AND      r2,r2,#0x20
        0x000003a8:    4b51        QK      LDR      r3,[pc,#324] ; [0x4f0] = 0x40010000
        0x000003aa:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000003ae:    f8c210b4    ....    STR      r1,[r2,#0xb4]
        0x000003b2:    7901        .y      LDRB     r1,[r0,#4]
        0x000003b4:    f0010101    ....    AND      r1,r1,#1
        0x000003b8:    b171        q.      CBZ      r1,0x3d8 ; am_devices_led_init + 204
        0x000003ba:    7801        .x      LDRB     r1,[r0,#0]
        0x000003bc:    f0010120    .. .    AND      r1,r1,#0x20
        0x000003c0:    461a        .F      MOV      r2,r3
        0x000003c2:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000003c6:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x000003ca:    7802        .x      LDRB     r2,[r0,#0]
        0x000003cc:    f002031f    ....    AND      r3,r2,#0x1f
        0x000003d0:    2201        ."      MOVS     r2,#1
        0x000003d2:    409a        .@      LSLS     r2,r2,r3
        0x000003d4:    4311        .C      ORRS     r1,r1,r2
        0x000003d6:    e00d        ..      B        0x3f4 ; am_devices_led_init + 232
        0x000003d8:    7801        .x      LDRB     r1,[r0,#0]
        0x000003da:    f0010120    .. .    AND      r1,r1,#0x20
        0x000003de:    4a44        DJ      LDR      r2,[pc,#272] ; [0x4f0] = 0x40010000
        0x000003e0:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000003e4:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x000003e8:    7802        .x      LDRB     r2,[r0,#0]
        0x000003ea:    f002031f    ....    AND      r3,r2,#0x1f
        0x000003ee:    2201        ."      MOVS     r2,#1
        0x000003f0:    409a        .@      LSLS     r2,r2,r3
        0x000003f2:    4391        .C      BICS     r1,r1,r2
        0x000003f4:    7802        .x      LDRB     r2,[r0,#0]
        0x000003f6:    f0020220    .. .    AND      r2,r2,#0x20
        0x000003fa:    4b3d        =K      LDR      r3,[pc,#244] ; [0x4f0] = 0x40010000
        0x000003fc:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x00000400:    f8c21088    ....    STR      r1,[r2,#0x88]
        0x00000404:    e072        r.      B        0x4ec ; am_devices_led_init + 480
        0x00000406:    e7ff        ..      B        0x408 ; am_devices_led_init + 252
        0x00000408:    bf00        ..      NOP      
        0x0000040a:    6801        .h      LDR      r1,[r0,#0]
        0x0000040c:    2900        .)      CMP      r1,#0
        0x0000040e:    da00        ..      BGE      0x412 ; am_devices_led_init + 262
        0x00000410:    e035        5.      B        0x47e ; am_devices_led_init + 370
        0x00000412:    2173        s!      MOVS     r1,#0x73
        0x00000414:    4a36        6J      LDR      r2,[pc,#216] ; [0x4f0] = 0x40010000
        0x00000416:    6611        .f      STR      r1,[r2,#0x60]
        0x00000418:    7801        .x      LDRB     r1,[r0,#0]
        0x0000041a:    f00101f8    ....    AND      r1,r1,#0xf8
        0x0000041e:    eb020151    ..Q.    ADD      r1,r2,r1,LSR #1
        0x00000422:    6c09        .l      LDR      r1,[r1,#0x40]
        0x00000424:    7802        .x      LDRB     r2,[r0,#0]
        0x00000426:    0752        R.      LSLS     r2,r2,#29
        0x00000428:    0ed3        ..      LSRS     r3,r2,#27
        0x0000042a:    2207        ."      MOVS     r2,#7
        0x0000042c:    409a        .@      LSLS     r2,r2,r3
        0x0000042e:    4391        .C      BICS     r1,r1,r2
        0x00000430:    7802        .x      LDRB     r2,[r0,#0]
        0x00000432:    0752        R.      LSLS     r2,r2,#29
        0x00000434:    0ed3        ..      LSRS     r3,r2,#27
        0x00000436:    2206        ."      MOVS     r2,#6
        0x00000438:    409a        .@      LSLS     r2,r2,r3
        0x0000043a:    4311        .C      ORRS     r1,r1,r2
        0x0000043c:    7802        .x      LDRB     r2,[r0,#0]
        0x0000043e:    f00202f8    ....    AND      r2,r2,#0xf8
        0x00000442:    4b2b        +K      LDR      r3,[pc,#172] ; [0x4f0] = 0x40010000
        0x00000444:    eb030252    ..R.    ADD      r2,r3,r2,LSR #1
        0x00000448:    6411        .d      STR      r1,[r2,#0x40]
        0x0000044a:    7801        .x      LDRB     r1,[r0,#0]
        0x0000044c:    f00101fc    ....    AND      r1,r1,#0xfc
        0x00000450:    461a        .F      MOV      r2,r3
        0x00000452:    5889        .X      LDR      r1,[r1,r2]
        0x00000454:    7802        .x      LDRB     r2,[r0,#0]
        0x00000456:    0792        ..      LSLS     r2,r2,#30
        0x00000458:    0ed3        ..      LSRS     r3,r2,#27
        0x0000045a:    22ff        ."      MOVS     r2,#0xff
        0x0000045c:    409a        .@      LSLS     r2,r2,r3
        0x0000045e:    4391        .C      BICS     r1,r1,r2
        0x00000460:    7802        .x      LDRB     r2,[r0,#0]
        0x00000462:    0792        ..      LSLS     r2,r2,#30
        0x00000464:    0ed3        ..      LSRS     r3,r2,#27
        0x00000466:    2218        ."      MOVS     r2,#0x18
        0x00000468:    409a        .@      LSLS     r2,r2,r3
        0x0000046a:    4311        .C      ORRS     r1,r1,r2
        0x0000046c:    7802        .x      LDRB     r2,[r0,#0]
        0x0000046e:    f00202fc    ....    AND      r2,r2,#0xfc
        0x00000472:    4b1f        .K      LDR      r3,[pc,#124] ; [0x4f0] = 0x40010000
        0x00000474:    50d1        .P      STR      r1,[r2,r3]
        0x00000476:    2100        .!      MOVS     r1,#0
        0x00000478:    461a        .F      MOV      r2,r3
        0x0000047a:    6611        .f      STR      r1,[r2,#0x60]
        0x0000047c:    bf00        ..      NOP      
        0x0000047e:    bf00        ..      NOP      
        0x00000480:    7801        .x      LDRB     r1,[r0,#0]
        0x00000482:    f001021f    ....    AND      r2,r1,#0x1f
        0x00000486:    2101        .!      MOVS     r1,#1
        0x00000488:    4091        .@      LSLS     r1,r1,r2
        0x0000048a:    7802        .x      LDRB     r2,[r0,#0]
        0x0000048c:    f0020220    .. .    AND      r2,r2,#0x20
        0x00000490:    4b17        .K      LDR      r3,[pc,#92] ; [0x4f0] = 0x40010000
        0x00000492:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x00000496:    f8c210b4    ....    STR      r1,[r2,#0xb4]
        0x0000049a:    7901        .y      LDRB     r1,[r0,#4]
        0x0000049c:    f0010101    ....    AND      r1,r1,#1
        0x000004a0:    b171        q.      CBZ      r1,0x4c0 ; am_devices_led_init + 436
        0x000004a2:    7801        .x      LDRB     r1,[r0,#0]
        0x000004a4:    f0010120    .. .    AND      r1,r1,#0x20
        0x000004a8:    461a        .F      MOV      r2,r3
        0x000004aa:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000004ae:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x000004b2:    7802        .x      LDRB     r2,[r0,#0]
        0x000004b4:    f002031f    ....    AND      r3,r2,#0x1f
        0x000004b8:    2201        ."      MOVS     r2,#1
        0x000004ba:    409a        .@      LSLS     r2,r2,r3
        0x000004bc:    4311        .C      ORRS     r1,r1,r2
        0x000004be:    e00d        ..      B        0x4dc ; am_devices_led_init + 464
        0x000004c0:    7801        .x      LDRB     r1,[r0,#0]
        0x000004c2:    f0010120    .. .    AND      r1,r1,#0x20
        0x000004c6:    4a0a        .J      LDR      r2,[pc,#40] ; [0x4f0] = 0x40010000
        0x000004c8:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000004cc:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x000004d0:    7802        .x      LDRB     r2,[r0,#0]
        0x000004d2:    f002031f    ....    AND      r3,r2,#0x1f
        0x000004d6:    2201        ."      MOVS     r2,#1
        0x000004d8:    409a        .@      LSLS     r2,r2,r3
        0x000004da:    4391        .C      BICS     r1,r1,r2
        0x000004dc:    7802        .x      LDRB     r2,[r0,#0]
        0x000004de:    f0020220    .. .    AND      r2,r2,#0x20
        0x000004e2:    4b03        .K      LDR      r3,[pc,#12] ; [0x4f0] = 0x40010000
        0x000004e4:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000004e8:    f8c21088    ....    STR      r1,[r2,#0x88]
        0x000004ec:    bf00        ..      NOP      
        0x000004ee:    e711        ..      B        0x314 ; am_devices_led_init + 8
    $d
        0x000004f0:    40010000    ...@    DCD    1073807360
    $t
    i.am_devices_led_off
    am_devices_led_off
        0x000004f4:    b510        ..      PUSH     {r4,lr}
        0x000004f6:    b128        (.      CBZ      r0,0x504 ; am_devices_led_off + 16
        0x000004f8:    291f        .)      CMP      r1,#0x1f
        0x000004fa:    d203        ..      BCS      0x504 ; am_devices_led_off + 16
        0x000004fc:    f8502031    P.1     LDR      r2,[r0,r1,LSL #3]
        0x00000500:    2a32        2*      CMP      r2,#0x32
        0x00000502:    d300        ..      BCC      0x506 ; am_devices_led_off + 18
        0x00000504:    bd10        ..      POP      {r4,pc}
        0x00000506:    eb0002c1    ....    ADD      r2,r0,r1,LSL #3
        0x0000050a:    7912        .y      LDRB     r2,[r2,#4]
        0x0000050c:    f0020202    ....    AND      r2,r2,#2
        0x00000510:    b382        ..      CBZ      r2,0x574 ; am_devices_led_off + 128
        0x00000512:    eb0002c1    ....    ADD      r2,r0,r1,LSL #3
        0x00000516:    7912        .y      LDRB     r2,[r2,#4]
        0x00000518:    f0020201    ....    AND      r2,r2,#1
        0x0000051c:    b982        ..      CBNZ     r2,0x540 ; am_devices_led_off + 76
        0x0000051e:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x00000522:    f0020220    .. .    AND      r2,r2,#0x20
        0x00000526:    4b1c        .K      LDR      r3,[pc,#112] ; [0x598] = 0x40010000
        0x00000528:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x0000052c:    f8d22088    ...     LDR      r2,[r2,#0x88]
        0x00000530:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x00000534:    f003041f    ....    AND      r4,r3,#0x1f
        0x00000538:    2301        .#      MOVS     r3,#1
        0x0000053a:    40a3        .@      LSLS     r3,r3,r4
        0x0000053c:    431a        .C      ORRS     r2,r2,r3
        0x0000053e:    e00f        ..      B        0x560 ; am_devices_led_off + 108
        0x00000540:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x00000544:    f0020220    .. .    AND      r2,r2,#0x20
        0x00000548:    4b13        .K      LDR      r3,[pc,#76] ; [0x598] = 0x40010000
        0x0000054a:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x0000054e:    f8d22088    ...     LDR      r2,[r2,#0x88]
        0x00000552:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x00000556:    f003041f    ....    AND      r4,r3,#0x1f
        0x0000055a:    2301        .#      MOVS     r3,#1
        0x0000055c:    40a3        .@      LSLS     r3,r3,r4
        0x0000055e:    439a        .C      BICS     r2,r2,r3
        0x00000560:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x00000564:    f0030320    .. .    AND      r3,r3,#0x20
        0x00000568:    4c0b        .L      LDR      r4,[pc,#44] ; [0x598] = 0x40010000
        0x0000056a:    eb0403d3    ....    ADD      r3,r4,r3,LSR #3
        0x0000056e:    f8c32088    ...     STR      r2,[r3,#0x88]
        0x00000572:    e00f        ..      B        0x594 ; am_devices_led_off + 160
        0x00000574:    e7ff        ..      B        0x576 ; am_devices_led_off + 130
        0x00000576:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x0000057a:    f002031f    ....    AND      r3,r2,#0x1f
        0x0000057e:    2201        ."      MOVS     r2,#1
        0x00000580:    409a        .@      LSLS     r2,r2,r3
        0x00000582:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x00000586:    f0030320    .. .    AND      r3,r3,#0x20
        0x0000058a:    4c03        .L      LDR      r4,[pc,#12] ; [0x598] = 0x40010000
        0x0000058c:    eb0403d3    ....    ADD      r3,r4,r3,LSR #3
        0x00000590:    f8c320b4    ...     STR      r2,[r3,#0xb4]
        0x00000594:    bf00        ..      NOP      
        0x00000596:    e7b5        ..      B        0x504 ; am_devices_led_off + 16
    $d
        0x00000598:    40010000    ...@    DCD    1073807360
    $t
    i.am_devices_led_on
    am_devices_led_on
        0x0000059c:    b510        ..      PUSH     {r4,lr}
        0x0000059e:    b128        (.      CBZ      r0,0x5ac ; am_devices_led_on + 16
        0x000005a0:    291f        .)      CMP      r1,#0x1f
        0x000005a2:    d203        ..      BCS      0x5ac ; am_devices_led_on + 16
        0x000005a4:    f8502031    P.1     LDR      r2,[r0,r1,LSL #3]
        0x000005a8:    2a32        2*      CMP      r2,#0x32
        0x000005aa:    d300        ..      BCC      0x5ae ; am_devices_led_on + 18
        0x000005ac:    bd10        ..      POP      {r4,pc}
        0x000005ae:    eb0002c1    ....    ADD      r2,r0,r1,LSL #3
        0x000005b2:    7912        .y      LDRB     r2,[r2,#4]
        0x000005b4:    f0020202    ....    AND      r2,r2,#2
        0x000005b8:    b382        ..      CBZ      r2,0x61c ; am_devices_led_on + 128
        0x000005ba:    eb0002c1    ....    ADD      r2,r0,r1,LSL #3
        0x000005be:    7912        .y      LDRB     r2,[r2,#4]
        0x000005c0:    f0020201    ....    AND      r2,r2,#1
        0x000005c4:    b182        ..      CBZ      r2,0x5e8 ; am_devices_led_on + 76
        0x000005c6:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x000005ca:    f0020220    .. .    AND      r2,r2,#0x20
        0x000005ce:    4b1c        .K      LDR      r3,[pc,#112] ; [0x640] = 0x40010000
        0x000005d0:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000005d4:    f8d22088    ...     LDR      r2,[r2,#0x88]
        0x000005d8:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x000005dc:    f003041f    ....    AND      r4,r3,#0x1f
        0x000005e0:    2301        .#      MOVS     r3,#1
        0x000005e2:    40a3        .@      LSLS     r3,r3,r4
        0x000005e4:    431a        .C      ORRS     r2,r2,r3
        0x000005e6:    e00f        ..      B        0x608 ; am_devices_led_on + 108
        0x000005e8:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x000005ec:    f0020220    .. .    AND      r2,r2,#0x20
        0x000005f0:    4b13        .K      LDR      r3,[pc,#76] ; [0x640] = 0x40010000
        0x000005f2:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000005f6:    f8d22088    ...     LDR      r2,[r2,#0x88]
        0x000005fa:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x000005fe:    f003041f    ....    AND      r4,r3,#0x1f
        0x00000602:    2301        .#      MOVS     r3,#1
        0x00000604:    40a3        .@      LSLS     r3,r3,r4
        0x00000606:    439a        .C      BICS     r2,r2,r3
        0x00000608:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x0000060c:    f0030320    .. .    AND      r3,r3,#0x20
        0x00000610:    4c0b        .L      LDR      r4,[pc,#44] ; [0x640] = 0x40010000
        0x00000612:    eb0403d3    ....    ADD      r3,r4,r3,LSR #3
        0x00000616:    f8c32088    ...     STR      r2,[r3,#0x88]
        0x0000061a:    e00f        ..      B        0x63c ; am_devices_led_on + 160
        0x0000061c:    e7ff        ..      B        0x61e ; am_devices_led_on + 130
        0x0000061e:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x00000622:    f002031f    ....    AND      r3,r2,#0x1f
        0x00000626:    2201        ."      MOVS     r2,#1
        0x00000628:    409a        .@      LSLS     r2,r2,r3
        0x0000062a:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x0000062e:    f0030320    .. .    AND      r3,r3,#0x20
        0x00000632:    4c03        .L      LDR      r4,[pc,#12] ; [0x640] = 0x40010000
        0x00000634:    eb0403d3    ....    ADD      r3,r4,r3,LSR #3
        0x00000638:    f8c320a8    ...     STR      r2,[r3,#0xa8]
        0x0000063c:    bf00        ..      NOP      
        0x0000063e:    e7b5        ..      B        0x5ac ; am_devices_led_on + 16
    $d
        0x00000640:    40010000    ...@    DCD    1073807360
    $t
    i.am_devices_led_toggle
    am_devices_led_toggle
        0x00000644:    b570        p.      PUSH     {r4-r6,lr}
        0x00000646:    4604        .F      MOV      r4,r0
        0x00000648:    460d        .F      MOV      r5,r1
        0x0000064a:    b12c        ,.      CBZ      r4,0x658 ; am_devices_led_toggle + 20
        0x0000064c:    2d1f        .-      CMP      r5,#0x1f
        0x0000064e:    d203        ..      BCS      0x658 ; am_devices_led_toggle + 20
        0x00000650:    f8540035    T.5.    LDR      r0,[r4,r5,LSL #3]
        0x00000654:    2832        2(      CMP      r0,#0x32
        0x00000656:    d300        ..      BCC      0x65a ; am_devices_led_toggle + 22
        0x00000658:    bd70        p.      POP      {r4-r6,pc}
        0x0000065a:    eb0400c5    ....    ADD      r0,r4,r5,LSL #3
        0x0000065e:    7900        .y      LDRB     r0,[r0,#4]
        0x00000660:    f0000002    ....    AND      r0,r0,#2
        0x00000664:    b1c8        ..      CBZ      r0,0x69a ; am_devices_led_toggle + 86
        0x00000666:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x0000066a:    f0000020    .. .    AND      r0,r0,#0x20
        0x0000066e:    491e        .I      LDR      r1,[pc,#120] ; [0x6e8] = 0x40010000
        0x00000670:    eb0100d0    ....    ADD      r0,r1,r0,LSR #3
        0x00000674:    f8d00088    ....    LDR      r0,[r0,#0x88]
        0x00000678:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x0000067c:    f001021f    ....    AND      r2,r1,#0x1f
        0x00000680:    2101        .!      MOVS     r1,#1
        0x00000682:    4091        .@      LSLS     r1,r1,r2
        0x00000684:    4048        H@      EORS     r0,r0,r1
        0x00000686:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x0000068a:    f0010120    .. .    AND      r1,r1,#0x20
        0x0000068e:    4a16        .J      LDR      r2,[pc,#88] ; [0x6e8] = 0x40010000
        0x00000690:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x00000694:    f8c10088    ....    STR      r0,[r1,#0x88]
        0x00000698:    e023        #.      B        0x6e2 ; am_devices_led_toggle + 158
        0x0000069a:    f8540035    T.5.    LDR      r0,[r4,r5,LSL #3]
        0x0000069e:    f000f879    ..y.    BL       am_hal_gpio_out_enable_bit_get ; 0x794
        0x000006a2:    b178        x.      CBZ      r0,0x6c4 ; am_devices_led_toggle + 128
        0x000006a4:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x000006a8:    f000011f    ....    AND      r1,r0,#0x1f
        0x000006ac:    2001        .       MOVS     r0,#1
        0x000006ae:    4088        .@      LSLS     r0,r0,r1
        0x000006b0:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x000006b4:    f0010120    .. .    AND      r1,r1,#0x20
        0x000006b8:    4a0b        .J      LDR      r2,[pc,#44] ; [0x6e8] = 0x40010000
        0x000006ba:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000006be:    f8c100b4    ....    STR      r0,[r1,#0xb4]
        0x000006c2:    e00e        ..      B        0x6e2 ; am_devices_led_toggle + 158
        0x000006c4:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x000006c8:    f000011f    ....    AND      r1,r0,#0x1f
        0x000006cc:    2001        .       MOVS     r0,#1
        0x000006ce:    4088        .@      LSLS     r0,r0,r1
        0x000006d0:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x000006d4:    f0010120    .. .    AND      r1,r1,#0x20
        0x000006d8:    4a03        .J      LDR      r2,[pc,#12] ; [0x6e8] = 0x40010000
        0x000006da:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000006de:    f8c100a8    ....    STR      r0,[r1,#0xa8]
        0x000006e2:    bf00        ..      NOP      
        0x000006e4:    e7b8        ..      B        0x658 ; am_devices_led_toggle + 20
    $d
        0x000006e6:    0000        ..      DCW    0
        0x000006e8:    40010000    ...@    DCD    1073807360
    $t
    i.am_hal_clkgen_clkout_enable
    am_hal_clkgen_clkout_enable
        0x000006ec:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x000006f0:    f0400080    @...    ORR      r0,r0,#0x80
        0x000006f4:    6108        .a      STR      r0,[r1,#0x10]
        0x000006f6:    4770        pG      BX       lr
    i.am_hal_clkgen_osc_start
    am_hal_clkgen_osc_start
        0x000006f8:    f0100f03    ....    TST      r0,#3
        0x000006fc:    bf08        ..      IT       EQ
        0x000006fe:    4770        pG      BXEQ     lr
        0x00000700:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000704:    68ca        .h      LDR      r2,[r1,#0xc]
        0x00000706:    ea220000    "...    BIC      r0,r2,r0
        0x0000070a:    60c8        .`      STR      r0,[r1,#0xc]
        0x0000070c:    4770        pG      BX       lr
    i.am_hal_clkgen_osc_stop
    am_hal_clkgen_osc_stop
        0x0000070e:    f0100f03    ....    TST      r0,#3
        0x00000712:    bf08        ..      IT       EQ
        0x00000714:    4770        pG      BXEQ     lr
        0x00000716:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x0000071a:    68ca        .h      LDR      r2,[r1,#0xc]
        0x0000071c:    4310        .C      ORRS     r0,r0,r2
        0x0000071e:    60c8        .`      STR      r0,[r1,#0xc]
        0x00000720:    4770        pG      BX       lr
        0x00000722:    0000        ..      MOVS     r0,r0
    i.am_hal_clkgen_sysclk_get
    am_hal_clkgen_sysclk_get
        0x00000724:    f04f2040    O.@     MOV      r0,#0x40004000
        0x00000728:    6980        .i      LDR      r0,[r0,#0x18]
        0x0000072a:    f0000007    ....    AND      r0,r0,#7
        0x0000072e:    2808        .(      CMP      r0,#8
        0x00000730:    d215        ..      BCS      0x75e ; am_hal_clkgen_sysclk_get + 58
        0x00000732:    e8dff000    ....    TBB      [pc,r0]
    $d
        0x00000736:    0604        ..      DCW    1540
        0x00000738:    0e0c0a08    ....    DCD    235670024
        0x0000073c:    1210        ..      DCW    4624
    $t
        0x0000073e:    4809        .H      LDR      r0,[pc,#36] ; [0x764] = 0x16e3600
        0x00000740:    4770        pG      BX       lr
        0x00000742:    4809        .H      LDR      r0,[pc,#36] ; [0x768] = 0xb71b00
        0x00000744:    4770        pG      BX       lr
        0x00000746:    4809        .H      LDR      r0,[pc,#36] ; [0x76c] = 0x7a1200
        0x00000748:    4770        pG      BX       lr
        0x0000074a:    4809        .H      LDR      r0,[pc,#36] ; [0x770] = 0x5b8d80
        0x0000074c:    4770        pG      BX       lr
        0x0000074e:    4809        .H      LDR      r0,[pc,#36] ; [0x774] = 0x493e00
        0x00000750:    4770        pG      BX       lr
        0x00000752:    4809        .H      LDR      r0,[pc,#36] ; [0x778] = 0x3d0900
        0x00000754:    4770        pG      BX       lr
        0x00000756:    4809        .H      LDR      r0,[pc,#36] ; [0x77c] = 0x3450db
        0x00000758:    4770        pG      BX       lr
        0x0000075a:    4809        .H      LDR      r0,[pc,#36] ; [0x780] = 0x2dc6c0
        0x0000075c:    4770        pG      BX       lr
        0x0000075e:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x00000762:    4770        pG      BX       lr
    $d
        0x00000764:    016e3600    .6n.    DCD    24000000
        0x00000768:    00b71b00    ....    DCD    12000000
        0x0000076c:    007a1200    ..z.    DCD    8000000
        0x00000770:    005b8d80    ..[.    DCD    6000000
        0x00000774:    00493e00    .>I.    DCD    4800000
        0x00000778:    003d0900    ..=.    DCD    4000000
        0x0000077c:    003450db    .P4.    DCD    3428571
        0x00000780:    002dc6c0    ..-.    DCD    3000000
    $t
    i.am_hal_clkgen_sysclk_select
    am_hal_clkgen_sysclk_select
        0x00000784:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000788:    2247        G"      MOVS     r2,#0x47
        0x0000078a:    614a        Ja      STR      r2,[r1,#0x14]
        0x0000078c:    6188        .a      STR      r0,[r1,#0x18]
        0x0000078e:    2000        .       MOVS     r0,#0
        0x00000790:    6148        Ha      STR      r0,[r1,#0x14]
        0x00000792:    4770        pG      BX       lr
    i.am_hal_gpio_out_enable_bit_get
    am_hal_gpio_out_enable_bit_get
        0x00000794:    490a        .I      LDR      r1,[pc,#40] ; [0x7c0] = 0x40010000
        0x00000796:    2201        ."      MOVS     r2,#1
        0x00000798:    281f        .(      CMP      r0,#0x1f
        0x0000079a:    d908        ..      BLS      0x7ae ; am_hal_gpio_out_enable_bit_get + 26
        0x0000079c:    f8d110a4    ....    LDR      r1,[r1,#0xa4]
        0x000007a0:    3820         8      SUBS     r0,r0,#0x20
        0x000007a2:    fa02f000    ....    LSL      r0,r2,r0
        0x000007a6:    4008        .@      ANDS     r0,r0,r1
        0x000007a8:    bf08        ..      IT       EQ
        0x000007aa:    4770        pG      BXEQ     lr
        0x000007ac:    e006        ..      B        0x7bc ; am_hal_gpio_out_enable_bit_get + 40
        0x000007ae:    f8d110a0    ....    LDR      r1,[r1,#0xa0]
        0x000007b2:    fa02f000    ....    LSL      r0,r2,r0
        0x000007b6:    4008        .@      ANDS     r0,r0,r1
        0x000007b8:    bf08        ..      IT       EQ
        0x000007ba:    4770        pG      BXEQ     lr
        0x000007bc:    2001        .       MOVS     r0,#1
        0x000007be:    4770        pG      BX       lr
    $d
        0x000007c0:    40010000    ...@    DCD    1073807360
    $t
    i.am_hal_itm_enable
    am_hal_itm_enable
        0x000007c4:    480d        .H      LDR      r0,[pc,#52] ; [0x7fc] = 0x10000008
        0x000007c6:    6800        .h      LDR      r0,[r0,#0]
        0x000007c8:    f0100f01    ....    TST      r0,#1
        0x000007cc:    bf18        ..      IT       NE
        0x000007ce:    4770        pG      BXNE     lr
        0x000007d0:    480b        .H      LDR      r0,[pc,#44] ; [0x800] = 0xe000edfc
        0x000007d2:    6801        .h      LDR      r1,[r0,#0]
        0x000007d4:    f0417180    A..q    ORR      r1,r1,#0x1000000
        0x000007d8:    6001        .`      STR      r1,[r0,#0]
        0x000007da:    6801        .h      LDR      r1,[r0,#0]
        0x000007dc:    f0117f80    ....    TST      r1,#0x1000000
        0x000007e0:    d0fb        ..      BEQ      0x7da ; am_hal_itm_enable + 22
        0x000007e2:    4909        .I      LDR      r1,[pc,#36] ; [0x808] = 0xe0000fb0
        0x000007e4:    4807        .H      LDR      r0,[pc,#28] ; [0x804] = 0xc5acce55
        0x000007e6:    6008        .`      STR      r0,[r1,#0]
        0x000007e8:    4908        .I      LDR      r1,[pc,#32] ; [0x80c] = 0xe0000e40
        0x000007ea:    200f        .       MOVS     r0,#0xf
        0x000007ec:    6008        .`      STR      r0,[r1,#0]
        0x000007ee:    1748        H.      ASRS     r0,r1,#29
        0x000007f0:    4907        .I      LDR      r1,[pc,#28] ; [0x810] = 0xe0000e00
        0x000007f2:    6008        .`      STR      r0,[r1,#0]
        0x000007f4:    4908        .I      LDR      r1,[pc,#32] ; [0x818] = 0xe0000e80
        0x000007f6:    4807        .H      LDR      r0,[pc,#28] ; [0x814] = 0x150511
        0x000007f8:    6008        .`      STR      r0,[r1,#0]
        0x000007fa:    4770        pG      BX       lr
    $d
        0x000007fc:    10000008    ....    DCD    268435464
        0x00000800:    e000edfc    ....    DCD    3758157308
        0x00000804:    c5acce55    U...    DCD    3316436565
        0x00000808:    e0000fb0    ....    DCD    3758100400
        0x0000080c:    e0000e40    @...    DCD    3758100032
        0x00000810:    e0000e00    ....    DCD    3758099968
        0x00000814:    00150511    ....    DCD    1377553
        0x00000818:    e0000e80    ....    DCD    3758100096
    $t
    i.am_hal_itm_not_busy
    am_hal_itm_not_busy
        0x0000081c:    b510        ..      PUSH     {r4,lr}
        0x0000081e:    4808        .H      LDR      r0,[pc,#32] ; [0x840] = 0xe0000e80
        0x00000820:    6801        .h      LDR      r1,[r0,#0]
        0x00000822:    f4110f00    ....    TST      r1,#0x800000
        0x00000826:    d1fb        ..      BNE      0x820 ; am_hal_itm_not_busy + 4
        0x00000828:    f7ffff7c    ..|.    BL       am_hal_clkgen_sysclk_get ; 0x724
        0x0000082c:    4905        .I      LDR      r1,[pc,#20] ; [0x844] = 0x2dc6c0
        0x0000082e:    e8bd4010    ...@    POP      {r4,lr}
        0x00000832:    fbb0f0f1    ....    UDIV     r0,r0,r1
        0x00000836:    2132        2!      MOVS     r1,#0x32
        0x00000838:    4348        HC      MULS     r0,r1,r0
        0x0000083a:    f7ffbc87    ....    B.W      am_hal_flash_delay ; 0x14c
    $d
        0x0000083e:    0000        ..      DCW    0
        0x00000840:    e0000e80    ....    DCD    3758100096
        0x00000844:    002dc6c0    ..-.    DCD    3000000
    $t
    i.am_hal_itm_print
    am_hal_itm_print
        0x00000848:    7802        .x      LDRB     r2,[r0,#0]
        0x0000084a:    2100        .!      MOVS     r1,#0
        0x0000084c:    2a00        .*      CMP      r2,#0
        0x0000084e:    bf08        ..      IT       EQ
        0x00000850:    4770        pG      BXEQ     lr
        0x00000852:    1c49        I.      ADDS     r1,r1,#1
        0x00000854:    5c42        B\      LDRB     r2,[r0,r1]
        0x00000856:    2a00        .*      CMP      r2,#0
        0x00000858:    d1fb        ..      BNE      0x852 ; am_hal_itm_print + 10
        0x0000085a:    2900        .)      CMP      r1,#0
        0x0000085c:    bf08        ..      IT       EQ
        0x0000085e:    4770        pG      BXEQ     lr
        0x00000860:    f810cb01    ....    LDRB     r12,[r0],#1
        0x00000864:    f04f4260    O.`B    MOV      r2,#0xe0000000
        0x00000868:    6813        .h      LDR      r3,[r2,#0]
        0x0000086a:    2b00        .+      CMP      r3,#0
        0x0000086c:    d0fc        ..      BEQ      0x868 ; am_hal_itm_print + 32
        0x0000086e:    f882c000    ....    STRB     r12,[r2,#0]
        0x00000872:    1e49        I.      SUBS     r1,r1,#1
        0x00000874:    d1f4        ..      BNE      0x860 ; am_hal_itm_print + 24
        0x00000876:    4770        pG      BX       lr
    i.am_hal_mcuctrl_bandgap_disable
    am_hal_mcuctrl_bandgap_disable
        0x00000878:    4902        .I      LDR      r1,[pc,#8] ; [0x884] = 0x40020000
        0x0000087a:    f06f0001    o...    MVN      r0,#1
        0x0000087e:    f8c100fc    ....    STR      r0,[r1,#0xfc]
        0x00000882:    4770        pG      BX       lr
    $d
        0x00000884:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_bucks_enable
    am_hal_mcuctrl_bucks_enable
        0x00000888:    4808        .H      LDR      r0,[pc,#32] ; [0x8ac] = 0x40020000
        0x0000088a:    6901        .i      LDR      r1,[r0,#0x10]
        0x0000088c:    f0410102    A...    ORR      r1,r1,#2
        0x00000890:    6101        .a      STR      r1,[r0,#0x10]
        0x00000892:    6901        .i      LDR      r1,[r0,#0x10]
        0x00000894:    f0410101    A...    ORR      r1,r1,#1
        0x00000898:    6101        .a      STR      r1,[r0,#0x10]
        0x0000089a:    6941        Ai      LDR      r1,[r0,#0x14]
        0x0000089c:    f0110f02    ....    TST      r1,#2
        0x000008a0:    d0fb        ..      BEQ      0x89a ; am_hal_mcuctrl_bucks_enable + 18
        0x000008a2:    6941        Ai      LDR      r1,[r0,#0x14]
        0x000008a4:    f0110f01    ....    TST      r1,#1
        0x000008a8:    d0fb        ..      BEQ      0x8a2 ; am_hal_mcuctrl_bucks_enable + 26
        0x000008aa:    4770        pG      BX       lr
    $d
        0x000008ac:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_fault_status
    am_hal_mcuctrl_fault_status
        0x000008b0:    490c        .I      LDR      r1,[pc,#48] ; [0x8e4] = 0x40020000
        0x000008b2:    f8d121cc    ...!    LDR      r2,[r1,#0x1cc]
        0x000008b6:    f0020301    ....    AND      r3,r2,#1
        0x000008ba:    7003        .p      STRB     r3,[r0,#0]
        0x000008bc:    f3c20340    ..@.    UBFX     r3,r2,#1,#1
        0x000008c0:    7203        .r      STRB     r3,[r0,#8]
        0x000008c2:    f3c20280    ....    UBFX     r2,r2,#2,#1
        0x000008c6:    7402        .t      STRB     r2,[r0,#0x10]
        0x000008c8:    f8d121c4    ...!    LDR      r2,[r1,#0x1c4]
        0x000008cc:    60c2        .`      STR      r2,[r0,#0xc]
        0x000008ce:    6842        Bh      LDR      r2,[r0,#4]
        0x000008d0:    f8d131c0    ...1    LDR      r3,[r1,#0x1c0]
        0x000008d4:    431a        .C      ORRS     r2,r2,r3
        0x000008d6:    6042        B`      STR      r2,[r0,#4]
        0x000008d8:    6942        Bi      LDR      r2,[r0,#0x14]
        0x000008da:    f8d111c8    ....    LDR      r1,[r1,#0x1c8]
        0x000008de:    4311        .C      ORRS     r1,r1,r2
        0x000008e0:    6141        Aa      STR      r1,[r0,#0x14]
        0x000008e2:    4770        pG      BX       lr
    $d
        0x000008e4:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_rtc_osc_disable
    am_hal_rtc_osc_disable
        0x000008e8:    f04f2040    O.@     MOV      r0,#0x40004000
        0x000008ec:    6d01        .m      LDR      r1,[r0,#0x50]
        0x000008ee:    f0410110    A...    ORR      r1,r1,#0x10
        0x000008f2:    6501        .e      STR      r1,[r0,#0x50]
        0x000008f4:    4770        pG      BX       lr
    i.am_hal_rtc_osc_select
    am_hal_rtc_osc_select
        0x000008f6:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x000008fa:    2800        .(      CMP      r0,#0
        0x000008fc:    68c8        .h      LDR      r0,[r1,#0xc]
        0x000008fe:    bf14        ..      ITE      NE
        0x00000900:    f0400080    @...    ORRNE    r0,r0,#0x80
        0x00000904:    f0200080     ...    BICEQ    r0,r0,#0x80
        0x00000908:    60c8        .`      STR      r0,[r1,#0xc]
        0x0000090a:    4770        pG      BX       lr
    i.am_hal_tpiu_disable
    am_hal_tpiu_disable
        0x0000090c:    4902        .I      LDR      r1,[pc,#8] ; [0x918] = 0x40020000
        0x0000090e:    2000        .       MOVS     r0,#0
        0x00000910:    f8c10250    ..P.    STR      r0,[r1,#0x250]
        0x00000914:    4770        pG      BX       lr
    $d
        0x00000916:    0000        ..      DCW    0
        0x00000918:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_tpiu_enable
    am_hal_tpiu_enable
        0x0000091c:    e92d41f0    -..A    PUSH     {r4-r8,lr}
        0x00000920:    4c1e        .L      LDR      r4,[pc,#120] ; [0x99c] = 0xe0040000
        0x00000922:    2700        .'      MOVS     r7,#0
        0x00000924:    6805        .h      LDR      r5,[r0,#0]
        0x00000926:    f8c47304    ...s    STR      r7,[r4,#0x304]
        0x0000092a:    4e1d        .N      LDR      r6,[pc,#116] ; [0x9a0] = 0x40020000
        0x0000092c:    2101        .!      MOVS     r1,#1
        0x0000092e:    b335        5.      CBZ      r5,0x97e ; am_hal_tpiu_enable + 98
        0x00000930:    6061        a`      STR      r1,[r4,#4]
        0x00000932:    491c        .I      LDR      r1,[pc,#112] ; [0x9a4] = 0x1da381
        0x00000934:    f5a54061    ..a@    SUB      r0,r5,#0xe100
        0x00000938:    4288        .B      CMP      r0,r1
        0x0000093a:    bf28        (.      IT       CS
        0x0000093c:    4d1a        .M      LDRCS    r5,[pc,#104] ; [0x9a8] = 0xf4240
        0x0000093e:    f7fffef1    ....    BL       am_hal_clkgen_sysclk_get ; 0x724
        0x00000942:    f1b03fff    ...?    CMP      r0,#0xffffffff
        0x00000946:    bf1d        ..      ITTTE    NE
        0x00000948:    08c0        ..      LSRNE    r0,r0,#3
        0x0000094a:    fbb0f0f5    ....    UDIVNE   r0,r0,r5
        0x0000094e:    1e40        @.      SUBNE    r0,r0,#1
        0x00000950:    2002        .       MOVEQ    r0,#2
        0x00000952:    b280        ..      UXTH     r0,r0
        0x00000954:    6120         a      STR      r0,[r4,#0x10]
        0x00000956:    2002        .       MOVS     r0,#2
        0x00000958:    f8c400f0    ....    STR      r0,[r4,#0xf0]
        0x0000095c:    4813        .H      LDR      r0,[pc,#76] ; [0x9ac] = 0xe0040f00
        0x0000095e:    6007        .`      STR      r7,[r0,#0]
        0x00000960:    f2402001    @..     MOV      r0,#0x201
        0x00000964:    f8c60250    ..P.    STR      r0,[r6,#0x250]
        0x00000968:    f7fffedc    ....    BL       am_hal_clkgen_sysclk_get ; 0x724
        0x0000096c:    4910        .I      LDR      r1,[pc,#64] ; [0x9b0] = 0x2dc6c0
        0x0000096e:    e8bd41f0    ...A    POP      {r4-r8,lr}
        0x00000972:    fbb0f0f1    ....    UDIV     r0,r0,r1
        0x00000976:    2132        2!      MOVS     r1,#0x32
        0x00000978:    4348        HC      MULS     r0,r1,r0
        0x0000097a:    f7ffbbe7    ....    B        am_hal_flash_delay ; 0x14c
        0x0000097e:    6902        .i      LDR      r2,[r0,#0x10]
        0x00000980:    6122        "a      STR      r2,[r4,#0x10]
        0x00000982:    6882        .h      LDR      r2,[r0,#8]
        0x00000984:    f8c420f0    ...     STR      r2,[r4,#0xf0]
        0x00000988:    7b02        .{      LDRB     r2,[r0,#0xc]
        0x0000098a:    1e52        R.      SUBS     r2,r2,#1
        0x0000098c:    4091        .@      LSLS     r1,r1,r2
        0x0000098e:    6061        a`      STR      r1,[r4,#4]
        0x00000990:    f8d61250    ..P.    LDR      r1,[r6,#0x250]
        0x00000994:    6840        @h      LDR      r0,[r0,#4]
        0x00000996:    4308        .C      ORRS     r0,r0,r1
        0x00000998:    e7e4        ..      B        0x964 ; am_hal_tpiu_enable + 72
    $d
        0x0000099a:    0000        ..      DCW    0
        0x0000099c:    e0040000    ....    DCD    3758358528
        0x000009a0:    40020000    ...@    DCD    1073872896
        0x000009a4:    001da381    ....    DCD    1942401
        0x000009a8:    000f4240    @B..    DCD    1000000
        0x000009ac:    e0040f00    ....    DCD    3758362368
        0x000009b0:    002dc6c0    ..-.    DCD    3000000
    $t
    i.am_hal_vcomp_disable
    am_hal_vcomp_disable
        0x000009b4:    4901        .I      LDR      r1,[pc,#4] ; [0x9bc] = 0x4000c000
        0x000009b6:    2037        7       MOVS     r0,#0x37
        0x000009b8:    6088        .`      STR      r0,[r1,#8]
        0x000009ba:    4770        pG      BX       lr
    $d
        0x000009bc:    4000c000    ...@    DCD    1073790976
    $t
    i.am_util_faultisr_collect_data
    am_util_faultisr_collect_data
        0x000009c0:    b092        ..      SUB      sp,sp,#0x48
        0x000009c2:    4604        .F      MOV      r4,r0
        0x000009c4:    2118        .!      MOVS     r1,#0x18
        0x000009c6:    4668        hF      MOV      r0,sp
        0x000009c8:    f7fffbd0    ....    BL       __aeabi_memclr4 ; 0x16c
        0x000009cc:    2500        .%      MOVS     r5,#0
        0x000009ce:    9510        ..      STR      r5,[sp,#0x40]
        0x000009d0:    4828        (H      LDR      r0,[pc,#160] ; [0xa74] = 0xe000ed28
        0x000009d2:    6800        .h      LDR      r0,[r0,#0]
        0x000009d4:    9010        ..      STR      r0,[sp,#0x40]
        0x000009d6:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009d8:    b2c0        ..      UXTB     r0,r0
        0x000009da:    f88d0044    ..D.    STRB     r0,[sp,#0x44]
        0x000009de:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009e0:    0a00        ..      LSRS     r0,r0,#8
        0x000009e2:    f88d0045    ..E.    STRB     r0,[sp,#0x45]
        0x000009e6:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009e8:    f64f71ff    O..q    MOV      r1,#0xffff
        0x000009ec:    ea014010    ...@    AND      r0,r1,r0,LSR #16
        0x000009f0:    f8ad0046    ..F.    STRH     r0,[sp,#0x46]
        0x000009f4:    481f        .H      LDR      r0,[pc,#124] ; [0xa74] = 0xe000ed28
        0x000009f6:    3010        .0      ADDS     r0,r0,#0x10
        0x000009f8:    6800        .h      LDR      r0,[r0,#0]
        0x000009fa:    900f        ..      STR      r0,[sp,#0x3c]
        0x000009fc:    f89d0045    ..E.    LDRB     r0,[sp,#0x45]
        0x00000a00:    f0000002    ....    AND      r0,r0,#2
        0x00000a04:    b120         .      CBZ      r0,0xa10 ; am_util_faultisr_collect_data + 80
        0x00000a06:    4621        !F      MOV      r1,r4
        0x00000a08:    2006        .       MOVS     r0,#6
        0x00000a0a:    f7fffb9b    ....    BL       getStackedReg ; 0x144
        0x00000a0e:    e001        ..      B        0xa14 ; am_util_faultisr_collect_data + 84
        0x00000a10:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x00000a14:    900e        ..      STR      r0,[sp,#0x38]
        0x00000a16:    4621        !F      MOV      r1,r4
        0x00000a18:    2000        .       MOVS     r0,#0
        0x00000a1a:    f7fffb93    ....    BL       getStackedReg ; 0x144
        0x00000a1e:    9006        ..      STR      r0,[sp,#0x18]
        0x00000a20:    4621        !F      MOV      r1,r4
        0x00000a22:    2001        .       MOVS     r0,#1
        0x00000a24:    f7fffb8e    ....    BL       getStackedReg ; 0x144
        0x00000a28:    9007        ..      STR      r0,[sp,#0x1c]
        0x00000a2a:    4621        !F      MOV      r1,r4
        0x00000a2c:    2002        .       MOVS     r0,#2
        0x00000a2e:    f7fffb89    ....    BL       getStackedReg ; 0x144
        0x00000a32:    9008        ..      STR      r0,[sp,#0x20]
        0x00000a34:    4621        !F      MOV      r1,r4
        0x00000a36:    2003        .       MOVS     r0,#3
        0x00000a38:    f7fffb84    ....    BL       getStackedReg ; 0x144
        0x00000a3c:    9009        ..      STR      r0,[sp,#0x24]
        0x00000a3e:    4621        !F      MOV      r1,r4
        0x00000a40:    2004        .       MOVS     r0,#4
        0x00000a42:    f7fffb7f    ....    BL       getStackedReg ; 0x144
        0x00000a46:    900a        ..      STR      r0,[sp,#0x28]
        0x00000a48:    4621        !F      MOV      r1,r4
        0x00000a4a:    2005        .       MOVS     r0,#5
        0x00000a4c:    f7fffb7a    ..z.    BL       getStackedReg ; 0x144
        0x00000a50:    900b        ..      STR      r0,[sp,#0x2c]
        0x00000a52:    4621        !F      MOV      r1,r4
        0x00000a54:    2006        .       MOVS     r0,#6
        0x00000a56:    f7fffb75    ..u.    BL       getStackedReg ; 0x144
        0x00000a5a:    900c        ..      STR      r0,[sp,#0x30]
        0x00000a5c:    4621        !F      MOV      r1,r4
        0x00000a5e:    2007        .       MOVS     r0,#7
        0x00000a60:    f7fffb70    ..p.    BL       getStackedReg ; 0x144
        0x00000a64:    900d        ..      STR      r0,[sp,#0x34]
        0x00000a66:    4668        hF      MOV      r0,sp
        0x00000a68:    f7ffff22    ..".    BL       am_hal_mcuctrl_fault_status ; 0x8b0
        0x00000a6c:    bf00        ..      NOP      
        0x00000a6e:    bf00        ..      NOP      
        0x00000a70:    e7fe        ..      B        0xa70 ; am_util_faultisr_collect_data + 176
    $d
        0x00000a72:    0000        ..      DCW    0
        0x00000a74:    e000ed28    (...    DCD    3758157096
    $t
    i.am_util_stdio_printf
    am_util_stdio_printf
        0x00000a78:    b40f        ..      PUSH     {r0-r3}
        0x00000a7a:    b538        8.      PUSH     {r3-r5,lr}
        0x00000a7c:    a805        ..      ADD      r0,sp,#0x14
        0x00000a7e:    9000        ..      STR      r0,[sp,#0]
        0x00000a80:    4807        .H      LDR      r0,[pc,#28] ; [0xaa0] = 0x10000034
        0x00000a82:    9a00        ..      LDR      r2,[sp,#0]
        0x00000a84:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000a86:    f000f825    ..%.    BL       am_util_stdio_vsprintf ; 0xad4
        0x00000a8a:    4604        .F      MOV      r4,r0
        0x00000a8c:    2000        .       MOVS     r0,#0
        0x00000a8e:    9000        ..      STR      r0,[sp,#0]
        0x00000a90:    4803        .H      LDR      r0,[pc,#12] ; [0xaa0] = 0x10000034
        0x00000a92:    4904        .I      LDR      r1,[pc,#16] ; [0xaa4] = 0x10000000
        0x00000a94:    6809        .h      LDR      r1,[r1,#0]
        0x00000a96:    4788        .G      BLX      r1
        0x00000a98:    4620         F      MOV      r0,r4
        0x00000a9a:    bc38        8.      POP      {r3-r5}
        0x00000a9c:    f85dfb14    ]...    LDR      pc,[sp],#0x14
    $d
        0x00000aa0:    10000034    4...    DCD    268435508
        0x00000aa4:    10000000    ....    DCD    268435456
    $t
    i.am_util_stdio_printf_init
    am_util_stdio_printf_init
        0x00000aa8:    4901        .I      LDR      r1,[pc,#4] ; [0xab0] = 0x10000000
        0x00000aaa:    6008        .`      STR      r0,[r1,#0]
        0x00000aac:    4770        pG      BX       lr
    $d
        0x00000aae:    0000        ..      DCW    0
        0x00000ab0:    10000000    ....    DCD    268435456
    $t
    i.am_util_stdio_terminal_clear
    am_util_stdio_terminal_clear
        0x00000ab4:    b510        ..      PUSH     {r4,lr}
        0x00000ab6:    a002        ..      ADR      r0,{pc}+0xa ; 0xac0
        0x00000ab8:    f7ffffde    ....    BL       am_util_stdio_printf ; 0xa78
        0x00000abc:    bd10        ..      POP      {r4,pc}
    $d
        0x00000abe:    0000        ..      DCW    0
        0x00000ac0:    0a0a0a0a    ....    DCD    168430090
        0x00000ac4:    0a0a0a0a    ....    DCD    168430090
        0x00000ac8:    0a0a0a0a    ....    DCD    168430090
        0x00000acc:    0a0a0a0a    ....    DCD    168430090
        0x00000ad0:    00000a0a    ....    DCD    2570
    $t
    i.am_util_stdio_vsprintf
    am_util_stdio_vsprintf
        0x00000ad4:    e92d4ff7    -..O    PUSH     {r0-r2,r4-r11,lr}
        0x00000ad8:    ed2d8b02    -...    VPUSH    {d8}
        0x00000adc:    b08a        ..      SUB      sp,sp,#0x28
        0x00000ade:    4604        .F      MOV      r4,r0
        0x00000ae0:    460d        .F      MOV      r5,r1
        0x00000ae2:    f04f0900    O...    MOV      r9,#0
        0x00000ae6:    2000        .       MOVS     r0,#0
        0x00000ae8:    9000        ..      STR      r0,[sp,#0]
        0x00000aea:    e1b9        ..      B        0xe60 ; am_util_stdio_vsprintf + 908
        0x00000aec:    2006        .       MOVS     r0,#6
        0x00000aee:    9006        ..      STR      r0,[sp,#0x18]
        0x00000af0:    7828        (x      LDRB     r0,[r5,#0]
        0x00000af2:    2825        %(      CMP      r0,#0x25
        0x00000af4:    d012        ..      BEQ      0xb1c ; am_util_stdio_vsprintf + 72
        0x00000af6:    b16c        l.      CBZ      r4,0xb14 ; am_util_stdio_vsprintf + 64
        0x00000af8:    7828        (x      LDRB     r0,[r5,#0]
        0x00000afa:    280a        .(      CMP      r0,#0xa
        0x00000afc:    d107        ..      BNE      0xb0e ; am_util_stdio_vsprintf + 58
        0x00000afe:    48de        .H      LDR      r0,[pc,#888] ; [0xe78] = 0x10000004
        0x00000b00:    7800        .x      LDRB     r0,[r0,#0]
        0x00000b02:    b120         .      CBZ      r0,0xb0e ; am_util_stdio_vsprintf + 58
        0x00000b04:    200d        .       MOVS     r0,#0xd
        0x00000b06:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b0a:    f1090901    ....    ADD      r9,r9,#1
        0x00000b0e:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b10:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b14:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b16:    f1090901    ....    ADD      r9,r9,#1
        0x00000b1a:    e1a1        ..      B        0xe60 ; am_util_stdio_vsprintf + 908
        0x00000b1c:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b1e:    2000        .       MOVS     r0,#0
        0x00000b20:    9002        ..      STR      r0,[sp,#8]
        0x00000b22:    9003        ..      STR      r0,[sp,#0xc]
        0x00000b24:    2020                MOVS     r0,#0x20
        0x00000b26:    9004        ..      STR      r0,[sp,#0x10]
        0x00000b28:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b2a:    2830        0(      CMP      r0,#0x30
        0x00000b2c:    d101        ..      BNE      0xb32 ; am_util_stdio_vsprintf + 94
        0x00000b2e:    9004        ..      STR      r0,[sp,#0x10]
        0x00000b30:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b32:    a907        ..      ADD      r1,sp,#0x1c
        0x00000b34:    4628        (F      MOV      r0,r5
        0x00000b36:    f000f9a7    ....    BL       decstr_to_int ; 0xe88
        0x00000b3a:    4606        .F      MOV      r6,r0
        0x00000b3c:    9807        ..      LDR      r0,[sp,#0x1c]
        0x00000b3e:    4405        .D      ADD      r5,r5,r0
        0x00000b40:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b42:    2873        s(      CMP      r0,#0x73
        0x00000b44:    d002        ..      BEQ      0xb4c ; am_util_stdio_vsprintf + 120
        0x00000b46:    2e00        ..      CMP      r6,#0
        0x00000b48:    da00        ..      BGE      0xb4c ; am_util_stdio_vsprintf + 120
        0x00000b4a:    4276        vB      RSBS     r6,r6,#0
        0x00000b4c:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b4e:    282e        .(      CMP      r0,#0x2e
        0x00000b50:    d107        ..      BNE      0xb62 ; am_util_stdio_vsprintf + 142
        0x00000b52:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b54:    a907        ..      ADD      r1,sp,#0x1c
        0x00000b56:    4628        (F      MOV      r0,r5
        0x00000b58:    f000f996    ....    BL       decstr_to_int ; 0xe88
        0x00000b5c:    9006        ..      STR      r0,[sp,#0x18]
        0x00000b5e:    9807        ..      LDR      r0,[sp,#0x1c]
        0x00000b60:    4405        .D      ADD      r5,r5,r0
        0x00000b62:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b64:    286c        l(      CMP      r0,#0x6c
        0x00000b66:    d106        ..      BNE      0xb76 ; am_util_stdio_vsprintf + 162
        0x00000b68:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b6a:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b6c:    286c        l(      CMP      r0,#0x6c
        0x00000b6e:    d102        ..      BNE      0xb76 ; am_util_stdio_vsprintf + 162
        0x00000b70:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b72:    2001        .       MOVS     r0,#1
        0x00000b74:    9002        ..      STR      r0,[sp,#8]
        0x00000b76:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b78:    2866        f(      CMP      r0,#0x66
        0x00000b7a:    d06f        o.      BEQ      0xc5c ; am_util_stdio_vsprintf + 392
        0x00000b7c:    dc08        ..      BGT      0xb90 ; am_util_stdio_vsprintf + 188
        0x00000b7e:    2846        F(      CMP      r0,#0x46
        0x00000b80:    d06d        m.      BEQ      0xc5e ; am_util_stdio_vsprintf + 394
        0x00000b82:    2858        X(      CMP      r0,#0x58
        0x00000b84:    d05c        \.      BEQ      0xc40 ; am_util_stdio_vsprintf + 364
        0x00000b86:    2863        c(      CMP      r0,#0x63
        0x00000b88:    d00b        ..      BEQ      0xba2 ; am_util_stdio_vsprintf + 206
        0x00000b8a:    2864        d(      CMP      r0,#0x64
        0x00000b8c:    d168        h.      BNE      0xc60 ; am_util_stdio_vsprintf + 396
        0x00000b8e:    e0c3        ..      B        0xd18 ; am_util_stdio_vsprintf + 580
        0x00000b90:    2869        i(      CMP      r0,#0x69
        0x00000b92:    d07d        }.      BEQ      0xc90 ; am_util_stdio_vsprintf + 444
        0x00000b94:    2873        s(      CMP      r0,#0x73
        0x00000b96:    d011        ..      BEQ      0xbbc ; am_util_stdio_vsprintf + 232
        0x00000b98:    2875        u(      CMP      r0,#0x75
        0x00000b9a:    d07a        z.      BEQ      0xc92 ; am_util_stdio_vsprintf + 446
        0x00000b9c:    2878        x(      CMP      r0,#0x78
        0x00000b9e:    d1f5        ..      BNE      0xb8c ; am_util_stdio_vsprintf + 184
        0x00000ba0:    e04b        K.      B        0xc3a ; am_util_stdio_vsprintf + 358
        0x00000ba2:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000ba4:    f8101b04    ....    LDRB     r1,[r0],#4
        0x00000ba8:    900e        ..      STR      r0,[sp,#0x38]
        0x00000baa:    b2c8        ..      UXTB     r0,r1
        0x00000bac:    9005        ..      STR      r0,[sp,#0x14]
        0x00000bae:    b114        ..      CBZ      r4,0xbb6 ; am_util_stdio_vsprintf + 226
        0x00000bb0:    9805        ..      LDR      r0,[sp,#0x14]
        0x00000bb2:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000bb6:    f1090901    ....    ADD      r9,r9,#1
        0x00000bba:    e14e        N.      B        0xe5a ; am_util_stdio_vsprintf + 902
        0x00000bbc:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000bbe:    f850bb04    P...    LDR      r11,[r0],#4
        0x00000bc2:    900e        ..      STR      r0,[sp,#0x38]
        0x00000bc4:    4658        XF      MOV      r0,r11
        0x00000bc6:    f000fb8d    ....    BL       simple_strlen ; 0x12e4
        0x00000bca:    9000        ..      STR      r0,[sp,#0]
        0x00000bcc:    2e00        ..      CMP      r6,#0
        0x00000bce:    dd11        ..      BLE      0xbf4 ; am_util_stdio_vsprintf + 288
        0x00000bd0:    9800        ..      LDR      r0,[sp,#0]
        0x00000bd2:    42b0        .B      CMP      r0,r6
        0x00000bd4:    d20e        ..      BCS      0xbf4 ; am_util_stdio_vsprintf + 288
        0x00000bd6:    9800        ..      LDR      r0,[sp,#0]
        0x00000bd8:    1a36        6.      SUBS     r6,r6,r0
        0x00000bda:    4632        2F      MOV      r2,r6
        0x00000bdc:    4620         F      MOV      r0,r4
        0x00000bde:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000be0:    f000fb6f    ..o.    BL       padbuffer ; 0x12c2
        0x00000be4:    4606        .F      MOV      r6,r0
        0x00000be6:    b10c        ..      CBZ      r4,0xbec ; am_util_stdio_vsprintf + 280
        0x00000be8:    4630        0F      MOV      r0,r6
        0x00000bea:    e000        ..      B        0xbee ; am_util_stdio_vsprintf + 282
        0x00000bec:    2000        .       MOVS     r0,#0
        0x00000bee:    4404        .D      ADD      r4,r4,r0
        0x00000bf0:    44b1        .D      ADD      r9,r9,r6
        0x00000bf2:    2600        .&      MOVS     r6,#0
        0x00000bf4:    e008        ..      B        0xc08 ; am_util_stdio_vsprintf + 308
        0x00000bf6:    b11c        ..      CBZ      r4,0xc00 ; am_util_stdio_vsprintf + 300
        0x00000bf8:    f89b0000    ....    LDRB     r0,[r11,#0]
        0x00000bfc:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000c00:    f10b0b01    ....    ADD      r11,r11,#1
        0x00000c04:    f1090901    ....    ADD      r9,r9,#1
        0x00000c08:    f89b0000    ....    LDRB     r0,[r11,#0]
        0x00000c0c:    2800        .(      CMP      r0,#0
        0x00000c0e:    d1f2        ..      BNE      0xbf6 ; am_util_stdio_vsprintf + 290
        0x00000c10:    b196        ..      CBZ      r6,0xc38 ; am_util_stdio_vsprintf + 356
        0x00000c12:    4276        vB      RSBS     r6,r6,#0
        0x00000c14:    9800        ..      LDR      r0,[sp,#0]
        0x00000c16:    42b0        .B      CMP      r0,r6
        0x00000c18:    d20e        ..      BCS      0xc38 ; am_util_stdio_vsprintf + 356
        0x00000c1a:    9800        ..      LDR      r0,[sp,#0]
        0x00000c1c:    1a36        6.      SUBS     r6,r6,r0
        0x00000c1e:    4632        2F      MOV      r2,r6
        0x00000c20:    4620         F      MOV      r0,r4
        0x00000c22:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000c24:    f000fb4d    ..M.    BL       padbuffer ; 0x12c2
        0x00000c28:    4606        .F      MOV      r6,r0
        0x00000c2a:    b10c        ..      CBZ      r4,0xc30 ; am_util_stdio_vsprintf + 348
        0x00000c2c:    4630        0F      MOV      r0,r6
        0x00000c2e:    e000        ..      B        0xc32 ; am_util_stdio_vsprintf + 350
        0x00000c30:    2000        .       MOVS     r0,#0
        0x00000c32:    4404        .D      ADD      r4,r4,r0
        0x00000c34:    44b1        .D      ADD      r9,r9,r6
        0x00000c36:    2600        .&      MOVS     r6,#0
        0x00000c38:    e10f        ..      B        0xe5a ; am_util_stdio_vsprintf + 902
        0x00000c3a:    2001        .       MOVS     r0,#1
        0x00000c3c:    9003        ..      STR      r0,[sp,#0xc]
        0x00000c3e:    bf00        ..      NOP      
        0x00000c40:    9802        ..      LDR      r0,[sp,#8]
        0x00000c42:    b170        p.      CBZ      r0,0xc62 ; am_util_stdio_vsprintf + 398
        0x00000c44:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000c46:    1dc0        ..      ADDS     r0,r0,#7
        0x00000c48:    f0200007     ...    BIC      r0,r0,#7
        0x00000c4c:    4601        .F      MOV      r1,r0
        0x00000c4e:    900e        ..      STR      r0,[sp,#0x38]
        0x00000c50:    6800        .h      LDR      r0,[r0,#0]
        0x00000c52:    6849        Ih      LDR      r1,[r1,#4]
        0x00000c54:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000c56:    3208        .2      ADDS     r2,r2,#8
        0x00000c58:    920e        ..      STR      r2,[sp,#0x38]
        0x00000c5a:    e008        ..      B        0xc6e ; am_util_stdio_vsprintf + 410
        0x00000c5c:    e0c3        ..      B        0xde6 ; am_util_stdio_vsprintf + 786
        0x00000c5e:    e0c3        ..      B        0xde8 ; am_util_stdio_vsprintf + 788
        0x00000c60:    e0f4        ..      B        0xe4c ; am_util_stdio_vsprintf + 888
        0x00000c62:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000c64:    6800        .h      LDR      r0,[r0,#0]
        0x00000c66:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000c68:    1d09        ..      ADDS     r1,r1,#4
        0x00000c6a:    910e        ..      STR      r1,[sp,#0x38]
        0x00000c6c:    2100        .!      MOVS     r1,#0
        0x00000c6e:    4607        .F      MOV      r7,r0
        0x00000c70:    4688        .F      MOV      r8,r1
        0x00000c72:    b19e        ..      CBZ      r6,0xc9c ; am_util_stdio_vsprintf + 456
        0x00000c74:    4638        8F      MOV      r0,r7
        0x00000c76:    4641        AF      MOV      r1,r8
        0x00000c78:    f000fada    ....    BL       ndigits_in_hex ; 0x1230
        0x00000c7c:    1a36        6.      SUBS     r6,r6,r0
        0x00000c7e:    4632        2F      MOV      r2,r6
        0x00000c80:    4620         F      MOV      r0,r4
        0x00000c82:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000c84:    f000fb1d    ....    BL       padbuffer ; 0x12c2
        0x00000c88:    4606        .F      MOV      r6,r0
        0x00000c8a:    b11c        ..      CBZ      r4,0xc94 ; am_util_stdio_vsprintf + 448
        0x00000c8c:    4630        0F      MOV      r0,r6
        0x00000c8e:    e002        ..      B        0xc96 ; am_util_stdio_vsprintf + 450
        0x00000c90:    e043        C.      B        0xd1a ; am_util_stdio_vsprintf + 582
        0x00000c92:    e00e        ..      B        0xcb2 ; am_util_stdio_vsprintf + 478
        0x00000c94:    2000        .       MOVS     r0,#0
        0x00000c96:    4404        .D      ADD      r4,r4,r0
        0x00000c98:    44b1        .D      ADD      r9,r9,r6
        0x00000c9a:    2600        .&      MOVS     r6,#0
        0x00000c9c:    4622        "F      MOV      r2,r4
        0x00000c9e:    4638        8F      MOV      r0,r7
        0x00000ca0:    4641        AF      MOV      r1,r8
        0x00000ca2:    9b03        ..      LDR      r3,[sp,#0xc]
        0x00000ca4:    f000fb2a    ..*.    BL       uint64_to_hexstr ; 0x12fc
        0x00000ca8:    4682        .F      MOV      r10,r0
        0x00000caa:    b104        ..      CBZ      r4,0xcae ; am_util_stdio_vsprintf + 474
        0x00000cac:    4454        TD      ADD      r4,r4,r10
        0x00000cae:    44d1        .D      ADD      r9,r9,r10
        0x00000cb0:    e0d3        ..      B        0xe5a ; am_util_stdio_vsprintf + 902
        0x00000cb2:    9802        ..      LDR      r0,[sp,#8]
        0x00000cb4:    b158        X.      CBZ      r0,0xcce ; am_util_stdio_vsprintf + 506
        0x00000cb6:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000cb8:    1dc0        ..      ADDS     r0,r0,#7
        0x00000cba:    f0200007     ...    BIC      r0,r0,#7
        0x00000cbe:    4601        .F      MOV      r1,r0
        0x00000cc0:    900e        ..      STR      r0,[sp,#0x38]
        0x00000cc2:    6800        .h      LDR      r0,[r0,#0]
        0x00000cc4:    6849        Ih      LDR      r1,[r1,#4]
        0x00000cc6:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000cc8:    3208        .2      ADDS     r2,r2,#8
        0x00000cca:    920e        ..      STR      r2,[sp,#0x38]
        0x00000ccc:    e005        ..      B        0xcda ; am_util_stdio_vsprintf + 518
        0x00000cce:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000cd0:    6800        .h      LDR      r0,[r0,#0]
        0x00000cd2:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000cd4:    1d09        ..      ADDS     r1,r1,#4
        0x00000cd6:    910e        ..      STR      r1,[sp,#0x38]
        0x00000cd8:    2100        .!      MOVS     r1,#0
        0x00000cda:    4607        .F      MOV      r7,r0
        0x00000cdc:    4688        .F      MOV      r8,r1
        0x00000cde:    b18e        ..      CBZ      r6,0xd04 ; am_util_stdio_vsprintf + 560
        0x00000ce0:    4638        8F      MOV      r0,r7
        0x00000ce2:    4641        AF      MOV      r1,r8
        0x00000ce4:    f000fad0    ....    BL       ndigits_in_u64 ; 0x1288
        0x00000ce8:    1a36        6.      SUBS     r6,r6,r0
        0x00000cea:    4632        2F      MOV      r2,r6
        0x00000cec:    4620         F      MOV      r0,r4
        0x00000cee:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000cf0:    f000fae7    ....    BL       padbuffer ; 0x12c2
        0x00000cf4:    4606        .F      MOV      r6,r0
        0x00000cf6:    b10c        ..      CBZ      r4,0xcfc ; am_util_stdio_vsprintf + 552
        0x00000cf8:    4630        0F      MOV      r0,r6
        0x00000cfa:    e000        ..      B        0xcfe ; am_util_stdio_vsprintf + 554
        0x00000cfc:    2000        .       MOVS     r0,#0
        0x00000cfe:    4404        .D      ADD      r4,r4,r0
        0x00000d00:    44b1        .D      ADD      r9,r9,r6
        0x00000d02:    2600        .&      MOVS     r6,#0
        0x00000d04:    4622        "F      MOV      r2,r4
        0x00000d06:    4638        8F      MOV      r0,r7
        0x00000d08:    4641        AF      MOV      r1,r8
        0x00000d0a:    f000fb3c    ..<.    BL       uint64_to_str ; 0x1386
        0x00000d0e:    4682        .F      MOV      r10,r0
        0x00000d10:    b104        ..      CBZ      r4,0xd14 ; am_util_stdio_vsprintf + 576
        0x00000d12:    4454        TD      ADD      r4,r4,r10
        0x00000d14:    44d1        .D      ADD      r9,r9,r10
        0x00000d16:    e0a0        ..      B        0xe5a ; am_util_stdio_vsprintf + 902
        0x00000d18:    bf00        ..      NOP      
        0x00000d1a:    9802        ..      LDR      r0,[sp,#8]
        0x00000d1c:    b158        X.      CBZ      r0,0xd36 ; am_util_stdio_vsprintf + 610
        0x00000d1e:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000d20:    1dc0        ..      ADDS     r0,r0,#7
        0x00000d22:    f0200007     ...    BIC      r0,r0,#7
        0x00000d26:    4601        .F      MOV      r1,r0
        0x00000d28:    900e        ..      STR      r0,[sp,#0x38]
        0x00000d2a:    6800        .h      LDR      r0,[r0,#0]
        0x00000d2c:    6849        Ih      LDR      r1,[r1,#4]
        0x00000d2e:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000d30:    3208        .2      ADDS     r2,r2,#8
        0x00000d32:    920e        ..      STR      r2,[sp,#0x38]
        0x00000d34:    e005        ..      B        0xd42 ; am_util_stdio_vsprintf + 622
        0x00000d36:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000d38:    6800        .h      LDR      r0,[r0,#0]
        0x00000d3a:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000d3c:    1d09        ..      ADDS     r1,r1,#4
        0x00000d3e:    910e        ..      STR      r1,[sp,#0x38]
        0x00000d40:    17c1        ..      ASRS     r1,r0,#31
        0x00000d42:    e9cd0108    ....    STRD     r0,r1,[sp,#0x20]
        0x00000d46:    2300        .#      MOVS     r3,#0
        0x00000d48:    e9dd0108    ....    LDRD     r0,r1,[sp,#0x20]
        0x00000d4c:    1ac0        ..      SUBS     r0,r0,r3
        0x00000d4e:    4199        .A      SBCS     r1,r1,r3
        0x00000d50:    da08        ..      BGE      0xd64 ; am_util_stdio_vsprintf + 656
        0x00000d52:    2200        ."      MOVS     r2,#0
        0x00000d54:    e9dd1008    ....    LDRD     r1,r0,[sp,#0x20]
        0x00000d58:    424f        OB      RSBS     r7,r1,#0
        0x00000d5a:    eb620800    b...    SBC      r8,r2,r0
        0x00000d5e:    2001        .       MOVS     r0,#1
        0x00000d60:    9001        ..      STR      r0,[sp,#4]
        0x00000d62:    e003        ..      B        0xd6c ; am_util_stdio_vsprintf + 664
        0x00000d64:    e9dd7808    ...x    LDRD     r7,r8,[sp,#0x20]
        0x00000d68:    2000        .       MOVS     r0,#0
        0x00000d6a:    9001        ..      STR      r0,[sp,#4]
        0x00000d6c:    b34e        N.      CBZ      r6,0xdc2 ; am_util_stdio_vsprintf + 750
        0x00000d6e:    4638        8F      MOV      r0,r7
        0x00000d70:    4641        AF      MOV      r1,r8
        0x00000d72:    f000fa77    ..w.    BL       ndigits_in_i64 ; 0x1264
        0x00000d76:    1a36        6.      SUBS     r6,r6,r0
        0x00000d78:    9801        ..      LDR      r0,[sp,#4]
        0x00000d7a:    b148        H.      CBZ      r0,0xd90 ; am_util_stdio_vsprintf + 700
        0x00000d7c:    1e76        v.      SUBS     r6,r6,#1
        0x00000d7e:    9804        ..      LDR      r0,[sp,#0x10]
        0x00000d80:    2830        0(      CMP      r0,#0x30
        0x00000d82:    d105        ..      BNE      0xd90 ; am_util_stdio_vsprintf + 700
        0x00000d84:    b114        ..      CBZ      r4,0xd8c ; am_util_stdio_vsprintf + 696
        0x00000d86:    202d        -       MOVS     r0,#0x2d
        0x00000d88:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000d8c:    f1090901    ....    ADD      r9,r9,#1
        0x00000d90:    4632        2F      MOV      r2,r6
        0x00000d92:    4620         F      MOV      r0,r4
        0x00000d94:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000d96:    f000fa94    ....    BL       padbuffer ; 0x12c2
        0x00000d9a:    4606        .F      MOV      r6,r0
        0x00000d9c:    b10c        ..      CBZ      r4,0xda2 ; am_util_stdio_vsprintf + 718
        0x00000d9e:    4630        0F      MOV      r0,r6
        0x00000da0:    e000        ..      B        0xda4 ; am_util_stdio_vsprintf + 720
        0x00000da2:    2000        .       MOVS     r0,#0
        0x00000da4:    4404        .D      ADD      r4,r4,r0
        0x00000da6:    44b1        .D      ADD      r9,r9,r6
        0x00000da8:    2600        .&      MOVS     r6,#0
        0x00000daa:    9801        ..      LDR      r0,[sp,#4]
        0x00000dac:    b188        ..      CBZ      r0,0xdd2 ; am_util_stdio_vsprintf + 766
        0x00000dae:    9804        ..      LDR      r0,[sp,#0x10]
        0x00000db0:    2820         (      CMP      r0,#0x20
        0x00000db2:    d10e        ..      BNE      0xdd2 ; am_util_stdio_vsprintf + 766
        0x00000db4:    b114        ..      CBZ      r4,0xdbc ; am_util_stdio_vsprintf + 744
        0x00000db6:    202d        -       MOVS     r0,#0x2d
        0x00000db8:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000dbc:    f1090901    ....    ADD      r9,r9,#1
        0x00000dc0:    e007        ..      B        0xdd2 ; am_util_stdio_vsprintf + 766
        0x00000dc2:    9801        ..      LDR      r0,[sp,#4]
        0x00000dc4:    b128        (.      CBZ      r0,0xdd2 ; am_util_stdio_vsprintf + 766
        0x00000dc6:    b114        ..      CBZ      r4,0xdce ; am_util_stdio_vsprintf + 762
        0x00000dc8:    202d        -       MOVS     r0,#0x2d
        0x00000dca:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000dce:    f1090901    ....    ADD      r9,r9,#1
        0x00000dd2:    4622        "F      MOV      r2,r4
        0x00000dd4:    4638        8F      MOV      r0,r7
        0x00000dd6:    4641        AF      MOV      r1,r8
        0x00000dd8:    f000fad5    ....    BL       uint64_to_str ; 0x1386
        0x00000ddc:    4682        .F      MOV      r10,r0
        0x00000dde:    b104        ..      CBZ      r4,0xde2 ; am_util_stdio_vsprintf + 782
        0x00000de0:    4454        TD      ADD      r4,r4,r10
        0x00000de2:    44d1        .D      ADD      r9,r9,r10
        0x00000de4:    e039        9.      B        0xe5a ; am_util_stdio_vsprintf + 902
        0x00000de6:    bf00        ..      NOP      
        0x00000de8:    b37c        |.      CBZ      r4,0xe4a ; am_util_stdio_vsprintf + 886
        0x00000dea:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000dec:    1dc0        ..      ADDS     r0,r0,#7
        0x00000dee:    f0200007     ...    BIC      r0,r0,#7
        0x00000df2:    900e        ..      STR      r0,[sp,#0x38]
        0x00000df4:    ecb01b02    ....    VLDM     r0!,{d1}
        0x00000df8:    eeb00a41    ..A.    VMOV.F32 s0,s2
        0x00000dfc:    eef00a61    ..a.    VMOV.F32 s1,s3
        0x00000e00:    900e        ..      STR      r0,[sp,#0x38]
        0x00000e02:    ec510b10    Q...    VMOV     r0,r1,d0
        0x00000e06:    f000faf7    ....    BL       __aeabi_d2f ; 0x13f8
        0x00000e0a:    ee080a10    ....    VMOV     s16,r0
        0x00000e0e:    2014        .       MOVS     r0,#0x14
        0x00000e10:    6020         `      STR      r0,[r4,#0]
        0x00000e12:    4620         F      MOV      r0,r4
        0x00000e14:    eeb00a48    ..H.    VMOV.F32 s0,s16
        0x00000e18:    9906        ..      LDR      r1,[sp,#0x18]
        0x00000e1a:    f000f8bd    ....    BL       ftoa ; 0xf98
        0x00000e1e:    4682        .F      MOV      r10,r0
        0x00000e20:    f1ba0f00    ....    CMP      r10,#0
        0x00000e24:    da0e        ..      BGE      0xe44 ; am_util_stdio_vsprintf + 880
        0x00000e26:    f10a0101    ....    ADD      r1,r10,#1
        0x00000e2a:    b909        ..      CBNZ     r1,0xe30 ; am_util_stdio_vsprintf + 860
        0x00000e2c:    4813        .H      LDR      r0,[pc,#76] ; [0xe7c] = 0x302e30
        0x00000e2e:    e005        ..      B        0xe3c ; am_util_stdio_vsprintf + 872
        0x00000e30:    f10a0102    ....    ADD      r1,r10,#2
        0x00000e34:    b909        ..      CBNZ     r1,0xe3a ; am_util_stdio_vsprintf + 870
        0x00000e36:    4812        .H      LDR      r0,[pc,#72] ; [0xe80] = 0x232e23
        0x00000e38:    e000        ..      B        0xe3c ; am_util_stdio_vsprintf + 872
        0x00000e3a:    4812        .H      LDR      r0,[pc,#72] ; [0xe84] = 0x3f2e3f
        0x00000e3c:    6020         `      STR      r0,[r4,#0]
        0x00000e3e:    f04f0a03    O...    MOV      r10,#3
        0x00000e42:    bf00        ..      NOP      
        0x00000e44:    44d1        .D      ADD      r9,r9,r10
        0x00000e46:    4454        TD      ADD      r4,r4,r10
        0x00000e48:    bf00        ..      NOP      
        0x00000e4a:    e006        ..      B        0xe5a ; am_util_stdio_vsprintf + 902
        0x00000e4c:    b114        ..      CBZ      r4,0xe54 ; am_util_stdio_vsprintf + 896
        0x00000e4e:    7828        (x      LDRB     r0,[r5,#0]
        0x00000e50:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000e54:    f1090901    ....    ADD      r9,r9,#1
        0x00000e58:    bf00        ..      NOP      
        0x00000e5a:    bf00        ..      NOP      
        0x00000e5c:    1c6d        m.      ADDS     r5,r5,#1
        0x00000e5e:    bf00        ..      NOP      
        0x00000e60:    7828        (x      LDRB     r0,[r5,#0]
        0x00000e62:    2800        .(      CMP      r0,#0
        0x00000e64:    f47fae42    ..B.    BNE      0xaec ; am_util_stdio_vsprintf + 24
        0x00000e68:    b104        ..      CBZ      r4,0xe6c ; am_util_stdio_vsprintf + 920
        0x00000e6a:    7020         p      STRB     r0,[r4,#0]
        0x00000e6c:    4648        HF      MOV      r0,r9
        0x00000e6e:    b00a        ..      ADD      sp,sp,#0x28
        0x00000e70:    ecbd8b02    ....    VPOP     {d8}
        0x00000e74:    e8bd8ffe    ....    POP      {r1-r11,pc}
    $d
        0x00000e78:    10000004    ....    DCD    268435460
        0x00000e7c:    00302e30    0.0.    DCD    3157552
        0x00000e80:    00232e23    #.#.    DCD    2305571
        0x00000e84:    003f2e3f    ?.?.    DCD    4140607
    $t
    i.decstr_to_int
    decstr_to_int
        0x00000e88:    b530        0.      PUSH     {r4,r5,lr}
        0x00000e8a:    4602        .F      MOV      r2,r0
        0x00000e8c:    2500        .%      MOVS     r5,#0
        0x00000e8e:    2300        .#      MOVS     r3,#0
        0x00000e90:    2400        .$      MOVS     r4,#0
        0x00000e92:    7810        .x      LDRB     r0,[r2,#0]
        0x00000e94:    282d        -(      CMP      r0,#0x2d
        0x00000e96:    d102        ..      BNE      0xe9e ; decstr_to_int + 22
        0x00000e98:    2501        .%      MOVS     r5,#1
        0x00000e9a:    1c52        R.      ADDS     r2,r2,#1
        0x00000e9c:    1c64        d.      ADDS     r4,r4,#1
        0x00000e9e:    e007        ..      B        0xeb0 ; decstr_to_int + 40
        0x00000ea0:    1c64        d.      ADDS     r4,r4,#1
        0x00000ea2:    eb030083    ....    ADD      r0,r3,r3,LSL #2
        0x00000ea6:    0043        C.      LSLS     r3,r0,#1
        0x00000ea8:    7810        .x      LDRB     r0,[r2,#0]
        0x00000eaa:    3830        08      SUBS     r0,r0,#0x30
        0x00000eac:    4403        .D      ADD      r3,r3,r0
        0x00000eae:    1c52        R.      ADDS     r2,r2,#1
        0x00000eb0:    7810        .x      LDRB     r0,[r2,#0]
        0x00000eb2:    2830        0(      CMP      r0,#0x30
        0x00000eb4:    db02        ..      BLT      0xebc ; decstr_to_int + 52
        0x00000eb6:    7810        .x      LDRB     r0,[r2,#0]
        0x00000eb8:    2839        9(      CMP      r0,#0x39
        0x00000eba:    ddf1        ..      BLE      0xea0 ; decstr_to_int + 24
        0x00000ebc:    b101        ..      CBZ      r1,0xec0 ; decstr_to_int + 56
        0x00000ebe:    600c        .`      STR      r4,[r1,#0]
        0x00000ec0:    b10d        ..      CBZ      r5,0xec6 ; decstr_to_int + 62
        0x00000ec2:    4258        XB      RSBS     r0,r3,#0
        0x00000ec4:    bd30        0.      POP      {r4,r5,pc}
        0x00000ec6:    4618        .F      MOV      r0,r3
        0x00000ec8:    e7fc        ..      B        0xec4 ; decstr_to_int + 60
    i.divu64_10
    divu64_10
        0x00000eca:    e92d4ff0    -..O    PUSH     {r4-r11,lr}
        0x00000ece:    4604        .F      MOV      r4,r0
        0x00000ed0:    460d        .F      MOV      r5,r1
        0x00000ed2:    2000        .       MOVS     r0,#0
        0x00000ed4:    ea850100    ....    EOR      r1,r5,r0
        0x00000ed8:    4040        @@      EORS     r0,r0,r0
        0x00000eda:    4301        .C      ORRS     r1,r1,r0
        0x00000edc:    d044        D.      BEQ      0xf68 ; divu64_10 + 158
        0x00000ede:    ea5f0a55    _.U.    LSRS     r10,r5,#1
        0x00000ee2:    ea4f0134    O.4.    RRX      r1,r4
        0x00000ee6:    ea4f0b94    O...    LSR      r11,r4,#2
        0x00000eea:    ea4b7085    K..p    ORR      r0,r11,r5,LSL #30
        0x00000eee:    180a        ..      ADDS     r2,r1,r0
        0x00000ef0:    eb4a0395    J...    ADC      r3,r10,r5,LSR #2
        0x00000ef4:    ea4f1012    O...    LSR      r0,r2,#4
        0x00000ef8:    ea407a03    @..z    ORR      r10,r0,r3,LSL #28
        0x00000efc:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000f00:    eb431313    C...    ADC      r3,r3,r3,LSR #4
        0x00000f04:    ea4f2012    O..     LSR      r0,r2,#8
        0x00000f08:    ea406a03    @..j    ORR      r10,r0,r3,LSL #24
        0x00000f0c:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000f10:    eb432313    C..#    ADC      r3,r3,r3,LSR #8
        0x00000f14:    ea4f4012    O..@    LSR      r0,r2,#16
        0x00000f18:    ea404a03    @..J    ORR      r10,r0,r3,LSL #16
        0x00000f1c:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000f20:    eb434313    C..C    ADC      r3,r3,r3,LSR #16
        0x00000f24:    189a        ..      ADDS     r2,r3,r2
        0x00000f26:    f1430300    C...    ADC      r3,r3,#0
        0x00000f2a:    08d0        ..      LSRS     r0,r2,#3
        0x00000f2c:    ea407243    @.Cr    ORR      r2,r0,r3,LSL #29
        0x00000f30:    08db        ..      LSRS     r3,r3,#3
        0x00000f32:    210a        .!      MOVS     r1,#0xa
        0x00000f34:    f04f0a00    O...    MOV      r10,#0
        0x00000f38:    fba20b01    ....    UMULL    r0,r11,r2,r1
        0x00000f3c:    fb03b101    ....    MLA      r1,r3,r1,r11
        0x00000f40:    fb02110a    ....    MLA      r1,r2,r10,r1
        0x00000f44:    1a26        &.      SUBS     r6,r4,r0
        0x00000f46:    eb650701    e...    SBC      r7,r5,r1
        0x00000f4a:    2106        .!      MOVS     r1,#6
        0x00000f4c:    eb160a01    ....    ADDS     r10,r6,r1
        0x00000f50:    f1470100    G...    ADC      r1,r7,#0
        0x00000f54:    ea4f101a    O...    LSR      r0,r10,#4
        0x00000f58:    ea407a01    @..z    ORR      r10,r0,r1,LSL #28
        0x00000f5c:    eb1a0002    ....    ADDS     r0,r10,r2
        0x00000f60:    eb431111    C...    ADC      r1,r3,r1,LSR #4
        0x00000f64:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000f68:    46a0        .F      MOV      r8,r4
        0x00000f6a:    ea4f0058    O.X.    LSR      r0,r8,#1
        0x00000f6e:    eb000c98    ....    ADD      r12,r0,r8,LSR #2
        0x00000f72:    eb0c1c1c    ....    ADD      r12,r12,r12,LSR #4
        0x00000f76:    eb0c2c1c    ...,    ADD      r12,r12,r12,LSR #8
        0x00000f7a:    eb0c4c1c    ...L    ADD      r12,r12,r12,LSR #16
        0x00000f7e:    ea4f0cdc    O...    LSR      r12,r12,#3
        0x00000f82:    eb0c008c    ....    ADD      r0,r12,r12,LSL #2
        0x00000f86:    eba80940    ..@.    SUB      r9,r8,r0,LSL #1
        0x00000f8a:    f1090006    ....    ADD      r0,r9,#6
        0x00000f8e:    eb0c1010    ....    ADD      r0,r12,r0,LSR #4
        0x00000f92:    2100        .!      MOVS     r1,#0
        0x00000f94:    e7e6        ..      B        0xf64 ; divu64_10 + 154
        0x00000f96:    0000        ..      MOVS     r0,r0
    i.ftoa
    ftoa
        0x00000f98:    e92d4ff3    -..O    PUSH     {r0,r1,r4-r11,lr}
        0x00000f9c:    ed2d0b02    -...    VPUSH    {d0}
        0x00000fa0:    ed2d8b02    -...    VPUSH    {d8}
        0x00000fa4:    b081        ..      SUB      sp,sp,#4
        0x00000fa6:    eeb08a40    ..@.    VMOV.F32 s16,s0
        0x00000faa:    4604        .F      MOV      r4,r0
        0x00000fac:    f8d4b000    ....    LDR      r11,[r4,#0]
        0x00000fb0:    f1bb0f04    ....    CMP      r11,#4
        0x00000fb4:    da07        ..      BGE      0xfc6 ; ftoa + 46
        0x00000fb6:    f06f0002    o...    MVN      r0,#2
        0x00000fba:    b001        ..      ADD      sp,sp,#4
        0x00000fbc:    ecbd8b02    ....    VPOP     {d8}
        0x00000fc0:    b004        ..      ADD      sp,sp,#0x10
        0x00000fc2:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000fc6:    eeb58ac0    ....    VCMPE.F32 s16,#0.0
        0x00000fca:    eef1fa10    ....    VMRS     APSR_nzcv,FPSCR
        0x00000fce:    d103        ..      BNE      0xfd8 ; ftoa + 64
        0x00000fd0:    484e        NH      LDR      r0,[pc,#312] ; [0x110c] = 0x302e30
        0x00000fd2:    6020         `      STR      r0,[r4,#0]
        0x00000fd4:    2003        .       MOVS     r0,#3
        0x00000fd6:    e7f0        ..      B        0xfba ; ftoa + 34
        0x00000fd8:    46a2        .F      MOV      r10,r4
        0x00000fda:    ed8d8a00    ....    VSTR     s16,[sp,#0]
        0x00000fde:    9800        ..      LDR      r0,[sp,#0]
        0x00000fe0:    f3c050c7    ...P    UBFX     r0,r0,#23,#8
        0x00000fe4:    f1a0057f    ....    SUB      r5,r0,#0x7f
        0x00000fe8:    9800        ..      LDR      r0,[sp,#0]
        0x00000fea:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x00000fee:    f4400900    @...    ORR      r9,r0,#0x800000
        0x00000ff2:    f04f0800    O...    MOV      r8,#0
        0x00000ff6:    2700        .'      MOVS     r7,#0
        0x00000ff8:    2d1f        .-      CMP      r5,#0x1f
        0x00000ffa:    db01        ..      BLT      0x1000 ; ftoa + 104
        0x00000ffc:    1eb8        ..      SUBS     r0,r7,#2
        0x00000ffe:    e7dc        ..      B        0xfba ; ftoa + 34
        0x00001000:    f1150f17    ....    CMN      r5,#0x17
        0x00001004:    da02        ..      BGE      0x100c ; ftoa + 116
        0x00001006:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x0000100a:    e7d6        ..      B        0xfba ; ftoa + 34
        0x0000100c:    2d17        .-      CMP      r5,#0x17
        0x0000100e:    db04        ..      BLT      0x101a ; ftoa + 130
        0x00001010:    f1a50017    ....    SUB      r0,r5,#0x17
        0x00001014:    fa09f700    ....    LSL      r7,r9,r0
        0x00001018:    e011        ..      B        0x103e ; ftoa + 166
        0x0000101a:    2d00        .-      CMP      r5,#0
        0x0000101c:    db09        ..      BLT      0x1032 ; ftoa + 154
        0x0000101e:    f1c50017    ....    RSB      r0,r5,#0x17
        0x00001022:    fa49f700    I...    ASR      r7,r9,r0
        0x00001026:    1c68        h.      ADDS     r0,r5,#1
        0x00001028:    fa09f000    ....    LSL      r0,r9,r0
        0x0000102c:    f020487f     ..H    BIC      r8,r0,#0xff000000
        0x00001030:    e005        ..      B        0x103e ; ftoa + 166
        0x00001032:    f029407f    )..@    BIC      r0,r9,#0xff000000
        0x00001036:    1c69        i.      ADDS     r1,r5,#1
        0x00001038:    4249        IB      RSBS     r1,r1,#0
        0x0000103a:    fa40f801    @...    ASR      r8,r0,r1
        0x0000103e:    9800        ..      LDR      r0,[sp,#0]
        0x00001040:    2800        .(      CMP      r0,#0
        0x00001042:    da02        ..      BGE      0x104a ; ftoa + 178
        0x00001044:    202d        -       MOVS     r0,#0x2d
        0x00001046:    f8040b01    ....    STRB     r0,[r4],#1
        0x0000104a:    b91f        ..      CBNZ     r7,0x1054 ; ftoa + 188
        0x0000104c:    2030        0       MOVS     r0,#0x30
        0x0000104e:    f8040b01    ....    STRB     r0,[r4],#1
        0x00001052:    e014        ..      B        0x107e ; ftoa + 230
        0x00001054:    2f00        ./      CMP      r7,#0
        0x00001056:    dd05        ..      BLE      0x1064 ; ftoa + 204
        0x00001058:    4622        "F      MOV      r2,r4
        0x0000105a:    4638        8F      MOV      r0,r7
        0x0000105c:    17f9        ..      ASRS     r1,r7,#31
        0x0000105e:    f000f992    ....    BL       uint64_to_str ; 0x1386
        0x00001062:    e007        ..      B        0x1074 ; ftoa + 220
        0x00001064:    202d        -       MOVS     r0,#0x2d
        0x00001066:    f8040b01    ....    STRB     r0,[r4],#1
        0x0000106a:    4622        "F      MOV      r2,r4
        0x0000106c:    4278        xB      RSBS     r0,r7,#0
        0x0000106e:    17c1        ..      ASRS     r1,r0,#31
        0x00001070:    f000f989    ....    BL       uint64_to_str ; 0x1386
        0x00001074:    e000        ..      B        0x1078 ; ftoa + 224
        0x00001076:    1c64        d.      ADDS     r4,r4,#1
        0x00001078:    7820         x      LDRB     r0,[r4,#0]
        0x0000107a:    2800        .(      CMP      r0,#0
        0x0000107c:    d1fb        ..      BNE      0x1076 ; ftoa + 222
        0x0000107e:    202e        .       MOVS     r0,#0x2e
        0x00001080:    f8040b01    ....    STRB     r0,[r4],#1
        0x00001084:    f1b80f00    ....    CMP      r8,#0
        0x00001088:    d103        ..      BNE      0x1092 ; ftoa + 250
        0x0000108a:    2030        0       MOVS     r0,#0x30
        0x0000108c:    f8040b01    ....    STRB     r0,[r4],#1
        0x00001090:    e036        6.      B        0x1100 ; ftoa + 360
        0x00001092:    eba4020a    ....    SUB      r2,r4,r10
        0x00001096:    ebab0202    ....    SUB      r2,r11,r2
        0x0000109a:    1e51        Q.      SUBS     r1,r2,#1
        0x0000109c:    9a06        ..      LDR      r2,[sp,#0x18]
        0x0000109e:    4291        .B      CMP      r1,r2
        0x000010a0:    dd01        ..      BLE      0x10a6 ; ftoa + 270
        0x000010a2:    9a06        ..      LDR      r2,[sp,#0x18]
        0x000010a4:    e000        ..      B        0x10a8 ; ftoa + 272
        0x000010a6:    460a        .F      MOV      r2,r1
        0x000010a8:    4611        .F      MOV      r1,r2
        0x000010aa:    2000        .       MOVS     r0,#0
        0x000010ac:    e00b        ..      B        0x10c6 ; ftoa + 302
        0x000010ae:    eb080288    ....    ADD      r2,r8,r8,LSL #2
        0x000010b2:    ea4f0842    O.B.    LSL      r8,r2,#1
        0x000010b6:    2230        0"      MOVS     r2,#0x30
        0x000010b8:    eb026228    ..(b    ADD      r2,r2,r8,ASR #24
        0x000010bc:    f8042b01    ...+    STRB     r2,[r4],#1
        0x000010c0:    f028487f    (..H    BIC      r8,r8,#0xff000000
        0x000010c4:    1c40        @.      ADDS     r0,r0,#1
        0x000010c6:    4288        .B      CMP      r0,r1
        0x000010c8:    dbf1        ..      BLT      0x10ae ; ftoa + 278
        0x000010ca:    eb080288    ....    ADD      r2,r8,r8,LSL #2
        0x000010ce:    0052        R.      LSLS     r2,r2,#1
        0x000010d0:    2305        .#      MOVS     r3,#5
        0x000010d2:    ebb36f22    .."o    CMP      r3,r2,ASR #24
        0x000010d6:    dc12        ..      BGT      0x10fe ; ftoa + 358
        0x000010d8:    1e66        f.      SUBS     r6,r4,#1
        0x000010da:    e00d        ..      B        0x10f8 ; ftoa + 352
        0x000010dc:    7832        2x      LDRB     r2,[r6,#0]
        0x000010de:    2a2e        .*      CMP      r2,#0x2e
        0x000010e0:    d009        ..      BEQ      0x10f6 ; ftoa + 350
        0x000010e2:    7832        2x      LDRB     r2,[r6,#0]
        0x000010e4:    2a39        9*      CMP      r2,#0x39
        0x000010e6:    d102        ..      BNE      0x10ee ; ftoa + 342
        0x000010e8:    2230        0"      MOVS     r2,#0x30
        0x000010ea:    7032        2p      STRB     r2,[r6,#0]
        0x000010ec:    e003        ..      B        0x10f6 ; ftoa + 350
        0x000010ee:    7832        2x      LDRB     r2,[r6,#0]
        0x000010f0:    1c52        R.      ADDS     r2,r2,#1
        0x000010f2:    7032        2p      STRB     r2,[r6,#0]
        0x000010f4:    e002        ..      B        0x10fc ; ftoa + 356
        0x000010f6:    1e76        v.      SUBS     r6,r6,#1
        0x000010f8:    4556        VE      CMP      r6,r10
        0x000010fa:    d2ef        ..      BCS      0x10dc ; ftoa + 324
        0x000010fc:    bf00        ..      NOP      
        0x000010fe:    bf00        ..      NOP      
        0x00001100:    2000        .       MOVS     r0,#0
        0x00001102:    7020         p      STRB     r0,[r4,#0]
        0x00001104:    eba4000a    ....    SUB      r0,r4,r10
        0x00001108:    e757        W.      B        0xfba ; ftoa + 34
    $d
        0x0000110a:    0000        ..      DCW    0
        0x0000110c:    00302e30    0.0.    DCD    3157552
    $t
    i.main
    main
        0x00001110:    2000        .       MOVS     r0,#0
        0x00001112:    f7fffb37    ..7.    BL       am_hal_clkgen_sysclk_select ; 0x784
        0x00001116:    f7fff8d5    ....    BL       am_bsp_low_power_init ; 0x2c4
        0x0000111a:    483b        ;H      LDR      r0,[pc,#236] ; [0x1208] = 0x2c1
        0x0000111c:    f7fffcc4    ....    BL       am_util_stdio_printf_init ; 0xaa8
        0x00001120:    bf00        ..      NOP      
        0x00001122:    2073        s       MOVS     r0,#0x73
        0x00001124:    4939        9I      LDR      r1,[pc,#228] ; [0x120c] = 0x40010000
        0x00001126:    6608        .f      STR      r0,[r1,#0x60]
        0x00001128:    4608        .F      MOV      r0,r1
        0x0000112a:    6d40        @m      LDR      r0,[r0,#0x54]
        0x0000112c:    f0200070     .p.    BIC      r0,r0,#0x70
        0x00001130:    6548        He      STR      r0,[r1,#0x54]
        0x00001132:    4608        .F      MOV      r0,r1
        0x00001134:    6a80        .j      LDR      r0,[r0,#0x28]
        0x00001136:    f420407f     ..@    BIC      r0,r0,#0xff00
        0x0000113a:    f4405080    @..P    ORR      r0,r0,#0x1000
        0x0000113e:    6288        .b      STR      r0,[r1,#0x28]
        0x00001140:    2000        .       MOVS     r0,#0
        0x00001142:    6608        .f      STR      r0,[r1,#0x60]
        0x00001144:    bf00        ..      NOP      
        0x00001146:    f7fffb3d    ..=.    BL       am_hal_itm_enable ; 0x7c4
        0x0000114a:    f7fff895    ....    BL       am_bsp_debug_printf_enable ; 0x278
        0x0000114e:    f7fffcb1    ....    BL       am_util_stdio_terminal_clear ; 0xab4
        0x00001152:    a02f        /.      ADR      r0,{pc}+0xbe ; 0x1210
        0x00001154:    f7fffc90    ....    BL       am_util_stdio_printf ; 0xa78
        0x00001158:    4833        3H      LDR      r0,[pc,#204] ; [0x1228] = 0x150c
        0x0000115a:    f7fffc8d    ....    BL       am_util_stdio_printf ; 0xa78
        0x0000115e:    f7fff869    ..i.    BL       am_bsp_debug_printf_disable ; 0x234
        0x00001162:    2105        .!      MOVS     r1,#5
        0x00001164:    4831        1H      LDR      r0,[pc,#196] ; [0x122c] = 0x1000000c
        0x00001166:    f7fff8be    ....    BL       am_devices_led_array_init ; 0x2e6
        0x0000116a:    2002        .       MOVS     r0,#2
        0x0000116c:    f7fffac4    ....    BL       am_hal_clkgen_osc_start ; 0x6f8
        0x00001170:    bf00        ..      NOP      
        0x00001172:    2073        s       MOVS     r0,#0x73
        0x00001174:    4925        %I      LDR      r1,[pc,#148] ; [0x120c] = 0x40010000
        0x00001176:    6608        .f      STR      r0,[r1,#0x60]
        0x00001178:    4608        .F      MOV      r0,r1
        0x0000117a:    6cc0        .l      LDR      r0,[r0,#0x4c]
        0x0000117c:    f0200007     ...    BIC      r0,r0,#7
        0x00001180:    64c8        .d      STR      r0,[r1,#0x4c]
        0x00001182:    4608        .F      MOV      r0,r1
        0x00001184:    6980        .i      LDR      r0,[r0,#0x18]
        0x00001186:    f02000ff     ...    BIC      r0,r0,#0xff
        0x0000118a:    f0400012    @...    ORR      r0,r0,#0x12
        0x0000118e:    6188        .a      STR      r0,[r1,#0x18]
        0x00001190:    2000        .       MOVS     r0,#0
        0x00001192:    6608        .f      STR      r0,[r1,#0x60]
        0x00001194:    bf00        ..      NOP      
        0x00001196:    2023        #       MOVS     r0,#0x23
        0x00001198:    f7fffaa8    ....    BL       am_hal_clkgen_clkout_enable ; 0x6ec
        0x0000119c:    2100        .!      MOVS     r1,#0
        0x0000119e:    4823        #H      LDR      r0,[pc,#140] ; [0x122c] = 0x1000000c
        0x000011a0:    f7fffa50    ..P.    BL       am_devices_led_toggle ; 0x644
        0x000011a4:    2401        .$      MOVS     r4,#1
        0x000011a6:    f44f77fa    O..w    MOV      r7,#0x1f4
        0x000011aa:    2600        .&      MOVS     r6,#0
        0x000011ac:    e02b        +.      B        0x1206 ; main + 246
        0x000011ae:    4817        .H      LDR      r0,[pc,#92] ; [0x120c] = 0x40010000
        0x000011b0:    3080        .0      ADDS     r0,r0,#0x80
        0x000011b2:    6800        .h      LDR      r0,[r0,#0]
        0x000011b4:    f3c06500    ...e    UBFX     r5,r0,#24,#1
        0x000011b8:    42ae        .B      CMP      r6,r5
        0x000011ba:    d024        $.      BEQ      0x1206 ; main + 246
        0x000011bc:    462e        .F      MOV      r6,r5
        0x000011be:    b315        ..      CBZ      r5,0x1206 ; main + 246
        0x000011c0:    1e78        x.      SUBS     r0,r7,#1
        0x000011c2:    1e07        ..      SUBS     r7,r0,#0
        0x000011c4:    da1f        ..      BGE      0x1206 ; main + 246
        0x000011c6:    2100        .!      MOVS     r1,#0
        0x000011c8:    4818        .H      LDR      r0,[pc,#96] ; [0x122c] = 0x1000000c
        0x000011ca:    f7fff993    ....    BL       am_devices_led_off ; 0x4f4
        0x000011ce:    2101        .!      MOVS     r1,#1
        0x000011d0:    4816        .H      LDR      r0,[pc,#88] ; [0x122c] = 0x1000000c
        0x000011d2:    f7fff98f    ....    BL       am_devices_led_off ; 0x4f4
        0x000011d6:    2102        .!      MOVS     r1,#2
        0x000011d8:    4814        .H      LDR      r0,[pc,#80] ; [0x122c] = 0x1000000c
        0x000011da:    f7fff98b    ....    BL       am_devices_led_off ; 0x4f4
        0x000011de:    2103        .!      MOVS     r1,#3
        0x000011e0:    4812        .H      LDR      r0,[pc,#72] ; [0x122c] = 0x1000000c
        0x000011e2:    f7fff987    ....    BL       am_devices_led_off ; 0x4f4
        0x000011e6:    2104        .!      MOVS     r1,#4
        0x000011e8:    4810        .H      LDR      r0,[pc,#64] ; [0x122c] = 0x1000000c
        0x000011ea:    f7fff983    ....    BL       am_devices_led_off ; 0x4f4
        0x000011ee:    4621        !F      MOV      r1,r4
        0x000011f0:    480e        .H      LDR      r0,[pc,#56] ; [0x122c] = 0x1000000c
        0x000011f2:    f7fff9d3    ....    BL       am_devices_led_on ; 0x59c
        0x000011f6:    1c64        d.      ADDS     r4,r4,#1
        0x000011f8:    2005        .       MOVS     r0,#5
        0x000011fa:    fb94f1f0    ....    SDIV     r1,r4,r0
        0x000011fe:    fb004411    ...D    MLS      r4,r0,r1,r4
        0x00001202:    f44f77fa    O..w    MOV      r7,#0x1f4
        0x00001206:    e7d2        ..      B        0x11ae ; main + 158
    $d
        0x00001208:    000002c1    ....    DCD    705
        0x0000120c:    40010000    ...@    DCD    1073807360
        0x00001210:    4f4b4c43    CLKO    DCD    1330334787
        0x00001214:    74205455    UT t    DCD    1948275797
        0x00001218:    454c206f    o LE    DCD    1162616943
        0x0000121c:    78452044    D Ex    DCD    2017796164
        0x00001220:    6c706d61    ampl    DCD    1819307361
        0x00001224:    00000a65    e...    DCD    2661
        0x00001228:    0000150c    ....    DCD    5388
        0x0000122c:    1000000c    ....    DCD    268435468
    $t
    i.ndigits_in_hex
    ndigits_in_hex
        0x00001230:    b530        0.      PUSH     {r4,r5,lr}
        0x00001232:    4602        .F      MOV      r2,r0
        0x00001234:    460b        .F      MOV      r3,r1
        0x00001236:    2400        .$      MOVS     r4,#0
        0x00001238:    ea820104    ....    EOR      r1,r2,r4
        0x0000123c:    405c        \@      EORS     r4,r4,r3
        0x0000123e:    4321        !C      ORRS     r1,r1,r4
        0x00001240:    d101        ..      BNE      0x1246 ; ndigits_in_hex + 22
        0x00001242:    2101        .!      MOVS     r1,#1
        0x00001244:    e000        ..      B        0x1248 ; ndigits_in_hex + 24
        0x00001246:    2100        .!      MOVS     r1,#0
        0x00001248:    4608        .F      MOV      r0,r1
        0x0000124a:    e004        ..      B        0x1256 ; ndigits_in_hex + 38
        0x0000124c:    0911        ..      LSRS     r1,r2,#4
        0x0000124e:    ea417203    A..r    ORR      r2,r1,r3,LSL #28
        0x00001252:    091b        ..      LSRS     r3,r3,#4
        0x00001254:    1c40        @.      ADDS     r0,r0,#1
        0x00001256:    2400        .$      MOVS     r4,#0
        0x00001258:    ea820104    ....    EOR      r1,r2,r4
        0x0000125c:    405c        \@      EORS     r4,r4,r3
        0x0000125e:    4321        !C      ORRS     r1,r1,r4
        0x00001260:    d1f4        ..      BNE      0x124c ; ndigits_in_hex + 28
        0x00001262:    bd30        0.      POP      {r4,r5,pc}
    i.ndigits_in_i64
    ndigits_in_i64
        0x00001264:    b570        p.      PUSH     {r4-r6,lr}
        0x00001266:    4604        .F      MOV      r4,r0
        0x00001268:    460d        .F      MOV      r5,r1
        0x0000126a:    2100        .!      MOVS     r1,#0
        0x0000126c:    4608        .F      MOV      r0,r1
        0x0000126e:    1a61        a.      SUBS     r1,r4,r1
        0x00001270:    eb750000    u...    SBCS     r0,r5,r0
        0x00001274:    da03        ..      BGE      0x127e ; ndigits_in_i64 + 26
        0x00001276:    2200        ."      MOVS     r2,#0
        0x00001278:    4264        dB      RSBS     r4,r4,#0
        0x0000127a:    eb620505    b...    SBC      r5,r2,r5
        0x0000127e:    4620         F      MOV      r0,r4
        0x00001280:    4629        )F      MOV      r1,r5
        0x00001282:    f000f801    ....    BL       ndigits_in_u64 ; 0x1288
        0x00001286:    bd70        p.      POP      {r4-r6,pc}
    i.ndigits_in_u64
    ndigits_in_u64
        0x00001288:    b570        p.      PUSH     {r4-r6,lr}
        0x0000128a:    4604        .F      MOV      r4,r0
        0x0000128c:    460d        .F      MOV      r5,r1
        0x0000128e:    2100        .!      MOVS     r1,#0
        0x00001290:    ea840001    ....    EOR      r0,r4,r1
        0x00001294:    4069        i@      EORS     r1,r1,r5
        0x00001296:    4308        .C      ORRS     r0,r0,r1
        0x00001298:    d101        ..      BNE      0x129e ; ndigits_in_u64 + 22
        0x0000129a:    2001        .       MOVS     r0,#1
        0x0000129c:    e000        ..      B        0x12a0 ; ndigits_in_u64 + 24
        0x0000129e:    2000        .       MOVS     r0,#0
        0x000012a0:    4606        .F      MOV      r6,r0
        0x000012a2:    e006        ..      B        0x12b2 ; ndigits_in_u64 + 42
        0x000012a4:    4620         F      MOV      r0,r4
        0x000012a6:    4629        )F      MOV      r1,r5
        0x000012a8:    f7fffe0f    ....    BL       divu64_10 ; 0xeca
        0x000012ac:    4604        .F      MOV      r4,r0
        0x000012ae:    460d        .F      MOV      r5,r1
        0x000012b0:    1c76        v.      ADDS     r6,r6,#1
        0x000012b2:    2100        .!      MOVS     r1,#0
        0x000012b4:    ea840001    ....    EOR      r0,r4,r1
        0x000012b8:    4069        i@      EORS     r1,r1,r5
        0x000012ba:    4308        .C      ORRS     r0,r0,r1
        0x000012bc:    d1f2        ..      BNE      0x12a4 ; ndigits_in_u64 + 28
        0x000012be:    4630        0F      MOV      r0,r6
        0x000012c0:    bd70        p.      POP      {r4-r6,pc}
    i.padbuffer
    padbuffer
        0x000012c2:    b530        0.      PUSH     {r4,r5,lr}
        0x000012c4:    4603        .F      MOV      r3,r0
        0x000012c6:    2000        .       MOVS     r0,#0
        0x000012c8:    2a00        .*      CMP      r2,#0
        0x000012ca:    dc00        ..      BGT      0x12ce ; padbuffer + 12
        0x000012cc:    bd30        0.      POP      {r4,r5,pc}
        0x000012ce:    e003        ..      B        0x12d8 ; padbuffer + 22
        0x000012d0:    b10b        ..      CBZ      r3,0x12d6 ; padbuffer + 20
        0x000012d2:    f8031b01    ....    STRB     r1,[r3],#1
        0x000012d6:    1c40        @.      ADDS     r0,r0,#1
        0x000012d8:    1e14        ..      SUBS     r4,r2,#0
        0x000012da:    f1a20201    ....    SUB      r2,r2,#1
        0x000012de:    d1f7        ..      BNE      0x12d0 ; padbuffer + 14
        0x000012e0:    bf00        ..      NOP      
        0x000012e2:    e7f3        ..      B        0x12cc ; padbuffer + 10
    i.simple_strlen
    simple_strlen
        0x000012e4:    4601        .F      MOV      r1,r0
        0x000012e6:    2000        .       MOVS     r0,#0
        0x000012e8:    b901        ..      CBNZ     r1,0x12ec ; simple_strlen + 8
        0x000012ea:    4770        pG      BX       lr
        0x000012ec:    e000        ..      B        0x12f0 ; simple_strlen + 12
        0x000012ee:    1c40        @.      ADDS     r0,r0,#1
        0x000012f0:    f8113b01    ...;    LDRB     r3,[r1],#1
        0x000012f4:    2b00        .+      CMP      r3,#0
        0x000012f6:    d1fa        ..      BNE      0x12ee ; simple_strlen + 10
        0x000012f8:    bf00        ..      NOP      
        0x000012fa:    e7f6        ..      B        0x12ea ; simple_strlen + 6
    i.uint64_to_hexstr
    uint64_to_hexstr
        0x000012fc:    e92d41f0    -..A    PUSH     {r4-r8,lr}
        0x00001300:    b085        ..      SUB      sp,sp,#0x14
        0x00001302:    4604        .F      MOV      r4,r0
        0x00001304:    460d        .F      MOV      r5,r1
        0x00001306:    461e        .F      MOV      r6,r3
        0x00001308:    2100        .!      MOVS     r1,#0
        0x0000130a:    468c        .F      MOV      r12,r1
        0x0000130c:    ea84070c    ....    EOR      r7,r4,r12
        0x00001310:    ea850c0c    ....    EOR      r12,r5,r12
        0x00001314:    ea57070c    W...    ORRS     r7,r7,r12
        0x00001318:    d105        ..      BNE      0x1326 ; uint64_to_hexstr + 42
        0x0000131a:    f04f0830    O.0.    MOV      r8,#0x30
        0x0000131e:    460f        .F      MOV      r7,r1
        0x00001320:    1c49        I.      ADDS     r1,r1,#1
        0x00001322:    f80d8007    ....    STRB     r8,[sp,r7]
        0x00001326:    e016        ..      B        0x1356 ; uint64_to_hexstr + 90
        0x00001328:    270f        .'      MOVS     r7,#0xf
        0x0000132a:    4027        '@      ANDS     r7,r7,r4
        0x0000132c:    b2fb        ..      UXTB     r3,r7
        0x0000132e:    2b09        .+      CMP      r3,#9
        0x00001330:    dd05        ..      BLE      0x133e ; uint64_to_hexstr + 66
        0x00001332:    b10e        ..      CBZ      r6,0x1338 ; uint64_to_hexstr + 60
        0x00001334:    2727        ''      MOVS     r7,#0x27
        0x00001336:    e000        ..      B        0x133a ; uint64_to_hexstr + 62
        0x00001338:    2707        .'      MOVS     r7,#7
        0x0000133a:    441f        .D      ADD      r7,r7,r3
        0x0000133c:    b2fb        ..      UXTB     r3,r7
        0x0000133e:    f1030730    ..0.    ADD      r7,r3,#0x30
        0x00001342:    f00708ff    ....    AND      r8,r7,#0xff
        0x00001346:    460f        .F      MOV      r7,r1
        0x00001348:    1c49        I.      ADDS     r1,r1,#1
        0x0000134a:    f80d8007    ....    STRB     r8,[sp,r7]
        0x0000134e:    0927        '.      LSRS     r7,r4,#4
        0x00001350:    ea477405    G..t    ORR      r4,r7,r5,LSL #28
        0x00001354:    092d        -.      LSRS     r5,r5,#4
        0x00001356:    f04f0c00    O...    MOV      r12,#0
        0x0000135a:    ea84070c    ....    EOR      r7,r4,r12
        0x0000135e:    ea850c0c    ....    EOR      r12,r5,r12
        0x00001362:    ea57070c    W...    ORRS     r7,r7,r12
        0x00001366:    d1df        ..      BNE      0x1328 ; uint64_to_hexstr + 44
        0x00001368:    4608        .F      MOV      r0,r1
        0x0000136a:    b14a        J.      CBZ      r2,0x1380 ; uint64_to_hexstr + 132
        0x0000136c:    e003        ..      B        0x1376 ; uint64_to_hexstr + 122
        0x0000136e:    f81d7001    ...p    LDRB     r7,[sp,r1]
        0x00001372:    f8027b01    ...{    STRB     r7,[r2],#1
        0x00001376:    1e0f        ..      SUBS     r7,r1,#0
        0x00001378:    f1a10101    ....    SUB      r1,r1,#1
        0x0000137c:    d1f7        ..      BNE      0x136e ; uint64_to_hexstr + 114
        0x0000137e:    7017        .p      STRB     r7,[r2,#0]
        0x00001380:    b005        ..      ADD      sp,sp,#0x14
        0x00001382:    e8bd81f0    ....    POP      {r4-r8,pc}
    i.uint64_to_str
    uint64_to_str
        0x00001386:    e92d4ff0    -..O    PUSH     {r4-r11,lr}
        0x0000138a:    b087        ..      SUB      sp,sp,#0x1c
        0x0000138c:    4607        .F      MOV      r7,r0
        0x0000138e:    4688        .F      MOV      r8,r1
        0x00001390:    4616        .F      MOV      r6,r2
        0x00001392:    f04f0900    O...    MOV      r9,#0
        0x00001396:    46cb        .F      MOV      r11,r9
        0x00001398:    bf00        ..      NOP      
        0x0000139a:    4638        8F      MOV      r0,r7
        0x0000139c:    4641        AF      MOV      r1,r8
        0x0000139e:    f7fffd94    ....    BL       divu64_10 ; 0xeca
        0x000013a2:    4604        .F      MOV      r4,r0
        0x000013a4:    460d        .F      MOV      r5,r1
        0x000013a6:    210a        .!      MOVS     r1,#0xa
        0x000013a8:    fba40101    ....    UMULL    r0,r1,r4,r1
        0x000013ac:    ebb70a00    ....    SUBS     r10,r7,r0
        0x000013b0:    f10a0030    ..0.    ADD      r0,r10,#0x30
        0x000013b4:    b2c2        ..      UXTB     r2,r0
        0x000013b6:    4648        HF      MOV      r0,r9
        0x000013b8:    f1090901    ....    ADD      r9,r9,#1
        0x000013bc:    f80d2000    ...     STRB     r2,[sp,r0]
        0x000013c0:    4627        'F      MOV      r7,r4
        0x000013c2:    46a8        .F      MOV      r8,r5
        0x000013c4:    f04f0200    O...    MOV      r2,#0
        0x000013c8:    ea870002    ....    EOR      r0,r7,r2
        0x000013cc:    ea880102    ....    EOR      r1,r8,r2
        0x000013d0:    4308        .C      ORRS     r0,r0,r1
        0x000013d2:    d1e2        ..      BNE      0x139a ; uint64_to_str + 20
        0x000013d4:    46cb        .F      MOV      r11,r9
        0x000013d6:    b156        V.      CBZ      r6,0x13ee ; uint64_to_str + 104
        0x000013d8:    e003        ..      B        0x13e2 ; uint64_to_str + 92
        0x000013da:    f81d0009    ....    LDRB     r0,[sp,r9]
        0x000013de:    f8060b01    ....    STRB     r0,[r6],#1
        0x000013e2:    f1b90000    ....    SUBS     r0,r9,#0
        0x000013e6:    f1a90901    ....    SUB      r9,r9,#1
        0x000013ea:    d1f6        ..      BNE      0x13da ; uint64_to_str + 84
        0x000013ec:    7030        0p      STRB     r0,[r6,#0]
        0x000013ee:    4658        XF      MOV      r0,r11
        0x000013f0:    b007        ..      ADD      sp,sp,#0x1c
        0x000013f2:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x000013f6:    0000        ..      MOVS     r0,r0
    x$fpl$d2f
    $v0
    __aeabi_d2f
    _d2f
        0x000013f8:    f0214200    !..B    BIC      r2,r1,#0x80000000
        0x000013fc:    f1a25260    ..`R    SUB      r2,r2,#0x38000000
        0x00001400:    f5b21f80    ....    CMP      r2,#0x100000
        0x00001404:    f0014300    ...C    AND      r3,r1,#0x80000000
        0x00001408:    bf28        (.      IT       CS
        0x0000140a:    f1d26c7f    ...l    RSBSCS   r12,r2,#0xff00000
        0x0000140e:    d90b        ..      BLS      0x1428 ; __aeabi_d2f + 48
        0x00001410:    ea5f1c00    _...    LSLS     r12,r0,#4
        0x00001414:    ea4302c2    C...    ORR      r2,r3,r2,LSL #3
        0x00001418:    eb427050    B.Pp    ADC      r0,r2,r0,LSR #29
        0x0000141c:    bf18        ..      IT       NE
        0x0000141e:    4770        pG      BXNE     lr
        0x00001420:    bf28        (.      IT       CS
        0x00001422:    f0200001     ...    BICCS    r0,r0,#1
        0x00001426:    4770        pG      BX       lr
        0x00001428:    f5b21f80    ....    CMP      r2,#0x100000
        0x0000142c:    bfbc        ..      ITT      LT
        0x0000142e:    4618        .F      MOVLT    r0,r3
        0x00001430:    4770        pG      BXLT     lr
        0x00001432:    ea4f0c41    O.A.    LSL      r12,r1,#1
        0x00001436:    f51c1f00    ....    CMN      r12,#0x200000
        0x0000143a:    d202        ..      BCS      0x1442 ; __aeabi_d2f + 74
        0x0000143c:    4608        .F      MOV      r0,r1
        0x0000143e:    f000b85f    .._.    B.W      __fpl_fretinf ; 0x1500
        0x00001442:    b570        p.      PUSH     {r4-r6,lr}
        0x00001444:    f000f809    ....    BL       __fpl_dnaninf ; 0x145a
    $d
        0x00001448:    89000000    ....    DCD    2298478592
    $t
        0x0000144c:    f7ffbff6    ....    B.W      0x143c ; __aeabi_d2f + 68
        0x00001450:    f04f4000    O..@    MOV      r0,#0x80000000
        0x00001454:    f5a00080    ....    SUB      r0,r0,#0x400000
        0x00001458:    4770        pG      BX       lr
    x$fpl$dnaninf
    $v0
    __fpl_dnaninf
        0x0000145a:    f10e0e02    ....    ADD      lr,lr,#2
        0x0000145e:    f02e0e03    ....    BIC      lr,lr,#3
        0x00001462:    f85e6b04    ^..k    LDR      r6,[lr],#4
        0x00001466:    4236        6B      TST      r6,r6
        0x00001468:    d405        ..      BMI      0x1476 ; __fpl_dnaninf + 28
        0x0000146a:    2a01        .*      CMP      r2,#1
        0x0000146c:    eb430503    C...    ADC      r5,r3,r3
        0x00001470:    f5151f00    ....    CMN      r5,#0x200000
        0x00001474:    d812        ..      BHI      0x149c ; __fpl_dnaninf + 66
        0x00001476:    2801        .(      CMP      r0,#1
        0x00001478:    eb410c01    A...    ADC      r12,r1,r1
        0x0000147c:    f51c1f00    ....    CMN      r12,#0x200000
        0x00001480:    d80c        ..      BHI      0x149c ; __fpl_dnaninf + 66
        0x00001482:    d10e        ..      BNE      0x14a2 ; __fpl_dnaninf + 72
        0x00001484:    ea4f7cd1    O..|    LSR      r12,r1,#31
        0x00001488:    f5151f00    ....    CMN      r5,#0x200000
        0x0000148c:    eb0c0c4c    ..L.    ADD      r12,r12,r12,LSL #1
        0x00001490:    f10c0c02    ....    ADD      r12,r12,#2
        0x00001494:    bf08        ..      IT       EQ
        0x00001496:    eb4c7cd3    L..|    ADCEQ    r12,r12,r3,LSR #31
        0x0000149a:    e004        ..      B        0x14a6 ; __fpl_dnaninf + 76
        0x0000149c:    f04f0c08    O...    MOV      r12,#8
        0x000014a0:    e001        ..      B        0x14a6 ; __fpl_dnaninf + 76
        0x000014a2:    ea4f7cd3    O..|    LSR      r12,r3,#31
        0x000014a6:    eb0c054c    ..L.    ADD      r5,r12,r12,LSL #1
        0x000014aa:    fa26f605    &...    LSR      r6,r6,r5
        0x000014ae:    f0060607    ....    AND      r6,r6,#7
        0x000014b2:    f1b60c04    ....    SUBS     r12,r6,#4
        0x000014b6:    d206        ..      BCS      0x14c6 ; __fpl_dnaninf + 108
        0x000014b8:    eb0e0c86    ....    ADD      r12,lr,r6,LSL #2
        0x000014bc:    e8bd4070    ..p@    POP      {r4-r6,lr}
        0x000014c0:    f04c0c01    L...    ORR      r12,r12,#1
        0x000014c4:    4760        `G      BX       r12
        0x000014c6:    e8dff00c    ....    TBB      [pc,r12]
    $d
        0x000014ca:    0b09        ..      DCW    2825
        0x000014cc:    0202        ..      DCW    514
    $t
        0x000014ce:    f04f4100    O..A    MOV      r1,#0x80000000
        0x000014d2:    f04f0000    O...    MOV      r0,#0
        0x000014d6:    f5a12100    ...!    SUB      r1,r1,#0x80000
        0x000014da:    bd70        p.      POP      {r4-r6,pc}
        0x000014dc:    4619        .F      MOV      r1,r3
        0x000014de:    4610        .F      MOV      r0,r2
        0x000014e0:    2801        .(      CMP      r0,#1
        0x000014e2:    eb510401    Q...    ADCS     r4,r1,r1
        0x000014e6:    bf18        ..      IT       NE
        0x000014e8:    f5d41400    ....    RSBSNE   r4,r4,#0x200000
        0x000014ec:    bf84        ..      ITT      HI
        0x000014ee:    2000        .       MOVHI    r0,#0
        0x000014f0:    f0014100    ...A    ANDHI    r1,r1,#0x80000000
        0x000014f4:    bd70        p.      POP      {r4-r6,pc}
    x$fpl$fpinit
    $v0
    _fp_init
        0x000014f6:    f04f7040    O.@p    MOV      r0,#0x3000000
        0x000014fa:    eee10a10    ....    VMSR     FPSCR,r0
    __fplib_config_fpu_vfp
    __fplib_config_pureend_doubles
        0x000014fe:    4770        pG      BX       lr
    x$fpl$fretinf
    $v0
    __fpl_fretinf
        0x00001500:    21ff        .!      MOVS     r1,#0xff
        0x00001502:    ea4150d0    A..P    ORR      r0,r1,r0,LSR #23
        0x00001506:    05c0        ..      LSLS     r0,r0,#23
        0x00001508:    4770        pG      BX       lr
    x$fpl$usenofp
    __I$use$fp
        0x0000150a:    0000        ..      MOVS     r0,r0
    $d.realdata
    .conststring
        0x0000150c:    6c615709    .Wal    DCD    1818318601
        0x00001510:    7420736b    ks t    DCD    1948283755
        0x00001514:    62206568    he b    DCD    1646290280
        0x00001518:    6472616f    oard    DCD    1685217647
        0x0000151c:    44454c20     LED    DCD    1145392160
        0x00001520:    62612073    s ab    DCD    1650532467
        0x00001524:    2074756f    out     DCD    544503151
        0x00001528:    65636e6f    once    DCD    1701015151
        0x0000152c:    73206120     a s    DCD    1931501856
        0x00001530:    6e6f6365    econ    DCD    1852793701
        0x00001534:    61622064    d ba    DCD    1633820772
        0x00001538:    20646573    sed     DCD    543450483
        0x0000153c:    74206e6f    on t    DCD    1948282479
        0x00001540:    43206568    he C    DCD    1126196584
        0x00001544:    554f4b4c    LKOU    DCD    1431259980
        0x00001548:    69732054    T si    DCD    1769152596
        0x0000154c:    6c616e67    gnal    DCD    1818324583
        0x00001550:    00000a2e    ....    DCD    2606
    Region$$Table$$Base
        0x00001554:    00001574    t...    DCD    5492
        0x00001558:    10000000    ....    DCD    268435456
        0x0000155c:    00000034    4...    DCD    52
        0x00001560:    000000d4    ....    DCD    212
        0x00001564:    000015a8    ....    DCD    5544
        0x00001568:    10000034    4...    DCD    268435508
        0x0000156c:    00001164    d...    DCD    4452
        0x00001570:    000000f0    ....    DCD    240
    Region$$Table$$Limit

** Section #2 'SRAM' (SHT_PROGBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 52 bytes (alignment 4)
    Address: 0x10000000

    0x10000000:   00 00 00 00 00 00 00 00 00 00 00 00 22 00 00 00    ............"...
    0x10000010:   00 00 00 00 21 00 00 00 00 00 00 00 1c 00 00 00    ....!...........
    0x10000020:   00 00 00 00 1a 00 00 00 00 00 00 00 19 00 00 00    ................
    0x10000030:   00 00 00 00                                        ....


** Section #3 'SRAM' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4452 bytes (alignment 8)
    Address: 0x10000034


** Section #4 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 1476 bytes


** Section #5 '.debug_frame' (SHT_PROGBITS)
    Size   : 2572 bytes


** Section #6 '.debug_info' (SHT_PROGBITS)
    Size   : 11976 bytes


** Section #7 '.debug_line' (SHT_PROGBITS)
    Size   : 5340 bytes


** Section #8 '.debug_loc' (SHT_PROGBITS)
    Size   : 2300 bytes


** Section #9 '.debug_macinfo' (SHT_PROGBITS)
    Size   : 3568 bytes


** Section #10 '.debug_pubnames' (SHT_PROGBITS)
    Size   : 595 bytes


** Section #11 '.symtab' (SHT_SYMTAB)
    Size   : 6688 bytes (alignment 4)
    String table #12 '.strtab'
    Last local symbol no. 280

    Symbol table .symtab (417 symbols, 280 local)

      #  Symbol Name                Value      Bind  Sec  Type  Vis  Size
    ========================================================================

      1  $d                         0x00000000   Lc    1   --   De 
      2  $t                         0x00000070   Lc    1   --   De 
      3  $d                         0x00000094   Lc    1   --   De 
      4  $t                         0x00000098   Lc    1   --   De 
      5  $d                         0x000000cc   Lc    1   --   De 
      6  $t                         0x000000d4   Lc    1   --   De 
      7  $d                         0x0000015e   Lc    1   --   De 
      8  $t                         0x0000016c   Lc    1   --   De 
      9  $d                         0x00000220   Lc    1   --   De 
     10  $t                         0x00000224   Lc    1   --   De 
     11  $d                         0x0000022c   Lc    1   --   De 
     12  $t                         0x00000230   Lc    1   --   De 
     13  $d                         0x00000270   Lc    1   --   De 
     14  $t                         0x00000278   Lc    1   --   De 
     15  $d                         0x000002b4   Lc    1   --   De 
     16  $t                         0x000002c0   Lc    1   --   De 
     17  $d                         0x000004f0   Lc    1   --   De 
     18  $t                         0x000004f4   Lc    1   --   De 
     19  $d                         0x00000598   Lc    1   --   De 
     20  $t                         0x0000059c   Lc    1   --   De 
     21  $d                         0x00000640   Lc    1   --   De 
     22  $t                         0x00000644   Lc    1   --   De 
     23  $d                         0x000006e6   Lc    1   --   De 
     24  $t                         0x000006ec   Lc    1   --   De 
     25  $d                         0x00000736   Lc    1   --   De 
     26  $t                         0x0000073e   Lc    1   --   De 
     27  $d                         0x00000764   Lc    1   --   De 
     28  $t                         0x00000784   Lc    1   --   De 
     29  $d                         0x000007c0   Lc    1   --   De 
     30  $t                         0x000007c4   Lc    1   --   De 
     31  $d                         0x000007fc   Lc    1   --   De 
     32  $t                         0x0000081c   Lc    1   --   De 
     33  $d                         0x0000083e   Lc    1   --   De 
     34  $t                         0x00000848   Lc    1   --   De 
     35  $d                         0x00000884   Lc    1   --   De 
     36  $t                         0x00000888   Lc    1   --   De 
     37  $d                         0x000008ac   Lc    1   --   De 
     38  $t                         0x000008b0   Lc    1   --   De 
     39  $d                         0x000008e4   Lc    1   --   De 
     40  $t                         0x000008e8   Lc    1   --   De 
     41  $d                         0x00000916   Lc    1   --   De 
     42  $t                         0x0000091c   Lc    1   --   De 
     43  $d                         0x0000099a   Lc    1   --   De 
     44  $t                         0x000009b4   Lc    1   --   De 
     45  $d                         0x000009bc   Lc    1   --   De 
     46  $t                         0x000009c0   Lc    1   --   De 
     47  $d                         0x00000a72   Lc    1   --   De 
     48  $t                         0x00000a78   Lc    1   --   De 
     49  $d                         0x00000aa0   Lc    1   --   De 
     50  $t                         0x00000aa8   Lc    1   --   De 
     51  $d                         0x00000aae   Lc    1   --   De 
     52  $t                         0x00000ab4   Lc    1   --   De 
     53  $d                         0x00000abe   Lc    1   --   De 
     54  $t                         0x00000ad4   Lc    1   --   De 
     55  $d                         0x00000e78   Lc    1   --   De 
     56  $t                         0x00000e88   Lc    1   --   De 
     57  $d                         0x0000110a   Lc    1   --   De 
     58  $t                         0x00001110   Lc    1   --   De 
     59  $d                         0x00001208   Lc    1   --   De 
     60  $t                         0x00001230   Lc    1   --   De 
     61  $d                         0x00001448   Lc    1   --   De 
     62  $t                         0x0000144c   Lc    1   --   De 
     63  $d                         0x000014ca   Lc    1   --   De 
     64  $t                         0x000014ce   Lc    1   --   De 
     65  $d.realdata                0x0000150c   Lc    1   --   De 
     66  $d.realdata                0x10000000   Lc    2   --   De 
     67  ../src/clkout.c            0x00000000   Lc  Abs  File  De 
     68  i.main                     0x00001110   Lc    1  Sect  De 
     69  .conststring               0x0000150c   Lc    1  Sect  De   0x47
     70  ../../../../../utils/am_util_delay.c
                                    0x00000000   Lc  Abs  File  De 
     71  ..\..\..\..\..\utils\am_util_faultisr.c
                                    0x00000000   Lc  Abs  File  De 
     72  .emb_text                  0x00000138   Lc    1  Sect  De   0x14
     73  $v0                        0x00000138   Lc    1   --   De 
     74  ../../../../../utils/am_util_faultisr.c
                                    0x00000000   Lc  Abs  File  De 
     75  i.am_util_faultisr_collect_data
                                    0x000009c0   Lc    1  Sect  De 
     76  ../../../../../utils/am_util_stdio.c
                                    0x00000000   Lc  Abs  File  De 
     77  i.am_util_stdio_printf     0x00000a78   Lc    1  Sect  De 
     78  i.am_util_stdio_printf_init
                                    0x00000aa8   Lc    1  Sect  De 
     79  i.am_util_stdio_terminal_clear
                                    0x00000ab4   Lc    1  Sect  De 
     80  i.am_util_stdio_vsprintf   0x00000ad4   Lc    1  Sect  De 
     81  i.decstr_to_int            0x00000e88   Lc    1  Sect  De 
     82  decstr_to_int              0x00000e89   Lc    1  Code  De   0x42
     83  i.divu64_10                0x00000eca   Lc    1  Sect  De 
     84  divu64_10                  0x00000ecb   Lc    1  Code  De   0xcc
     85  i.ftoa                     0x00000f98   Lc    1  Sect  De 
     86  ftoa                       0x00000f99   Lc    1  Code  De   0x172
     87  i.ndigits_in_hex           0x00001230   Lc    1  Sect  De 
     88  ndigits_in_hex             0x00001231   Lc    1  Code  De   0x34
     89  i.ndigits_in_i64           0x00001264   Lc    1  Sect  De 
     90  ndigits_in_i64             0x00001265   Lc    1  Code  De   0x24
     91  i.ndigits_in_u64           0x00001288   Lc    1  Sect  De 
     92  ndigits_in_u64             0x00001289   Lc    1  Code  De   0x3a
     93  i.padbuffer                0x000012c2   Lc    1  Sect  De 
     94  padbuffer                  0x000012c3   Lc    1  Code  De   0x22
     95  i.simple_strlen            0x000012e4   Lc    1  Sect  De 
     96  simple_strlen              0x000012e5   Lc    1  Code  De   0x18
     97  i.uint64_to_hexstr         0x000012fc   Lc    1  Sect  De 
     98  uint64_to_hexstr           0x000012fd   Lc    1  Code  De   0x8a
     99  i.uint64_to_str            0x00001386   Lc    1  Sect  De 
    100  uint64_to_str              0x00001387   Lc    1  Code  De   0x70
    101  .bss                       0x10000034   Lc    3  Sect  De   0x100
    102  g_prfbuf                   0x10000034   Lc    3  Data  De   0x100
    103  .data                      0x10000000   Lc    2  Sect  De   0x5
    104  g_bTxtXlate                0x10000004   Lc    2  Data  De   0x1
    105  ../../../../../devices/am_devices_led.c
                                    0x00000000   Lc  Abs  File  De 
    106  i.am_devices_led_array_init
                                    0x000002e6   Lc    1  Sect  De 
    107  i.am_devices_led_init      0x0000030c   Lc    1  Sect  De 
    108  i.am_devices_led_off       0x000004f4   Lc    1  Sect  De 
    109  i.am_devices_led_on        0x0000059c   Lc    1  Sect  De 
    110  i.am_devices_led_toggle    0x00000644   Lc    1  Sect  De 
    111  ../keil/startup_keil.s     0x00000000   Lc  Abs  File  De 
    112  STACK                      0x10000198   Lc    3  Sect  De   0x1000
    113  StackMem                   0x10000198   Lc    3  Data  De 
    114  HEAP                       0x10000198   Lc    3  Sect  De 
    115  HeapMem                    0x10000198   Lc    3  Data  De 
    116  RESET                      0x00000000   Lc    1  Sect  De   0x98
    117  $v0                        0x00000070   Lc    1   --   De 
    118  .text                      0x00000154   Lc    1  Sect  De   0x18
    119  $v0                        0x00000154   Lc    1   --   De 
    120  ../am_hal_global.c         0x00000000   Lc  Abs  File  De 
    121  .data                      0x10000008   Lc    2  Sect  De   0x4
    122  ../am_bsp.c                0x00000000   Lc  Abs  File  De 
    123  i.am_bsp_debug_printf_disable
                                    0x00000234   Lc    1  Sect  De 
    124  i.am_bsp_debug_printf_enable
                                    0x00000278   Lc    1  Sect  De 
    125  i.am_bsp_itm_string_print  0x000002c0   Lc    1  Sect  De 
    126  i.am_bsp_low_power_init    0x000002c4   Lc    1  Sect  De 
    127  .data                      0x1000000c   Lc    2  Sect  De   0x28
    128  ../am_hal_clkgen.c         0x00000000   Lc  Abs  File  De 
    129  i.am_hal_clkgen_clkout_enable
                                    0x000006ec   Lc    1  Sect  De 
    130  i.am_hal_clkgen_osc_start  0x000006f8   Lc    1  Sect  De 
    131  i.am_hal_clkgen_osc_stop   0x0000070e   Lc    1  Sect  De 
    132  i.am_hal_clkgen_sysclk_get 0x00000724   Lc    1  Sect  De 
    133  i.am_hal_clkgen_sysclk_select
                                    0x00000784   Lc    1  Sect  De 
    134  ..\am_hal_flash.c          0x00000000   Lc  Abs  File  De 
    135  .emb_text                  0x0000014c   Lc    1  Sect  De   0x6
    136  $v0                        0x0000014c   Lc    1   --   De 
    137  ../am_hal_flash.c          0x00000000   Lc  Abs  File  De 
    138  ../am_hal_gpio.c           0x00000000   Lc  Abs  File  De 
    139  i.am_hal_gpio_out_enable_bit_get
                                    0x00000794   Lc    1  Sect  De 
    140  ../am_hal_itm.c            0x00000000   Lc  Abs  File  De 
    141  i.am_hal_itm_enable        0x000007c4   Lc    1  Sect  De 
    142  i.am_hal_itm_not_busy      0x0000081c   Lc    1  Sect  De 
    143  i.am_hal_itm_print         0x00000848   Lc    1  Sect  De 
    144  ../am_hal_mcuctrl.c        0x00000000   Lc  Abs  File  De 
    145  i.am_hal_mcuctrl_bandgap_disable
                                    0x00000878   Lc    1  Sect  De 
    146  i.am_hal_mcuctrl_bucks_enable
                                    0x00000888   Lc    1  Sect  De 
    147  i.am_hal_mcuctrl_fault_status
                                    0x000008b0   Lc    1  Sect  De 
    148  ../am_hal_debug.c          0x00000000   Lc  Abs  File  De 
    149  ..\am_hal_interrupt.c      0x00000000   Lc  Abs  File  De 
    150  ../am_hal_interrupt.c      0x00000000   Lc  Abs  File  De 
    151  ../am_hal_iom.c            0x00000000   Lc  Abs  File  De 
    152  ../am_hal_rtc.c            0x00000000   Lc  Abs  File  De 
    153  i.am_hal_rtc_osc_disable   0x000008e8   Lc    1  Sect  De 
    154  i.am_hal_rtc_osc_select    0x000008f6   Lc    1  Sect  De 
    155  ../am_hal_tpiu.c           0x00000000   Lc  Abs  File  De 
    156  i.am_hal_tpiu_disable      0x0000090c   Lc    1  Sect  De 
    157  i.am_hal_tpiu_enable       0x0000091c   Lc    1  Sect  De 
    158  ../am_hal_uart.c           0x00000000   Lc  Abs  File  De 
    159  ../am_hal_vcomp.c          0x00000000   Lc  Abs  File  De 
    160  i.am_hal_vcomp_disable     0x000009b4   Lc    1  Sect  De 
    161  ../am_hal_i2c_bit_bang.c   0x00000000   Lc  Abs  File  De 
    162  ../am_hal_queue.c          0x00000000   Lc  Abs  File  De 
    163  ../am_hal_sysctrl.c        0x00000000   Lc  Abs  File  De 
    164  dc.s                       0x00000000   Lc  Abs  File  De 
    165  ../clib/memcpset.s         0x00000000   Lc  Abs  File  De 
    166  .text                      0x0000016c   Lc    1  Sect  De   0x4e
    167  ../clib/heapaux.c          0x00000000   Lc  Abs  File  De 
    168  .text                      0x000001ba   Lc    1  Sect  De 
    169  ../clib/angel/startup.s    0x00000000   Lc  Abs  File  De 
    170  !!!main                    0x00000098   Lc    1  Sect  De   0x8
    171  ../fplib/d2f.s             0x00000000   Lc  Abs  File  De 
    172  x$fpl$d2f                  0x000013f8   Lc    1  Sect  De   0x62
    173  $v0                        0x000013f8   Lc    1   --   De 
    174  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    175  .ARM.Collect$$rtentry$$00000000
                                    0x00000118   Lc    1  Sect  De 
    176  ../fplib/dnaninf.s         0x00000000   Lc  Abs  File  De 
    177  x$fpl$dnaninf              0x0000145a   Lc    1  Sect  De   0x9c
    178  $v0                        0x0000145a   Lc    1   --   De 
    179  ../fplib/fretinf.s         0x00000000   Lc  Abs  File  De 
    180  x$fpl$fretinf              0x00001500   Lc    1  Sect  De   0xa
    181  $v0                        0x00001500   Lc    1   --   De 
    182  ../fplib/usenofp.s         0x00000000   Lc  Abs  File  De 
    183  x$fpl$usenofp              0x0000150a   Lc    1  Sect  De 
    184  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    185  .ARM.Collect$$rtentry$$00000002
                                    0x00000118   Lc    1  Sect  De 
    186  .ARM.Collect$$rtentry$$00000009
                                    0x0000011e   Lc    1  Sect  De 
    187  .ARM.Collect$$rtentry$$0000000A
                                    0x0000011e   Lc    1  Sect  De   0x4
    188  .ARM.Collect$$rtentry$$0000000C
                                    0x00000122   Lc    1  Sect  De 
    189  .ARM.Collect$$rtentry$$0000000D
                                    0x00000122   Lc    1  Sect  De   0x8
    190  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    191  .ARM.Collect$$rtentry$$00000004
                                    0x00000118   Lc    1  Sect  De   0x6
    192  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    193  .text                      0x000001c0   Lc    1  Sect  De   0x4a
    194  ../clib/stdlib.c           0x00000000   Lc  Abs  File  De 
    195  .text                      0x0000020a   Lc    1  Sect  De 
    196  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    197  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    198  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    199  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    200  .ARM.Collect$$libinit$$00000000
                                    0x0000010c   Lc    1  Sect  De   0x2
    201  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    202  .text                      0x0000021c   Lc    1  Sect  De   0x8
    203  .bss                       0x10000134   Lc    3  Sect  De   0x60
    204  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    205  .ARM.Collect$$rtexit$$00000000
                                    0x0000012a   Lc    1  Sect  De   0x2
    206  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    207  .ARM.Collect$$libinit$$00000001
                                    0x0000010e   Lc    1  Sect  De   0x4
    208  .ARM.Collect$$libinit$$00000004
                                    0x00000112   Lc    1  Sect  De 
    209  .ARM.Collect$$libinit$$0000000A
                                    0x00000112   Lc    1  Sect  De 
    210  .ARM.Collect$$libinit$$0000000C
                                    0x00000112   Lc    1  Sect  De 
    211  .ARM.Collect$$libinit$$0000000E
                                    0x00000112   Lc    1  Sect  De 
    212  .ARM.Collect$$libinit$$00000011
                                    0x00000112   Lc    1  Sect  De 
    213  .ARM.Collect$$libinit$$00000013
                                    0x00000112   Lc    1  Sect  De 
    214  .ARM.Collect$$libinit$$00000015
                                    0x00000112   Lc    1  Sect  De 
    215  .ARM.Collect$$libinit$$00000017
                                    0x00000112   Lc    1  Sect  De 
    216  .ARM.Collect$$libinit$$00000019
                                    0x00000112   Lc    1  Sect  De 
    217  .ARM.Collect$$libinit$$0000001B
                                    0x00000112   Lc    1  Sect  De 
    218  .ARM.Collect$$libinit$$0000001D
                                    0x00000112   Lc    1  Sect  De 
    219  .ARM.Collect$$libinit$$0000001F
                                    0x00000112   Lc    1  Sect  De 
    220  .ARM.Collect$$libinit$$00000021
                                    0x00000112   Lc    1  Sect  De 
    221  .ARM.Collect$$libinit$$00000023
                                    0x00000112   Lc    1  Sect  De 
    222  .ARM.Collect$$libinit$$00000025
                                    0x00000112   Lc    1  Sect  De 
    223  .ARM.Collect$$libinit$$0000002C
                                    0x00000112   Lc    1  Sect  De 
    224  .ARM.Collect$$libinit$$0000002E
                                    0x00000112   Lc    1  Sect  De 
    225  .ARM.Collect$$libinit$$00000030
                                    0x00000112   Lc    1  Sect  De 
    226  .ARM.Collect$$libinit$$00000032
                                    0x00000112   Lc    1  Sect  De 
    227  .ARM.Collect$$libinit$$00000033
                                    0x00000112   Lc    1  Sect  De   0x2
    228  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    229  .ARM.Collect$$rtexit$$00000002
                                    0x0000012c   Lc    1  Sect  De 
    230  .ARM.Collect$$rtexit$$00000003
                                    0x0000012c   Lc    1  Sect  De   0x4
    231  .ARM.Collect$$rtexit$$00000004
                                    0x00000130   Lc    1  Sect  De   0x6
    232  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    233  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    234  ../fplib/fpinit.s          0x00000000   Lc  Abs  File  De 
    235  x$fpl$fpinit               0x000014f6   Lc    1  Sect  De   0xa
    236  $v0                        0x000014f6   Lc    1   --   De 
    237  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    238  .text                      0x00000224   Lc    1  Sect  De 
    239  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    240  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    241  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    242  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    243  .ARM.Collect$$libshutdown$$00000000
                                    0x00000114   Lc    1  Sect  De   0x2
    244  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    245  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    246  .text                      0x00000230   Lc    1  Sect  De   0x2
    247  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    248  .text                      0x00000232   Lc    1  Sect  De 
    249  ../clib/heapalloc.c        0x00000000   Lc  Abs  File  De 
    250  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    251  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    252  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    253  .ARM.Collect$$libshutdown$$00000002
                                    0x00000116   Lc    1  Sect  De 
    254  .ARM.Collect$$libshutdown$$00000004
                                    0x00000116   Lc    1  Sect  De 
    255  .ARM.Collect$$libshutdown$$00000007
                                    0x00000116   Lc    1  Sect  De 
    256  .ARM.Collect$$libshutdown$$0000000A
                                    0x00000116   Lc    1  Sect  De 
    257  .ARM.Collect$$libshutdown$$0000000C
                                    0x00000116   Lc    1  Sect  De 
    258  .ARM.Collect$$libshutdown$$0000000F
                                    0x00000116   Lc    1  Sect  De 
    259  .ARM.Collect$$libshutdown$$00000010
                                    0x00000116   Lc    1  Sect  De   0x2
    260  ../clib/angel/rt.s         0x00000000   Lc  Abs  File  De 
    261  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    262  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    263  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    264  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    265  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    266  ../clib/signal.s           0x00000000   Lc  Abs  File  De 
    267  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    268  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    269  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    270  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    271  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    272  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    273  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    274  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    275  ../clib/angel/scatter.s    0x00000000   Lc  Abs  File  De 
    276  !!!scatter                 0x000000a0   Lc    1  Sect  De   0x34
    277  ../clib/angel/handlers.s   0x00000000   Lc  Abs  File  De 
    278  !!handler_copy             0x000000d4   Lc    1  Sect  De   0x1a
    279  ../clib/angel/handlers.s   0x00000000   Lc  Abs  File  De 
    280  !!handler_zi               0x000000f0   Lc    1  Sect  De   0x1c
    281  BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2
                                    0x00000000   Gb  Abs   --   Hi 
    282  __ARM_use_no_argv          0x00000000   Gb  Abs   --   Hi 
    283  __Vectors                  0x00000000   Gb    1  Data  Hi 
    284  Reset_Handler              0x00000071   Wk    1  Code  Hi   0x1c
    285  am_nmi_isr                 0x0000008d   Wk    1  Code  Hi   0x2
    286  am_memmanage_isr           0x00000091   Wk    1  Code  Hi   0x2
    287  am_adc_isr                 0x00000093   Wk    1  Code  Hi 
    288  am_brownout_isr            0x00000093   Wk    1  Code  Hi 
    289  am_clkgen_isr              0x00000093   Wk    1  Code  Hi 
    290  am_ctimer_isr              0x00000093   Wk    1  Code  Hi 
    291  am_debugmon_isr            0x00000093   Wk    1  Code  Hi 
    292  am_gpio_isr                0x00000093   Wk    1  Code  Hi 
    293  am_iomaster0_isr           0x00000093   Wk    1  Code  Hi 
    294  am_iomaster1_isr           0x00000093   Wk    1  Code  Hi 
    295  am_ioslave_acc_isr         0x00000093   Wk    1  Code  Hi 
    296  am_ioslave_ios_isr         0x00000093   Wk    1  Code  Hi 
    297  am_pendsv_isr              0x00000093   Wk    1  Code  Hi 
    298  am_svcall_isr              0x00000093   Wk    1  Code  Hi 
    299  am_systick_isr             0x00000093   Wk    1  Code  Hi 
    300  am_uart_isr                0x00000093   Wk    1  Code  Hi 
    301  am_vcomp_isr               0x00000093   Wk    1  Code  Hi 
    302  am_watchdog_isr            0x00000093   Wk    1  Code  Hi 
    303  __main                     0x00000099   Gb    1  Code  Hi   0x8
    304  __scatterload              0x000000a1   Gb    1  Code  Hi 
    305  __scatterload_rt2          0x000000a1   Gb    1  Code  Hi   0x2c
    306  __scatterload_rt2_thumb_only
                                    0x000000a1   Gb    1  Code  Hi 
    307  __scatterload_null         0x000000af   Gb    1  Code  Hi 
    308  __scatterload_copy         0x000000d5   Gb    1  Code  Hi   0x1a
    309  __scatterload_zeroinit     0x000000f1   Gb    1  Code  Hi   0x1c
    310  __rt_lib_init              0x0000010d   Gb    1  Code  De 
    311  __rt_lib_init_fp_1         0x0000010f   Gb    1  Code  Hi 
    312  __rt_lib_init_alloca_1     0x00000113   Gb    1  Code  Hi 
    313  __rt_lib_init_argv_1       0x00000113   Gb    1  Code  Hi 
    314  __rt_lib_init_atexit_1     0x00000113   Gb    1  Code  Hi 
    315  __rt_lib_init_clock_1      0x00000113   Gb    1  Code  Hi 
    316  __rt_lib_init_cpp_1        0x00000113   Gb    1  Code  Hi 
    317  __rt_lib_init_exceptions_1 0x00000113   Gb    1  Code  Hi 
    318  __rt_lib_init_fp_trap_1    0x00000113   Gb    1  Code  Hi 
    319  __rt_lib_init_getenv_1     0x00000113   Gb    1  Code  Hi 
    320  __rt_lib_init_heap_1       0x00000113   Gb    1  Code  Hi 
    321  __rt_lib_init_lc_collate_1 0x00000113   Gb    1  Code  Hi 
    322  __rt_lib_init_lc_ctype_1   0x00000113   Gb    1  Code  Hi 
    323  __rt_lib_init_lc_monetary_1
                                    0x00000113   Gb    1  Code  Hi 
    324  __rt_lib_init_lc_numeric_1 0x00000113   Gb    1  Code  Hi 
    325  __rt_lib_init_lc_time_1    0x00000113   Gb    1  Code  Hi 
    326  __rt_lib_init_preinit_1    0x00000113   Gb    1  Code  Hi 
    327  __rt_lib_init_rand_1       0x00000113   Gb    1  Code  Hi 
    328  __rt_lib_init_return       0x00000113   Gb    1  Code  Hi 
    329  __rt_lib_init_signal_1     0x00000113   Gb    1  Code  Hi 
    330  __rt_lib_init_stdio_1      0x00000113   Gb    1  Code  Hi 
    331  __rt_lib_init_user_alloc_1 0x00000113   Gb    1  Code  Hi 
    332  __rt_lib_shutdown          0x00000115   Gb    1  Code  De 
    333  __rt_lib_shutdown_cpp_1    0x00000117   Gb    1  Code  Hi 
    334  __rt_lib_shutdown_fp_trap_1
                                    0x00000117   Gb    1  Code  Hi 
    335  __rt_lib_shutdown_heap_1   0x00000117   Gb    1  Code  Hi 
    336  __rt_lib_shutdown_return   0x00000117   Gb    1  Code  Hi 
    337  __rt_lib_shutdown_signal_1 0x00000117   Gb    1  Code  Hi 
    338  __rt_lib_shutdown_stdio_1  0x00000117   Gb    1  Code  Hi 
    339  __rt_lib_shutdown_user_alloc_1
                                    0x00000117   Gb    1  Code  Hi 
    340  __rt_entry                 0x00000119   Gb    1  Code  Hi 
    341  __rt_entry_presh_1         0x00000119   Gb    1  Code  Hi 
    342  __rt_entry_sh              0x00000119   Gb    1  Code  Hi 
    343  __rt_entry_li              0x0000011f   Gb    1  Code  Hi 
    344  __rt_entry_postsh_1        0x0000011f   Gb    1  Code  Hi 
    345  __rt_entry_main            0x00000123   Gb    1  Code  Hi 
    346  __rt_entry_postli_1        0x00000123   Gb    1  Code  Hi 
    347  __rt_exit                  0x0000012b   Gb    1  Code  De 
    348  __rt_exit_ls               0x0000012d   Gb    1  Code  Hi 
    349  __rt_exit_prels_1          0x0000012d   Gb    1  Code  Hi 
    350  __rt_exit_exit             0x00000131   Gb    1  Code  Hi 
    351  am_fault_isr               0x00000139   Gb    1  Code  Hi   0xc
    352  getStackedReg              0x00000145   Gb    1  Code  Hi   0x8
    353  am_hal_flash_delay         0x0000014d   Gb    1  Code  Hi   0x6
    354  __user_initial_stackheap   0x00000155   Gb    1  Code  Hi   0xa
    355  __aeabi_memclr4            0x0000016d   Gb    1  Code  Hi 
    356  __aeabi_memclr8            0x0000016d   Gb    1  Code  De 
    357  __rt_memclr_w              0x0000016d   Gb    1  Code  De   0x4e
    358  _memset_w                  0x00000171   Gb    1  Code  De 
    359  __use_two_region_memory    0x000001bb   Gb    1  Code  Hi   0x2
    360  __rt_heap_escrow$2region   0x000001bd   Gb    1  Code  De   0x2
    361  __rt_heap_expand$2region   0x000001bf   Gb    1  Code  De   0x2
    362  __user_setup_stackheap     0x000001c1   Gb    1  Code  De   0x4a
    363  exit                       0x0000020b   Gb    1  Code  De   0x12
    364  __user_libspace            0x0000021d   Wk    1  Code  De   0x8
    365  __user_perproc_libspace    0x0000021d   Wk    1  Code  De 
    366  __user_perthread_libspace  0x0000021d   Wk    1  Code  De 
    367  _sys_exit                  0x00000225   Gb    1  Code  De   0x8
    368  __I$use$semihosting        0x00000231   Gb    1  Code  Hi 
    369  __use_no_semihosting_swi   0x00000231   Gb    1  Code  Hi   0x2
    370  __semihosting_library_function
                                    0x00000233   Gb    1  Code  Hi 
    371  am_bsp_debug_printf_disable
                                    0x00000235   Gb    1  Code  Hi   0x3c
    372  am_bsp_debug_printf_enable 0x00000279   Gb    1  Code  Hi   0x3c
    373  am_bsp_itm_string_print    0x000002c1   Gb    1  Code  Hi   0x4
    374  am_bsp_low_power_init      0x000002c5   Gb    1  Code  Hi   0x22
    375  am_devices_led_array_init  0x000002e7   Gb    1  Code  Hi   0x24
    376  am_devices_led_init        0x0000030d   Gb    1  Code  Hi   0x1e4
    377  am_devices_led_off         0x000004f5   Gb    1  Code  Hi   0xa4
    378  am_devices_led_on          0x0000059d   Gb    1  Code  Hi   0xa4
    379  am_devices_led_toggle      0x00000645   Gb    1  Code  Hi   0xa2
    380  am_hal_clkgen_clkout_enable
                                    0x000006ed   Gb    1  Code  Hi   0xc
    381  am_hal_clkgen_osc_start    0x000006f9   Gb    1  Code  Hi   0x16
    382  am_hal_clkgen_osc_stop     0x0000070f   Gb    1  Code  Hi   0x14
    383  am_hal_clkgen_sysclk_get   0x00000725   Gb    1  Code  Hi   0x40
    384  am_hal_clkgen_sysclk_select
                                    0x00000785   Gb    1  Code  Hi   0x10
    385  am_hal_gpio_out_enable_bit_get
                                    0x00000795   Gb    1  Code  Hi   0x2c
    386  am_hal_itm_enable          0x000007c5   Gb    1  Code  Hi   0x38
    387  am_hal_itm_not_busy        0x0000081d   Gb    1  Code  Hi   0x22
    388  am_hal_itm_print           0x00000849   Gb    1  Code  Hi   0x30
    389  am_hal_mcuctrl_bandgap_disable
                                    0x00000879   Gb    1  Code  Hi   0xc
    390  am_hal_mcuctrl_bucks_enable
                                    0x00000889   Gb    1  Code  Hi   0x24
    391  am_hal_mcuctrl_fault_status
                                    0x000008b1   Gb    1  Code  Hi   0x34
    392  am_hal_rtc_osc_disable     0x000008e9   Gb    1  Code  Hi   0xe
    393  am_hal_rtc_osc_select      0x000008f7   Gb    1  Code  Hi   0x16
    394  am_hal_tpiu_disable        0x0000090d   Gb    1  Code  Hi   0xa
    395  am_hal_tpiu_enable         0x0000091d   Gb    1  Code  Hi   0x7e
    396  am_hal_vcomp_disable       0x000009b5   Gb    1  Code  Hi   0x8
    397  am_util_faultisr_collect_data
                                    0x000009c1   Gb    1  Code  Hi   0xb2
    398  am_util_stdio_printf       0x00000a79   Gb    1  Code  Hi   0x28
    399  am_util_stdio_printf_init  0x00000aa9   Gb    1  Code  Hi   0x6
    400  am_util_stdio_terminal_clear
                                    0x00000ab5   Gb    1  Code  Hi   0xa
    401  am_util_stdio_vsprintf     0x00000ad5   Gb    1  Code  Hi   0x3a4
    402  main                       0x00001111   Gb    1  Code  Hi   0xf8
    403  __aeabi_d2f                0x000013f9   Gb    1  Code  Hi 
    404  _d2f                       0x000013f9   Gb    1  Code  De   0x62
    405  __fpl_dnaninf              0x0000145b   Gb    1  Code  De   0x9c
    406  _fp_init                   0x000014f7   Gb    1  Code  De   0xa
    407  __fplib_config_fpu_vfp     0x000014ff   Gb    1  Code  De 
    408  __fplib_config_pureend_doubles
                                    0x000014ff   Gb    1  Code  De 
    409  __fpl_fretinf              0x00001501   Gb    1  Code  De   0xa
    410  __I$use$fp                 0x0000150a   Gb    1   --   De 
    411  Region$$Table$$Base        0x00001554   Gb    1   --   Hi 
    412  Region$$Table$$Limit       0x00001574   Gb    1   --   Hi 
    413  g_pfnCharPrint             0x10000000   Gb    2  Data  Hi   0x4
    414  g_ui32HALflags             0x10000008   Gb    2  Data  Hi   0x4
    415  am_bsp_psLEDs              0x1000000c   Gb    2  Data  Hi   0x28
    416  __libspace_start           0x10000134   Gb    3  Data  De   0x60
    417  __temporary_stack_top$libspace
                                    0x10000194   Gb    3  Data  De 


** Section #12 '.strtab' (SHT_STRTAB)
    Size   : 6544 bytes

            #  Offset String
        ====================================

            1      1: $d
            2      4: $t
            3      7: $d.realdata
            4     19: ../src/clkout.c
            5     35: i.main
            6     42: .conststring
            7     55: ../../../../../utils/am_util_delay.c
            8     92: ..\..\..\..\..\utils\am_util_faultisr.c
            9    132: .emb_text
           10    142: $v0
           11    146: ../../../../../utils/am_util_faultisr.c
           12    186: i.am_util_faultisr_collect_data
           13    218: ../../../../../utils/am_util_stdio.c
           14    255: i.am_util_stdio_printf
           15    278: i.am_util_stdio_printf_init
           16    306: i.am_util_stdio_terminal_clear
           17    337: i.am_util_stdio_vsprintf
           18    362: i.decstr_to_int
           19    378: decstr_to_int
           20    392: i.divu64_10
           21    404: divu64_10
           22    414: i.ftoa
           23    421: ftoa
           24    426: i.ndigits_in_hex
           25    443: ndigits_in_hex
           26    458: i.ndigits_in_i64
           27    475: ndigits_in_i64
           28    490: i.ndigits_in_u64
           29    507: ndigits_in_u64
           30    522: i.padbuffer
           31    534: padbuffer
           32    544: i.simple_strlen
           33    560: simple_strlen
           34    574: i.uint64_to_hexstr
           35    593: uint64_to_hexstr
           36    610: i.uint64_to_str
           37    626: uint64_to_str
           38    640: .bss
           39    645: g_prfbuf
           40    654: .data
           41    660: g_bTxtXlate
           42    672: ../../../../../devices/am_devices_led.c
           43    712: i.am_devices_led_array_init
           44    740: i.am_devices_led_init
           45    762: i.am_devices_led_off
           46    783: i.am_devices_led_on
           47    803: i.am_devices_led_toggle
           48    827: ../keil/startup_keil.s
           49    850: STACK
           50    856: StackMem
           51    865: HEAP
           52    870: HeapMem
           53    878: RESET
           54    884: .text
           55    890: ../am_hal_global.c
           56    909: ../am_bsp.c
           57    921: i.am_bsp_debug_printf_disable
           58    951: i.am_bsp_debug_printf_enable
           59    980: i.am_bsp_itm_string_print
           60   1006: i.am_bsp_low_power_init
           61   1030: ../am_hal_clkgen.c
           62   1049: i.am_hal_clkgen_clkout_enable
           63   1079: i.am_hal_clkgen_osc_start
           64   1105: i.am_hal_clkgen_osc_stop
           65   1130: i.am_hal_clkgen_sysclk_get
           66   1157: i.am_hal_clkgen_sysclk_select
           67   1187: ..\am_hal_flash.c
           68   1205: ../am_hal_flash.c
           69   1223: ../am_hal_gpio.c
           70   1240: i.am_hal_gpio_out_enable_bit_get
           71   1273: ../am_hal_itm.c
           72   1289: i.am_hal_itm_enable
           73   1309: i.am_hal_itm_not_busy
           74   1331: i.am_hal_itm_print
           75   1350: ../am_hal_mcuctrl.c
           76   1370: i.am_hal_mcuctrl_bandgap_disable
           77   1403: i.am_hal_mcuctrl_bucks_enable
           78   1433: i.am_hal_mcuctrl_fault_status
           79   1463: ../am_hal_debug.c
           80   1481: ..\am_hal_interrupt.c
           81   1503: ../am_hal_interrupt.c
           82   1525: ../am_hal_iom.c
           83   1541: ../am_hal_rtc.c
           84   1557: i.am_hal_rtc_osc_disable
           85   1582: i.am_hal_rtc_osc_select
           86   1606: ../am_hal_tpiu.c
           87   1623: i.am_hal_tpiu_disable
           88   1645: i.am_hal_tpiu_enable
           89   1666: ../am_hal_uart.c
           90   1683: ../am_hal_vcomp.c
           91   1701: i.am_hal_vcomp_disable
           92   1724: ../am_hal_i2c_bit_bang.c
           93   1749: ../am_hal_queue.c
           94   1767: ../am_hal_sysctrl.c
           95   1787: dc.s
           96   1792: ../clib/memcpset.s
           97   1811: ../clib/heapaux.c
           98   1829: ../clib/angel/startup.s
           99   1853: !!!main
          100   1861: ../fplib/d2f.s
          101   1876: x$fpl$d2f
          102   1886: ../clib/angel/kernel.s
          103   1909: .ARM.Collect$$rtentry$$00000000
          104   1941: ../fplib/dnaninf.s
          105   1960: x$fpl$dnaninf
          106   1974: ../fplib/fretinf.s
          107   1993: x$fpl$fretinf
          108   2007: ../fplib/usenofp.s
          109   2026: x$fpl$usenofp
          110   2040: .ARM.Collect$$rtentry$$00000002
          111   2072: .ARM.Collect$$rtentry$$00000009
          112   2104: .ARM.Collect$$rtentry$$0000000A
          113   2136: .ARM.Collect$$rtentry$$0000000C
          114   2168: .ARM.Collect$$rtentry$$0000000D
          115   2200: .ARM.Collect$$rtentry$$00000004
          116   2232: ../clib/angel/sys.s
          117   2252: ../clib/stdlib.c
          118   2269: ../clib/angel/boardlib.s
          119   2294: ../clib/libinit.s
          120   2312: .ARM.Collect$$libinit$$00000000
          121   2344: .ARM.Collect$$rtexit$$00000000
          122   2375: .ARM.Collect$$libinit$$00000001
          123   2407: .ARM.Collect$$libinit$$00000004
          124   2439: .ARM.Collect$$libinit$$0000000A
          125   2471: .ARM.Collect$$libinit$$0000000C
          126   2503: .ARM.Collect$$libinit$$0000000E
          127   2535: .ARM.Collect$$libinit$$00000011
          128   2567: .ARM.Collect$$libinit$$00000013
          129   2599: .ARM.Collect$$libinit$$00000015
          130   2631: .ARM.Collect$$libinit$$00000017
          131   2663: .ARM.Collect$$libinit$$00000019
          132   2695: .ARM.Collect$$libinit$$0000001B
          133   2727: .ARM.Collect$$libinit$$0000001D
          134   2759: .ARM.Collect$$libinit$$0000001F
          135   2791: .ARM.Collect$$libinit$$00000021
          136   2823: .ARM.Collect$$libinit$$00000023
          137   2855: .ARM.Collect$$libinit$$00000025
          138   2887: .ARM.Collect$$libinit$$0000002C
          139   2919: .ARM.Collect$$libinit$$0000002E
          140   2951: .ARM.Collect$$libinit$$00000030
          141   2983: .ARM.Collect$$libinit$$00000032
          142   3015: .ARM.Collect$$libinit$$00000033
          143   3047: .ARM.Collect$$rtexit$$00000002
          144   3078: .ARM.Collect$$rtexit$$00000003
          145   3109: .ARM.Collect$$rtexit$$00000004
          146   3140: ../clib/armsys.c
          147   3157: ../fplib/fpinit.s
          148   3175: x$fpl$fpinit
          149   3188: ../clib/angel/sysapp.c
          150   3211: .ARM.Collect$$libshutdown$$00000000
          151   3247: ../clib/heapalloc.c
          152   3267: ../clib/signal.c
          153   3284: .ARM.Collect$$libshutdown$$00000002
          154   3320: .ARM.Collect$$libshutdown$$00000004
          155   3356: .ARM.Collect$$libshutdown$$00000007
          156   3392: .ARM.Collect$$libshutdown$$0000000A
          157   3428: .ARM.Collect$$libshutdown$$0000000C
          158   3464: .ARM.Collect$$libshutdown$$0000000F
          159   3500: .ARM.Collect$$libshutdown$$00000010
          160   3536: ../clib/angel/rt.s
          161   3555: ../clib/signal.s
          162   3572: ../clib/angel/scatter.s
          163   3596: !!!scatter
          164   3607: ../clib/angel/handlers.s
          165   3632: !!handler_copy
          166   3647: !!handler_zi
          167   3660: BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2
          168   3846: __ARM_use_no_argv
          169   3864: __Vectors
          170   3874: Reset_Handler
          171   3888: am_nmi_isr
          172   3899: am_memmanage_isr
          173   3916: am_adc_isr
          174   3927: am_brownout_isr
          175   3943: am_clkgen_isr
          176   3957: am_ctimer_isr
          177   3971: am_debugmon_isr
          178   3987: am_gpio_isr
          179   3999: am_iomaster0_isr
          180   4016: am_iomaster1_isr
          181   4033: am_ioslave_acc_isr
          182   4052: am_ioslave_ios_isr
          183   4071: am_pendsv_isr
          184   4085: am_svcall_isr
          185   4099: am_systick_isr
          186   4114: am_uart_isr
          187   4126: am_vcomp_isr
          188   4139: am_watchdog_isr
          189   4155: __main
          190   4162: __scatterload
          191   4176: __scatterload_rt2
          192   4194: __scatterload_rt2_thumb_only
          193   4223: __scatterload_null
          194   4242: __scatterload_copy
          195   4261: __scatterload_zeroinit
          196   4284: __rt_lib_init
          197   4298: __rt_lib_init_fp_1
          198   4317: __rt_lib_init_alloca_1
          199   4340: __rt_lib_init_argv_1
          200   4361: __rt_lib_init_atexit_1
          201   4384: __rt_lib_init_clock_1
          202   4406: __rt_lib_init_cpp_1
          203   4426: __rt_lib_init_exceptions_1
          204   4453: __rt_lib_init_fp_trap_1
          205   4477: __rt_lib_init_getenv_1
          206   4500: __rt_lib_init_heap_1
          207   4521: __rt_lib_init_lc_collate_1
          208   4548: __rt_lib_init_lc_ctype_1
          209   4573: __rt_lib_init_lc_monetary_1
          210   4601: __rt_lib_init_lc_numeric_1
          211   4628: __rt_lib_init_lc_time_1
          212   4652: __rt_lib_init_preinit_1
          213   4676: __rt_lib_init_rand_1
          214   4697: __rt_lib_init_return
          215   4718: __rt_lib_init_signal_1
          216   4741: __rt_lib_init_stdio_1
          217   4763: __rt_lib_init_user_alloc_1
          218   4790: __rt_lib_shutdown
          219   4808: __rt_lib_shutdown_cpp_1
          220   4832: __rt_lib_shutdown_fp_trap_1
          221   4860: __rt_lib_shutdown_heap_1
          222   4885: __rt_lib_shutdown_return
          223   4910: __rt_lib_shutdown_signal_1
          224   4937: __rt_lib_shutdown_stdio_1
          225   4963: __rt_lib_shutdown_user_alloc_1
          226   4994: __rt_entry
          227   5005: __rt_entry_presh_1
          228   5024: __rt_entry_sh
          229   5038: __rt_entry_li
          230   5052: __rt_entry_postsh_1
          231   5072: __rt_entry_main
          232   5088: __rt_entry_postli_1
          233   5108: __rt_exit
          234   5118: __rt_exit_ls
          235   5131: __rt_exit_prels_1
          236   5149: __rt_exit_exit
          237   5164: am_fault_isr
          238   5177: getStackedReg
          239   5191: am_hal_flash_delay
          240   5210: __user_initial_stackheap
          241   5235: __aeabi_memclr4
          242   5251: __aeabi_memclr8
          243   5267: __rt_memclr_w
          244   5281: _memset_w
          245   5291: __use_two_region_memory
          246   5315: __rt_heap_escrow$2region
          247   5340: __rt_heap_expand$2region
          248   5365: __user_setup_stackheap
          249   5388: exit
          250   5393: __user_libspace
          251   5409: __user_perproc_libspace
          252   5433: __user_perthread_libspace
          253   5459: _sys_exit
          254   5469: __I$use$semihosting
          255   5489: __use_no_semihosting_swi
          256   5514: __semihosting_library_function
          257   5545: am_bsp_debug_printf_disable
          258   5573: am_bsp_debug_printf_enable
          259   5600: am_bsp_itm_string_print
          260   5624: am_bsp_low_power_init
          261   5646: am_devices_led_array_init
          262   5672: am_devices_led_init
          263   5692: am_devices_led_off
          264   5711: am_devices_led_on
          265   5729: am_devices_led_toggle
          266   5751: am_hal_clkgen_clkout_enable
          267   5779: am_hal_clkgen_osc_start
          268   5803: am_hal_clkgen_osc_stop
          269   5826: am_hal_clkgen_sysclk_get
          270   5851: am_hal_clkgen_sysclk_select
          271   5879: am_hal_gpio_out_enable_bit_get
          272   5910: am_hal_itm_enable
          273   5928: am_hal_itm_not_busy
          274   5948: am_hal_itm_print
          275   5965: am_hal_mcuctrl_bandgap_disable
          276   5996: am_hal_mcuctrl_bucks_enable
          277   6024: am_hal_mcuctrl_fault_status
          278   6052: am_hal_rtc_osc_disable
          279   6075: am_hal_rtc_osc_select
          280   6097: am_hal_tpiu_disable
          281   6117: am_hal_tpiu_enable
          282   6136: am_hal_vcomp_disable
          283   6157: am_util_faultisr_collect_data
          284   6187: am_util_stdio_printf
          285   6208: am_util_stdio_printf_init
          286   6234: am_util_stdio_terminal_clear
          287   6263: am_util_stdio_vsprintf
          288   6286: main
          289   6291: __aeabi_d2f
          290   6303: _d2f
          291   6308: __fpl_dnaninf
          292   6322: _fp_init
          293   6331: __fplib_config_fpu_vfp
          294   6354: __fplib_config_pureend_doubles
          295   6385: __fpl_fretinf
          296   6399: __I$use$fp
          297   6410: Region$$Table$$Base
          298   6430: Region$$Table$$Limit
          299   6451: g_pfnCharPrint
          300   6466: g_ui32HALflags
          301   6481: am_bsp_psLEDs
          302   6495: __libspace_start
          303   6512: __temporary_stack_top$libspace
          304   6543: 


** Section #13 '.note' (SHT_NOTE)
    Size   : 28 bytes (alignment 4)


** Section #14 '.comment' (SHT_PROGBITS)
    Size   : 14560 bytes


** Section #15 '.shstrtab' (SHT_STRTAB)
    Size   : 148 bytes

            #  Offset String
        ====================================

            1      1: FLASH
            2      7: SRAM
            3     12: .debug_abbrev
            4     26: .debug_frame
            5     39: .debug_info
            6     51: .debug_line
            7     63: .debug_loc
            8     74: .debug_macinfo
            9     89: .debug_pubnames
           10    105: .symtab
           11    113: .strtab
           12    121: .note
           13    127: .comment
           14    136: .shstrtab
           15    146: 
           16    147: 


