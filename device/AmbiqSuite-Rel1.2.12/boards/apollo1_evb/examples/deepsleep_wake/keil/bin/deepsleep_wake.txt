
========================================================================

** ELF Header Information

    File Name: bin\deepsleep_wake.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x00000099
    Flags: EF_ARM_HASENTRY + EF_ARM_ABI_FLOAT_HARD (0x05000402)

    ARM ELF revision: 5 (ABI version 2)

    Conforms to Hard float procedure-call standard

    Built with
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armasm [4d35e1]
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 16

    Program header offset: 70180 (0x00011224)
    Section header offset: 70212 (0x00011244)

    Section header string table index: 15

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_W + PF_R + PF_ARM_ENTRY]
    Size : 10088 bytes (5640 bytes in file)
    Virtual address: 0x00000000 (Alignment 8)


========================================================================

** Section #1 'FLASH' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 5568 bytes (alignment 4)
    Address: 0x00000000

    $d
    RESET
    __Vectors
        0x00000000:    100011a8    ....    DCD    268439976
        0x00000004:    00000071    q...    DCD    113
        0x00000008:    0000008d    ....    DCD    141
        0x0000000c:    00000139    9...    DCD    313
        0x00000010:    00000139    9...    DCD    313
        0x00000014:    00000139    9...    DCD    313
        0x00000018:    00000139    9...    DCD    313
        0x0000001c:    00000000    ....    DCD    0
        0x00000020:    00000000    ....    DCD    0
        0x00000024:    00000000    ....    DCD    0
        0x00000028:    00000000    ....    DCD    0
        0x0000002c:    00000093    ....    DCD    147
        0x00000030:    00000093    ....    DCD    147
        0x00000034:    00000000    ....    DCD    0
        0x00000038:    00000093    ....    DCD    147
        0x0000003c:    00000093    ....    DCD    147
        0x00000040:    00000093    ....    DCD    147
        0x00000044:    00000093    ....    DCD    147
        0x00000048:    00000275    u...    DCD    629
        0x0000004c:    00000093    ....    DCD    147
        0x00000050:    00000093    ....    DCD    147
        0x00000054:    00000093    ....    DCD    147
        0x00000058:    00000093    ....    DCD    147
        0x0000005c:    00000093    ....    DCD    147
        0x00000060:    00000093    ....    DCD    147
        0x00000064:    000005e9    ....    DCD    1513
        0x00000068:    00000093    ....    DCD    147
        0x0000006c:    00000093    ....    DCD    147
    $t
    $v0
    Reset_Handler
        0x00000070:    f64e5088    N..P    MOV      r0,#0xed88
        0x00000074:    f2ce0000    ....    MOVT     r0,#0xe000
        0x00000078:    6801        .h      LDR      r1,[r0,#0]
        0x0000007a:    f4410170    A.p.    ORR      r1,r1,#0xf00000
        0x0000007e:    6001        .`      STR      r1,[r0,#0]
        0x00000080:    f3bf8f4f    ..O.    DSB      
        0x00000084:    f3bf8f6f    ..o.    ISB      
        0x00000088:    4802        .H      LDR      r0,[pc,#8] ; [0x94] = 0x99
        0x0000008a:    4700        .G      BX       r0
    am_nmi_isr
        0x0000008c:    e7fe        ..      B        am_nmi_isr ; 0x8c
        0x0000008e:    e7fe        ..      B        0x8e ; am_nmi_isr + 2
    am_memmanage_isr
        0x00000090:    e7fe        ..      B        am_memmanage_isr ; 0x90
    am_adc_isr
    am_brownout_isr
    am_ctimer_isr
    am_debugmon_isr
    am_iomaster0_isr
    am_iomaster1_isr
    am_ioslave_acc_isr
    am_ioslave_ios_isr
    am_pendsv_isr
    am_svcall_isr
    am_systick_isr
    am_uart_isr
    am_vcomp_isr
    am_watchdog_isr
        0x00000092:    e7fe        ..      B        am_adc_isr ; 0x92
    $d
        0x00000094:    00000099    ....    DCD    153
    $t
    !!!main
    __main
        0x00000098:    f000f802    ....    BL       __scatterload ; 0xa0
        0x0000009c:    f000f83c    ..<.    BL       __rt_entry ; 0x118
    !!!scatter
    __scatterload
    __scatterload_rt2
    __scatterload_rt2_thumb_only
        0x000000a0:    a00a        ..      ADR      r0,{pc}+0x2c ; 0xcc
        0x000000a2:    e8900c00    ....    LDM      r0,{r10,r11}
        0x000000a6:    4482        .D      ADD      r10,r10,r0
        0x000000a8:    4483        .D      ADD      r11,r11,r0
        0x000000aa:    f1aa0701    ....    SUB      r7,r10,#1
    __scatterload_null
        0x000000ae:    45da        .E      CMP      r10,r11
        0x000000b0:    d101        ..      BNE      0xb6 ; __scatterload_null + 8
        0x000000b2:    f000f831    ..1.    BL       __rt_entry ; 0x118
        0x000000b6:    f2af0e09    ....    ADR      lr,{pc}-7 ; 0xaf
        0x000000ba:    e8ba000f    ....    LDM      r10!,{r0-r3}
        0x000000be:    f0130f01    ....    TST      r3,#1
        0x000000c2:    bf18        ..      IT       NE
        0x000000c4:    1afb        ..      SUBNE    r3,r7,r3
        0x000000c6:    f0430301    C...    ORR      r3,r3,#1
        0x000000ca:    4718        .G      BX       r3
    $d
        0x000000cc:    000014d4    ....    DCD    5332
        0x000000d0:    000014f4    ....    DCD    5364
    $t
    !!handler_copy
    __scatterload_copy
        0x000000d4:    3a10        .:      SUBS     r2,r2,#0x10
        0x000000d6:    bf24        $.      ITT      CS
        0x000000d8:    c878        x.      LDMCS    r0!,{r3-r6}
        0x000000da:    c178        x.      STMCS    r1!,{r3-r6}
        0x000000dc:    d8fa        ..      BHI      __scatterload_copy ; 0xd4
        0x000000de:    0752        R.      LSLS     r2,r2,#29
        0x000000e0:    bf24        $.      ITT      CS
        0x000000e2:    c830        0.      LDMCS    r0!,{r4,r5}
        0x000000e4:    c130        0.      STMCS    r1!,{r4,r5}
        0x000000e6:    bf44        D.      ITT      MI
        0x000000e8:    6804        .h      LDRMI    r4,[r0,#0]
        0x000000ea:    600c        .`      STRMI    r4,[r1,#0]
        0x000000ec:    4770        pG      BX       lr
        0x000000ee:    0000        ..      MOVS     r0,r0
    !!handler_zi
    __scatterload_zeroinit
        0x000000f0:    2300        .#      MOVS     r3,#0
        0x000000f2:    2400        .$      MOVS     r4,#0
        0x000000f4:    2500        .%      MOVS     r5,#0
        0x000000f6:    2600        .&      MOVS     r6,#0
        0x000000f8:    3a10        .:      SUBS     r2,r2,#0x10
        0x000000fa:    bf28        (.      IT       CS
        0x000000fc:    c178        x.      STMCS    r1!,{r3-r6}
        0x000000fe:    d8fb        ..      BHI      0xf8 ; __scatterload_zeroinit + 8
        0x00000100:    0752        R.      LSLS     r2,r2,#29
        0x00000102:    bf28        (.      IT       CS
        0x00000104:    c130        0.      STMCS    r1!,{r4,r5}
        0x00000106:    bf48        H.      IT       MI
        0x00000108:    600b        .`      STRMI    r3,[r1,#0]
        0x0000010a:    4770        pG      BX       lr
    .ARM.Collect$$libinit$$00000000
    __rt_lib_init
        0x0000010c:    b51f        ..      PUSH     {r0-r4,lr}
    .ARM.Collect$$libinit$$00000001
    __rt_lib_init_fp_1
        0x0000010e:    f001fa3c    ..<.    BL       _fp_init ; 0x158a
    .ARM.Collect$$libinit$$00000004
    .ARM.Collect$$libinit$$0000000A
    .ARM.Collect$$libinit$$0000000C
    .ARM.Collect$$libinit$$0000000E
    .ARM.Collect$$libinit$$00000011
    .ARM.Collect$$libinit$$00000013
    .ARM.Collect$$libinit$$00000015
    .ARM.Collect$$libinit$$00000017
    .ARM.Collect$$libinit$$00000019
    .ARM.Collect$$libinit$$0000001B
    .ARM.Collect$$libinit$$0000001D
    .ARM.Collect$$libinit$$0000001F
    .ARM.Collect$$libinit$$00000021
    .ARM.Collect$$libinit$$00000023
    .ARM.Collect$$libinit$$00000025
    .ARM.Collect$$libinit$$0000002C
    .ARM.Collect$$libinit$$0000002E
    .ARM.Collect$$libinit$$00000030
    .ARM.Collect$$libinit$$00000032
    .ARM.Collect$$libinit$$00000033
    __rt_lib_init_alloca_1
    __rt_lib_init_argv_1
    __rt_lib_init_atexit_1
    __rt_lib_init_clock_1
    __rt_lib_init_cpp_1
    __rt_lib_init_exceptions_1
    __rt_lib_init_fp_trap_1
    __rt_lib_init_getenv_1
    __rt_lib_init_heap_1
    __rt_lib_init_lc_collate_1
    __rt_lib_init_lc_ctype_1
    __rt_lib_init_lc_monetary_1
    __rt_lib_init_lc_numeric_1
    __rt_lib_init_lc_time_1
    __rt_lib_init_preinit_1
    __rt_lib_init_rand_1
    __rt_lib_init_return
    __rt_lib_init_signal_1
    __rt_lib_init_stdio_1
    __rt_lib_init_user_alloc_1
        0x00000112:    bd1f        ..      POP      {r0-r4,pc}
    .ARM.Collect$$libshutdown$$00000000
    __rt_lib_shutdown
        0x00000114:    b510        ..      PUSH     {r4,lr}
    .ARM.Collect$$libshutdown$$00000002
    .ARM.Collect$$libshutdown$$00000004
    .ARM.Collect$$libshutdown$$00000007
    .ARM.Collect$$libshutdown$$0000000A
    .ARM.Collect$$libshutdown$$0000000C
    .ARM.Collect$$libshutdown$$0000000F
    .ARM.Collect$$libshutdown$$00000010
    __rt_lib_shutdown_cpp_1
    __rt_lib_shutdown_fp_trap_1
    __rt_lib_shutdown_heap_1
    __rt_lib_shutdown_return
    __rt_lib_shutdown_signal_1
    __rt_lib_shutdown_stdio_1
    __rt_lib_shutdown_user_alloc_1
        0x00000116:    bd10        ..      POP      {r4,pc}
    .ARM.Collect$$rtentry$$00000000
    .ARM.Collect$$rtentry$$00000002
    .ARM.Collect$$rtentry$$00000004
    __rt_entry
    __rt_entry_presh_1
    __rt_entry_sh
        0x00000118:    f000f85e    ..^.    BL       __user_setup_stackheap ; 0x1d8
        0x0000011c:    4611        .F      MOV      r1,r2
    .ARM.Collect$$rtentry$$00000009
    .ARM.Collect$$rtentry$$0000000A
    __rt_entry_li
    __rt_entry_postsh_1
        0x0000011e:    f7fffff5    ....    BL       __rt_lib_init ; 0x10c
    .ARM.Collect$$rtentry$$0000000C
    .ARM.Collect$$rtentry$$0000000D
    __rt_entry_main
    __rt_entry_postli_1
        0x00000122:    f000ffe1    ....    BL       main ; 0x10e8
        0x00000126:    f000f87c    ..|.    BL       exit ; 0x222
    .ARM.Collect$$rtexit$$00000000
    __rt_exit
        0x0000012a:    b403        ..      PUSH     {r0,r1}
    .ARM.Collect$$rtexit$$00000002
    .ARM.Collect$$rtexit$$00000003
    __rt_exit_ls
    __rt_exit_prels_1
        0x0000012c:    f7fffff2    ....    BL       __rt_lib_shutdown ; 0x114
    .ARM.Collect$$rtexit$$00000004
    __rt_exit_exit
        0x00000130:    bc03        ..      POP      {r0,r1}
        0x00000132:    f000f883    ....    BL       _sys_exit ; 0x23c
        0x00000136:    0000        ..      MOVS     r0,r0
    .emb_text
    $v0
    am_fault_isr
        0x00000138:    b580        ..      PUSH     {r7,lr}
        0x0000013a:    4668        hF      MOV      r0,sp
        0x0000013c:    3008        .0      ADDS     r0,r0,#8
        0x0000013e:    f000fc2b    ..+.    BL       am_util_faultisr_collect_data ; 0x998
        0x00000142:    bd01        ..      POP      {r0,pc}
    getStackedReg
        0x00000144:    0080        ..      LSLS     r0,r0,#2
        0x00000146:    1840        @.      ADDS     r0,r0,r1
        0x00000148:    6800        .h      LDR      r0,[r0,#0]
        0x0000014a:    4770        pG      BX       lr
    .emb_text
    $v0
    am_hal_flash_delay
        0x0000014c:    3801        .8      SUBS     r0,#1
        0x0000014e:    d1fd        ..      BNE      am_hal_flash_delay ; 0x14c
        0x00000150:    4770        pG      BX       lr
        0x00000152:    0000        ..      MOVS     r0,r0
    .emb_text
    $v0
    am_hal_interrupt_master_enable
        0x00000154:    f3ef8010    ....    MRS      r0,PRIMASK
        0x00000158:    b662        b.      CPSIE    i
        0x0000015a:    4770        pG      BX       lr
    am_hal_interrupt_master_disable
        0x0000015c:    f3ef8010    ....    MRS      r0,PRIMASK
        0x00000160:    b672        r.      CPSID    i
        0x00000162:    4770        pG      BX       lr
    am_hal_interrupt_master_set
        0x00000164:    f3808810    ....    MSR      PRIMASK,r0
        0x00000168:    4770        pG      BX       lr
        0x0000016a:    0000        ..      MOVS     r0,r0
    .text
    $v0
    __user_initial_stackheap
        0x0000016c:    4802        .H      LDR      r0,[pc,#8] ; [0x178] = 0x100001a8
        0x0000016e:    4903        .I      LDR      r1,[pc,#12] ; [0x17c] = 0x100011a8
        0x00000170:    4a01        .J      LDR      r2,[pc,#4] ; [0x178] = 0x100001a8
        0x00000172:    4b03        .K      LDR      r3,[pc,#12] ; [0x180] = 0x100001a8
        0x00000174:    4770        pG      BX       lr
    $d
        0x00000176:    0000        ..      DCW    0
        0x00000178:    100001a8    ....    DCD    268435880
        0x0000017c:    100011a8    ....    DCD    268439976
        0x00000180:    100001a8    ....    DCD    268435880
    $t
    .text
    __aeabi_memclr4
    __aeabi_memclr8
    __rt_memclr_w
        0x00000184:    f04f0200    O...    MOV      r2,#0
    _memset_w
        0x00000188:    b500        ..      PUSH     {lr}
        0x0000018a:    4613        .F      MOV      r3,r2
        0x0000018c:    4694        .F      MOV      r12,r2
        0x0000018e:    4696        .F      MOV      lr,r2
        0x00000190:    3920         9      SUBS     r1,r1,#0x20
        0x00000192:    bf22        ".      ITTT     CS
        0x00000194:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x00000198:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x0000019c:    f1b10120    .. .    SUBSCS   r1,r1,#0x20
        0x000001a0:    f4bfaff7    ....    BCS.W    0x192 ; _memset_w + 10
        0x000001a4:    0709        ..      LSLS     r1,r1,#28
        0x000001a6:    bf28        (.      IT       CS
        0x000001a8:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x000001ac:    bf48        H.      IT       MI
        0x000001ae:    c00c        ..      STMMI    r0!,{r2,r3}
        0x000001b0:    f85deb04    ]...    POP      {lr}
        0x000001b4:    0089        ..      LSLS     r1,r1,#2
        0x000001b6:    bf28        (.      IT       CS
        0x000001b8:    f8402b04    @..+    STRCS    r2,[r0],#4
        0x000001bc:    bf08        ..      IT       EQ
        0x000001be:    4770        pG      BXEQ     lr
        0x000001c0:    bf48        H.      IT       MI
        0x000001c2:    f8202b02     ..+    STRHMI   r2,[r0],#2
        0x000001c6:    f0114f80    ...O    TST      r1,#0x40000000
        0x000001ca:    bf18        ..      IT       NE
        0x000001cc:    f8002b01    ...+    STRBNE   r2,[r0],#1
        0x000001d0:    4770        pG      BX       lr
    .text
    __use_two_region_memory
        0x000001d2:    4770        pG      BX       lr
    __rt_heap_escrow$2region
        0x000001d4:    4770        pG      BX       lr
    __rt_heap_expand$2region
        0x000001d6:    4770        pG      BX       lr
    .text
    __user_setup_stackheap
        0x000001d8:    4675        uF      MOV      r5,lr
        0x000001da:    f000f82b    ..+.    BL       __user_libspace ; 0x234
        0x000001de:    46ae        .F      MOV      lr,r5
        0x000001e0:    0005        ..      MOVS     r5,r0
        0x000001e2:    4669        iF      MOV      r1,sp
        0x000001e4:    4653        SF      MOV      r3,r10
        0x000001e6:    f0200007     ...    BIC      r0,r0,#7
        0x000001ea:    4685        .F      MOV      sp,r0
        0x000001ec:    b018        ..      ADD      sp,sp,#0x60
        0x000001ee:    b520         .      PUSH     {r5,lr}
        0x000001f0:    f7ffffbc    ....    BL       __user_initial_stackheap ; 0x16c
        0x000001f4:    e8bd4020    .. @    POP      {r5,lr}
        0x000001f8:    f04f0600    O...    MOV      r6,#0
        0x000001fc:    f04f0700    O...    MOV      r7,#0
        0x00000200:    f04f0800    O...    MOV      r8,#0
        0x00000204:    f04f0b00    O...    MOV      r11,#0
        0x00000208:    f0210107    !...    BIC      r1,r1,#7
        0x0000020c:    46ac        .F      MOV      r12,r5
        0x0000020e:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x00000212:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x00000216:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x0000021a:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x0000021e:    468d        .F      MOV      sp,r1
        0x00000220:    4770        pG      BX       lr
    .text
    exit
        0x00000222:    b510        ..      PUSH     {r4,lr}
        0x00000224:    4604        .F      MOV      r4,r0
        0x00000226:    f3af8000    ....    NOP.W    
        0x0000022a:    4620         F      MOV      r0,r4
        0x0000022c:    e8bd4010    ...@    POP      {r4,lr}
        0x00000230:    f7ffbf7b    ..{.    B.W      __rt_exit ; 0x12a
    .text
    __user_libspace
    __user_perproc_libspace
    __user_perthread_libspace
        0x00000234:    4800        .H      LDR      r0,[pc,#0] ; [0x238] = 0x10000148
        0x00000236:    4770        pG      BX       lr
    $d
        0x00000238:    10000148    H...    DCD    268435784
    $t
    .text
    _sys_exit
        0x0000023c:    4901        .I      LDR      r1,[pc,#4] ; [0x244] = 0x20026
        0x0000023e:    2018        .       MOVS     r0,#0x18
        0x00000240:    beab        ..      BKPT     #0xab
        0x00000242:    e7fe        ..      B        0x242 ; _sys_exit + 6
    $d
        0x00000244:    00020026    &...    DCD    131110
    $t
    .text
    __I$use$semihosting
    __use_no_semihosting_swi
        0x00000248:    4770        pG      BX       lr
    i.am_bsp_low_power_init
    .text
    __semihosting_library_function
    am_bsp_low_power_init
        0x0000024a:    b510        ..      PUSH     {r4,lr}
        0x0000024c:    f000fa86    ....    BL       am_hal_mcuctrl_bucks_enable ; 0x75c
        0x00000250:    f000fb8c    ....    BL       am_hal_vcomp_disable ; 0x96c
        0x00000254:    2001        .       MOVS     r0,#1
        0x00000256:    f000faee    ....    BL       am_hal_rtc_osc_select ; 0x836
        0x0000025a:    2001        .       MOVS     r0,#1
        0x0000025c:    f000f9df    ....    BL       am_hal_clkgen_osc_stop ; 0x61e
        0x00000260:    f000fadb    ....    BL       am_hal_rtc_osc_disable ; 0x81a
        0x00000264:    e8bd4010    ...@    POP      {r4,lr}
        0x00000268:    f000ba70    ..p.    B.W      am_hal_mcuctrl_bandgap_disable ; 0x74c
    i.am_bsp_uart_string_print
    am_bsp_uart_string_print
        0x0000026c:    4601        .F      MOV      r1,r0
        0x0000026e:    2000        .       MOVS     r0,#0
        0x00000270:    f000bb6a    ..j.    B.W      am_hal_uart_string_transmit_polled ; 0x948
    i.am_clkgen_isr
    am_clkgen_isr
        0x00000274:    b510        ..      PUSH     {r4,lr}
        0x00000276:    2008        .       MOVS     r0,#8
        0x00000278:    f000fac2    ....    BL       am_hal_rtc_int_clear ; 0x800
        0x0000027c:    2101        .!      MOVS     r1,#1
        0x0000027e:    4802        .H      LDR      r0,[pc,#8] ; [0x288] = 0x10000020
        0x00000280:    f000f95e    ..^.    BL       am_devices_led_toggle ; 0x540
        0x00000284:    bd10        ..      POP      {r4,pc}
    $d
        0x00000286:    0000        ..      DCW    0
        0x00000288:    10000020     ...    DCD    268435488
    $t
    i.am_devices_led_array_init
    am_devices_led_array_init
        0x0000028c:    b570        p.      PUSH     {r4-r6,lr}
        0x0000028e:    4605        .F      MOV      r5,r0
        0x00000290:    460e        .F      MOV      r6,r1
        0x00000292:    b10d        ..      CBZ      r5,0x298 ; am_devices_led_array_init + 12
        0x00000294:    2e1f        ..      CMP      r6,#0x1f
        0x00000296:    d900        ..      BLS      0x29a ; am_devices_led_array_init + 14
        0x00000298:    bd70        p.      POP      {r4-r6,pc}
        0x0000029a:    2400        .$      MOVS     r4,#0
        0x0000029c:    e004        ..      B        0x2a8 ; am_devices_led_array_init + 28
        0x0000029e:    eb0500c4    ....    ADD      r0,r5,r4,LSL #3
        0x000002a2:    f000f805    ....    BL       am_devices_led_init ; 0x2b0
        0x000002a6:    1c64        d.      ADDS     r4,r4,#1
        0x000002a8:    42b4        .B      CMP      r4,r6
        0x000002aa:    d3f8        ..      BCC      0x29e ; am_devices_led_array_init + 18
        0x000002ac:    bf00        ..      NOP      
        0x000002ae:    e7f3        ..      B        0x298 ; am_devices_led_array_init + 12
    i.am_devices_led_init
    am_devices_led_init
        0x000002b0:    b110        ..      CBZ      r0,0x2b8 ; am_devices_led_init + 8
        0x000002b2:    6801        .h      LDR      r1,[r0,#0]
        0x000002b4:    2932        2)      CMP      r1,#0x32
        0x000002b6:    d300        ..      BCC      0x2ba ; am_devices_led_init + 10
        0x000002b8:    4770        pG      BX       lr
        0x000002ba:    7901        .y      LDRB     r1,[r0,#4]
        0x000002bc:    f0010102    ....    AND      r1,r1,#2
        0x000002c0:    2900        .)      CMP      r1,#0
        0x000002c2:    d073        s.      BEQ      0x3ac ; am_devices_led_init + 252
        0x000002c4:    bf00        ..      NOP      
        0x000002c6:    6801        .h      LDR      r1,[r0,#0]
        0x000002c8:    2900        .)      CMP      r1,#0
        0x000002ca:    da00        ..      BGE      0x2ce ; am_devices_led_init + 30
        0x000002cc:    e035        5.      B        0x33a ; am_devices_led_init + 138
        0x000002ce:    2173        s!      MOVS     r1,#0x73
        0x000002d0:    4a70        pJ      LDR      r2,[pc,#448] ; [0x494] = 0x40010000
        0x000002d2:    6611        .f      STR      r1,[r2,#0x60]
        0x000002d4:    7801        .x      LDRB     r1,[r0,#0]
        0x000002d6:    f00101f8    ....    AND      r1,r1,#0xf8
        0x000002da:    eb020151    ..Q.    ADD      r1,r2,r1,LSR #1
        0x000002de:    6c09        .l      LDR      r1,[r1,#0x40]
        0x000002e0:    7802        .x      LDRB     r2,[r0,#0]
        0x000002e2:    0752        R.      LSLS     r2,r2,#29
        0x000002e4:    0ed3        ..      LSRS     r3,r2,#27
        0x000002e6:    2207        ."      MOVS     r2,#7
        0x000002e8:    409a        .@      LSLS     r2,r2,r3
        0x000002ea:    4391        .C      BICS     r1,r1,r2
        0x000002ec:    7802        .x      LDRB     r2,[r0,#0]
        0x000002ee:    0752        R.      LSLS     r2,r2,#29
        0x000002f0:    0ed3        ..      LSRS     r3,r2,#27
        0x000002f2:    2202        ."      MOVS     r2,#2
        0x000002f4:    409a        .@      LSLS     r2,r2,r3
        0x000002f6:    4311        .C      ORRS     r1,r1,r2
        0x000002f8:    7802        .x      LDRB     r2,[r0,#0]
        0x000002fa:    f00202f8    ....    AND      r2,r2,#0xf8
        0x000002fe:    4b65        eK      LDR      r3,[pc,#404] ; [0x494] = 0x40010000
        0x00000300:    eb030252    ..R.    ADD      r2,r3,r2,LSR #1
        0x00000304:    6411        .d      STR      r1,[r2,#0x40]
        0x00000306:    7801        .x      LDRB     r1,[r0,#0]
        0x00000308:    f00101fc    ....    AND      r1,r1,#0xfc
        0x0000030c:    461a        .F      MOV      r2,r3
        0x0000030e:    5889        .X      LDR      r1,[r1,r2]
        0x00000310:    7802        .x      LDRB     r2,[r0,#0]
        0x00000312:    0792        ..      LSLS     r2,r2,#30
        0x00000314:    0ed3        ..      LSRS     r3,r2,#27
        0x00000316:    22ff        ."      MOVS     r2,#0xff
        0x00000318:    409a        .@      LSLS     r2,r2,r3
        0x0000031a:    4391        .C      BICS     r1,r1,r2
        0x0000031c:    7802        .x      LDRB     r2,[r0,#0]
        0x0000031e:    0792        ..      LSLS     r2,r2,#30
        0x00000320:    0ed3        ..      LSRS     r3,r2,#27
        0x00000322:    2218        ."      MOVS     r2,#0x18
        0x00000324:    409a        .@      LSLS     r2,r2,r3
        0x00000326:    4311        .C      ORRS     r1,r1,r2
        0x00000328:    7802        .x      LDRB     r2,[r0,#0]
        0x0000032a:    f00202fc    ....    AND      r2,r2,#0xfc
        0x0000032e:    4b59        YK      LDR      r3,[pc,#356] ; [0x494] = 0x40010000
        0x00000330:    50d1        .P      STR      r1,[r2,r3]
        0x00000332:    2100        .!      MOVS     r1,#0
        0x00000334:    461a        .F      MOV      r2,r3
        0x00000336:    6611        .f      STR      r1,[r2,#0x60]
        0x00000338:    bf00        ..      NOP      
        0x0000033a:    bf00        ..      NOP      
        0x0000033c:    7801        .x      LDRB     r1,[r0,#0]
        0x0000033e:    f001021f    ....    AND      r2,r1,#0x1f
        0x00000342:    2101        .!      MOVS     r1,#1
        0x00000344:    4091        .@      LSLS     r1,r1,r2
        0x00000346:    7802        .x      LDRB     r2,[r0,#0]
        0x00000348:    f0020220    .. .    AND      r2,r2,#0x20
        0x0000034c:    4b51        QK      LDR      r3,[pc,#324] ; [0x494] = 0x40010000
        0x0000034e:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x00000352:    f8c210b4    ....    STR      r1,[r2,#0xb4]
        0x00000356:    7901        .y      LDRB     r1,[r0,#4]
        0x00000358:    f0010101    ....    AND      r1,r1,#1
        0x0000035c:    b171        q.      CBZ      r1,0x37c ; am_devices_led_init + 204
        0x0000035e:    7801        .x      LDRB     r1,[r0,#0]
        0x00000360:    f0010120    .. .    AND      r1,r1,#0x20
        0x00000364:    461a        .F      MOV      r2,r3
        0x00000366:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x0000036a:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x0000036e:    7802        .x      LDRB     r2,[r0,#0]
        0x00000370:    f002031f    ....    AND      r3,r2,#0x1f
        0x00000374:    2201        ."      MOVS     r2,#1
        0x00000376:    409a        .@      LSLS     r2,r2,r3
        0x00000378:    4311        .C      ORRS     r1,r1,r2
        0x0000037a:    e00d        ..      B        0x398 ; am_devices_led_init + 232
        0x0000037c:    7801        .x      LDRB     r1,[r0,#0]
        0x0000037e:    f0010120    .. .    AND      r1,r1,#0x20
        0x00000382:    4a44        DJ      LDR      r2,[pc,#272] ; [0x494] = 0x40010000
        0x00000384:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x00000388:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x0000038c:    7802        .x      LDRB     r2,[r0,#0]
        0x0000038e:    f002031f    ....    AND      r3,r2,#0x1f
        0x00000392:    2201        ."      MOVS     r2,#1
        0x00000394:    409a        .@      LSLS     r2,r2,r3
        0x00000396:    4391        .C      BICS     r1,r1,r2
        0x00000398:    7802        .x      LDRB     r2,[r0,#0]
        0x0000039a:    f0020220    .. .    AND      r2,r2,#0x20
        0x0000039e:    4b3d        =K      LDR      r3,[pc,#244] ; [0x494] = 0x40010000
        0x000003a0:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000003a4:    f8c21088    ....    STR      r1,[r2,#0x88]
        0x000003a8:    e072        r.      B        0x490 ; am_devices_led_init + 480
        0x000003aa:    e7ff        ..      B        0x3ac ; am_devices_led_init + 252
        0x000003ac:    bf00        ..      NOP      
        0x000003ae:    6801        .h      LDR      r1,[r0,#0]
        0x000003b0:    2900        .)      CMP      r1,#0
        0x000003b2:    da00        ..      BGE      0x3b6 ; am_devices_led_init + 262
        0x000003b4:    e035        5.      B        0x422 ; am_devices_led_init + 370
        0x000003b6:    2173        s!      MOVS     r1,#0x73
        0x000003b8:    4a36        6J      LDR      r2,[pc,#216] ; [0x494] = 0x40010000
        0x000003ba:    6611        .f      STR      r1,[r2,#0x60]
        0x000003bc:    7801        .x      LDRB     r1,[r0,#0]
        0x000003be:    f00101f8    ....    AND      r1,r1,#0xf8
        0x000003c2:    eb020151    ..Q.    ADD      r1,r2,r1,LSR #1
        0x000003c6:    6c09        .l      LDR      r1,[r1,#0x40]
        0x000003c8:    7802        .x      LDRB     r2,[r0,#0]
        0x000003ca:    0752        R.      LSLS     r2,r2,#29
        0x000003cc:    0ed3        ..      LSRS     r3,r2,#27
        0x000003ce:    2207        ."      MOVS     r2,#7
        0x000003d0:    409a        .@      LSLS     r2,r2,r3
        0x000003d2:    4391        .C      BICS     r1,r1,r2
        0x000003d4:    7802        .x      LDRB     r2,[r0,#0]
        0x000003d6:    0752        R.      LSLS     r2,r2,#29
        0x000003d8:    0ed3        ..      LSRS     r3,r2,#27
        0x000003da:    2206        ."      MOVS     r2,#6
        0x000003dc:    409a        .@      LSLS     r2,r2,r3
        0x000003de:    4311        .C      ORRS     r1,r1,r2
        0x000003e0:    7802        .x      LDRB     r2,[r0,#0]
        0x000003e2:    f00202f8    ....    AND      r2,r2,#0xf8
        0x000003e6:    4b2b        +K      LDR      r3,[pc,#172] ; [0x494] = 0x40010000
        0x000003e8:    eb030252    ..R.    ADD      r2,r3,r2,LSR #1
        0x000003ec:    6411        .d      STR      r1,[r2,#0x40]
        0x000003ee:    7801        .x      LDRB     r1,[r0,#0]
        0x000003f0:    f00101fc    ....    AND      r1,r1,#0xfc
        0x000003f4:    461a        .F      MOV      r2,r3
        0x000003f6:    5889        .X      LDR      r1,[r1,r2]
        0x000003f8:    7802        .x      LDRB     r2,[r0,#0]
        0x000003fa:    0792        ..      LSLS     r2,r2,#30
        0x000003fc:    0ed3        ..      LSRS     r3,r2,#27
        0x000003fe:    22ff        ."      MOVS     r2,#0xff
        0x00000400:    409a        .@      LSLS     r2,r2,r3
        0x00000402:    4391        .C      BICS     r1,r1,r2
        0x00000404:    7802        .x      LDRB     r2,[r0,#0]
        0x00000406:    0792        ..      LSLS     r2,r2,#30
        0x00000408:    0ed3        ..      LSRS     r3,r2,#27
        0x0000040a:    2218        ."      MOVS     r2,#0x18
        0x0000040c:    409a        .@      LSLS     r2,r2,r3
        0x0000040e:    4311        .C      ORRS     r1,r1,r2
        0x00000410:    7802        .x      LDRB     r2,[r0,#0]
        0x00000412:    f00202fc    ....    AND      r2,r2,#0xfc
        0x00000416:    4b1f        .K      LDR      r3,[pc,#124] ; [0x494] = 0x40010000
        0x00000418:    50d1        .P      STR      r1,[r2,r3]
        0x0000041a:    2100        .!      MOVS     r1,#0
        0x0000041c:    461a        .F      MOV      r2,r3
        0x0000041e:    6611        .f      STR      r1,[r2,#0x60]
        0x00000420:    bf00        ..      NOP      
        0x00000422:    bf00        ..      NOP      
        0x00000424:    7801        .x      LDRB     r1,[r0,#0]
        0x00000426:    f001021f    ....    AND      r2,r1,#0x1f
        0x0000042a:    2101        .!      MOVS     r1,#1
        0x0000042c:    4091        .@      LSLS     r1,r1,r2
        0x0000042e:    7802        .x      LDRB     r2,[r0,#0]
        0x00000430:    f0020220    .. .    AND      r2,r2,#0x20
        0x00000434:    4b17        .K      LDR      r3,[pc,#92] ; [0x494] = 0x40010000
        0x00000436:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x0000043a:    f8c210b4    ....    STR      r1,[r2,#0xb4]
        0x0000043e:    7901        .y      LDRB     r1,[r0,#4]
        0x00000440:    f0010101    ....    AND      r1,r1,#1
        0x00000444:    b171        q.      CBZ      r1,0x464 ; am_devices_led_init + 436
        0x00000446:    7801        .x      LDRB     r1,[r0,#0]
        0x00000448:    f0010120    .. .    AND      r1,r1,#0x20
        0x0000044c:    461a        .F      MOV      r2,r3
        0x0000044e:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x00000452:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x00000456:    7802        .x      LDRB     r2,[r0,#0]
        0x00000458:    f002031f    ....    AND      r3,r2,#0x1f
        0x0000045c:    2201        ."      MOVS     r2,#1
        0x0000045e:    409a        .@      LSLS     r2,r2,r3
        0x00000460:    4311        .C      ORRS     r1,r1,r2
        0x00000462:    e00d        ..      B        0x480 ; am_devices_led_init + 464
        0x00000464:    7801        .x      LDRB     r1,[r0,#0]
        0x00000466:    f0010120    .. .    AND      r1,r1,#0x20
        0x0000046a:    4a0a        .J      LDR      r2,[pc,#40] ; [0x494] = 0x40010000
        0x0000046c:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x00000470:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x00000474:    7802        .x      LDRB     r2,[r0,#0]
        0x00000476:    f002031f    ....    AND      r3,r2,#0x1f
        0x0000047a:    2201        ."      MOVS     r2,#1
        0x0000047c:    409a        .@      LSLS     r2,r2,r3
        0x0000047e:    4391        .C      BICS     r1,r1,r2
        0x00000480:    7802        .x      LDRB     r2,[r0,#0]
        0x00000482:    f0020220    .. .    AND      r2,r2,#0x20
        0x00000486:    4b03        .K      LDR      r3,[pc,#12] ; [0x494] = 0x40010000
        0x00000488:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x0000048c:    f8c21088    ....    STR      r1,[r2,#0x88]
        0x00000490:    bf00        ..      NOP      
        0x00000492:    e711        ..      B        0x2b8 ; am_devices_led_init + 8
    $d
        0x00000494:    40010000    ...@    DCD    1073807360
    $t
    i.am_devices_led_off
    am_devices_led_off
        0x00000498:    b510        ..      PUSH     {r4,lr}
        0x0000049a:    b128        (.      CBZ      r0,0x4a8 ; am_devices_led_off + 16
        0x0000049c:    291f        .)      CMP      r1,#0x1f
        0x0000049e:    d203        ..      BCS      0x4a8 ; am_devices_led_off + 16
        0x000004a0:    f8502031    P.1     LDR      r2,[r0,r1,LSL #3]
        0x000004a4:    2a32        2*      CMP      r2,#0x32
        0x000004a6:    d300        ..      BCC      0x4aa ; am_devices_led_off + 18
        0x000004a8:    bd10        ..      POP      {r4,pc}
        0x000004aa:    eb0002c1    ....    ADD      r2,r0,r1,LSL #3
        0x000004ae:    7912        .y      LDRB     r2,[r2,#4]
        0x000004b0:    f0020202    ....    AND      r2,r2,#2
        0x000004b4:    b382        ..      CBZ      r2,0x518 ; am_devices_led_off + 128
        0x000004b6:    eb0002c1    ....    ADD      r2,r0,r1,LSL #3
        0x000004ba:    7912        .y      LDRB     r2,[r2,#4]
        0x000004bc:    f0020201    ....    AND      r2,r2,#1
        0x000004c0:    b982        ..      CBNZ     r2,0x4e4 ; am_devices_led_off + 76
        0x000004c2:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x000004c6:    f0020220    .. .    AND      r2,r2,#0x20
        0x000004ca:    4b1c        .K      LDR      r3,[pc,#112] ; [0x53c] = 0x40010000
        0x000004cc:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000004d0:    f8d22088    ...     LDR      r2,[r2,#0x88]
        0x000004d4:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x000004d8:    f003041f    ....    AND      r4,r3,#0x1f
        0x000004dc:    2301        .#      MOVS     r3,#1
        0x000004de:    40a3        .@      LSLS     r3,r3,r4
        0x000004e0:    431a        .C      ORRS     r2,r2,r3
        0x000004e2:    e00f        ..      B        0x504 ; am_devices_led_off + 108
        0x000004e4:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x000004e8:    f0020220    .. .    AND      r2,r2,#0x20
        0x000004ec:    4b13        .K      LDR      r3,[pc,#76] ; [0x53c] = 0x40010000
        0x000004ee:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000004f2:    f8d22088    ...     LDR      r2,[r2,#0x88]
        0x000004f6:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x000004fa:    f003041f    ....    AND      r4,r3,#0x1f
        0x000004fe:    2301        .#      MOVS     r3,#1
        0x00000500:    40a3        .@      LSLS     r3,r3,r4
        0x00000502:    439a        .C      BICS     r2,r2,r3
        0x00000504:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x00000508:    f0030320    .. .    AND      r3,r3,#0x20
        0x0000050c:    4c0b        .L      LDR      r4,[pc,#44] ; [0x53c] = 0x40010000
        0x0000050e:    eb0403d3    ....    ADD      r3,r4,r3,LSR #3
        0x00000512:    f8c32088    ...     STR      r2,[r3,#0x88]
        0x00000516:    e00f        ..      B        0x538 ; am_devices_led_off + 160
        0x00000518:    e7ff        ..      B        0x51a ; am_devices_led_off + 130
        0x0000051a:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x0000051e:    f002031f    ....    AND      r3,r2,#0x1f
        0x00000522:    2201        ."      MOVS     r2,#1
        0x00000524:    409a        .@      LSLS     r2,r2,r3
        0x00000526:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x0000052a:    f0030320    .. .    AND      r3,r3,#0x20
        0x0000052e:    4c03        .L      LDR      r4,[pc,#12] ; [0x53c] = 0x40010000
        0x00000530:    eb0403d3    ....    ADD      r3,r4,r3,LSR #3
        0x00000534:    f8c320b4    ...     STR      r2,[r3,#0xb4]
        0x00000538:    bf00        ..      NOP      
        0x0000053a:    e7b5        ..      B        0x4a8 ; am_devices_led_off + 16
    $d
        0x0000053c:    40010000    ...@    DCD    1073807360
    $t
    i.am_devices_led_toggle
    am_devices_led_toggle
        0x00000540:    b570        p.      PUSH     {r4-r6,lr}
        0x00000542:    4604        .F      MOV      r4,r0
        0x00000544:    460d        .F      MOV      r5,r1
        0x00000546:    b12c        ,.      CBZ      r4,0x554 ; am_devices_led_toggle + 20
        0x00000548:    2d1f        .-      CMP      r5,#0x1f
        0x0000054a:    d203        ..      BCS      0x554 ; am_devices_led_toggle + 20
        0x0000054c:    f8540035    T.5.    LDR      r0,[r4,r5,LSL #3]
        0x00000550:    2832        2(      CMP      r0,#0x32
        0x00000552:    d300        ..      BCC      0x556 ; am_devices_led_toggle + 22
        0x00000554:    bd70        p.      POP      {r4-r6,pc}
        0x00000556:    eb0400c5    ....    ADD      r0,r4,r5,LSL #3
        0x0000055a:    7900        .y      LDRB     r0,[r0,#4]
        0x0000055c:    f0000002    ....    AND      r0,r0,#2
        0x00000560:    b1c8        ..      CBZ      r0,0x596 ; am_devices_led_toggle + 86
        0x00000562:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x00000566:    f0000020    .. .    AND      r0,r0,#0x20
        0x0000056a:    491e        .I      LDR      r1,[pc,#120] ; [0x5e4] = 0x40010000
        0x0000056c:    eb0100d0    ....    ADD      r0,r1,r0,LSR #3
        0x00000570:    f8d00088    ....    LDR      r0,[r0,#0x88]
        0x00000574:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x00000578:    f001021f    ....    AND      r2,r1,#0x1f
        0x0000057c:    2101        .!      MOVS     r1,#1
        0x0000057e:    4091        .@      LSLS     r1,r1,r2
        0x00000580:    4048        H@      EORS     r0,r0,r1
        0x00000582:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x00000586:    f0010120    .. .    AND      r1,r1,#0x20
        0x0000058a:    4a16        .J      LDR      r2,[pc,#88] ; [0x5e4] = 0x40010000
        0x0000058c:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x00000590:    f8c10088    ....    STR      r0,[r1,#0x88]
        0x00000594:    e023        #.      B        0x5de ; am_devices_led_toggle + 158
        0x00000596:    f8540035    T.5.    LDR      r0,[r4,r5,LSL #3]
        0x0000059a:    f000f899    ....    BL       am_hal_gpio_out_enable_bit_get ; 0x6d0
        0x0000059e:    b178        x.      CBZ      r0,0x5c0 ; am_devices_led_toggle + 128
        0x000005a0:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x000005a4:    f000011f    ....    AND      r1,r0,#0x1f
        0x000005a8:    2001        .       MOVS     r0,#1
        0x000005aa:    4088        .@      LSLS     r0,r0,r1
        0x000005ac:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x000005b0:    f0010120    .. .    AND      r1,r1,#0x20
        0x000005b4:    4a0b        .J      LDR      r2,[pc,#44] ; [0x5e4] = 0x40010000
        0x000005b6:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000005ba:    f8c100b4    ....    STR      r0,[r1,#0xb4]
        0x000005be:    e00e        ..      B        0x5de ; am_devices_led_toggle + 158
        0x000005c0:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x000005c4:    f000011f    ....    AND      r1,r0,#0x1f
        0x000005c8:    2001        .       MOVS     r0,#1
        0x000005ca:    4088        .@      LSLS     r0,r0,r1
        0x000005cc:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x000005d0:    f0010120    .. .    AND      r1,r1,#0x20
        0x000005d4:    4a03        .J      LDR      r2,[pc,#12] ; [0x5e4] = 0x40010000
        0x000005d6:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000005da:    f8c100a8    ....    STR      r0,[r1,#0xa8]
        0x000005de:    bf00        ..      NOP      
        0x000005e0:    e7b8        ..      B        0x554 ; am_devices_led_toggle + 20
    $d
        0x000005e2:    0000        ..      DCW    0
        0x000005e4:    40010000    ...@    DCD    1073807360
    $t
    i.am_gpio_isr
    am_gpio_isr
        0x000005e8:    b510        ..      PUSH     {r4,lr}
        0x000005ea:    20c8        .       MOVS     r0,#0xc8
        0x000005ec:    f000f9c4    ....    BL       am_util_delay_ms ; 0x978
        0x000005f0:    f44f3000    O..0    MOV      r0,#0x20000
        0x000005f4:    2100        .!      MOVS     r1,#0
        0x000005f6:    f000f855    ..U.    BL       am_hal_gpio_int_clear ; 0x6a4
        0x000005fa:    2100        .!      MOVS     r1,#0
        0x000005fc:    4801        .H      LDR      r0,[pc,#4] ; [0x604] = 0x10000020
        0x000005fe:    f7ffff9f    ....    BL       am_devices_led_toggle ; 0x540
        0x00000602:    bd10        ..      POP      {r4,pc}
    $d
        0x00000604:    10000020     ...    DCD    268435488
    $t
    i.am_hal_clkgen_osc_start
    am_hal_clkgen_osc_start
        0x00000608:    f0100f03    ....    TST      r0,#3
        0x0000060c:    bf08        ..      IT       EQ
        0x0000060e:    4770        pG      BXEQ     lr
        0x00000610:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000614:    68ca        .h      LDR      r2,[r1,#0xc]
        0x00000616:    ea220000    "...    BIC      r0,r2,r0
        0x0000061a:    60c8        .`      STR      r0,[r1,#0xc]
        0x0000061c:    4770        pG      BX       lr
    i.am_hal_clkgen_osc_stop
    am_hal_clkgen_osc_stop
        0x0000061e:    f0100f03    ....    TST      r0,#3
        0x00000622:    bf08        ..      IT       EQ
        0x00000624:    4770        pG      BXEQ     lr
        0x00000626:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x0000062a:    68ca        .h      LDR      r2,[r1,#0xc]
        0x0000062c:    4310        .C      ORRS     r0,r0,r2
        0x0000062e:    60c8        .`      STR      r0,[r1,#0xc]
        0x00000630:    4770        pG      BX       lr
        0x00000632:    0000        ..      MOVS     r0,r0
    i.am_hal_clkgen_sysclk_get
    am_hal_clkgen_sysclk_get
        0x00000634:    f04f2040    O.@     MOV      r0,#0x40004000
        0x00000638:    6980        .i      LDR      r0,[r0,#0x18]
        0x0000063a:    f0000007    ....    AND      r0,r0,#7
        0x0000063e:    2808        .(      CMP      r0,#8
        0x00000640:    d215        ..      BCS      0x66e ; am_hal_clkgen_sysclk_get + 58
        0x00000642:    e8dff000    ....    TBB      [pc,r0]
    $d
        0x00000646:    0604        ..      DCW    1540
        0x00000648:    0e0c0a08    ....    DCD    235670024
        0x0000064c:    1210        ..      DCW    4624
    $t
        0x0000064e:    4809        .H      LDR      r0,[pc,#36] ; [0x674] = 0x16e3600
        0x00000650:    4770        pG      BX       lr
        0x00000652:    4809        .H      LDR      r0,[pc,#36] ; [0x678] = 0xb71b00
        0x00000654:    4770        pG      BX       lr
        0x00000656:    4809        .H      LDR      r0,[pc,#36] ; [0x67c] = 0x7a1200
        0x00000658:    4770        pG      BX       lr
        0x0000065a:    4809        .H      LDR      r0,[pc,#36] ; [0x680] = 0x5b8d80
        0x0000065c:    4770        pG      BX       lr
        0x0000065e:    4809        .H      LDR      r0,[pc,#36] ; [0x684] = 0x493e00
        0x00000660:    4770        pG      BX       lr
        0x00000662:    4809        .H      LDR      r0,[pc,#36] ; [0x688] = 0x3d0900
        0x00000664:    4770        pG      BX       lr
        0x00000666:    4809        .H      LDR      r0,[pc,#36] ; [0x68c] = 0x3450db
        0x00000668:    4770        pG      BX       lr
        0x0000066a:    4809        .H      LDR      r0,[pc,#36] ; [0x690] = 0x2dc6c0
        0x0000066c:    4770        pG      BX       lr
        0x0000066e:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x00000672:    4770        pG      BX       lr
    $d
        0x00000674:    016e3600    .6n.    DCD    24000000
        0x00000678:    00b71b00    ....    DCD    12000000
        0x0000067c:    007a1200    ..z.    DCD    8000000
        0x00000680:    005b8d80    ..[.    DCD    6000000
        0x00000684:    00493e00    .>I.    DCD    4800000
        0x00000688:    003d0900    ..=.    DCD    4000000
        0x0000068c:    003450db    .P4.    DCD    3428571
        0x00000690:    002dc6c0    ..-.    DCD    3000000
    $t
    i.am_hal_clkgen_sysclk_select
    am_hal_clkgen_sysclk_select
        0x00000694:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000698:    2247        G"      MOVS     r2,#0x47
        0x0000069a:    614a        Ja      STR      r2,[r1,#0x14]
        0x0000069c:    6188        .a      STR      r0,[r1,#0x18]
        0x0000069e:    2000        .       MOVS     r0,#0
        0x000006a0:    6148        Ha      STR      r0,[r1,#0x14]
        0x000006a2:    4770        pG      BX       lr
    i.am_hal_gpio_int_clear
    am_hal_gpio_int_clear
        0x000006a4:    4a02        .J      LDR      r2,[pc,#8] ; [0x6b0] = 0x40010000
        0x000006a6:    f8c21218    ....    STR      r1,[r2,#0x218]
        0x000006aa:    f8c20208    ....    STR      r0,[r2,#0x208]
        0x000006ae:    4770        pG      BX       lr
    $d
        0x000006b0:    40010000    ...@    DCD    1073807360
    $t
    i.am_hal_gpio_int_enable
    am_hal_gpio_int_enable
        0x000006b4:    4a05        .J      LDR      r2,[pc,#20] ; [0x6cc] = 0x40010000
        0x000006b6:    f8d23210    ...2    LDR      r3,[r2,#0x210]
        0x000006ba:    4319        .C      ORRS     r1,r1,r3
        0x000006bc:    f8c21210    ....    STR      r1,[r2,#0x210]
        0x000006c0:    f8d21200    ....    LDR      r1,[r2,#0x200]
        0x000006c4:    4308        .C      ORRS     r0,r0,r1
        0x000006c6:    f8c20200    ....    STR      r0,[r2,#0x200]
        0x000006ca:    4770        pG      BX       lr
    $d
        0x000006cc:    40010000    ...@    DCD    1073807360
    $t
    i.am_hal_gpio_out_enable_bit_get
    am_hal_gpio_out_enable_bit_get
        0x000006d0:    490a        .I      LDR      r1,[pc,#40] ; [0x6fc] = 0x40010000
        0x000006d2:    2201        ."      MOVS     r2,#1
        0x000006d4:    281f        .(      CMP      r0,#0x1f
        0x000006d6:    d908        ..      BLS      0x6ea ; am_hal_gpio_out_enable_bit_get + 26
        0x000006d8:    f8d110a4    ....    LDR      r1,[r1,#0xa4]
        0x000006dc:    3820         8      SUBS     r0,r0,#0x20
        0x000006de:    fa02f000    ....    LSL      r0,r2,r0
        0x000006e2:    4008        .@      ANDS     r0,r0,r1
        0x000006e4:    bf08        ..      IT       EQ
        0x000006e6:    4770        pG      BXEQ     lr
        0x000006e8:    e006        ..      B        0x6f8 ; am_hal_gpio_out_enable_bit_get + 40
        0x000006ea:    f8d110a0    ....    LDR      r1,[r1,#0xa0]
        0x000006ee:    fa02f000    ....    LSL      r0,r2,r0
        0x000006f2:    4008        .@      ANDS     r0,r0,r1
        0x000006f4:    bf08        ..      IT       EQ
        0x000006f6:    4770        pG      BXEQ     lr
        0x000006f8:    2001        .       MOVS     r0,#1
        0x000006fa:    4770        pG      BX       lr
    $d
        0x000006fc:    40010000    ...@    DCD    1073807360
    $t
    i.am_hal_interrupt_enable
    am_hal_interrupt_enable
        0x00000700:    280f        .(      CMP      r0,#0xf
        0x00000702:    d90a        ..      BLS      0x71a ; am_hal_interrupt_enable + 26
        0x00000704:    3810        .8      SUBS     r0,r0,#0x10
        0x00000706:    f000001f    ....    AND      r0,r0,#0x1f
        0x0000070a:    2101        .!      MOVS     r1,#1
        0x0000070c:    fa01f000    ....    LSL      r0,r1,r0
        0x00000710:    f04f21e0    O..!    MOV      r1,#0xe000e000
        0x00000714:    f8c10100    ....    STR      r0,[r1,#0x100]
        0x00000718:    4770        pG      BX       lr
        0x0000071a:    490b        .I      LDR      r1,[pc,#44] ; [0x748] = 0xe000ed24
        0x0000071c:    2804        .(      CMP      r0,#4
        0x0000071e:    d00d        ..      BEQ      0x73c ; am_hal_interrupt_enable + 60
        0x00000720:    2805        .(      CMP      r0,#5
        0x00000722:    bf04        ..      ITT      EQ
        0x00000724:    6808        .h      LDREQ    r0,[r1,#0]
        0x00000726:    f4403000    @..0    ORREQ    r0,r0,#0x20000
        0x0000072a:    d005        ..      BEQ      0x738 ; am_hal_interrupt_enable + 56
        0x0000072c:    2806        .(      CMP      r0,#6
        0x0000072e:    bf06        ..      ITTE     EQ
        0x00000730:    6808        .h      LDREQ    r0,[r1,#0]
        0x00000732:    f4402080    @..     ORREQ    r0,r0,#0x40000
        0x00000736:    4770        pG      BXNE     lr
        0x00000738:    6008        .`      STR      r0,[r1,#0]
        0x0000073a:    4770        pG      BX       lr
        0x0000073c:    6808        .h      LDR      r0,[r1,#0]
        0x0000073e:    f4403080    @..0    ORR      r0,r0,#0x10000
        0x00000742:    6008        .`      STR      r0,[r1,#0]
        0x00000744:    4770        pG      BX       lr
    $d
        0x00000746:    0000        ..      DCW    0
        0x00000748:    e000ed24    $...    DCD    3758157092
    $t
    i.am_hal_mcuctrl_bandgap_disable
    am_hal_mcuctrl_bandgap_disable
        0x0000074c:    4902        .I      LDR      r1,[pc,#8] ; [0x758] = 0x40020000
        0x0000074e:    f06f0001    o...    MVN      r0,#1
        0x00000752:    f8c100fc    ....    STR      r0,[r1,#0xfc]
        0x00000756:    4770        pG      BX       lr
    $d
        0x00000758:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_bucks_enable
    am_hal_mcuctrl_bucks_enable
        0x0000075c:    4808        .H      LDR      r0,[pc,#32] ; [0x780] = 0x40020000
        0x0000075e:    6901        .i      LDR      r1,[r0,#0x10]
        0x00000760:    f0410102    A...    ORR      r1,r1,#2
        0x00000764:    6101        .a      STR      r1,[r0,#0x10]
        0x00000766:    6901        .i      LDR      r1,[r0,#0x10]
        0x00000768:    f0410101    A...    ORR      r1,r1,#1
        0x0000076c:    6101        .a      STR      r1,[r0,#0x10]
        0x0000076e:    6941        Ai      LDR      r1,[r0,#0x14]
        0x00000770:    f0110f02    ....    TST      r1,#2
        0x00000774:    d0fb        ..      BEQ      0x76e ; am_hal_mcuctrl_bucks_enable + 18
        0x00000776:    6941        Ai      LDR      r1,[r0,#0x14]
        0x00000778:    f0110f01    ....    TST      r1,#1
        0x0000077c:    d0fb        ..      BEQ      0x776 ; am_hal_mcuctrl_bucks_enable + 26
        0x0000077e:    4770        pG      BX       lr
    $d
        0x00000780:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_fault_status
    am_hal_mcuctrl_fault_status
        0x00000784:    490c        .I      LDR      r1,[pc,#48] ; [0x7b8] = 0x40020000
        0x00000786:    f8d121cc    ...!    LDR      r2,[r1,#0x1cc]
        0x0000078a:    f0020301    ....    AND      r3,r2,#1
        0x0000078e:    7003        .p      STRB     r3,[r0,#0]
        0x00000790:    f3c20340    ..@.    UBFX     r3,r2,#1,#1
        0x00000794:    7203        .r      STRB     r3,[r0,#8]
        0x00000796:    f3c20280    ....    UBFX     r2,r2,#2,#1
        0x0000079a:    7402        .t      STRB     r2,[r0,#0x10]
        0x0000079c:    f8d121c4    ...!    LDR      r2,[r1,#0x1c4]
        0x000007a0:    60c2        .`      STR      r2,[r0,#0xc]
        0x000007a2:    6842        Bh      LDR      r2,[r0,#4]
        0x000007a4:    f8d131c0    ...1    LDR      r3,[r1,#0x1c0]
        0x000007a8:    431a        .C      ORRS     r2,r2,r3
        0x000007aa:    6042        B`      STR      r2,[r0,#4]
        0x000007ac:    6942        Bi      LDR      r2,[r0,#0x14]
        0x000007ae:    f8d111c8    ....    LDR      r1,[r1,#0x1c8]
        0x000007b2:    4311        .C      ORRS     r1,r1,r2
        0x000007b4:    6141        Aa      STR      r1,[r0,#0x14]
        0x000007b6:    4770        pG      BX       lr
    $d
        0x000007b8:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_sram_power_set
    am_hal_mcuctrl_sram_power_set
        0x000007bc:    4a02        .J      LDR      r2,[pc,#8] ; [0x7c8] = 0x40020000
        0x000007be:    f8c20144    ..D.    STR      r0,[r2,#0x144]
        0x000007c2:    f8c21140    ..@.    STR      r1,[r2,#0x140]
        0x000007c6:    4770        pG      BX       lr
    $d
        0x000007c8:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_rtc_alarm_interval_set
    am_hal_rtc_alarm_interval_set
        0x000007cc:    f04f2240    O.@"    MOV      r2,#0x40004000
        0x000007d0:    2808        .(      CMP      r0,#8
        0x000007d2:    bf04        ..      ITT      EQ
        0x000007d4:    2007        .       MOVEQ    r0,#7
        0x000007d6:    21f0        .!      MOVEQ    r1,#0xf0
        0x000007d8:    d009        ..      BEQ      0x7ee ; am_hal_rtc_alarm_interval_set + 34
        0x000007da:    2809        .(      CMP      r0,#9
        0x000007dc:    bf04        ..      ITT      EQ
        0x000007de:    2007        .       MOVEQ    r0,#7
        0x000007e0:    21ff        .!      MOVEQ    r1,#0xff
        0x000007e2:    d004        ..      BEQ      0x7ee ; am_hal_rtc_alarm_interval_set + 34
        0x000007e4:    6c91        .l      LDR      r1,[r2,#0x48]
        0x000007e6:    b2c9        ..      UXTB     r1,r1
        0x000007e8:    29f0        .)      CMP      r1,#0xf0
        0x000007ea:    bf28        (.      IT       CS
        0x000007ec:    2100        .!      MOVCS    r1,#0
        0x000007ee:    6d13        .m      LDR      r3,[r2,#0x50]
        0x000007f0:    f3600343    `.C.    BFI      r3,r0,#1,#3
        0x000007f4:    6513        .e      STR      r3,[r2,#0x50]
        0x000007f6:    6c90        .l      LDR      r0,[r2,#0x48]
        0x000007f8:    f3610007    a...    BFI      r0,r1,#0,#8
        0x000007fc:    6490        .d      STR      r0,[r2,#0x48]
        0x000007fe:    4770        pG      BX       lr
    i.am_hal_rtc_int_clear
    am_hal_rtc_int_clear
        0x00000800:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000804:    f8c10108    ....    STR      r0,[r1,#0x108]
        0x00000808:    4770        pG      BX       lr
    i.am_hal_rtc_int_enable
    am_hal_rtc_int_enable
        0x0000080a:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x0000080e:    f8d12100    ...!    LDR      r2,[r1,#0x100]
        0x00000812:    4310        .C      ORRS     r0,r0,r2
        0x00000814:    f8c10100    ....    STR      r0,[r1,#0x100]
        0x00000818:    4770        pG      BX       lr
    i.am_hal_rtc_osc_disable
    am_hal_rtc_osc_disable
        0x0000081a:    f04f2040    O.@     MOV      r0,#0x40004000
        0x0000081e:    6d01        .m      LDR      r1,[r0,#0x50]
        0x00000820:    f0410110    A...    ORR      r1,r1,#0x10
        0x00000824:    6501        .e      STR      r1,[r0,#0x50]
        0x00000826:    4770        pG      BX       lr
    i.am_hal_rtc_osc_enable
    am_hal_rtc_osc_enable
        0x00000828:    f04f2040    O.@     MOV      r0,#0x40004000
        0x0000082c:    6d01        .m      LDR      r1,[r0,#0x50]
        0x0000082e:    f0210110    !...    BIC      r1,r1,#0x10
        0x00000832:    6501        .e      STR      r1,[r0,#0x50]
        0x00000834:    4770        pG      BX       lr
    i.am_hal_rtc_osc_select
    am_hal_rtc_osc_select
        0x00000836:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x0000083a:    2800        .(      CMP      r0,#0
        0x0000083c:    68c8        .h      LDR      r0,[r1,#0xc]
        0x0000083e:    bf14        ..      ITE      NE
        0x00000840:    f0400080    @...    ORRNE    r0,r0,#0x80
        0x00000844:    f0200080     ...    BICEQ    r0,r0,#0x80
        0x00000848:    60c8        .`      STR      r0,[r1,#0xc]
        0x0000084a:    4770        pG      BX       lr
    i.am_hal_sysctrl_sleep
    am_hal_sysctrl_sleep
        0x0000084c:    4908        .I      LDR      r1,[pc,#32] ; [0x870] = 0xe000ed10
        0x0000084e:    b148        H.      CBZ      r0,0x864 ; am_hal_sysctrl_sleep + 24
        0x00000850:    4808        .H      LDR      r0,[pc,#32] ; [0x874] = 0x40020000
        0x00000852:    f8d00250    ..P.    LDR      r0,[r0,#0x250]
        0x00000856:    f0100f01    ....    TST      r0,#1
        0x0000085a:    bf04        ..      ITT      EQ
        0x0000085c:    6808        .h      LDREQ    r0,[r1,#0]
        0x0000085e:    f0400004    @...    ORREQ    r0,r0,#4
        0x00000862:    d002        ..      BEQ      0x86a ; am_hal_sysctrl_sleep + 30
        0x00000864:    6808        .h      LDR      r0,[r1,#0]
        0x00000866:    f0200004     ...    BIC      r0,r0,#4
        0x0000086a:    6008        .`      STR      r0,[r1,#0]
        0x0000086c:    bf30        0.      WFI      
        0x0000086e:    4770        pG      BX       lr
    $d
        0x00000870:    e000ed10    ....    DCD    3758157072
        0x00000874:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_uart_clock_disable
    am_hal_uart_clock_disable
        0x00000878:    4805        .H      LDR      r0,[pc,#20] ; [0x890] = 0x4001c000
        0x0000087a:    6b01        .k      LDR      r1,[r0,#0x30]
        0x0000087c:    f0210108    !...    BIC      r1,r1,#8
        0x00000880:    6301        .c      STR      r1,[r0,#0x30]
        0x00000882:    f04f2040    O.@     MOV      r0,#0x40004000
        0x00000886:    6ac1        .j      LDR      r1,[r0,#0x2c]
        0x00000888:    f0210101    !...    BIC      r1,r1,#1
        0x0000088c:    62c1        .b      STR      r1,[r0,#0x2c]
        0x0000088e:    4770        pG      BX       lr
    $d
        0x00000890:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_clock_enable
    am_hal_uart_clock_enable
        0x00000894:    f04f2040    O.@     MOV      r0,#0x40004000
        0x00000898:    6ac1        .j      LDR      r1,[r0,#0x2c]
        0x0000089a:    f0410101    A...    ORR      r1,r1,#1
        0x0000089e:    62c1        .b      STR      r1,[r0,#0x2c]
        0x000008a0:    4804        .H      LDR      r0,[pc,#16] ; [0x8b4] = 0x4001c000
        0x000008a2:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000008a4:    f0410108    A...    ORR      r1,r1,#8
        0x000008a8:    6301        .c      STR      r1,[r0,#0x30]
        0x000008aa:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000008ac:    f0410110    A...    ORR      r1,r1,#0x10
        0x000008b0:    6301        .c      STR      r1,[r0,#0x30]
        0x000008b2:    4770        pG      BX       lr
    $d
        0x000008b4:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_config
    am_hal_uart_config
        0x000008b8:    b570        p.      PUSH     {r4-r6,lr}
        0x000008ba:    460c        .F      MOV      r4,r1
        0x000008bc:    680d        .h      LDR      r5,[r1,#0]
        0x000008be:    f7fffeb9    ....    BL       am_hal_clkgen_sysclk_get ; 0x634
        0x000008c2:    0129        ).      LSLS     r1,r5,#4
        0x000008c4:    fbb0f2f1    ....    UDIV     r2,r0,r1
        0x000008c8:    0180        ..      LSLS     r0,r0,#6
        0x000008ca:    fbb0f0f1    ....    UDIV     r0,r0,r1
        0x000008ce:    0191        ..      LSLS     r1,r2,#6
        0x000008d0:    1a41        A.      SUBS     r1,r0,r1
        0x000008d2:    b1ba        ..      CBZ      r2,0x904 ; am_hal_uart_config + 76
        0x000008d4:    480c        .H      LDR      r0,[pc,#48] ; [0x908] = 0x4001c000
        0x000008d6:    6242        Bb      STR      r2,[r0,#0x24]
        0x000008d8:    6242        Bb      STR      r2,[r0,#0x24]
        0x000008da:    6281        .b      STR      r1,[r0,#0x28]
        0x000008dc:    7a22        "z      LDRB     r2,[r4,#8]
        0x000008de:    6861        ah      LDR      r1,[r4,#4]
        0x000008e0:    2a00        .*      CMP      r2,#0
        0x000008e2:    bf18        ..      IT       NE
        0x000008e4:    2208        ."      MOVNE    r2,#8
        0x000008e6:    4311        .C      ORRS     r1,r1,r2
        0x000008e8:    68e2        .h      LDR      r2,[r4,#0xc]
        0x000008ea:    4311        .C      ORRS     r1,r1,r2
        0x000008ec:    6ac2        .j      LDR      r2,[r0,#0x2c]
        0x000008ee:    4311        .C      ORRS     r1,r1,r2
        0x000008f0:    62c1        .b      STR      r1,[r0,#0x2c]
        0x000008f2:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000008f4:    6922        "i      LDR      r2,[r4,#0x10]
        0x000008f6:    4311        .C      ORRS     r1,r1,r2
        0x000008f8:    6301        .c      STR      r1,[r0,#0x30]
        0x000008fa:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000008fc:    f0410110    A...    ORR      r1,r1,#0x10
        0x00000900:    6301        .c      STR      r1,[r0,#0x30]
        0x00000902:    bd70        p.      POP      {r4-r6,pc}
        0x00000904:    e7fe        ..      B        0x904 ; am_hal_uart_config + 76
    $d
        0x00000906:    0000        ..      DCW    0
        0x00000908:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_disable
    am_hal_uart_disable
        0x0000090c:    4803        .H      LDR      r0,[pc,#12] ; [0x91c] = 0x4001c000
        0x0000090e:    6b01        .k      LDR      r1,[r0,#0x30]
        0x00000910:    f0210101    !...    BIC      r1,r1,#1
        0x00000914:    f4217140    !.@q    BIC      r1,r1,#0x300
        0x00000918:    6301        .c      STR      r1,[r0,#0x30]
        0x0000091a:    4770        pG      BX       lr
    $d
        0x0000091c:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_enable
    am_hal_uart_enable
        0x00000920:    4803        .H      LDR      r0,[pc,#12] ; [0x930] = 0x4001c000
        0x00000922:    6b01        .k      LDR      r1,[r0,#0x30]
        0x00000924:    f2403201    @..2    MOV      r2,#0x301
        0x00000928:    4311        .C      ORRS     r1,r1,r2
        0x0000092a:    6301        .c      STR      r1,[r0,#0x30]
        0x0000092c:    4770        pG      BX       lr
    $d
        0x0000092e:    0000        ..      DCW    0
        0x00000930:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_fifo_config
    am_hal_uart_fifo_config
        0x00000934:    4803        .H      LDR      r0,[pc,#12] ; [0x944] = 0x4001c000
        0x00000936:    6ac2        .j      LDR      r2,[r0,#0x2c]
        0x00000938:    f0420210    B...    ORR      r2,r2,#0x10
        0x0000093c:    62c2        .b      STR      r2,[r0,#0x2c]
        0x0000093e:    6341        Ac      STR      r1,[r0,#0x34]
        0x00000940:    4770        pG      BX       lr
    $d
        0x00000942:    0000        ..      DCW    0
        0x00000944:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_string_transmit_polled
    am_hal_uart_string_transmit_polled
        0x00000948:    7808        .x      LDRB     r0,[r1,#0]
        0x0000094a:    2800        .(      CMP      r0,#0
        0x0000094c:    bf14        ..      ITE      NE
        0x0000094e:    4806        .H      LDRNE    r0,[pc,#24] ; [0x968] = 0x4001c000
        0x00000950:    4770        pG      BXEQ     lr
        0x00000952:    6982        .i      LDR      r2,[r0,#0x18]
        0x00000954:    f0120f20    .. .    TST      r2,#0x20
        0x00000958:    d1fb        ..      BNE      0x952 ; am_hal_uart_string_transmit_polled + 10
        0x0000095a:    f8112b01    ...+    LDRB     r2,[r1],#1
        0x0000095e:    6002        .`      STR      r2,[r0,#0]
        0x00000960:    780a        .x      LDRB     r2,[r1,#0]
        0x00000962:    2a00        .*      CMP      r2,#0
        0x00000964:    d1f5        ..      BNE      0x952 ; am_hal_uart_string_transmit_polled + 10
        0x00000966:    4770        pG      BX       lr
    $d
        0x00000968:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_vcomp_disable
    am_hal_vcomp_disable
        0x0000096c:    4901        .I      LDR      r1,[pc,#4] ; [0x974] = 0x4000c000
        0x0000096e:    2037        7       MOVS     r0,#0x37
        0x00000970:    6088        .`      STR      r0,[r1,#8]
        0x00000972:    4770        pG      BX       lr
    $d
        0x00000974:    4000c000    ...@    DCD    1073790976
    $t
    i.am_util_delay_ms
    am_util_delay_ms
        0x00000978:    b570        p.      PUSH     {r4-r6,lr}
        0x0000097a:    4604        .F      MOV      r4,r0
        0x0000097c:    f7fffe5a    ..Z.    BL       am_hal_clkgen_sysclk_get ; 0x634
        0x00000980:    4606        .F      MOV      r6,r0
        0x00000982:    f64030b8    @..0    MOV      r0,#0xbb8
        0x00000986:    fbb6f0f0    ....    UDIV     r0,r6,r0
        0x0000098a:    fb00f504    ....    MUL      r5,r0,r4
        0x0000098e:    4628        (F      MOV      r0,r5
        0x00000990:    f7fffbdc    ....    BL       am_hal_flash_delay ; 0x14c
        0x00000994:    bd70        p.      POP      {r4-r6,pc}
        0x00000996:    0000        ..      MOVS     r0,r0
    i.am_util_faultisr_collect_data
    am_util_faultisr_collect_data
        0x00000998:    b092        ..      SUB      sp,sp,#0x48
        0x0000099a:    4604        .F      MOV      r4,r0
        0x0000099c:    2118        .!      MOVS     r1,#0x18
        0x0000099e:    4668        hF      MOV      r0,sp
        0x000009a0:    f7fffbf0    ....    BL       __aeabi_memclr4 ; 0x184
        0x000009a4:    2500        .%      MOVS     r5,#0
        0x000009a6:    9510        ..      STR      r5,[sp,#0x40]
        0x000009a8:    4828        (H      LDR      r0,[pc,#160] ; [0xa4c] = 0xe000ed28
        0x000009aa:    6800        .h      LDR      r0,[r0,#0]
        0x000009ac:    9010        ..      STR      r0,[sp,#0x40]
        0x000009ae:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009b0:    b2c0        ..      UXTB     r0,r0
        0x000009b2:    f88d0044    ..D.    STRB     r0,[sp,#0x44]
        0x000009b6:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009b8:    0a00        ..      LSRS     r0,r0,#8
        0x000009ba:    f88d0045    ..E.    STRB     r0,[sp,#0x45]
        0x000009be:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009c0:    f64f71ff    O..q    MOV      r1,#0xffff
        0x000009c4:    ea014010    ...@    AND      r0,r1,r0,LSR #16
        0x000009c8:    f8ad0046    ..F.    STRH     r0,[sp,#0x46]
        0x000009cc:    481f        .H      LDR      r0,[pc,#124] ; [0xa4c] = 0xe000ed28
        0x000009ce:    3010        .0      ADDS     r0,r0,#0x10
        0x000009d0:    6800        .h      LDR      r0,[r0,#0]
        0x000009d2:    900f        ..      STR      r0,[sp,#0x3c]
        0x000009d4:    f89d0045    ..E.    LDRB     r0,[sp,#0x45]
        0x000009d8:    f0000002    ....    AND      r0,r0,#2
        0x000009dc:    b120         .      CBZ      r0,0x9e8 ; am_util_faultisr_collect_data + 80
        0x000009de:    4621        !F      MOV      r1,r4
        0x000009e0:    2006        .       MOVS     r0,#6
        0x000009e2:    f7fffbaf    ....    BL       getStackedReg ; 0x144
        0x000009e6:    e001        ..      B        0x9ec ; am_util_faultisr_collect_data + 84
        0x000009e8:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x000009ec:    900e        ..      STR      r0,[sp,#0x38]
        0x000009ee:    4621        !F      MOV      r1,r4
        0x000009f0:    2000        .       MOVS     r0,#0
        0x000009f2:    f7fffba7    ....    BL       getStackedReg ; 0x144
        0x000009f6:    9006        ..      STR      r0,[sp,#0x18]
        0x000009f8:    4621        !F      MOV      r1,r4
        0x000009fa:    2001        .       MOVS     r0,#1
        0x000009fc:    f7fffba2    ....    BL       getStackedReg ; 0x144
        0x00000a00:    9007        ..      STR      r0,[sp,#0x1c]
        0x00000a02:    4621        !F      MOV      r1,r4
        0x00000a04:    2002        .       MOVS     r0,#2
        0x00000a06:    f7fffb9d    ....    BL       getStackedReg ; 0x144
        0x00000a0a:    9008        ..      STR      r0,[sp,#0x20]
        0x00000a0c:    4621        !F      MOV      r1,r4
        0x00000a0e:    2003        .       MOVS     r0,#3
        0x00000a10:    f7fffb98    ....    BL       getStackedReg ; 0x144
        0x00000a14:    9009        ..      STR      r0,[sp,#0x24]
        0x00000a16:    4621        !F      MOV      r1,r4
        0x00000a18:    2004        .       MOVS     r0,#4
        0x00000a1a:    f7fffb93    ....    BL       getStackedReg ; 0x144
        0x00000a1e:    900a        ..      STR      r0,[sp,#0x28]
        0x00000a20:    4621        !F      MOV      r1,r4
        0x00000a22:    2005        .       MOVS     r0,#5
        0x00000a24:    f7fffb8e    ....    BL       getStackedReg ; 0x144
        0x00000a28:    900b        ..      STR      r0,[sp,#0x2c]
        0x00000a2a:    4621        !F      MOV      r1,r4
        0x00000a2c:    2006        .       MOVS     r0,#6
        0x00000a2e:    f7fffb89    ....    BL       getStackedReg ; 0x144
        0x00000a32:    900c        ..      STR      r0,[sp,#0x30]
        0x00000a34:    4621        !F      MOV      r1,r4
        0x00000a36:    2007        .       MOVS     r0,#7
        0x00000a38:    f7fffb84    ....    BL       getStackedReg ; 0x144
        0x00000a3c:    900d        ..      STR      r0,[sp,#0x34]
        0x00000a3e:    4668        hF      MOV      r0,sp
        0x00000a40:    f7fffea0    ....    BL       am_hal_mcuctrl_fault_status ; 0x784
        0x00000a44:    bf00        ..      NOP      
        0x00000a46:    bf00        ..      NOP      
        0x00000a48:    e7fe        ..      B        0xa48 ; am_util_faultisr_collect_data + 176
    $d
        0x00000a4a:    0000        ..      DCW    0
        0x00000a4c:    e000ed28    (...    DCD    3758157096
    $t
    i.am_util_stdio_printf
    am_util_stdio_printf
        0x00000a50:    b40f        ..      PUSH     {r0-r3}
        0x00000a52:    b538        8.      PUSH     {r3-r5,lr}
        0x00000a54:    a805        ..      ADD      r0,sp,#0x14
        0x00000a56:    9000        ..      STR      r0,[sp,#0]
        0x00000a58:    4807        .H      LDR      r0,[pc,#28] ; [0xa78] = 0x10000048
        0x00000a5a:    9a00        ..      LDR      r2,[sp,#0]
        0x00000a5c:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000a5e:    f000f825    ..%.    BL       am_util_stdio_vsprintf ; 0xaac
        0x00000a62:    4604        .F      MOV      r4,r0
        0x00000a64:    2000        .       MOVS     r0,#0
        0x00000a66:    9000        ..      STR      r0,[sp,#0]
        0x00000a68:    4803        .H      LDR      r0,[pc,#12] ; [0xa78] = 0x10000048
        0x00000a6a:    4904        .I      LDR      r1,[pc,#16] ; [0xa7c] = 0x10000014
        0x00000a6c:    6809        .h      LDR      r1,[r1,#0]
        0x00000a6e:    4788        .G      BLX      r1
        0x00000a70:    4620         F      MOV      r0,r4
        0x00000a72:    bc38        8.      POP      {r3-r5}
        0x00000a74:    f85dfb14    ]...    LDR      pc,[sp],#0x14
    $d
        0x00000a78:    10000048    H...    DCD    268435528
        0x00000a7c:    10000014    ....    DCD    268435476
    $t
    i.am_util_stdio_printf_init
    am_util_stdio_printf_init
        0x00000a80:    4901        .I      LDR      r1,[pc,#4] ; [0xa88] = 0x10000014
        0x00000a82:    6008        .`      STR      r0,[r1,#0]
        0x00000a84:    4770        pG      BX       lr
    $d
        0x00000a86:    0000        ..      DCW    0
        0x00000a88:    10000014    ....    DCD    268435476
    $t
    i.am_util_stdio_terminal_clear
    am_util_stdio_terminal_clear
        0x00000a8c:    b510        ..      PUSH     {r4,lr}
        0x00000a8e:    a002        ..      ADR      r0,{pc}+0xa ; 0xa98
        0x00000a90:    f7ffffde    ....    BL       am_util_stdio_printf ; 0xa50
        0x00000a94:    bd10        ..      POP      {r4,pc}
    $d
        0x00000a96:    0000        ..      DCW    0
        0x00000a98:    0a0a0a0a    ....    DCD    168430090
        0x00000a9c:    0a0a0a0a    ....    DCD    168430090
        0x00000aa0:    0a0a0a0a    ....    DCD    168430090
        0x00000aa4:    0a0a0a0a    ....    DCD    168430090
        0x00000aa8:    00000a0a    ....    DCD    2570
    $t
    i.am_util_stdio_vsprintf
    am_util_stdio_vsprintf
        0x00000aac:    e92d4ff7    -..O    PUSH     {r0-r2,r4-r11,lr}
        0x00000ab0:    ed2d8b02    -...    VPUSH    {d8}
        0x00000ab4:    b08a        ..      SUB      sp,sp,#0x28
        0x00000ab6:    4604        .F      MOV      r4,r0
        0x00000ab8:    460d        .F      MOV      r5,r1
        0x00000aba:    f04f0900    O...    MOV      r9,#0
        0x00000abe:    2000        .       MOVS     r0,#0
        0x00000ac0:    9000        ..      STR      r0,[sp,#0]
        0x00000ac2:    e1b9        ..      B        0xe38 ; am_util_stdio_vsprintf + 908
        0x00000ac4:    2006        .       MOVS     r0,#6
        0x00000ac6:    9006        ..      STR      r0,[sp,#0x18]
        0x00000ac8:    7828        (x      LDRB     r0,[r5,#0]
        0x00000aca:    2825        %(      CMP      r0,#0x25
        0x00000acc:    d012        ..      BEQ      0xaf4 ; am_util_stdio_vsprintf + 72
        0x00000ace:    b16c        l.      CBZ      r4,0xaec ; am_util_stdio_vsprintf + 64
        0x00000ad0:    7828        (x      LDRB     r0,[r5,#0]
        0x00000ad2:    280a        .(      CMP      r0,#0xa
        0x00000ad4:    d107        ..      BNE      0xae6 ; am_util_stdio_vsprintf + 58
        0x00000ad6:    48de        .H      LDR      r0,[pc,#888] ; [0xe50] = 0x10000018
        0x00000ad8:    7800        .x      LDRB     r0,[r0,#0]
        0x00000ada:    b120         .      CBZ      r0,0xae6 ; am_util_stdio_vsprintf + 58
        0x00000adc:    200d        .       MOVS     r0,#0xd
        0x00000ade:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000ae2:    f1090901    ....    ADD      r9,r9,#1
        0x00000ae6:    7828        (x      LDRB     r0,[r5,#0]
        0x00000ae8:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000aec:    1c6d        m.      ADDS     r5,r5,#1
        0x00000aee:    f1090901    ....    ADD      r9,r9,#1
        0x00000af2:    e1a1        ..      B        0xe38 ; am_util_stdio_vsprintf + 908
        0x00000af4:    1c6d        m.      ADDS     r5,r5,#1
        0x00000af6:    2000        .       MOVS     r0,#0
        0x00000af8:    9002        ..      STR      r0,[sp,#8]
        0x00000afa:    9003        ..      STR      r0,[sp,#0xc]
        0x00000afc:    2020                MOVS     r0,#0x20
        0x00000afe:    9004        ..      STR      r0,[sp,#0x10]
        0x00000b00:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b02:    2830        0(      CMP      r0,#0x30
        0x00000b04:    d101        ..      BNE      0xb0a ; am_util_stdio_vsprintf + 94
        0x00000b06:    9004        ..      STR      r0,[sp,#0x10]
        0x00000b08:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b0a:    a907        ..      ADD      r1,sp,#0x1c
        0x00000b0c:    4628        (F      MOV      r0,r5
        0x00000b0e:    f000f9a7    ....    BL       decstr_to_int ; 0xe60
        0x00000b12:    4606        .F      MOV      r6,r0
        0x00000b14:    9807        ..      LDR      r0,[sp,#0x1c]
        0x00000b16:    4405        .D      ADD      r5,r5,r0
        0x00000b18:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b1a:    2873        s(      CMP      r0,#0x73
        0x00000b1c:    d002        ..      BEQ      0xb24 ; am_util_stdio_vsprintf + 120
        0x00000b1e:    2e00        ..      CMP      r6,#0
        0x00000b20:    da00        ..      BGE      0xb24 ; am_util_stdio_vsprintf + 120
        0x00000b22:    4276        vB      RSBS     r6,r6,#0
        0x00000b24:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b26:    282e        .(      CMP      r0,#0x2e
        0x00000b28:    d107        ..      BNE      0xb3a ; am_util_stdio_vsprintf + 142
        0x00000b2a:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b2c:    a907        ..      ADD      r1,sp,#0x1c
        0x00000b2e:    4628        (F      MOV      r0,r5
        0x00000b30:    f000f996    ....    BL       decstr_to_int ; 0xe60
        0x00000b34:    9006        ..      STR      r0,[sp,#0x18]
        0x00000b36:    9807        ..      LDR      r0,[sp,#0x1c]
        0x00000b38:    4405        .D      ADD      r5,r5,r0
        0x00000b3a:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b3c:    286c        l(      CMP      r0,#0x6c
        0x00000b3e:    d106        ..      BNE      0xb4e ; am_util_stdio_vsprintf + 162
        0x00000b40:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b42:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b44:    286c        l(      CMP      r0,#0x6c
        0x00000b46:    d102        ..      BNE      0xb4e ; am_util_stdio_vsprintf + 162
        0x00000b48:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b4a:    2001        .       MOVS     r0,#1
        0x00000b4c:    9002        ..      STR      r0,[sp,#8]
        0x00000b4e:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b50:    2866        f(      CMP      r0,#0x66
        0x00000b52:    d06f        o.      BEQ      0xc34 ; am_util_stdio_vsprintf + 392
        0x00000b54:    dc08        ..      BGT      0xb68 ; am_util_stdio_vsprintf + 188
        0x00000b56:    2846        F(      CMP      r0,#0x46
        0x00000b58:    d06d        m.      BEQ      0xc36 ; am_util_stdio_vsprintf + 394
        0x00000b5a:    2858        X(      CMP      r0,#0x58
        0x00000b5c:    d05c        \.      BEQ      0xc18 ; am_util_stdio_vsprintf + 364
        0x00000b5e:    2863        c(      CMP      r0,#0x63
        0x00000b60:    d00b        ..      BEQ      0xb7a ; am_util_stdio_vsprintf + 206
        0x00000b62:    2864        d(      CMP      r0,#0x64
        0x00000b64:    d168        h.      BNE      0xc38 ; am_util_stdio_vsprintf + 396
        0x00000b66:    e0c3        ..      B        0xcf0 ; am_util_stdio_vsprintf + 580
        0x00000b68:    2869        i(      CMP      r0,#0x69
        0x00000b6a:    d07d        }.      BEQ      0xc68 ; am_util_stdio_vsprintf + 444
        0x00000b6c:    2873        s(      CMP      r0,#0x73
        0x00000b6e:    d011        ..      BEQ      0xb94 ; am_util_stdio_vsprintf + 232
        0x00000b70:    2875        u(      CMP      r0,#0x75
        0x00000b72:    d07a        z.      BEQ      0xc6a ; am_util_stdio_vsprintf + 446
        0x00000b74:    2878        x(      CMP      r0,#0x78
        0x00000b76:    d1f5        ..      BNE      0xb64 ; am_util_stdio_vsprintf + 184
        0x00000b78:    e04b        K.      B        0xc12 ; am_util_stdio_vsprintf + 358
        0x00000b7a:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000b7c:    f8101b04    ....    LDRB     r1,[r0],#4
        0x00000b80:    900e        ..      STR      r0,[sp,#0x38]
        0x00000b82:    b2c8        ..      UXTB     r0,r1
        0x00000b84:    9005        ..      STR      r0,[sp,#0x14]
        0x00000b86:    b114        ..      CBZ      r4,0xb8e ; am_util_stdio_vsprintf + 226
        0x00000b88:    9805        ..      LDR      r0,[sp,#0x14]
        0x00000b8a:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b8e:    f1090901    ....    ADD      r9,r9,#1
        0x00000b92:    e14e        N.      B        0xe32 ; am_util_stdio_vsprintf + 902
        0x00000b94:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000b96:    f850bb04    P...    LDR      r11,[r0],#4
        0x00000b9a:    900e        ..      STR      r0,[sp,#0x38]
        0x00000b9c:    4658        XF      MOV      r0,r11
        0x00000b9e:    f000fb79    ..y.    BL       simple_strlen ; 0x1294
        0x00000ba2:    9000        ..      STR      r0,[sp,#0]
        0x00000ba4:    2e00        ..      CMP      r6,#0
        0x00000ba6:    dd11        ..      BLE      0xbcc ; am_util_stdio_vsprintf + 288
        0x00000ba8:    9800        ..      LDR      r0,[sp,#0]
        0x00000baa:    42b0        .B      CMP      r0,r6
        0x00000bac:    d20e        ..      BCS      0xbcc ; am_util_stdio_vsprintf + 288
        0x00000bae:    9800        ..      LDR      r0,[sp,#0]
        0x00000bb0:    1a36        6.      SUBS     r6,r6,r0
        0x00000bb2:    4632        2F      MOV      r2,r6
        0x00000bb4:    4620         F      MOV      r0,r4
        0x00000bb6:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000bb8:    f000fb5b    ..[.    BL       padbuffer ; 0x1272
        0x00000bbc:    4606        .F      MOV      r6,r0
        0x00000bbe:    b10c        ..      CBZ      r4,0xbc4 ; am_util_stdio_vsprintf + 280
        0x00000bc0:    4630        0F      MOV      r0,r6
        0x00000bc2:    e000        ..      B        0xbc6 ; am_util_stdio_vsprintf + 282
        0x00000bc4:    2000        .       MOVS     r0,#0
        0x00000bc6:    4404        .D      ADD      r4,r4,r0
        0x00000bc8:    44b1        .D      ADD      r9,r9,r6
        0x00000bca:    2600        .&      MOVS     r6,#0
        0x00000bcc:    e008        ..      B        0xbe0 ; am_util_stdio_vsprintf + 308
        0x00000bce:    b11c        ..      CBZ      r4,0xbd8 ; am_util_stdio_vsprintf + 300
        0x00000bd0:    f89b0000    ....    LDRB     r0,[r11,#0]
        0x00000bd4:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000bd8:    f10b0b01    ....    ADD      r11,r11,#1
        0x00000bdc:    f1090901    ....    ADD      r9,r9,#1
        0x00000be0:    f89b0000    ....    LDRB     r0,[r11,#0]
        0x00000be4:    2800        .(      CMP      r0,#0
        0x00000be6:    d1f2        ..      BNE      0xbce ; am_util_stdio_vsprintf + 290
        0x00000be8:    b196        ..      CBZ      r6,0xc10 ; am_util_stdio_vsprintf + 356
        0x00000bea:    4276        vB      RSBS     r6,r6,#0
        0x00000bec:    9800        ..      LDR      r0,[sp,#0]
        0x00000bee:    42b0        .B      CMP      r0,r6
        0x00000bf0:    d20e        ..      BCS      0xc10 ; am_util_stdio_vsprintf + 356
        0x00000bf2:    9800        ..      LDR      r0,[sp,#0]
        0x00000bf4:    1a36        6.      SUBS     r6,r6,r0
        0x00000bf6:    4632        2F      MOV      r2,r6
        0x00000bf8:    4620         F      MOV      r0,r4
        0x00000bfa:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000bfc:    f000fb39    ..9.    BL       padbuffer ; 0x1272
        0x00000c00:    4606        .F      MOV      r6,r0
        0x00000c02:    b10c        ..      CBZ      r4,0xc08 ; am_util_stdio_vsprintf + 348
        0x00000c04:    4630        0F      MOV      r0,r6
        0x00000c06:    e000        ..      B        0xc0a ; am_util_stdio_vsprintf + 350
        0x00000c08:    2000        .       MOVS     r0,#0
        0x00000c0a:    4404        .D      ADD      r4,r4,r0
        0x00000c0c:    44b1        .D      ADD      r9,r9,r6
        0x00000c0e:    2600        .&      MOVS     r6,#0
        0x00000c10:    e10f        ..      B        0xe32 ; am_util_stdio_vsprintf + 902
        0x00000c12:    2001        .       MOVS     r0,#1
        0x00000c14:    9003        ..      STR      r0,[sp,#0xc]
        0x00000c16:    bf00        ..      NOP      
        0x00000c18:    9802        ..      LDR      r0,[sp,#8]
        0x00000c1a:    b170        p.      CBZ      r0,0xc3a ; am_util_stdio_vsprintf + 398
        0x00000c1c:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000c1e:    1dc0        ..      ADDS     r0,r0,#7
        0x00000c20:    f0200007     ...    BIC      r0,r0,#7
        0x00000c24:    4601        .F      MOV      r1,r0
        0x00000c26:    900e        ..      STR      r0,[sp,#0x38]
        0x00000c28:    6800        .h      LDR      r0,[r0,#0]
        0x00000c2a:    6849        Ih      LDR      r1,[r1,#4]
        0x00000c2c:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000c2e:    3208        .2      ADDS     r2,r2,#8
        0x00000c30:    920e        ..      STR      r2,[sp,#0x38]
        0x00000c32:    e008        ..      B        0xc46 ; am_util_stdio_vsprintf + 410
        0x00000c34:    e0c3        ..      B        0xdbe ; am_util_stdio_vsprintf + 786
        0x00000c36:    e0c3        ..      B        0xdc0 ; am_util_stdio_vsprintf + 788
        0x00000c38:    e0f4        ..      B        0xe24 ; am_util_stdio_vsprintf + 888
        0x00000c3a:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000c3c:    6800        .h      LDR      r0,[r0,#0]
        0x00000c3e:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000c40:    1d09        ..      ADDS     r1,r1,#4
        0x00000c42:    910e        ..      STR      r1,[sp,#0x38]
        0x00000c44:    2100        .!      MOVS     r1,#0
        0x00000c46:    4607        .F      MOV      r7,r0
        0x00000c48:    4688        .F      MOV      r8,r1
        0x00000c4a:    b19e        ..      CBZ      r6,0xc74 ; am_util_stdio_vsprintf + 456
        0x00000c4c:    4638        8F      MOV      r0,r7
        0x00000c4e:    4641        AF      MOV      r1,r8
        0x00000c50:    f000fac6    ....    BL       ndigits_in_hex ; 0x11e0
        0x00000c54:    1a36        6.      SUBS     r6,r6,r0
        0x00000c56:    4632        2F      MOV      r2,r6
        0x00000c58:    4620         F      MOV      r0,r4
        0x00000c5a:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000c5c:    f000fb09    ....    BL       padbuffer ; 0x1272
        0x00000c60:    4606        .F      MOV      r6,r0
        0x00000c62:    b11c        ..      CBZ      r4,0xc6c ; am_util_stdio_vsprintf + 448
        0x00000c64:    4630        0F      MOV      r0,r6
        0x00000c66:    e002        ..      B        0xc6e ; am_util_stdio_vsprintf + 450
        0x00000c68:    e043        C.      B        0xcf2 ; am_util_stdio_vsprintf + 582
        0x00000c6a:    e00e        ..      B        0xc8a ; am_util_stdio_vsprintf + 478
        0x00000c6c:    2000        .       MOVS     r0,#0
        0x00000c6e:    4404        .D      ADD      r4,r4,r0
        0x00000c70:    44b1        .D      ADD      r9,r9,r6
        0x00000c72:    2600        .&      MOVS     r6,#0
        0x00000c74:    4622        "F      MOV      r2,r4
        0x00000c76:    4638        8F      MOV      r0,r7
        0x00000c78:    4641        AF      MOV      r1,r8
        0x00000c7a:    9b03        ..      LDR      r3,[sp,#0xc]
        0x00000c7c:    f000fb88    ....    BL       uint64_to_hexstr ; 0x1390
        0x00000c80:    4682        .F      MOV      r10,r0
        0x00000c82:    b104        ..      CBZ      r4,0xc86 ; am_util_stdio_vsprintf + 474
        0x00000c84:    4454        TD      ADD      r4,r4,r10
        0x00000c86:    44d1        .D      ADD      r9,r9,r10
        0x00000c88:    e0d3        ..      B        0xe32 ; am_util_stdio_vsprintf + 902
        0x00000c8a:    9802        ..      LDR      r0,[sp,#8]
        0x00000c8c:    b158        X.      CBZ      r0,0xca6 ; am_util_stdio_vsprintf + 506
        0x00000c8e:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000c90:    1dc0        ..      ADDS     r0,r0,#7
        0x00000c92:    f0200007     ...    BIC      r0,r0,#7
        0x00000c96:    4601        .F      MOV      r1,r0
        0x00000c98:    900e        ..      STR      r0,[sp,#0x38]
        0x00000c9a:    6800        .h      LDR      r0,[r0,#0]
        0x00000c9c:    6849        Ih      LDR      r1,[r1,#4]
        0x00000c9e:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000ca0:    3208        .2      ADDS     r2,r2,#8
        0x00000ca2:    920e        ..      STR      r2,[sp,#0x38]
        0x00000ca4:    e005        ..      B        0xcb2 ; am_util_stdio_vsprintf + 518
        0x00000ca6:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000ca8:    6800        .h      LDR      r0,[r0,#0]
        0x00000caa:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000cac:    1d09        ..      ADDS     r1,r1,#4
        0x00000cae:    910e        ..      STR      r1,[sp,#0x38]
        0x00000cb0:    2100        .!      MOVS     r1,#0
        0x00000cb2:    4607        .F      MOV      r7,r0
        0x00000cb4:    4688        .F      MOV      r8,r1
        0x00000cb6:    b18e        ..      CBZ      r6,0xcdc ; am_util_stdio_vsprintf + 560
        0x00000cb8:    4638        8F      MOV      r0,r7
        0x00000cba:    4641        AF      MOV      r1,r8
        0x00000cbc:    f000fabc    ....    BL       ndigits_in_u64 ; 0x1238
        0x00000cc0:    1a36        6.      SUBS     r6,r6,r0
        0x00000cc2:    4632        2F      MOV      r2,r6
        0x00000cc4:    4620         F      MOV      r0,r4
        0x00000cc6:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000cc8:    f000fad3    ....    BL       padbuffer ; 0x1272
        0x00000ccc:    4606        .F      MOV      r6,r0
        0x00000cce:    b10c        ..      CBZ      r4,0xcd4 ; am_util_stdio_vsprintf + 552
        0x00000cd0:    4630        0F      MOV      r0,r6
        0x00000cd2:    e000        ..      B        0xcd6 ; am_util_stdio_vsprintf + 554
        0x00000cd4:    2000        .       MOVS     r0,#0
        0x00000cd6:    4404        .D      ADD      r4,r4,r0
        0x00000cd8:    44b1        .D      ADD      r9,r9,r6
        0x00000cda:    2600        .&      MOVS     r6,#0
        0x00000cdc:    4622        "F      MOV      r2,r4
        0x00000cde:    4638        8F      MOV      r0,r7
        0x00000ce0:    4641        AF      MOV      r1,r8
        0x00000ce2:    f000fb9a    ....    BL       uint64_to_str ; 0x141a
        0x00000ce6:    4682        .F      MOV      r10,r0
        0x00000ce8:    b104        ..      CBZ      r4,0xcec ; am_util_stdio_vsprintf + 576
        0x00000cea:    4454        TD      ADD      r4,r4,r10
        0x00000cec:    44d1        .D      ADD      r9,r9,r10
        0x00000cee:    e0a0        ..      B        0xe32 ; am_util_stdio_vsprintf + 902
        0x00000cf0:    bf00        ..      NOP      
        0x00000cf2:    9802        ..      LDR      r0,[sp,#8]
        0x00000cf4:    b158        X.      CBZ      r0,0xd0e ; am_util_stdio_vsprintf + 610
        0x00000cf6:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000cf8:    1dc0        ..      ADDS     r0,r0,#7
        0x00000cfa:    f0200007     ...    BIC      r0,r0,#7
        0x00000cfe:    4601        .F      MOV      r1,r0
        0x00000d00:    900e        ..      STR      r0,[sp,#0x38]
        0x00000d02:    6800        .h      LDR      r0,[r0,#0]
        0x00000d04:    6849        Ih      LDR      r1,[r1,#4]
        0x00000d06:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000d08:    3208        .2      ADDS     r2,r2,#8
        0x00000d0a:    920e        ..      STR      r2,[sp,#0x38]
        0x00000d0c:    e005        ..      B        0xd1a ; am_util_stdio_vsprintf + 622
        0x00000d0e:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000d10:    6800        .h      LDR      r0,[r0,#0]
        0x00000d12:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000d14:    1d09        ..      ADDS     r1,r1,#4
        0x00000d16:    910e        ..      STR      r1,[sp,#0x38]
        0x00000d18:    17c1        ..      ASRS     r1,r0,#31
        0x00000d1a:    e9cd0108    ....    STRD     r0,r1,[sp,#0x20]
        0x00000d1e:    2300        .#      MOVS     r3,#0
        0x00000d20:    e9dd0108    ....    LDRD     r0,r1,[sp,#0x20]
        0x00000d24:    1ac0        ..      SUBS     r0,r0,r3
        0x00000d26:    4199        .A      SBCS     r1,r1,r3
        0x00000d28:    da08        ..      BGE      0xd3c ; am_util_stdio_vsprintf + 656
        0x00000d2a:    2200        ."      MOVS     r2,#0
        0x00000d2c:    e9dd1008    ....    LDRD     r1,r0,[sp,#0x20]
        0x00000d30:    424f        OB      RSBS     r7,r1,#0
        0x00000d32:    eb620800    b...    SBC      r8,r2,r0
        0x00000d36:    2001        .       MOVS     r0,#1
        0x00000d38:    9001        ..      STR      r0,[sp,#4]
        0x00000d3a:    e003        ..      B        0xd44 ; am_util_stdio_vsprintf + 664
        0x00000d3c:    e9dd7808    ...x    LDRD     r7,r8,[sp,#0x20]
        0x00000d40:    2000        .       MOVS     r0,#0
        0x00000d42:    9001        ..      STR      r0,[sp,#4]
        0x00000d44:    b34e        N.      CBZ      r6,0xd9a ; am_util_stdio_vsprintf + 750
        0x00000d46:    4638        8F      MOV      r0,r7
        0x00000d48:    4641        AF      MOV      r1,r8
        0x00000d4a:    f000fa63    ..c.    BL       ndigits_in_i64 ; 0x1214
        0x00000d4e:    1a36        6.      SUBS     r6,r6,r0
        0x00000d50:    9801        ..      LDR      r0,[sp,#4]
        0x00000d52:    b148        H.      CBZ      r0,0xd68 ; am_util_stdio_vsprintf + 700
        0x00000d54:    1e76        v.      SUBS     r6,r6,#1
        0x00000d56:    9804        ..      LDR      r0,[sp,#0x10]
        0x00000d58:    2830        0(      CMP      r0,#0x30
        0x00000d5a:    d105        ..      BNE      0xd68 ; am_util_stdio_vsprintf + 700
        0x00000d5c:    b114        ..      CBZ      r4,0xd64 ; am_util_stdio_vsprintf + 696
        0x00000d5e:    202d        -       MOVS     r0,#0x2d
        0x00000d60:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000d64:    f1090901    ....    ADD      r9,r9,#1
        0x00000d68:    4632        2F      MOV      r2,r6
        0x00000d6a:    4620         F      MOV      r0,r4
        0x00000d6c:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000d6e:    f000fa80    ....    BL       padbuffer ; 0x1272
        0x00000d72:    4606        .F      MOV      r6,r0
        0x00000d74:    b10c        ..      CBZ      r4,0xd7a ; am_util_stdio_vsprintf + 718
        0x00000d76:    4630        0F      MOV      r0,r6
        0x00000d78:    e000        ..      B        0xd7c ; am_util_stdio_vsprintf + 720
        0x00000d7a:    2000        .       MOVS     r0,#0
        0x00000d7c:    4404        .D      ADD      r4,r4,r0
        0x00000d7e:    44b1        .D      ADD      r9,r9,r6
        0x00000d80:    2600        .&      MOVS     r6,#0
        0x00000d82:    9801        ..      LDR      r0,[sp,#4]
        0x00000d84:    b188        ..      CBZ      r0,0xdaa ; am_util_stdio_vsprintf + 766
        0x00000d86:    9804        ..      LDR      r0,[sp,#0x10]
        0x00000d88:    2820         (      CMP      r0,#0x20
        0x00000d8a:    d10e        ..      BNE      0xdaa ; am_util_stdio_vsprintf + 766
        0x00000d8c:    b114        ..      CBZ      r4,0xd94 ; am_util_stdio_vsprintf + 744
        0x00000d8e:    202d        -       MOVS     r0,#0x2d
        0x00000d90:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000d94:    f1090901    ....    ADD      r9,r9,#1
        0x00000d98:    e007        ..      B        0xdaa ; am_util_stdio_vsprintf + 766
        0x00000d9a:    9801        ..      LDR      r0,[sp,#4]
        0x00000d9c:    b128        (.      CBZ      r0,0xdaa ; am_util_stdio_vsprintf + 766
        0x00000d9e:    b114        ..      CBZ      r4,0xda6 ; am_util_stdio_vsprintf + 762
        0x00000da0:    202d        -       MOVS     r0,#0x2d
        0x00000da2:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000da6:    f1090901    ....    ADD      r9,r9,#1
        0x00000daa:    4622        "F      MOV      r2,r4
        0x00000dac:    4638        8F      MOV      r0,r7
        0x00000dae:    4641        AF      MOV      r1,r8
        0x00000db0:    f000fb33    ..3.    BL       uint64_to_str ; 0x141a
        0x00000db4:    4682        .F      MOV      r10,r0
        0x00000db6:    b104        ..      CBZ      r4,0xdba ; am_util_stdio_vsprintf + 782
        0x00000db8:    4454        TD      ADD      r4,r4,r10
        0x00000dba:    44d1        .D      ADD      r9,r9,r10
        0x00000dbc:    e039        9.      B        0xe32 ; am_util_stdio_vsprintf + 902
        0x00000dbe:    bf00        ..      NOP      
        0x00000dc0:    b37c        |.      CBZ      r4,0xe22 ; am_util_stdio_vsprintf + 886
        0x00000dc2:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000dc4:    1dc0        ..      ADDS     r0,r0,#7
        0x00000dc6:    f0200007     ...    BIC      r0,r0,#7
        0x00000dca:    900e        ..      STR      r0,[sp,#0x38]
        0x00000dcc:    ecb01b02    ....    VLDM     r0!,{d1}
        0x00000dd0:    eeb00a41    ..A.    VMOV.F32 s0,s2
        0x00000dd4:    eef00a61    ..a.    VMOV.F32 s1,s3
        0x00000dd8:    900e        ..      STR      r0,[sp,#0x38]
        0x00000dda:    ec510b10    Q...    VMOV     r0,r1,d0
        0x00000dde:    f000fb55    ..U.    BL       __aeabi_d2f ; 0x148c
        0x00000de2:    ee080a10    ....    VMOV     s16,r0
        0x00000de6:    2014        .       MOVS     r0,#0x14
        0x00000de8:    6020         `      STR      r0,[r4,#0]
        0x00000dea:    4620         F      MOV      r0,r4
        0x00000dec:    eeb00a48    ..H.    VMOV.F32 s0,s16
        0x00000df0:    9906        ..      LDR      r1,[sp,#0x18]
        0x00000df2:    f000f8bd    ....    BL       ftoa ; 0xf70
        0x00000df6:    4682        .F      MOV      r10,r0
        0x00000df8:    f1ba0f00    ....    CMP      r10,#0
        0x00000dfc:    da0e        ..      BGE      0xe1c ; am_util_stdio_vsprintf + 880
        0x00000dfe:    f10a0101    ....    ADD      r1,r10,#1
        0x00000e02:    b909        ..      CBNZ     r1,0xe08 ; am_util_stdio_vsprintf + 860
        0x00000e04:    4813        .H      LDR      r0,[pc,#76] ; [0xe54] = 0x302e30
        0x00000e06:    e005        ..      B        0xe14 ; am_util_stdio_vsprintf + 872
        0x00000e08:    f10a0102    ....    ADD      r1,r10,#2
        0x00000e0c:    b909        ..      CBNZ     r1,0xe12 ; am_util_stdio_vsprintf + 870
        0x00000e0e:    4812        .H      LDR      r0,[pc,#72] ; [0xe58] = 0x232e23
        0x00000e10:    e000        ..      B        0xe14 ; am_util_stdio_vsprintf + 872
        0x00000e12:    4812        .H      LDR      r0,[pc,#72] ; [0xe5c] = 0x3f2e3f
        0x00000e14:    6020         `      STR      r0,[r4,#0]
        0x00000e16:    f04f0a03    O...    MOV      r10,#3
        0x00000e1a:    bf00        ..      NOP      
        0x00000e1c:    44d1        .D      ADD      r9,r9,r10
        0x00000e1e:    4454        TD      ADD      r4,r4,r10
        0x00000e20:    bf00        ..      NOP      
        0x00000e22:    e006        ..      B        0xe32 ; am_util_stdio_vsprintf + 902
        0x00000e24:    b114        ..      CBZ      r4,0xe2c ; am_util_stdio_vsprintf + 896
        0x00000e26:    7828        (x      LDRB     r0,[r5,#0]
        0x00000e28:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000e2c:    f1090901    ....    ADD      r9,r9,#1
        0x00000e30:    bf00        ..      NOP      
        0x00000e32:    bf00        ..      NOP      
        0x00000e34:    1c6d        m.      ADDS     r5,r5,#1
        0x00000e36:    bf00        ..      NOP      
        0x00000e38:    7828        (x      LDRB     r0,[r5,#0]
        0x00000e3a:    2800        .(      CMP      r0,#0
        0x00000e3c:    f47fae42    ..B.    BNE      0xac4 ; am_util_stdio_vsprintf + 24
        0x00000e40:    b104        ..      CBZ      r4,0xe44 ; am_util_stdio_vsprintf + 920
        0x00000e42:    7020         p      STRB     r0,[r4,#0]
        0x00000e44:    4648        HF      MOV      r0,r9
        0x00000e46:    b00a        ..      ADD      sp,sp,#0x28
        0x00000e48:    ecbd8b02    ....    VPOP     {d8}
        0x00000e4c:    e8bd8ffe    ....    POP      {r1-r11,pc}
    $d
        0x00000e50:    10000018    ....    DCD    268435480
        0x00000e54:    00302e30    0.0.    DCD    3157552
        0x00000e58:    00232e23    #.#.    DCD    2305571
        0x00000e5c:    003f2e3f    ?.?.    DCD    4140607
    $t
    i.decstr_to_int
    decstr_to_int
        0x00000e60:    b530        0.      PUSH     {r4,r5,lr}
        0x00000e62:    4602        .F      MOV      r2,r0
        0x00000e64:    2500        .%      MOVS     r5,#0
        0x00000e66:    2300        .#      MOVS     r3,#0
        0x00000e68:    2400        .$      MOVS     r4,#0
        0x00000e6a:    7810        .x      LDRB     r0,[r2,#0]
        0x00000e6c:    282d        -(      CMP      r0,#0x2d
        0x00000e6e:    d102        ..      BNE      0xe76 ; decstr_to_int + 22
        0x00000e70:    2501        .%      MOVS     r5,#1
        0x00000e72:    1c52        R.      ADDS     r2,r2,#1
        0x00000e74:    1c64        d.      ADDS     r4,r4,#1
        0x00000e76:    e007        ..      B        0xe88 ; decstr_to_int + 40
        0x00000e78:    1c64        d.      ADDS     r4,r4,#1
        0x00000e7a:    eb030083    ....    ADD      r0,r3,r3,LSL #2
        0x00000e7e:    0043        C.      LSLS     r3,r0,#1
        0x00000e80:    7810        .x      LDRB     r0,[r2,#0]
        0x00000e82:    3830        08      SUBS     r0,r0,#0x30
        0x00000e84:    4403        .D      ADD      r3,r3,r0
        0x00000e86:    1c52        R.      ADDS     r2,r2,#1
        0x00000e88:    7810        .x      LDRB     r0,[r2,#0]
        0x00000e8a:    2830        0(      CMP      r0,#0x30
        0x00000e8c:    db02        ..      BLT      0xe94 ; decstr_to_int + 52
        0x00000e8e:    7810        .x      LDRB     r0,[r2,#0]
        0x00000e90:    2839        9(      CMP      r0,#0x39
        0x00000e92:    ddf1        ..      BLE      0xe78 ; decstr_to_int + 24
        0x00000e94:    b101        ..      CBZ      r1,0xe98 ; decstr_to_int + 56
        0x00000e96:    600c        .`      STR      r4,[r1,#0]
        0x00000e98:    b10d        ..      CBZ      r5,0xe9e ; decstr_to_int + 62
        0x00000e9a:    4258        XB      RSBS     r0,r3,#0
        0x00000e9c:    bd30        0.      POP      {r4,r5,pc}
        0x00000e9e:    4618        .F      MOV      r0,r3
        0x00000ea0:    e7fc        ..      B        0xe9c ; decstr_to_int + 60
    i.divu64_10
    divu64_10
        0x00000ea2:    e92d4ff0    -..O    PUSH     {r4-r11,lr}
        0x00000ea6:    4604        .F      MOV      r4,r0
        0x00000ea8:    460d        .F      MOV      r5,r1
        0x00000eaa:    2000        .       MOVS     r0,#0
        0x00000eac:    ea850100    ....    EOR      r1,r5,r0
        0x00000eb0:    4040        @@      EORS     r0,r0,r0
        0x00000eb2:    4301        .C      ORRS     r1,r1,r0
        0x00000eb4:    d044        D.      BEQ      0xf40 ; divu64_10 + 158
        0x00000eb6:    ea5f0a55    _.U.    LSRS     r10,r5,#1
        0x00000eba:    ea4f0134    O.4.    RRX      r1,r4
        0x00000ebe:    ea4f0b94    O...    LSR      r11,r4,#2
        0x00000ec2:    ea4b7085    K..p    ORR      r0,r11,r5,LSL #30
        0x00000ec6:    180a        ..      ADDS     r2,r1,r0
        0x00000ec8:    eb4a0395    J...    ADC      r3,r10,r5,LSR #2
        0x00000ecc:    ea4f1012    O...    LSR      r0,r2,#4
        0x00000ed0:    ea407a03    @..z    ORR      r10,r0,r3,LSL #28
        0x00000ed4:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000ed8:    eb431313    C...    ADC      r3,r3,r3,LSR #4
        0x00000edc:    ea4f2012    O..     LSR      r0,r2,#8
        0x00000ee0:    ea406a03    @..j    ORR      r10,r0,r3,LSL #24
        0x00000ee4:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000ee8:    eb432313    C..#    ADC      r3,r3,r3,LSR #8
        0x00000eec:    ea4f4012    O..@    LSR      r0,r2,#16
        0x00000ef0:    ea404a03    @..J    ORR      r10,r0,r3,LSL #16
        0x00000ef4:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000ef8:    eb434313    C..C    ADC      r3,r3,r3,LSR #16
        0x00000efc:    189a        ..      ADDS     r2,r3,r2
        0x00000efe:    f1430300    C...    ADC      r3,r3,#0
        0x00000f02:    08d0        ..      LSRS     r0,r2,#3
        0x00000f04:    ea407243    @.Cr    ORR      r2,r0,r3,LSL #29
        0x00000f08:    08db        ..      LSRS     r3,r3,#3
        0x00000f0a:    210a        .!      MOVS     r1,#0xa
        0x00000f0c:    f04f0a00    O...    MOV      r10,#0
        0x00000f10:    fba20b01    ....    UMULL    r0,r11,r2,r1
        0x00000f14:    fb03b101    ....    MLA      r1,r3,r1,r11
        0x00000f18:    fb02110a    ....    MLA      r1,r2,r10,r1
        0x00000f1c:    1a26        &.      SUBS     r6,r4,r0
        0x00000f1e:    eb650701    e...    SBC      r7,r5,r1
        0x00000f22:    2106        .!      MOVS     r1,#6
        0x00000f24:    eb160a01    ....    ADDS     r10,r6,r1
        0x00000f28:    f1470100    G...    ADC      r1,r7,#0
        0x00000f2c:    ea4f101a    O...    LSR      r0,r10,#4
        0x00000f30:    ea407a01    @..z    ORR      r10,r0,r1,LSL #28
        0x00000f34:    eb1a0002    ....    ADDS     r0,r10,r2
        0x00000f38:    eb431111    C...    ADC      r1,r3,r1,LSR #4
        0x00000f3c:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000f40:    46a0        .F      MOV      r8,r4
        0x00000f42:    ea4f0058    O.X.    LSR      r0,r8,#1
        0x00000f46:    eb000c98    ....    ADD      r12,r0,r8,LSR #2
        0x00000f4a:    eb0c1c1c    ....    ADD      r12,r12,r12,LSR #4
        0x00000f4e:    eb0c2c1c    ...,    ADD      r12,r12,r12,LSR #8
        0x00000f52:    eb0c4c1c    ...L    ADD      r12,r12,r12,LSR #16
        0x00000f56:    ea4f0cdc    O...    LSR      r12,r12,#3
        0x00000f5a:    eb0c008c    ....    ADD      r0,r12,r12,LSL #2
        0x00000f5e:    eba80940    ..@.    SUB      r9,r8,r0,LSL #1
        0x00000f62:    f1090006    ....    ADD      r0,r9,#6
        0x00000f66:    eb0c1010    ....    ADD      r0,r12,r0,LSR #4
        0x00000f6a:    2100        .!      MOVS     r1,#0
        0x00000f6c:    e7e6        ..      B        0xf3c ; divu64_10 + 154
        0x00000f6e:    0000        ..      MOVS     r0,r0
    i.ftoa
    ftoa
        0x00000f70:    e92d4ff3    -..O    PUSH     {r0,r1,r4-r11,lr}
        0x00000f74:    ed2d0b02    -...    VPUSH    {d0}
        0x00000f78:    ed2d8b02    -...    VPUSH    {d8}
        0x00000f7c:    b081        ..      SUB      sp,sp,#4
        0x00000f7e:    eeb08a40    ..@.    VMOV.F32 s16,s0
        0x00000f82:    4604        .F      MOV      r4,r0
        0x00000f84:    f8d4b000    ....    LDR      r11,[r4,#0]
        0x00000f88:    f1bb0f04    ....    CMP      r11,#4
        0x00000f8c:    da07        ..      BGE      0xf9e ; ftoa + 46
        0x00000f8e:    f06f0002    o...    MVN      r0,#2
        0x00000f92:    b001        ..      ADD      sp,sp,#4
        0x00000f94:    ecbd8b02    ....    VPOP     {d8}
        0x00000f98:    b004        ..      ADD      sp,sp,#0x10
        0x00000f9a:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000f9e:    eeb58ac0    ....    VCMPE.F32 s16,#0.0
        0x00000fa2:    eef1fa10    ....    VMRS     APSR_nzcv,FPSCR
        0x00000fa6:    d103        ..      BNE      0xfb0 ; ftoa + 64
        0x00000fa8:    484e        NH      LDR      r0,[pc,#312] ; [0x10e4] = 0x302e30
        0x00000faa:    6020         `      STR      r0,[r4,#0]
        0x00000fac:    2003        .       MOVS     r0,#3
        0x00000fae:    e7f0        ..      B        0xf92 ; ftoa + 34
        0x00000fb0:    46a2        .F      MOV      r10,r4
        0x00000fb2:    ed8d8a00    ....    VSTR     s16,[sp,#0]
        0x00000fb6:    9800        ..      LDR      r0,[sp,#0]
        0x00000fb8:    f3c050c7    ...P    UBFX     r0,r0,#23,#8
        0x00000fbc:    f1a0057f    ....    SUB      r5,r0,#0x7f
        0x00000fc0:    9800        ..      LDR      r0,[sp,#0]
        0x00000fc2:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x00000fc6:    f4400900    @...    ORR      r9,r0,#0x800000
        0x00000fca:    f04f0800    O...    MOV      r8,#0
        0x00000fce:    2700        .'      MOVS     r7,#0
        0x00000fd0:    2d1f        .-      CMP      r5,#0x1f
        0x00000fd2:    db01        ..      BLT      0xfd8 ; ftoa + 104
        0x00000fd4:    1eb8        ..      SUBS     r0,r7,#2
        0x00000fd6:    e7dc        ..      B        0xf92 ; ftoa + 34
        0x00000fd8:    f1150f17    ....    CMN      r5,#0x17
        0x00000fdc:    da02        ..      BGE      0xfe4 ; ftoa + 116
        0x00000fde:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x00000fe2:    e7d6        ..      B        0xf92 ; ftoa + 34
        0x00000fe4:    2d17        .-      CMP      r5,#0x17
        0x00000fe6:    db04        ..      BLT      0xff2 ; ftoa + 130
        0x00000fe8:    f1a50017    ....    SUB      r0,r5,#0x17
        0x00000fec:    fa09f700    ....    LSL      r7,r9,r0
        0x00000ff0:    e011        ..      B        0x1016 ; ftoa + 166
        0x00000ff2:    2d00        .-      CMP      r5,#0
        0x00000ff4:    db09        ..      BLT      0x100a ; ftoa + 154
        0x00000ff6:    f1c50017    ....    RSB      r0,r5,#0x17
        0x00000ffa:    fa49f700    I...    ASR      r7,r9,r0
        0x00000ffe:    1c68        h.      ADDS     r0,r5,#1
        0x00001000:    fa09f000    ....    LSL      r0,r9,r0
        0x00001004:    f020487f     ..H    BIC      r8,r0,#0xff000000
        0x00001008:    e005        ..      B        0x1016 ; ftoa + 166
        0x0000100a:    f029407f    )..@    BIC      r0,r9,#0xff000000
        0x0000100e:    1c69        i.      ADDS     r1,r5,#1
        0x00001010:    4249        IB      RSBS     r1,r1,#0
        0x00001012:    fa40f801    @...    ASR      r8,r0,r1
        0x00001016:    9800        ..      LDR      r0,[sp,#0]
        0x00001018:    2800        .(      CMP      r0,#0
        0x0000101a:    da02        ..      BGE      0x1022 ; ftoa + 178
        0x0000101c:    202d        -       MOVS     r0,#0x2d
        0x0000101e:    f8040b01    ....    STRB     r0,[r4],#1
        0x00001022:    b91f        ..      CBNZ     r7,0x102c ; ftoa + 188
        0x00001024:    2030        0       MOVS     r0,#0x30
        0x00001026:    f8040b01    ....    STRB     r0,[r4],#1
        0x0000102a:    e014        ..      B        0x1056 ; ftoa + 230
        0x0000102c:    2f00        ./      CMP      r7,#0
        0x0000102e:    dd05        ..      BLE      0x103c ; ftoa + 204
        0x00001030:    4622        "F      MOV      r2,r4
        0x00001032:    4638        8F      MOV      r0,r7
        0x00001034:    17f9        ..      ASRS     r1,r7,#31
        0x00001036:    f000f9f0    ....    BL       uint64_to_str ; 0x141a
        0x0000103a:    e007        ..      B        0x104c ; ftoa + 220
        0x0000103c:    202d        -       MOVS     r0,#0x2d
        0x0000103e:    f8040b01    ....    STRB     r0,[r4],#1
        0x00001042:    4622        "F      MOV      r2,r4
        0x00001044:    4278        xB      RSBS     r0,r7,#0
        0x00001046:    17c1        ..      ASRS     r1,r0,#31
        0x00001048:    f000f9e7    ....    BL       uint64_to_str ; 0x141a
        0x0000104c:    e000        ..      B        0x1050 ; ftoa + 224
        0x0000104e:    1c64        d.      ADDS     r4,r4,#1
        0x00001050:    7820         x      LDRB     r0,[r4,#0]
        0x00001052:    2800        .(      CMP      r0,#0
        0x00001054:    d1fb        ..      BNE      0x104e ; ftoa + 222
        0x00001056:    202e        .       MOVS     r0,#0x2e
        0x00001058:    f8040b01    ....    STRB     r0,[r4],#1
        0x0000105c:    f1b80f00    ....    CMP      r8,#0
        0x00001060:    d103        ..      BNE      0x106a ; ftoa + 250
        0x00001062:    2030        0       MOVS     r0,#0x30
        0x00001064:    f8040b01    ....    STRB     r0,[r4],#1
        0x00001068:    e036        6.      B        0x10d8 ; ftoa + 360
        0x0000106a:    eba4020a    ....    SUB      r2,r4,r10
        0x0000106e:    ebab0202    ....    SUB      r2,r11,r2
        0x00001072:    1e51        Q.      SUBS     r1,r2,#1
        0x00001074:    9a06        ..      LDR      r2,[sp,#0x18]
        0x00001076:    4291        .B      CMP      r1,r2
        0x00001078:    dd01        ..      BLE      0x107e ; ftoa + 270
        0x0000107a:    9a06        ..      LDR      r2,[sp,#0x18]
        0x0000107c:    e000        ..      B        0x1080 ; ftoa + 272
        0x0000107e:    460a        .F      MOV      r2,r1
        0x00001080:    4611        .F      MOV      r1,r2
        0x00001082:    2000        .       MOVS     r0,#0
        0x00001084:    e00b        ..      B        0x109e ; ftoa + 302
        0x00001086:    eb080288    ....    ADD      r2,r8,r8,LSL #2
        0x0000108a:    ea4f0842    O.B.    LSL      r8,r2,#1
        0x0000108e:    2230        0"      MOVS     r2,#0x30
        0x00001090:    eb026228    ..(b    ADD      r2,r2,r8,ASR #24
        0x00001094:    f8042b01    ...+    STRB     r2,[r4],#1
        0x00001098:    f028487f    (..H    BIC      r8,r8,#0xff000000
        0x0000109c:    1c40        @.      ADDS     r0,r0,#1
        0x0000109e:    4288        .B      CMP      r0,r1
        0x000010a0:    dbf1        ..      BLT      0x1086 ; ftoa + 278
        0x000010a2:    eb080288    ....    ADD      r2,r8,r8,LSL #2
        0x000010a6:    0052        R.      LSLS     r2,r2,#1
        0x000010a8:    2305        .#      MOVS     r3,#5
        0x000010aa:    ebb36f22    .."o    CMP      r3,r2,ASR #24
        0x000010ae:    dc12        ..      BGT      0x10d6 ; ftoa + 358
        0x000010b0:    1e66        f.      SUBS     r6,r4,#1
        0x000010b2:    e00d        ..      B        0x10d0 ; ftoa + 352
        0x000010b4:    7832        2x      LDRB     r2,[r6,#0]
        0x000010b6:    2a2e        .*      CMP      r2,#0x2e
        0x000010b8:    d009        ..      BEQ      0x10ce ; ftoa + 350
        0x000010ba:    7832        2x      LDRB     r2,[r6,#0]
        0x000010bc:    2a39        9*      CMP      r2,#0x39
        0x000010be:    d102        ..      BNE      0x10c6 ; ftoa + 342
        0x000010c0:    2230        0"      MOVS     r2,#0x30
        0x000010c2:    7032        2p      STRB     r2,[r6,#0]
        0x000010c4:    e003        ..      B        0x10ce ; ftoa + 350
        0x000010c6:    7832        2x      LDRB     r2,[r6,#0]
        0x000010c8:    1c52        R.      ADDS     r2,r2,#1
        0x000010ca:    7032        2p      STRB     r2,[r6,#0]
        0x000010cc:    e002        ..      B        0x10d4 ; ftoa + 356
        0x000010ce:    1e76        v.      SUBS     r6,r6,#1
        0x000010d0:    4556        VE      CMP      r6,r10
        0x000010d2:    d2ef        ..      BCS      0x10b4 ; ftoa + 324
        0x000010d4:    bf00        ..      NOP      
        0x000010d6:    bf00        ..      NOP      
        0x000010d8:    2000        .       MOVS     r0,#0
        0x000010da:    7020         p      STRB     r0,[r4,#0]
        0x000010dc:    eba4000a    ....    SUB      r0,r4,r10
        0x000010e0:    e757        W.      B        0xf92 ; ftoa + 34
    $d
        0x000010e2:    0000        ..      DCW    0
        0x000010e4:    00302e30    0.0.    DCD    3157552
    $t
    i.main
    main
        0x000010e8:    2000        .       MOVS     r0,#0
        0x000010ea:    f7fffad3    ....    BL       am_hal_clkgen_sysclk_select ; 0x694
        0x000010ee:    f7fff8ac    ....    BL       __semihosting_library_function ; 0x24a
        0x000010f2:    2001        .       MOVS     r0,#1
        0x000010f4:    f7fffa88    ....    BL       am_hal_clkgen_osc_start ; 0x608
        0x000010f8:    2000        .       MOVS     r0,#0
        0x000010fa:    f7fffb9c    ....    BL       am_hal_rtc_osc_select ; 0x836
        0x000010fe:    f7fffb93    ....    BL       am_hal_rtc_osc_enable ; 0x828
        0x00001102:    482e        .H      LDR      r0,[pc,#184] ; [0x11bc] = 0x26d
        0x00001104:    f7fffcbc    ....    BL       am_util_stdio_printf_init ; 0xa80
        0x00001108:    2000        .       MOVS     r0,#0
        0x0000110a:    f000f903    ....    BL       uart_init ; 0x1314
        0x0000110e:    f7fffcbd    ....    BL       am_util_stdio_terminal_clear ; 0xa8c
        0x00001112:    a02b        +.      ADR      r0,{pc}+0xae ; 0x11c0
        0x00001114:    f7fffc9c    ....    BL       am_util_stdio_printf ; 0xa50
        0x00001118:    2000        .       MOVS     r0,#0
        0x0000111a:    f000f8c7    ....    BL       uart_disable ; 0x12ac
        0x0000111e:    21fe        .!      MOVS     r1,#0xfe
        0x00001120:    4608        .F      MOV      r0,r1
        0x00001122:    f7fffb4b    ..K.    BL       am_hal_mcuctrl_sram_power_set ; 0x7bc
        0x00001126:    2105        .!      MOVS     r1,#5
        0x00001128:    482b        +H      LDR      r0,[pc,#172] ; [0x11d8] = 0x10000020
        0x0000112a:    f7fff8af    ....    BL       am_devices_led_array_init ; 0x28c
        0x0000112e:    bf00        ..      NOP      
        0x00001130:    2073        s       MOVS     r0,#0x73
        0x00001132:    492a        *I      LDR      r1,[pc,#168] ; [0x11dc] = 0x40010000
        0x00001134:    6608        .f      STR      r0,[r1,#0x60]
        0x00001136:    4608        .F      MOV      r0,r1
        0x00001138:    6c80        .l      LDR      r0,[r0,#0x48]
        0x0000113a:    f0200070     .p.    BIC      r0,r0,#0x70
        0x0000113e:    6488        .d      STR      r0,[r1,#0x48]
        0x00001140:    4608        .F      MOV      r0,r1
        0x00001142:    6900        .i      LDR      r0,[r0,#0x10]
        0x00001144:    f420407f     ..@    BIC      r0,r0,#0xff00
        0x00001148:    f44050d0    @..P    ORR      r0,r0,#0x1a00
        0x0000114c:    6108        .a      STR      r0,[r1,#0x10]
        0x0000114e:    2000        .       MOVS     r0,#0
        0x00001150:    6608        .f      STR      r0,[r1,#0x60]
        0x00001152:    bf00        ..      NOP      
        0x00001154:    2100        .!      MOVS     r1,#0
        0x00001156:    4820         H      LDR      r0,[pc,#128] ; [0x11d8] = 0x10000020
        0x00001158:    f7fff99e    ....    BL       am_devices_led_off ; 0x498
        0x0000115c:    2101        .!      MOVS     r1,#1
        0x0000115e:    481e        .H      LDR      r0,[pc,#120] ; [0x11d8] = 0x10000020
        0x00001160:    f7fff99a    ....    BL       am_devices_led_off ; 0x498
        0x00001164:    bf00        ..      NOP      
        0x00001166:    2073        s       MOVS     r0,#0x73
        0x00001168:    491c        .I      LDR      r1,[pc,#112] ; [0x11dc] = 0x40010000
        0x0000116a:    6608        .f      STR      r0,[r1,#0x60]
        0x0000116c:    4608        .F      MOV      r0,r1
        0x0000116e:    6c80        .l      LDR      r0,[r0,#0x48]
        0x00001170:    f0200080     ...    BIC      r0,r0,#0x80
        0x00001174:    6488        .d      STR      r0,[r1,#0x48]
        0x00001176:    2000        .       MOVS     r0,#0
        0x00001178:    6608        .f      STR      r0,[r1,#0x60]
        0x0000117a:    bf00        ..      NOP      
        0x0000117c:    f44f3000    O..0    MOV      r0,#0x20000
        0x00001180:    2100        .!      MOVS     r1,#0
        0x00001182:    f7fffa8f    ....    BL       am_hal_gpio_int_clear ; 0x6a4
        0x00001186:    f44f3000    O..0    MOV      r0,#0x20000
        0x0000118a:    2100        .!      MOVS     r1,#0
        0x0000118c:    f7fffa92    ....    BL       am_hal_gpio_int_enable ; 0x6b4
        0x00001190:    2007        .       MOVS     r0,#7
        0x00001192:    f7fffb1b    ....    BL       am_hal_rtc_alarm_interval_set ; 0x7cc
        0x00001196:    2008        .       MOVS     r0,#8
        0x00001198:    f7fffb32    ..2.    BL       am_hal_rtc_int_clear ; 0x800
        0x0000119c:    2008        .       MOVS     r0,#8
        0x0000119e:    f7fffb34    ..4.    BL       am_hal_rtc_int_enable ; 0x80a
        0x000011a2:    2019        .       MOVS     r0,#0x19
        0x000011a4:    f7fffaac    ....    BL       am_hal_interrupt_enable ; 0x700
        0x000011a8:    2012        .       MOVS     r0,#0x12
        0x000011aa:    f7fffaa9    ....    BL       am_hal_interrupt_enable ; 0x700
        0x000011ae:    f7feffd1    ....    BL       am_hal_interrupt_master_enable ; 0x154
        0x000011b2:    e002        ..      B        0x11ba ; main + 210
        0x000011b4:    2001        .       MOVS     r0,#1
        0x000011b6:    f7fffb49    ..I.    BL       am_hal_sysctrl_sleep ; 0x84c
        0x000011ba:    e7fb        ..      B        0x11b4 ; main + 204
    $d
        0x000011bc:    0000026d    m...    DCD    621
        0x000011c0:    70656544    Deep    DCD    1885693252
        0x000011c4:    65656c73    slee    DCD    1701145715
        0x000011c8:    61572070    p Wa    DCD    1633099888
        0x000011cc:    4520656b    ke E    DCD    1159751019
        0x000011d0:    706d6178    xamp    DCD    1886216568
        0x000011d4:    000a656c    le..    DCD    681324
        0x000011d8:    10000020     ...    DCD    268435488
        0x000011dc:    40010000    ...@    DCD    1073807360
    $t
    i.ndigits_in_hex
    ndigits_in_hex
        0x000011e0:    b530        0.      PUSH     {r4,r5,lr}
        0x000011e2:    4602        .F      MOV      r2,r0
        0x000011e4:    460b        .F      MOV      r3,r1
        0x000011e6:    2400        .$      MOVS     r4,#0
        0x000011e8:    ea820104    ....    EOR      r1,r2,r4
        0x000011ec:    405c        \@      EORS     r4,r4,r3
        0x000011ee:    4321        !C      ORRS     r1,r1,r4
        0x000011f0:    d101        ..      BNE      0x11f6 ; ndigits_in_hex + 22
        0x000011f2:    2101        .!      MOVS     r1,#1
        0x000011f4:    e000        ..      B        0x11f8 ; ndigits_in_hex + 24
        0x000011f6:    2100        .!      MOVS     r1,#0
        0x000011f8:    4608        .F      MOV      r0,r1
        0x000011fa:    e004        ..      B        0x1206 ; ndigits_in_hex + 38
        0x000011fc:    0911        ..      LSRS     r1,r2,#4
        0x000011fe:    ea417203    A..r    ORR      r2,r1,r3,LSL #28
        0x00001202:    091b        ..      LSRS     r3,r3,#4
        0x00001204:    1c40        @.      ADDS     r0,r0,#1
        0x00001206:    2400        .$      MOVS     r4,#0
        0x00001208:    ea820104    ....    EOR      r1,r2,r4
        0x0000120c:    405c        \@      EORS     r4,r4,r3
        0x0000120e:    4321        !C      ORRS     r1,r1,r4
        0x00001210:    d1f4        ..      BNE      0x11fc ; ndigits_in_hex + 28
        0x00001212:    bd30        0.      POP      {r4,r5,pc}
    i.ndigits_in_i64
    ndigits_in_i64
        0x00001214:    b570        p.      PUSH     {r4-r6,lr}
        0x00001216:    4604        .F      MOV      r4,r0
        0x00001218:    460d        .F      MOV      r5,r1
        0x0000121a:    2100        .!      MOVS     r1,#0
        0x0000121c:    4608        .F      MOV      r0,r1
        0x0000121e:    1a61        a.      SUBS     r1,r4,r1
        0x00001220:    eb750000    u...    SBCS     r0,r5,r0
        0x00001224:    da03        ..      BGE      0x122e ; ndigits_in_i64 + 26
        0x00001226:    2200        ."      MOVS     r2,#0
        0x00001228:    4264        dB      RSBS     r4,r4,#0
        0x0000122a:    eb620505    b...    SBC      r5,r2,r5
        0x0000122e:    4620         F      MOV      r0,r4
        0x00001230:    4629        )F      MOV      r1,r5
        0x00001232:    f000f801    ....    BL       ndigits_in_u64 ; 0x1238
        0x00001236:    bd70        p.      POP      {r4-r6,pc}
    i.ndigits_in_u64
    ndigits_in_u64
        0x00001238:    b570        p.      PUSH     {r4-r6,lr}
        0x0000123a:    4604        .F      MOV      r4,r0
        0x0000123c:    460d        .F      MOV      r5,r1
        0x0000123e:    2100        .!      MOVS     r1,#0
        0x00001240:    ea840001    ....    EOR      r0,r4,r1
        0x00001244:    4069        i@      EORS     r1,r1,r5
        0x00001246:    4308        .C      ORRS     r0,r0,r1
        0x00001248:    d101        ..      BNE      0x124e ; ndigits_in_u64 + 22
        0x0000124a:    2001        .       MOVS     r0,#1
        0x0000124c:    e000        ..      B        0x1250 ; ndigits_in_u64 + 24
        0x0000124e:    2000        .       MOVS     r0,#0
        0x00001250:    4606        .F      MOV      r6,r0
        0x00001252:    e006        ..      B        0x1262 ; ndigits_in_u64 + 42
        0x00001254:    4620         F      MOV      r0,r4
        0x00001256:    4629        )F      MOV      r1,r5
        0x00001258:    f7fffe23    ..#.    BL       divu64_10 ; 0xea2
        0x0000125c:    4604        .F      MOV      r4,r0
        0x0000125e:    460d        .F      MOV      r5,r1
        0x00001260:    1c76        v.      ADDS     r6,r6,#1
        0x00001262:    2100        .!      MOVS     r1,#0
        0x00001264:    ea840001    ....    EOR      r0,r4,r1
        0x00001268:    4069        i@      EORS     r1,r1,r5
        0x0000126a:    4308        .C      ORRS     r0,r0,r1
        0x0000126c:    d1f2        ..      BNE      0x1254 ; ndigits_in_u64 + 28
        0x0000126e:    4630        0F      MOV      r0,r6
        0x00001270:    bd70        p.      POP      {r4-r6,pc}
    i.padbuffer
    padbuffer
        0x00001272:    b530        0.      PUSH     {r4,r5,lr}
        0x00001274:    4603        .F      MOV      r3,r0
        0x00001276:    2000        .       MOVS     r0,#0
        0x00001278:    2a00        .*      CMP      r2,#0
        0x0000127a:    dc00        ..      BGT      0x127e ; padbuffer + 12
        0x0000127c:    bd30        0.      POP      {r4,r5,pc}
        0x0000127e:    e003        ..      B        0x1288 ; padbuffer + 22
        0x00001280:    b10b        ..      CBZ      r3,0x1286 ; padbuffer + 20
        0x00001282:    f8031b01    ....    STRB     r1,[r3],#1
        0x00001286:    1c40        @.      ADDS     r0,r0,#1
        0x00001288:    1e14        ..      SUBS     r4,r2,#0
        0x0000128a:    f1a20201    ....    SUB      r2,r2,#1
        0x0000128e:    d1f7        ..      BNE      0x1280 ; padbuffer + 14
        0x00001290:    bf00        ..      NOP      
        0x00001292:    e7f3        ..      B        0x127c ; padbuffer + 10
    i.simple_strlen
    simple_strlen
        0x00001294:    4601        .F      MOV      r1,r0
        0x00001296:    2000        .       MOVS     r0,#0
        0x00001298:    b901        ..      CBNZ     r1,0x129c ; simple_strlen + 8
        0x0000129a:    4770        pG      BX       lr
        0x0000129c:    e000        ..      B        0x12a0 ; simple_strlen + 12
        0x0000129e:    1c40        @.      ADDS     r0,r0,#1
        0x000012a0:    f8113b01    ...;    LDRB     r3,[r1],#1
        0x000012a4:    2b00        .+      CMP      r3,#0
        0x000012a6:    d1fa        ..      BNE      0x129e ; simple_strlen + 10
        0x000012a8:    bf00        ..      NOP      
        0x000012aa:    e7f6        ..      B        0x129a ; simple_strlen + 6
    i.uart_disable
    uart_disable
        0x000012ac:    b510        ..      PUSH     {r4,lr}
        0x000012ae:    4604        .F      MOV      r4,r0
        0x000012b0:    200a        .       MOVS     r0,#0xa
        0x000012b2:    f7fffb61    ..a.    BL       am_util_delay_ms ; 0x978
        0x000012b6:    4620         F      MOV      r0,r4
        0x000012b8:    f7fffb28    ..(.    BL       am_hal_uart_disable ; 0x90c
        0x000012bc:    4620         F      MOV      r0,r4
        0x000012be:    f7fffadb    ....    BL       am_hal_uart_clock_disable ; 0x878
        0x000012c2:    bf00        ..      NOP      
        0x000012c4:    2073        s       MOVS     r0,#0x73
        0x000012c6:    4912        .I      LDR      r1,[pc,#72] ; [0x1310] = 0x40010000
        0x000012c8:    6608        .f      STR      r0,[r1,#0x60]
        0x000012ca:    4608        .F      MOV      r0,r1
        0x000012cc:    6d00        .m      LDR      r0,[r0,#0x50]
        0x000012ce:    f42040e0     ..@    BIC      r0,r0,#0x7000
        0x000012d2:    6508        .e      STR      r0,[r1,#0x50]
        0x000012d4:    4608        .F      MOV      r0,r1
        0x000012d6:    6a00        .j      LDR      r0,[r0,#0x20]
        0x000012d8:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x000012dc:    f04050c0    @..P    ORR      r0,r0,#0x18000000
        0x000012e0:    6208        .b      STR      r0,[r1,#0x20]
        0x000012e2:    2000        .       MOVS     r0,#0
        0x000012e4:    6608        .f      STR      r0,[r1,#0x60]
        0x000012e6:    bf00        ..      NOP      
        0x000012e8:    bf00        ..      NOP      
        0x000012ea:    2073        s       MOVS     r0,#0x73
        0x000012ec:    6608        .f      STR      r0,[r1,#0x60]
        0x000012ee:    4608        .F      MOV      r0,r1
        0x000012f0:    6d00        .m      LDR      r0,[r0,#0x50]
        0x000012f2:    f42020e0     ..     BIC      r0,r0,#0x70000
        0x000012f6:    6508        .e      STR      r0,[r1,#0x50]
        0x000012f8:    4608        .F      MOV      r0,r1
        0x000012fa:    6a40        @j      LDR      r0,[r0,#0x24]
        0x000012fc:    f02000ff     ...    BIC      r0,r0,#0xff
        0x00001300:    f0400018    @...    ORR      r0,r0,#0x18
        0x00001304:    6248        Hb      STR      r0,[r1,#0x24]
        0x00001306:    2000        .       MOVS     r0,#0
        0x00001308:    6608        .f      STR      r0,[r1,#0x60]
        0x0000130a:    bf00        ..      NOP      
        0x0000130c:    bd10        ..      POP      {r4,pc}
    $d
        0x0000130e:    0000        ..      DCW    0
        0x00001310:    40010000    ...@    DCD    1073807360
    $t
    i.uart_init
    uart_init
        0x00001314:    b510        ..      PUSH     {r4,lr}
        0x00001316:    4604        .F      MOV      r4,r0
        0x00001318:    bf00        ..      NOP      
        0x0000131a:    2073        s       MOVS     r0,#0x73
        0x0000131c:    491a        .I      LDR      r1,[pc,#104] ; [0x1388] = 0x40010000
        0x0000131e:    6608        .f      STR      r0,[r1,#0x60]
        0x00001320:    4608        .F      MOV      r0,r1
        0x00001322:    6d00        .m      LDR      r0,[r0,#0x50]
        0x00001324:    f42040e0     ..@    BIC      r0,r0,#0x7000
        0x00001328:    6508        .e      STR      r0,[r1,#0x50]
        0x0000132a:    4608        .F      MOV      r0,r1
        0x0000132c:    6a00        .j      LDR      r0,[r0,#0x20]
        0x0000132e:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x00001332:    f0405080    @..P    ORR      r0,r0,#0x10000000
        0x00001336:    6208        .b      STR      r0,[r1,#0x20]
        0x00001338:    2000        .       MOVS     r0,#0
        0x0000133a:    6608        .f      STR      r0,[r1,#0x60]
        0x0000133c:    bf00        ..      NOP      
        0x0000133e:    bf00        ..      NOP      
        0x00001340:    2073        s       MOVS     r0,#0x73
        0x00001342:    6608        .f      STR      r0,[r1,#0x60]
        0x00001344:    4608        .F      MOV      r0,r1
        0x00001346:    6d00        .m      LDR      r0,[r0,#0x50]
        0x00001348:    f42020e0     ..     BIC      r0,r0,#0x70000
        0x0000134c:    6508        .e      STR      r0,[r1,#0x50]
        0x0000134e:    4608        .F      MOV      r0,r1
        0x00001350:    6a40        @j      LDR      r0,[r0,#0x24]
        0x00001352:    f02000ff     ...    BIC      r0,r0,#0xff
        0x00001356:    f0400012    @...    ORR      r0,r0,#0x12
        0x0000135a:    6248        Hb      STR      r0,[r1,#0x24]
        0x0000135c:    2000        .       MOVS     r0,#0
        0x0000135e:    6608        .f      STR      r0,[r1,#0x60]
        0x00001360:    bf00        ..      NOP      
        0x00001362:    4620         F      MOV      r0,r4
        0x00001364:    f7fffa96    ....    BL       am_hal_uart_clock_enable ; 0x894
        0x00001368:    4620         F      MOV      r0,r4
        0x0000136a:    f7fffacf    ....    BL       am_hal_uart_disable ; 0x90c
        0x0000136e:    4907        .I      LDR      r1,[pc,#28] ; [0x138c] = 0x10000000
        0x00001370:    4620         F      MOV      r0,r4
        0x00001372:    f7fffaa1    ....    BL       am_hal_uart_config ; 0x8b8
        0x00001376:    2112        .!      MOVS     r1,#0x12
        0x00001378:    4620         F      MOV      r0,r4
        0x0000137a:    f7fffadb    ....    BL       am_hal_uart_fifo_config ; 0x934
        0x0000137e:    4620         F      MOV      r0,r4
        0x00001380:    f7ffface    ....    BL       am_hal_uart_enable ; 0x920
        0x00001384:    bd10        ..      POP      {r4,pc}
    $d
        0x00001386:    0000        ..      DCW    0
        0x00001388:    40010000    ...@    DCD    1073807360
        0x0000138c:    10000000    ....    DCD    268435456
    $t
    i.uint64_to_hexstr
    uint64_to_hexstr
        0x00001390:    e92d41f0    -..A    PUSH     {r4-r8,lr}
        0x00001394:    b085        ..      SUB      sp,sp,#0x14
        0x00001396:    4604        .F      MOV      r4,r0
        0x00001398:    460d        .F      MOV      r5,r1
        0x0000139a:    461e        .F      MOV      r6,r3
        0x0000139c:    2100        .!      MOVS     r1,#0
        0x0000139e:    468c        .F      MOV      r12,r1
        0x000013a0:    ea84070c    ....    EOR      r7,r4,r12
        0x000013a4:    ea850c0c    ....    EOR      r12,r5,r12
        0x000013a8:    ea57070c    W...    ORRS     r7,r7,r12
        0x000013ac:    d105        ..      BNE      0x13ba ; uint64_to_hexstr + 42
        0x000013ae:    f04f0830    O.0.    MOV      r8,#0x30
        0x000013b2:    460f        .F      MOV      r7,r1
        0x000013b4:    1c49        I.      ADDS     r1,r1,#1
        0x000013b6:    f80d8007    ....    STRB     r8,[sp,r7]
        0x000013ba:    e016        ..      B        0x13ea ; uint64_to_hexstr + 90
        0x000013bc:    270f        .'      MOVS     r7,#0xf
        0x000013be:    4027        '@      ANDS     r7,r7,r4
        0x000013c0:    b2fb        ..      UXTB     r3,r7
        0x000013c2:    2b09        .+      CMP      r3,#9
        0x000013c4:    dd05        ..      BLE      0x13d2 ; uint64_to_hexstr + 66
        0x000013c6:    b10e        ..      CBZ      r6,0x13cc ; uint64_to_hexstr + 60
        0x000013c8:    2727        ''      MOVS     r7,#0x27
        0x000013ca:    e000        ..      B        0x13ce ; uint64_to_hexstr + 62
        0x000013cc:    2707        .'      MOVS     r7,#7
        0x000013ce:    441f        .D      ADD      r7,r7,r3
        0x000013d0:    b2fb        ..      UXTB     r3,r7
        0x000013d2:    f1030730    ..0.    ADD      r7,r3,#0x30
        0x000013d6:    f00708ff    ....    AND      r8,r7,#0xff
        0x000013da:    460f        .F      MOV      r7,r1
        0x000013dc:    1c49        I.      ADDS     r1,r1,#1
        0x000013de:    f80d8007    ....    STRB     r8,[sp,r7]
        0x000013e2:    0927        '.      LSRS     r7,r4,#4
        0x000013e4:    ea477405    G..t    ORR      r4,r7,r5,LSL #28
        0x000013e8:    092d        -.      LSRS     r5,r5,#4
        0x000013ea:    f04f0c00    O...    MOV      r12,#0
        0x000013ee:    ea84070c    ....    EOR      r7,r4,r12
        0x000013f2:    ea850c0c    ....    EOR      r12,r5,r12
        0x000013f6:    ea57070c    W...    ORRS     r7,r7,r12
        0x000013fa:    d1df        ..      BNE      0x13bc ; uint64_to_hexstr + 44
        0x000013fc:    4608        .F      MOV      r0,r1
        0x000013fe:    b14a        J.      CBZ      r2,0x1414 ; uint64_to_hexstr + 132
        0x00001400:    e003        ..      B        0x140a ; uint64_to_hexstr + 122
        0x00001402:    f81d7001    ...p    LDRB     r7,[sp,r1]
        0x00001406:    f8027b01    ...{    STRB     r7,[r2],#1
        0x0000140a:    1e0f        ..      SUBS     r7,r1,#0
        0x0000140c:    f1a10101    ....    SUB      r1,r1,#1
        0x00001410:    d1f7        ..      BNE      0x1402 ; uint64_to_hexstr + 114
        0x00001412:    7017        .p      STRB     r7,[r2,#0]
        0x00001414:    b005        ..      ADD      sp,sp,#0x14
        0x00001416:    e8bd81f0    ....    POP      {r4-r8,pc}
    i.uint64_to_str
    uint64_to_str
        0x0000141a:    e92d4ff0    -..O    PUSH     {r4-r11,lr}
        0x0000141e:    b087        ..      SUB      sp,sp,#0x1c
        0x00001420:    4607        .F      MOV      r7,r0
        0x00001422:    4688        .F      MOV      r8,r1
        0x00001424:    4616        .F      MOV      r6,r2
        0x00001426:    f04f0900    O...    MOV      r9,#0
        0x0000142a:    46cb        .F      MOV      r11,r9
        0x0000142c:    bf00        ..      NOP      
        0x0000142e:    4638        8F      MOV      r0,r7
        0x00001430:    4641        AF      MOV      r1,r8
        0x00001432:    f7fffd36    ..6.    BL       divu64_10 ; 0xea2
        0x00001436:    4604        .F      MOV      r4,r0
        0x00001438:    460d        .F      MOV      r5,r1
        0x0000143a:    210a        .!      MOVS     r1,#0xa
        0x0000143c:    fba40101    ....    UMULL    r0,r1,r4,r1
        0x00001440:    ebb70a00    ....    SUBS     r10,r7,r0
        0x00001444:    f10a0030    ..0.    ADD      r0,r10,#0x30
        0x00001448:    b2c2        ..      UXTB     r2,r0
        0x0000144a:    4648        HF      MOV      r0,r9
        0x0000144c:    f1090901    ....    ADD      r9,r9,#1
        0x00001450:    f80d2000    ...     STRB     r2,[sp,r0]
        0x00001454:    4627        'F      MOV      r7,r4
        0x00001456:    46a8        .F      MOV      r8,r5
        0x00001458:    f04f0200    O...    MOV      r2,#0
        0x0000145c:    ea870002    ....    EOR      r0,r7,r2
        0x00001460:    ea880102    ....    EOR      r1,r8,r2
        0x00001464:    4308        .C      ORRS     r0,r0,r1
        0x00001466:    d1e2        ..      BNE      0x142e ; uint64_to_str + 20
        0x00001468:    46cb        .F      MOV      r11,r9
        0x0000146a:    b156        V.      CBZ      r6,0x1482 ; uint64_to_str + 104
        0x0000146c:    e003        ..      B        0x1476 ; uint64_to_str + 92
        0x0000146e:    f81d0009    ....    LDRB     r0,[sp,r9]
        0x00001472:    f8060b01    ....    STRB     r0,[r6],#1
        0x00001476:    f1b90000    ....    SUBS     r0,r9,#0
        0x0000147a:    f1a90901    ....    SUB      r9,r9,#1
        0x0000147e:    d1f6        ..      BNE      0x146e ; uint64_to_str + 84
        0x00001480:    7030        0p      STRB     r0,[r6,#0]
        0x00001482:    4658        XF      MOV      r0,r11
        0x00001484:    b007        ..      ADD      sp,sp,#0x1c
        0x00001486:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x0000148a:    0000        ..      MOVS     r0,r0
    x$fpl$d2f
    $v0
    __aeabi_d2f
    _d2f
        0x0000148c:    f0214200    !..B    BIC      r2,r1,#0x80000000
        0x00001490:    f1a25260    ..`R    SUB      r2,r2,#0x38000000
        0x00001494:    f5b21f80    ....    CMP      r2,#0x100000
        0x00001498:    f0014300    ...C    AND      r3,r1,#0x80000000
        0x0000149c:    bf28        (.      IT       CS
        0x0000149e:    f1d26c7f    ...l    RSBSCS   r12,r2,#0xff00000
        0x000014a2:    d90b        ..      BLS      0x14bc ; __aeabi_d2f + 48
        0x000014a4:    ea5f1c00    _...    LSLS     r12,r0,#4
        0x000014a8:    ea4302c2    C...    ORR      r2,r3,r2,LSL #3
        0x000014ac:    eb427050    B.Pp    ADC      r0,r2,r0,LSR #29
        0x000014b0:    bf18        ..      IT       NE
        0x000014b2:    4770        pG      BXNE     lr
        0x000014b4:    bf28        (.      IT       CS
        0x000014b6:    f0200001     ...    BICCS    r0,r0,#1
        0x000014ba:    4770        pG      BX       lr
        0x000014bc:    f5b21f80    ....    CMP      r2,#0x100000
        0x000014c0:    bfbc        ..      ITT      LT
        0x000014c2:    4618        .F      MOVLT    r0,r3
        0x000014c4:    4770        pG      BXLT     lr
        0x000014c6:    ea4f0c41    O.A.    LSL      r12,r1,#1
        0x000014ca:    f51c1f00    ....    CMN      r12,#0x200000
        0x000014ce:    d202        ..      BCS      0x14d6 ; __aeabi_d2f + 74
        0x000014d0:    4608        .F      MOV      r0,r1
        0x000014d2:    f000b85f    .._.    B.W      __fpl_fretinf ; 0x1594
        0x000014d6:    b570        p.      PUSH     {r4-r6,lr}
        0x000014d8:    f000f809    ....    BL       __fpl_dnaninf ; 0x14ee
    $d
        0x000014dc:    89000000    ....    DCD    2298478592
    $t
        0x000014e0:    f7ffbff6    ....    B.W      0x14d0 ; __aeabi_d2f + 68
        0x000014e4:    f04f4000    O..@    MOV      r0,#0x80000000
        0x000014e8:    f5a00080    ....    SUB      r0,r0,#0x400000
        0x000014ec:    4770        pG      BX       lr
    x$fpl$dnaninf
    $v0
    __fpl_dnaninf
        0x000014ee:    f10e0e02    ....    ADD      lr,lr,#2
        0x000014f2:    f02e0e03    ....    BIC      lr,lr,#3
        0x000014f6:    f85e6b04    ^..k    LDR      r6,[lr],#4
        0x000014fa:    4236        6B      TST      r6,r6
        0x000014fc:    d405        ..      BMI      0x150a ; __fpl_dnaninf + 28
        0x000014fe:    2a01        .*      CMP      r2,#1
        0x00001500:    eb430503    C...    ADC      r5,r3,r3
        0x00001504:    f5151f00    ....    CMN      r5,#0x200000
        0x00001508:    d812        ..      BHI      0x1530 ; __fpl_dnaninf + 66
        0x0000150a:    2801        .(      CMP      r0,#1
        0x0000150c:    eb410c01    A...    ADC      r12,r1,r1
        0x00001510:    f51c1f00    ....    CMN      r12,#0x200000
        0x00001514:    d80c        ..      BHI      0x1530 ; __fpl_dnaninf + 66
        0x00001516:    d10e        ..      BNE      0x1536 ; __fpl_dnaninf + 72
        0x00001518:    ea4f7cd1    O..|    LSR      r12,r1,#31
        0x0000151c:    f5151f00    ....    CMN      r5,#0x200000
        0x00001520:    eb0c0c4c    ..L.    ADD      r12,r12,r12,LSL #1
        0x00001524:    f10c0c02    ....    ADD      r12,r12,#2
        0x00001528:    bf08        ..      IT       EQ
        0x0000152a:    eb4c7cd3    L..|    ADCEQ    r12,r12,r3,LSR #31
        0x0000152e:    e004        ..      B        0x153a ; __fpl_dnaninf + 76
        0x00001530:    f04f0c08    O...    MOV      r12,#8
        0x00001534:    e001        ..      B        0x153a ; __fpl_dnaninf + 76
        0x00001536:    ea4f7cd3    O..|    LSR      r12,r3,#31
        0x0000153a:    eb0c054c    ..L.    ADD      r5,r12,r12,LSL #1
        0x0000153e:    fa26f605    &...    LSR      r6,r6,r5
        0x00001542:    f0060607    ....    AND      r6,r6,#7
        0x00001546:    f1b60c04    ....    SUBS     r12,r6,#4
        0x0000154a:    d206        ..      BCS      0x155a ; __fpl_dnaninf + 108
        0x0000154c:    eb0e0c86    ....    ADD      r12,lr,r6,LSL #2
        0x00001550:    e8bd4070    ..p@    POP      {r4-r6,lr}
        0x00001554:    f04c0c01    L...    ORR      r12,r12,#1
        0x00001558:    4760        `G      BX       r12
        0x0000155a:    e8dff00c    ....    TBB      [pc,r12]
    $d
        0x0000155e:    0b09        ..      DCW    2825
        0x00001560:    0202        ..      DCW    514
    $t
        0x00001562:    f04f4100    O..A    MOV      r1,#0x80000000
        0x00001566:    f04f0000    O...    MOV      r0,#0
        0x0000156a:    f5a12100    ...!    SUB      r1,r1,#0x80000
        0x0000156e:    bd70        p.      POP      {r4-r6,pc}
        0x00001570:    4619        .F      MOV      r1,r3
        0x00001572:    4610        .F      MOV      r0,r2
        0x00001574:    2801        .(      CMP      r0,#1
        0x00001576:    eb510401    Q...    ADCS     r4,r1,r1
        0x0000157a:    bf18        ..      IT       NE
        0x0000157c:    f5d41400    ....    RSBSNE   r4,r4,#0x200000
        0x00001580:    bf84        ..      ITT      HI
        0x00001582:    2000        .       MOVHI    r0,#0
        0x00001584:    f0014100    ...A    ANDHI    r1,r1,#0x80000000
        0x00001588:    bd70        p.      POP      {r4-r6,pc}
    x$fpl$fpinit
    $v0
    _fp_init
        0x0000158a:    f04f7040    O.@p    MOV      r0,#0x3000000
        0x0000158e:    eee10a10    ....    VMSR     FPSCR,r0
    __fplib_config_fpu_vfp
    __fplib_config_pureend_doubles
        0x00001592:    4770        pG      BX       lr
    x$fpl$fretinf
    $v0
    __fpl_fretinf
        0x00001594:    21ff        .!      MOVS     r1,#0xff
        0x00001596:    ea4150d0    A..P    ORR      r0,r1,r0,LSR #23
        0x0000159a:    05c0        ..      LSLS     r0,r0,#23
        0x0000159c:    4770        pG      BX       lr
    x$fpl$usenofp
    __I$use$fp
        0x0000159e:    0000        ..      MOVS     r0,r0
    $d.realdata
    Region$$Table$$Base
        0x000015a0:    000015c0    ....    DCD    5568
        0x000015a4:    10000000    ....    DCD    268435456
        0x000015a8:    00000048    H...    DCD    72
        0x000015ac:    000000d4    ....    DCD    212
        0x000015b0:    00001608    ....    DCD    5640
        0x000015b4:    10000048    H...    DCD    268435528
        0x000015b8:    00001160    `...    DCD    4448
        0x000015bc:    000000f0    ....    DCD    240
    Region$$Table$$Limit

** Section #2 'SRAM' (SHT_PROGBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 72 bytes (alignment 4)
    Address: 0x10000000

    0x10000000:   00 c2 01 00 60 00 00 00 00 00 00 00 00 00 00 00    ....`...........
    0x10000010:   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................
    0x10000020:   22 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00    ".......!.......
    0x10000030:   1c 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00    ................
    0x10000040:   19 00 00 00 00 00 00 00                            ........


** Section #3 'SRAM' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4448 bytes (alignment 8)
    Address: 0x10000048


** Section #4 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 1476 bytes


** Section #5 '.debug_frame' (SHT_PROGBITS)
    Size   : 2796 bytes


** Section #6 '.debug_info' (SHT_PROGBITS)
    Size   : 14504 bytes


** Section #7 '.debug_line' (SHT_PROGBITS)
    Size   : 5912 bytes


** Section #8 '.debug_loc' (SHT_PROGBITS)
    Size   : 2464 bytes


** Section #9 '.debug_macinfo' (SHT_PROGBITS)
    Size   : 7140 bytes


** Section #10 '.debug_pubnames' (SHT_PROGBITS)
    Size   : 779 bytes


** Section #11 '.symtab' (SHT_SYMTAB)
    Size   : 7424 bytes (alignment 4)
    String table #12 '.strtab'
    Last local symbol no. 312

    Symbol table .symtab (463 symbols, 312 local)

      #  Symbol Name                Value      Bind  Sec  Type  Vis  Size
    ========================================================================

      1  $d                         0x00000000   Lc    1   --   De 
      2  $t                         0x00000070   Lc    1   --   De 
      3  $d                         0x00000094   Lc    1   --   De 
      4  $t                         0x00000098   Lc    1   --   De 
      5  $d                         0x000000cc   Lc    1   --   De 
      6  $t                         0x000000d4   Lc    1   --   De 
      7  $d                         0x00000176   Lc    1   --   De 
      8  $t                         0x00000184   Lc    1   --   De 
      9  $d                         0x00000238   Lc    1   --   De 
     10  $t                         0x0000023c   Lc    1   --   De 
     11  $d                         0x00000244   Lc    1   --   De 
     12  $t                         0x00000248   Lc    1   --   De 
     13  $d                         0x00000286   Lc    1   --   De 
     14  $t                         0x0000028c   Lc    1   --   De 
     15  $d                         0x00000494   Lc    1   --   De 
     16  $t                         0x00000498   Lc    1   --   De 
     17  $d                         0x0000053c   Lc    1   --   De 
     18  $t                         0x00000540   Lc    1   --   De 
     19  $d                         0x000005e2   Lc    1   --   De 
     20  $t                         0x000005e8   Lc    1   --   De 
     21  $d                         0x00000604   Lc    1   --   De 
     22  $t                         0x00000608   Lc    1   --   De 
     23  $d                         0x00000646   Lc    1   --   De 
     24  $t                         0x0000064e   Lc    1   --   De 
     25  $d                         0x00000674   Lc    1   --   De 
     26  $t                         0x00000694   Lc    1   --   De 
     27  $d                         0x000006b0   Lc    1   --   De 
     28  $t                         0x000006b4   Lc    1   --   De 
     29  $d                         0x000006cc   Lc    1   --   De 
     30  $t                         0x000006d0   Lc    1   --   De 
     31  $d                         0x000006fc   Lc    1   --   De 
     32  $t                         0x00000700   Lc    1   --   De 
     33  $d                         0x00000746   Lc    1   --   De 
     34  $t                         0x0000074c   Lc    1   --   De 
     35  $d                         0x00000758   Lc    1   --   De 
     36  $t                         0x0000075c   Lc    1   --   De 
     37  $d                         0x00000780   Lc    1   --   De 
     38  $t                         0x00000784   Lc    1   --   De 
     39  $d                         0x000007b8   Lc    1   --   De 
     40  $t                         0x000007bc   Lc    1   --   De 
     41  $d                         0x000007c8   Lc    1   --   De 
     42  $t                         0x000007cc   Lc    1   --   De 
     43  $d                         0x00000870   Lc    1   --   De 
     44  $t                         0x00000878   Lc    1   --   De 
     45  $d                         0x00000890   Lc    1   --   De 
     46  $t                         0x00000894   Lc    1   --   De 
     47  $d                         0x000008b4   Lc    1   --   De 
     48  $t                         0x000008b8   Lc    1   --   De 
     49  $d                         0x00000906   Lc    1   --   De 
     50  $t                         0x0000090c   Lc    1   --   De 
     51  $d                         0x0000091c   Lc    1   --   De 
     52  $t                         0x00000920   Lc    1   --   De 
     53  $d                         0x0000092e   Lc    1   --   De 
     54  $t                         0x00000934   Lc    1   --   De 
     55  $d                         0x00000942   Lc    1   --   De 
     56  $t                         0x00000948   Lc    1   --   De 
     57  $d                         0x00000968   Lc    1   --   De 
     58  $t                         0x0000096c   Lc    1   --   De 
     59  $d                         0x00000974   Lc    1   --   De 
     60  $t                         0x00000978   Lc    1   --   De 
     61  $d                         0x00000a4a   Lc    1   --   De 
     62  $t                         0x00000a50   Lc    1   --   De 
     63  $d                         0x00000a78   Lc    1   --   De 
     64  $t                         0x00000a80   Lc    1   --   De 
     65  $d                         0x00000a86   Lc    1   --   De 
     66  $t                         0x00000a8c   Lc    1   --   De 
     67  $d                         0x00000a96   Lc    1   --   De 
     68  $t                         0x00000aac   Lc    1   --   De 
     69  $d                         0x00000e50   Lc    1   --   De 
     70  $t                         0x00000e60   Lc    1   --   De 
     71  $d                         0x000010e2   Lc    1   --   De 
     72  $t                         0x000010e8   Lc    1   --   De 
     73  $d                         0x000011bc   Lc    1   --   De 
     74  $t                         0x000011e0   Lc    1   --   De 
     75  $d                         0x0000130e   Lc    1   --   De 
     76  $t                         0x00001314   Lc    1   --   De 
     77  $d                         0x00001386   Lc    1   --   De 
     78  $t                         0x00001390   Lc    1   --   De 
     79  $d                         0x000014dc   Lc    1   --   De 
     80  $t                         0x000014e0   Lc    1   --   De 
     81  $d                         0x0000155e   Lc    1   --   De 
     82  $t                         0x00001562   Lc    1   --   De 
     83  $d.realdata                0x000015a0   Lc    1   --   De 
     84  $d.realdata                0x10000000   Lc    2   --   De 
     85  ../src/deepsleep_wake.c    0x00000000   Lc  Abs  File  De 
     86  i.am_clkgen_isr            0x00000274   Lc    1  Sect  De 
     87  i.am_gpio_isr              0x000005e8   Lc    1  Sect  De 
     88  i.main                     0x000010e8   Lc    1  Sect  De 
     89  i.uart_disable             0x000012ac   Lc    1  Sect  De 
     90  i.uart_init                0x00001314   Lc    1  Sect  De 
     91  .data                      0x10000000   Lc    2  Sect  De   0x14
     92  ../../../../../utils/am_util_delay.c
                                    0x00000000   Lc  Abs  File  De 
     93  i.am_util_delay_ms         0x00000978   Lc    1  Sect  De 
     94  ..\..\..\..\..\utils\am_util_faultisr.c
                                    0x00000000   Lc  Abs  File  De 
     95  .emb_text                  0x00000138   Lc    1  Sect  De   0x14
     96  $v0                        0x00000138   Lc    1   --   De 
     97  ../../../../../utils/am_util_faultisr.c
                                    0x00000000   Lc  Abs  File  De 
     98  i.am_util_faultisr_collect_data
                                    0x00000998   Lc    1  Sect  De 
     99  ../../../../../utils/am_util_stdio.c
                                    0x00000000   Lc  Abs  File  De 
    100  i.am_util_stdio_printf     0x00000a50   Lc    1  Sect  De 
    101  i.am_util_stdio_printf_init
                                    0x00000a80   Lc    1  Sect  De 
    102  i.am_util_stdio_terminal_clear
                                    0x00000a8c   Lc    1  Sect  De 
    103  i.am_util_stdio_vsprintf   0x00000aac   Lc    1  Sect  De 
    104  i.decstr_to_int            0x00000e60   Lc    1  Sect  De 
    105  decstr_to_int              0x00000e61   Lc    1  Code  De   0x42
    106  i.divu64_10                0x00000ea2   Lc    1  Sect  De 
    107  divu64_10                  0x00000ea3   Lc    1  Code  De   0xcc
    108  i.ftoa                     0x00000f70   Lc    1  Sect  De 
    109  ftoa                       0x00000f71   Lc    1  Code  De   0x172
    110  i.ndigits_in_hex           0x000011e0   Lc    1  Sect  De 
    111  ndigits_in_hex             0x000011e1   Lc    1  Code  De   0x34
    112  i.ndigits_in_i64           0x00001214   Lc    1  Sect  De 
    113  ndigits_in_i64             0x00001215   Lc    1  Code  De   0x24
    114  i.ndigits_in_u64           0x00001238   Lc    1  Sect  De 
    115  ndigits_in_u64             0x00001239   Lc    1  Code  De   0x3a
    116  i.padbuffer                0x00001272   Lc    1  Sect  De 
    117  padbuffer                  0x00001273   Lc    1  Code  De   0x22
    118  i.simple_strlen            0x00001294   Lc    1  Sect  De 
    119  simple_strlen              0x00001295   Lc    1  Code  De   0x18
    120  i.uint64_to_hexstr         0x00001390   Lc    1  Sect  De 
    121  uint64_to_hexstr           0x00001391   Lc    1  Code  De   0x8a
    122  i.uint64_to_str            0x0000141a   Lc    1  Sect  De 
    123  uint64_to_str              0x0000141b   Lc    1  Code  De   0x70
    124  .bss                       0x10000048   Lc    3  Sect  De   0x100
    125  g_prfbuf                   0x10000048   Lc    3  Data  De   0x100
    126  .data                      0x10000014   Lc    2  Sect  De   0x5
    127  g_bTxtXlate                0x10000018   Lc    2  Data  De   0x1
    128  ../../../../../devices/am_devices_led.c
                                    0x00000000   Lc  Abs  File  De 
    129  i.am_devices_led_array_init
                                    0x0000028c   Lc    1  Sect  De 
    130  i.am_devices_led_init      0x000002b0   Lc    1  Sect  De 
    131  i.am_devices_led_off       0x00000498   Lc    1  Sect  De 
    132  i.am_devices_led_toggle    0x00000540   Lc    1  Sect  De 
    133  ../keil/startup_keil.s     0x00000000   Lc  Abs  File  De 
    134  STACK                      0x100001a8   Lc    3  Sect  De   0x1000
    135  StackMem                   0x100001a8   Lc    3  Data  De 
    136  HEAP                       0x100001a8   Lc    3  Sect  De 
    137  HeapMem                    0x100001a8   Lc    3  Data  De 
    138  RESET                      0x00000000   Lc    1  Sect  De   0x98
    139  $v0                        0x00000070   Lc    1   --   De 
    140  .text                      0x0000016c   Lc    1  Sect  De   0x18
    141  $v0                        0x0000016c   Lc    1   --   De 
    142  ../am_hal_global.c         0x00000000   Lc  Abs  File  De 
    143  .data                      0x1000001c   Lc    2  Sect  De   0x4
    144  ../am_bsp.c                0x00000000   Lc  Abs  File  De 
    145  i.am_bsp_low_power_init    0x0000024a   Lc    1  Sect  De 
    146  i.am_bsp_uart_string_print 0x0000026c   Lc    1  Sect  De 
    147  .data                      0x10000020   Lc    2  Sect  De   0x28
    148  ../am_hal_clkgen.c         0x00000000   Lc  Abs  File  De 
    149  i.am_hal_clkgen_osc_start  0x00000608   Lc    1  Sect  De 
    150  i.am_hal_clkgen_osc_stop   0x0000061e   Lc    1  Sect  De 
    151  i.am_hal_clkgen_sysclk_get 0x00000634   Lc    1  Sect  De 
    152  i.am_hal_clkgen_sysclk_select
                                    0x00000694   Lc    1  Sect  De 
    153  ..\am_hal_flash.c          0x00000000   Lc  Abs  File  De 
    154  .emb_text                  0x0000014c   Lc    1  Sect  De   0x6
    155  $v0                        0x0000014c   Lc    1   --   De 
    156  ../am_hal_flash.c          0x00000000   Lc  Abs  File  De 
    157  ../am_hal_gpio.c           0x00000000   Lc  Abs  File  De 
    158  i.am_hal_gpio_int_clear    0x000006a4   Lc    1  Sect  De 
    159  i.am_hal_gpio_int_enable   0x000006b4   Lc    1  Sect  De 
    160  i.am_hal_gpio_out_enable_bit_get
                                    0x000006d0   Lc    1  Sect  De 
    161  ..\am_hal_interrupt.c      0x00000000   Lc  Abs  File  De 
    162  .emb_text                  0x00000154   Lc    1  Sect  De   0x16
    163  $v0                        0x00000154   Lc    1   --   De 
    164  ../am_hal_interrupt.c      0x00000000   Lc  Abs  File  De 
    165  i.am_hal_interrupt_enable  0x00000700   Lc    1  Sect  De 
    166  ../am_hal_mcuctrl.c        0x00000000   Lc  Abs  File  De 
    167  i.am_hal_mcuctrl_bandgap_disable
                                    0x0000074c   Lc    1  Sect  De 
    168  i.am_hal_mcuctrl_bucks_enable
                                    0x0000075c   Lc    1  Sect  De 
    169  i.am_hal_mcuctrl_fault_status
                                    0x00000784   Lc    1  Sect  De 
    170  i.am_hal_mcuctrl_sram_power_set
                                    0x000007bc   Lc    1  Sect  De 
    171  ../am_hal_rtc.c            0x00000000   Lc  Abs  File  De 
    172  i.am_hal_rtc_alarm_interval_set
                                    0x000007cc   Lc    1  Sect  De 
    173  i.am_hal_rtc_int_clear     0x00000800   Lc    1  Sect  De 
    174  i.am_hal_rtc_int_enable    0x0000080a   Lc    1  Sect  De 
    175  i.am_hal_rtc_osc_disable   0x0000081a   Lc    1  Sect  De 
    176  i.am_hal_rtc_osc_enable    0x00000828   Lc    1  Sect  De 
    177  i.am_hal_rtc_osc_select    0x00000836   Lc    1  Sect  De 
    178  ../am_hal_sysctrl.c        0x00000000   Lc  Abs  File  De 
    179  i.am_hal_sysctrl_sleep     0x0000084c   Lc    1  Sect  De 
    180  ../am_hal_uart.c           0x00000000   Lc  Abs  File  De 
    181  i.am_hal_uart_clock_disable
                                    0x00000878   Lc    1  Sect  De 
    182  i.am_hal_uart_clock_enable 0x00000894   Lc    1  Sect  De 
    183  i.am_hal_uart_config       0x000008b8   Lc    1  Sect  De 
    184  i.am_hal_uart_disable      0x0000090c   Lc    1  Sect  De 
    185  i.am_hal_uart_enable       0x00000920   Lc    1  Sect  De 
    186  i.am_hal_uart_fifo_config  0x00000934   Lc    1  Sect  De 
    187  i.am_hal_uart_string_transmit_polled
                                    0x00000948   Lc    1  Sect  De 
    188  ../am_hal_debug.c          0x00000000   Lc  Abs  File  De 
    189  ../am_hal_iom.c            0x00000000   Lc  Abs  File  De 
    190  ../am_hal_itm.c            0x00000000   Lc  Abs  File  De 
    191  ../am_hal_tpiu.c           0x00000000   Lc  Abs  File  De 
    192  ../am_hal_vcomp.c          0x00000000   Lc  Abs  File  De 
    193  i.am_hal_vcomp_disable     0x0000096c   Lc    1  Sect  De 
    194  ../am_hal_i2c_bit_bang.c   0x00000000   Lc  Abs  File  De 
    195  ../am_hal_queue.c          0x00000000   Lc  Abs  File  De 
    196  dc.s                       0x00000000   Lc  Abs  File  De 
    197  ../clib/memcpset.s         0x00000000   Lc  Abs  File  De 
    198  .text                      0x00000184   Lc    1  Sect  De   0x4e
    199  ../clib/heapaux.c          0x00000000   Lc  Abs  File  De 
    200  .text                      0x000001d2   Lc    1  Sect  De 
    201  ../clib/angel/startup.s    0x00000000   Lc  Abs  File  De 
    202  !!!main                    0x00000098   Lc    1  Sect  De   0x8
    203  ../fplib/d2f.s             0x00000000   Lc  Abs  File  De 
    204  x$fpl$d2f                  0x0000148c   Lc    1  Sect  De   0x62
    205  $v0                        0x0000148c   Lc    1   --   De 
    206  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    207  .ARM.Collect$$rtentry$$00000000
                                    0x00000118   Lc    1  Sect  De 
    208  ../fplib/dnaninf.s         0x00000000   Lc  Abs  File  De 
    209  x$fpl$dnaninf              0x000014ee   Lc    1  Sect  De   0x9c
    210  $v0                        0x000014ee   Lc    1   --   De 
    211  ../fplib/fretinf.s         0x00000000   Lc  Abs  File  De 
    212  x$fpl$fretinf              0x00001594   Lc    1  Sect  De   0xa
    213  $v0                        0x00001594   Lc    1   --   De 
    214  ../fplib/usenofp.s         0x00000000   Lc  Abs  File  De 
    215  x$fpl$usenofp              0x0000159e   Lc    1  Sect  De 
    216  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    217  .ARM.Collect$$rtentry$$00000002
                                    0x00000118   Lc    1  Sect  De 
    218  .ARM.Collect$$rtentry$$00000009
                                    0x0000011e   Lc    1  Sect  De 
    219  .ARM.Collect$$rtentry$$0000000A
                                    0x0000011e   Lc    1  Sect  De   0x4
    220  .ARM.Collect$$rtentry$$0000000C
                                    0x00000122   Lc    1  Sect  De 
    221  .ARM.Collect$$rtentry$$0000000D
                                    0x00000122   Lc    1  Sect  De   0x8
    222  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    223  .ARM.Collect$$rtentry$$00000004
                                    0x00000118   Lc    1  Sect  De   0x6
    224  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    225  .text                      0x000001d8   Lc    1  Sect  De   0x4a
    226  ../clib/stdlib.c           0x00000000   Lc  Abs  File  De 
    227  .text                      0x00000222   Lc    1  Sect  De 
    228  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    229  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    230  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    231  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    232  .ARM.Collect$$libinit$$00000000
                                    0x0000010c   Lc    1  Sect  De   0x2
    233  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    234  .text                      0x00000234   Lc    1  Sect  De   0x8
    235  .bss                       0x10000148   Lc    3  Sect  De   0x60
    236  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    237  .ARM.Collect$$rtexit$$00000000
                                    0x0000012a   Lc    1  Sect  De   0x2
    238  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    239  .ARM.Collect$$libinit$$00000001
                                    0x0000010e   Lc    1  Sect  De   0x4
    240  .ARM.Collect$$libinit$$00000004
                                    0x00000112   Lc    1  Sect  De 
    241  .ARM.Collect$$libinit$$0000000A
                                    0x00000112   Lc    1  Sect  De 
    242  .ARM.Collect$$libinit$$0000000C
                                    0x00000112   Lc    1  Sect  De 
    243  .ARM.Collect$$libinit$$0000000E
                                    0x00000112   Lc    1  Sect  De 
    244  .ARM.Collect$$libinit$$00000011
                                    0x00000112   Lc    1  Sect  De 
    245  .ARM.Collect$$libinit$$00000013
                                    0x00000112   Lc    1  Sect  De 
    246  .ARM.Collect$$libinit$$00000015
                                    0x00000112   Lc    1  Sect  De 
    247  .ARM.Collect$$libinit$$00000017
                                    0x00000112   Lc    1  Sect  De 
    248  .ARM.Collect$$libinit$$00000019
                                    0x00000112   Lc    1  Sect  De 
    249  .ARM.Collect$$libinit$$0000001B
                                    0x00000112   Lc    1  Sect  De 
    250  .ARM.Collect$$libinit$$0000001D
                                    0x00000112   Lc    1  Sect  De 
    251  .ARM.Collect$$libinit$$0000001F
                                    0x00000112   Lc    1  Sect  De 
    252  .ARM.Collect$$libinit$$00000021
                                    0x00000112   Lc    1  Sect  De 
    253  .ARM.Collect$$libinit$$00000023
                                    0x00000112   Lc    1  Sect  De 
    254  .ARM.Collect$$libinit$$00000025
                                    0x00000112   Lc    1  Sect  De 
    255  .ARM.Collect$$libinit$$0000002C
                                    0x00000112   Lc    1  Sect  De 
    256  .ARM.Collect$$libinit$$0000002E
                                    0x00000112   Lc    1  Sect  De 
    257  .ARM.Collect$$libinit$$00000030
                                    0x00000112   Lc    1  Sect  De 
    258  .ARM.Collect$$libinit$$00000032
                                    0x00000112   Lc    1  Sect  De 
    259  .ARM.Collect$$libinit$$00000033
                                    0x00000112   Lc    1  Sect  De   0x2
    260  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    261  .ARM.Collect$$rtexit$$00000002
                                    0x0000012c   Lc    1  Sect  De 
    262  .ARM.Collect$$rtexit$$00000003
                                    0x0000012c   Lc    1  Sect  De   0x4
    263  .ARM.Collect$$rtexit$$00000004
                                    0x00000130   Lc    1  Sect  De   0x6
    264  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    265  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    266  ../fplib/fpinit.s          0x00000000   Lc  Abs  File  De 
    267  x$fpl$fpinit               0x0000158a   Lc    1  Sect  De   0xa
    268  $v0                        0x0000158a   Lc    1   --   De 
    269  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    270  .text                      0x0000023c   Lc    1  Sect  De 
    271  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    272  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    273  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    274  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    275  .ARM.Collect$$libshutdown$$00000000
                                    0x00000114   Lc    1  Sect  De   0x2
    276  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    277  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    278  .text                      0x00000248   Lc    1  Sect  De   0x2
    279  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    280  .text                      0x0000024a   Lc    1  Sect  De 
    281  ../clib/heapalloc.c        0x00000000   Lc  Abs  File  De 
    282  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    283  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    284  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    285  .ARM.Collect$$libshutdown$$00000002
                                    0x00000116   Lc    1  Sect  De 
    286  .ARM.Collect$$libshutdown$$00000004
                                    0x00000116   Lc    1  Sect  De 
    287  .ARM.Collect$$libshutdown$$00000007
                                    0x00000116   Lc    1  Sect  De 
    288  .ARM.Collect$$libshutdown$$0000000A
                                    0x00000116   Lc    1  Sect  De 
    289  .ARM.Collect$$libshutdown$$0000000C
                                    0x00000116   Lc    1  Sect  De 
    290  .ARM.Collect$$libshutdown$$0000000F
                                    0x00000116   Lc    1  Sect  De 
    291  .ARM.Collect$$libshutdown$$00000010
                                    0x00000116   Lc    1  Sect  De   0x2
    292  ../clib/angel/rt.s         0x00000000   Lc  Abs  File  De 
    293  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    294  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    295  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    296  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    297  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    298  ../clib/signal.s           0x00000000   Lc  Abs  File  De 
    299  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    300  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    301  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    302  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    303  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    304  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    305  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    306  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    307  ../clib/angel/scatter.s    0x00000000   Lc  Abs  File  De 
    308  !!!scatter                 0x000000a0   Lc    1  Sect  De   0x34
    309  ../clib/angel/handlers.s   0x00000000   Lc  Abs  File  De 
    310  !!handler_copy             0x000000d4   Lc    1  Sect  De   0x1a
    311  ../clib/angel/handlers.s   0x00000000   Lc  Abs  File  De 
    312  !!handler_zi               0x000000f0   Lc    1  Sect  De   0x1c
    313  BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2
                                    0x00000000   Gb  Abs   --   Hi 
    314  __ARM_use_no_argv          0x00000000   Gb  Abs   --   Hi 
    315  __Vectors                  0x00000000   Gb    1  Data  Hi 
    316  Reset_Handler              0x00000071   Wk    1  Code  Hi   0x1c
    317  am_nmi_isr                 0x0000008d   Wk    1  Code  Hi   0x2
    318  am_memmanage_isr           0x00000091   Wk    1  Code  Hi   0x2
    319  am_adc_isr                 0x00000093   Wk    1  Code  Hi 
    320  am_brownout_isr            0x00000093   Wk    1  Code  Hi 
    321  am_ctimer_isr              0x00000093   Wk    1  Code  Hi 
    322  am_debugmon_isr            0x00000093   Wk    1  Code  Hi 
    323  am_iomaster0_isr           0x00000093   Wk    1  Code  Hi 
    324  am_iomaster1_isr           0x00000093   Wk    1  Code  Hi 
    325  am_ioslave_acc_isr         0x00000093   Wk    1  Code  Hi 
    326  am_ioslave_ios_isr         0x00000093   Wk    1  Code  Hi 
    327  am_pendsv_isr              0x00000093   Wk    1  Code  Hi 
    328  am_svcall_isr              0x00000093   Wk    1  Code  Hi 
    329  am_systick_isr             0x00000093   Wk    1  Code  Hi 
    330  am_uart_isr                0x00000093   Wk    1  Code  Hi 
    331  am_vcomp_isr               0x00000093   Wk    1  Code  Hi 
    332  am_watchdog_isr            0x00000093   Wk    1  Code  Hi 
    333  __main                     0x00000099   Gb    1  Code  Hi   0x8
    334  __scatterload              0x000000a1   Gb    1  Code  Hi 
    335  __scatterload_rt2          0x000000a1   Gb    1  Code  Hi   0x2c
    336  __scatterload_rt2_thumb_only
                                    0x000000a1   Gb    1  Code  Hi 
    337  __scatterload_null         0x000000af   Gb    1  Code  Hi 
    338  __scatterload_copy         0x000000d5   Gb    1  Code  Hi   0x1a
    339  __scatterload_zeroinit     0x000000f1   Gb    1  Code  Hi   0x1c
    340  __rt_lib_init              0x0000010d   Gb    1  Code  De 
    341  __rt_lib_init_fp_1         0x0000010f   Gb    1  Code  Hi 
    342  __rt_lib_init_alloca_1     0x00000113   Gb    1  Code  Hi 
    343  __rt_lib_init_argv_1       0x00000113   Gb    1  Code  Hi 
    344  __rt_lib_init_atexit_1     0x00000113   Gb    1  Code  Hi 
    345  __rt_lib_init_clock_1      0x00000113   Gb    1  Code  Hi 
    346  __rt_lib_init_cpp_1        0x00000113   Gb    1  Code  Hi 
    347  __rt_lib_init_exceptions_1 0x00000113   Gb    1  Code  Hi 
    348  __rt_lib_init_fp_trap_1    0x00000113   Gb    1  Code  Hi 
    349  __rt_lib_init_getenv_1     0x00000113   Gb    1  Code  Hi 
    350  __rt_lib_init_heap_1       0x00000113   Gb    1  Code  Hi 
    351  __rt_lib_init_lc_collate_1 0x00000113   Gb    1  Code  Hi 
    352  __rt_lib_init_lc_ctype_1   0x00000113   Gb    1  Code  Hi 
    353  __rt_lib_init_lc_monetary_1
                                    0x00000113   Gb    1  Code  Hi 
    354  __rt_lib_init_lc_numeric_1 0x00000113   Gb    1  Code  Hi 
    355  __rt_lib_init_lc_time_1    0x00000113   Gb    1  Code  Hi 
    356  __rt_lib_init_preinit_1    0x00000113   Gb    1  Code  Hi 
    357  __rt_lib_init_rand_1       0x00000113   Gb    1  Code  Hi 
    358  __rt_lib_init_return       0x00000113   Gb    1  Code  Hi 
    359  __rt_lib_init_signal_1     0x00000113   Gb    1  Code  Hi 
    360  __rt_lib_init_stdio_1      0x00000113   Gb    1  Code  Hi 
    361  __rt_lib_init_user_alloc_1 0x00000113   Gb    1  Code  Hi 
    362  __rt_lib_shutdown          0x00000115   Gb    1  Code  De 
    363  __rt_lib_shutdown_cpp_1    0x00000117   Gb    1  Code  Hi 
    364  __rt_lib_shutdown_fp_trap_1
                                    0x00000117   Gb    1  Code  Hi 
    365  __rt_lib_shutdown_heap_1   0x00000117   Gb    1  Code  Hi 
    366  __rt_lib_shutdown_return   0x00000117   Gb    1  Code  Hi 
    367  __rt_lib_shutdown_signal_1 0x00000117   Gb    1  Code  Hi 
    368  __rt_lib_shutdown_stdio_1  0x00000117   Gb    1  Code  Hi 
    369  __rt_lib_shutdown_user_alloc_1
                                    0x00000117   Gb    1  Code  Hi 
    370  __rt_entry                 0x00000119   Gb    1  Code  Hi 
    371  __rt_entry_presh_1         0x00000119   Gb    1  Code  Hi 
    372  __rt_entry_sh              0x00000119   Gb    1  Code  Hi 
    373  __rt_entry_li              0x0000011f   Gb    1  Code  Hi 
    374  __rt_entry_postsh_1        0x0000011f   Gb    1  Code  Hi 
    375  __rt_entry_main            0x00000123   Gb    1  Code  Hi 
    376  __rt_entry_postli_1        0x00000123   Gb    1  Code  Hi 
    377  __rt_exit                  0x0000012b   Gb    1  Code  De 
    378  __rt_exit_ls               0x0000012d   Gb    1  Code  Hi 
    379  __rt_exit_prels_1          0x0000012d   Gb    1  Code  Hi 
    380  __rt_exit_exit             0x00000131   Gb    1  Code  Hi 
    381  am_fault_isr               0x00000139   Gb    1  Code  Hi   0xc
    382  getStackedReg              0x00000145   Gb    1  Code  Hi   0x8
    383  am_hal_flash_delay         0x0000014d   Gb    1  Code  Hi   0x6
    384  am_hal_interrupt_master_enable
                                    0x00000155   Gb    1  Code  Hi   0x8
    385  am_hal_interrupt_master_disable
                                    0x0000015d   Gb    1  Code  Hi   0x8
    386  am_hal_interrupt_master_set
                                    0x00000165   Gb    1  Code  Hi   0x6
    387  __user_initial_stackheap   0x0000016d   Gb    1  Code  Hi   0xa
    388  __aeabi_memclr4            0x00000185   Gb    1  Code  Hi 
    389  __aeabi_memclr8            0x00000185   Gb    1  Code  De 
    390  __rt_memclr_w              0x00000185   Gb    1  Code  De   0x4e
    391  _memset_w                  0x00000189   Gb    1  Code  De 
    392  __use_two_region_memory    0x000001d3   Gb    1  Code  Hi   0x2
    393  __rt_heap_escrow$2region   0x000001d5   Gb    1  Code  De   0x2
    394  __rt_heap_expand$2region   0x000001d7   Gb    1  Code  De   0x2
    395  __user_setup_stackheap     0x000001d9   Gb    1  Code  De   0x4a
    396  exit                       0x00000223   Gb    1  Code  De   0x12
    397  __user_libspace            0x00000235   Wk    1  Code  De   0x8
    398  __user_perproc_libspace    0x00000235   Wk    1  Code  De 
    399  __user_perthread_libspace  0x00000235   Wk    1  Code  De 
    400  _sys_exit                  0x0000023d   Gb    1  Code  De   0x8
    401  __I$use$semihosting        0x00000249   Gb    1  Code  Hi 
    402  __use_no_semihosting_swi   0x00000249   Gb    1  Code  Hi   0x2
    403  __semihosting_library_function
                                    0x0000024b   Gb    1  Code  Hi 
    404  am_bsp_low_power_init      0x0000024b   Gb    1  Code  Hi   0x22
    405  am_bsp_uart_string_print   0x0000026d   Gb    1  Code  Hi   0x8
    406  am_clkgen_isr              0x00000275   Gb    1  Code  Hi   0x12
    407  am_devices_led_array_init  0x0000028d   Gb    1  Code  Hi   0x24
    408  am_devices_led_init        0x000002b1   Gb    1  Code  Hi   0x1e4
    409  am_devices_led_off         0x00000499   Gb    1  Code  Hi   0xa4
    410  am_devices_led_toggle      0x00000541   Gb    1  Code  Hi   0xa2
    411  am_gpio_isr                0x000005e9   Gb    1  Code  Hi   0x1c
    412  am_hal_clkgen_osc_start    0x00000609   Gb    1  Code  Hi   0x16
    413  am_hal_clkgen_osc_stop     0x0000061f   Gb    1  Code  Hi   0x14
    414  am_hal_clkgen_sysclk_get   0x00000635   Gb    1  Code  Hi   0x40
    415  am_hal_clkgen_sysclk_select
                                    0x00000695   Gb    1  Code  Hi   0x10
    416  am_hal_gpio_int_clear      0x000006a5   Gb    1  Code  Hi   0xc
    417  am_hal_gpio_int_enable     0x000006b5   Gb    1  Code  Hi   0x18
    418  am_hal_gpio_out_enable_bit_get
                                    0x000006d1   Gb    1  Code  Hi   0x2c
    419  am_hal_interrupt_enable    0x00000701   Gb    1  Code  Hi   0x46
    420  am_hal_mcuctrl_bandgap_disable
                                    0x0000074d   Gb    1  Code  Hi   0xc
    421  am_hal_mcuctrl_bucks_enable
                                    0x0000075d   Gb    1  Code  Hi   0x24
    422  am_hal_mcuctrl_fault_status
                                    0x00000785   Gb    1  Code  Hi   0x34
    423  am_hal_mcuctrl_sram_power_set
                                    0x000007bd   Gb    1  Code  Hi   0xc
    424  am_hal_rtc_alarm_interval_set
                                    0x000007cd   Gb    1  Code  Hi   0x34
    425  am_hal_rtc_int_clear       0x00000801   Gb    1  Code  Hi   0xa
    426  am_hal_rtc_int_enable      0x0000080b   Gb    1  Code  Hi   0x10
    427  am_hal_rtc_osc_disable     0x0000081b   Gb    1  Code  Hi   0xe
    428  am_hal_rtc_osc_enable      0x00000829   Gb    1  Code  Hi   0xe
    429  am_hal_rtc_osc_select      0x00000837   Gb    1  Code  Hi   0x16
    430  am_hal_sysctrl_sleep       0x0000084d   Gb    1  Code  Hi   0x24
    431  am_hal_uart_clock_disable  0x00000879   Gb    1  Code  Hi   0x18
    432  am_hal_uart_clock_enable   0x00000895   Gb    1  Code  Hi   0x20
    433  am_hal_uart_config         0x000008b9   Gb    1  Code  Hi   0x4e
    434  am_hal_uart_disable        0x0000090d   Gb    1  Code  Hi   0x10
    435  am_hal_uart_enable         0x00000921   Gb    1  Code  Hi   0xe
    436  am_hal_uart_fifo_config    0x00000935   Gb    1  Code  Hi   0xe
    437  am_hal_uart_string_transmit_polled
                                    0x00000949   Gb    1  Code  Hi   0x20
    438  am_hal_vcomp_disable       0x0000096d   Gb    1  Code  Hi   0x8
    439  am_util_delay_ms           0x00000979   Gb    1  Code  Hi   0x1e
    440  am_util_faultisr_collect_data
                                    0x00000999   Gb    1  Code  Hi   0xb2
    441  am_util_stdio_printf       0x00000a51   Gb    1  Code  Hi   0x28
    442  am_util_stdio_printf_init  0x00000a81   Gb    1  Code  Hi   0x6
    443  am_util_stdio_terminal_clear
                                    0x00000a8d   Gb    1  Code  Hi   0xa
    444  am_util_stdio_vsprintf     0x00000aad   Gb    1  Code  Hi   0x3a4
    445  main                       0x000010e9   Gb    1  Code  Hi   0xd4
    446  uart_disable               0x000012ad   Gb    1  Code  Hi   0x62
    447  uart_init                  0x00001315   Gb    1  Code  Hi   0x72
    448  __aeabi_d2f                0x0000148d   Gb    1  Code  Hi 
    449  _d2f                       0x0000148d   Gb    1  Code  De   0x62
    450  __fpl_dnaninf              0x000014ef   Gb    1  Code  De   0x9c
    451  _fp_init                   0x0000158b   Gb    1  Code  De   0xa
    452  __fplib_config_fpu_vfp     0x00001593   Gb    1  Code  De 
    453  __fplib_config_pureend_doubles
                                    0x00001593   Gb    1  Code  De 
    454  __fpl_fretinf              0x00001595   Gb    1  Code  De   0xa
    455  __I$use$fp                 0x0000159e   Gb    1   --   De 
    456  Region$$Table$$Base        0x000015a0   Gb    1   --   Hi 
    457  Region$$Table$$Limit       0x000015c0   Gb    1   --   Hi 
    458  g_sUartConfig              0x10000000   Gb    2  Data  Hi   0x14
    459  g_pfnCharPrint             0x10000014   Gb    2  Data  Hi   0x4
    460  g_ui32HALflags             0x1000001c   Gb    2  Data  Hi   0x4
    461  am_bsp_psLEDs              0x10000020   Gb    2  Data  Hi   0x28
    462  __libspace_start           0x10000148   Gb    3  Data  De   0x60
    463  __temporary_stack_top$libspace
                                    0x100001a8   Gb    3  Data  De 


** Section #12 '.strtab' (SHT_STRTAB)
    Size   : 7152 bytes

            #  Offset String
        ====================================

            1      1: $d
            2      4: $t
            3      7: $d.realdata
            4     19: ../src/deepsleep_wake.c
            5     43: i.am_clkgen_isr
            6     59: i.am_gpio_isr
            7     73: i.main
            8     80: i.uart_disable
            9     95: i.uart_init
           10    107: .data
           11    113: ../../../../../utils/am_util_delay.c
           12    150: i.am_util_delay_ms
           13    169: ..\..\..\..\..\utils\am_util_faultisr.c
           14    209: .emb_text
           15    219: $v0
           16    223: ../../../../../utils/am_util_faultisr.c
           17    263: i.am_util_faultisr_collect_data
           18    295: ../../../../../utils/am_util_stdio.c
           19    332: i.am_util_stdio_printf
           20    355: i.am_util_stdio_printf_init
           21    383: i.am_util_stdio_terminal_clear
           22    414: i.am_util_stdio_vsprintf
           23    439: i.decstr_to_int
           24    455: decstr_to_int
           25    469: i.divu64_10
           26    481: divu64_10
           27    491: i.ftoa
           28    498: ftoa
           29    503: i.ndigits_in_hex
           30    520: ndigits_in_hex
           31    535: i.ndigits_in_i64
           32    552: ndigits_in_i64
           33    567: i.ndigits_in_u64
           34    584: ndigits_in_u64
           35    599: i.padbuffer
           36    611: padbuffer
           37    621: i.simple_strlen
           38    637: simple_strlen
           39    651: i.uint64_to_hexstr
           40    670: uint64_to_hexstr
           41    687: i.uint64_to_str
           42    703: uint64_to_str
           43    717: .bss
           44    722: g_prfbuf
           45    731: g_bTxtXlate
           46    743: ../../../../../devices/am_devices_led.c
           47    783: i.am_devices_led_array_init
           48    811: i.am_devices_led_init
           49    833: i.am_devices_led_off
           50    854: i.am_devices_led_toggle
           51    878: ../keil/startup_keil.s
           52    901: STACK
           53    907: StackMem
           54    916: HEAP
           55    921: HeapMem
           56    929: RESET
           57    935: .text
           58    941: ../am_hal_global.c
           59    960: ../am_bsp.c
           60    972: i.am_bsp_low_power_init
           61    996: i.am_bsp_uart_string_print
           62   1023: ../am_hal_clkgen.c
           63   1042: i.am_hal_clkgen_osc_start
           64   1068: i.am_hal_clkgen_osc_stop
           65   1093: i.am_hal_clkgen_sysclk_get
           66   1120: i.am_hal_clkgen_sysclk_select
           67   1150: ..\am_hal_flash.c
           68   1168: ../am_hal_flash.c
           69   1186: ../am_hal_gpio.c
           70   1203: i.am_hal_gpio_int_clear
           71   1227: i.am_hal_gpio_int_enable
           72   1252: i.am_hal_gpio_out_enable_bit_get
           73   1285: ..\am_hal_interrupt.c
           74   1307: ../am_hal_interrupt.c
           75   1329: i.am_hal_interrupt_enable
           76   1355: ../am_hal_mcuctrl.c
           77   1375: i.am_hal_mcuctrl_bandgap_disable
           78   1408: i.am_hal_mcuctrl_bucks_enable
           79   1438: i.am_hal_mcuctrl_fault_status
           80   1468: i.am_hal_mcuctrl_sram_power_set
           81   1500: ../am_hal_rtc.c
           82   1516: i.am_hal_rtc_alarm_interval_set
           83   1548: i.am_hal_rtc_int_clear
           84   1571: i.am_hal_rtc_int_enable
           85   1595: i.am_hal_rtc_osc_disable
           86   1620: i.am_hal_rtc_osc_enable
           87   1644: i.am_hal_rtc_osc_select
           88   1668: ../am_hal_sysctrl.c
           89   1688: i.am_hal_sysctrl_sleep
           90   1711: ../am_hal_uart.c
           91   1728: i.am_hal_uart_clock_disable
           92   1756: i.am_hal_uart_clock_enable
           93   1783: i.am_hal_uart_config
           94   1804: i.am_hal_uart_disable
           95   1826: i.am_hal_uart_enable
           96   1847: i.am_hal_uart_fifo_config
           97   1873: i.am_hal_uart_string_transmit_polled
           98   1910: ../am_hal_debug.c
           99   1928: ../am_hal_iom.c
          100   1944: ../am_hal_itm.c
          101   1960: ../am_hal_tpiu.c
          102   1977: ../am_hal_vcomp.c
          103   1995: i.am_hal_vcomp_disable
          104   2018: ../am_hal_i2c_bit_bang.c
          105   2043: ../am_hal_queue.c
          106   2061: dc.s
          107   2066: ../clib/memcpset.s
          108   2085: ../clib/heapaux.c
          109   2103: ../clib/angel/startup.s
          110   2127: !!!main
          111   2135: ../fplib/d2f.s
          112   2150: x$fpl$d2f
          113   2160: ../clib/angel/kernel.s
          114   2183: .ARM.Collect$$rtentry$$00000000
          115   2215: ../fplib/dnaninf.s
          116   2234: x$fpl$dnaninf
          117   2248: ../fplib/fretinf.s
          118   2267: x$fpl$fretinf
          119   2281: ../fplib/usenofp.s
          120   2300: x$fpl$usenofp
          121   2314: .ARM.Collect$$rtentry$$00000002
          122   2346: .ARM.Collect$$rtentry$$00000009
          123   2378: .ARM.Collect$$rtentry$$0000000A
          124   2410: .ARM.Collect$$rtentry$$0000000C
          125   2442: .ARM.Collect$$rtentry$$0000000D
          126   2474: .ARM.Collect$$rtentry$$00000004
          127   2506: ../clib/angel/sys.s
          128   2526: ../clib/stdlib.c
          129   2543: ../clib/angel/boardlib.s
          130   2568: ../clib/libinit.s
          131   2586: .ARM.Collect$$libinit$$00000000
          132   2618: .ARM.Collect$$rtexit$$00000000
          133   2649: .ARM.Collect$$libinit$$00000001
          134   2681: .ARM.Collect$$libinit$$00000004
          135   2713: .ARM.Collect$$libinit$$0000000A
          136   2745: .ARM.Collect$$libinit$$0000000C
          137   2777: .ARM.Collect$$libinit$$0000000E
          138   2809: .ARM.Collect$$libinit$$00000011
          139   2841: .ARM.Collect$$libinit$$00000013
          140   2873: .ARM.Collect$$libinit$$00000015
          141   2905: .ARM.Collect$$libinit$$00000017
          142   2937: .ARM.Collect$$libinit$$00000019
          143   2969: .ARM.Collect$$libinit$$0000001B
          144   3001: .ARM.Collect$$libinit$$0000001D
          145   3033: .ARM.Collect$$libinit$$0000001F
          146   3065: .ARM.Collect$$libinit$$00000021
          147   3097: .ARM.Collect$$libinit$$00000023
          148   3129: .ARM.Collect$$libinit$$00000025
          149   3161: .ARM.Collect$$libinit$$0000002C
          150   3193: .ARM.Collect$$libinit$$0000002E
          151   3225: .ARM.Collect$$libinit$$00000030
          152   3257: .ARM.Collect$$libinit$$00000032
          153   3289: .ARM.Collect$$libinit$$00000033
          154   3321: .ARM.Collect$$rtexit$$00000002
          155   3352: .ARM.Collect$$rtexit$$00000003
          156   3383: .ARM.Collect$$rtexit$$00000004
          157   3414: ../clib/armsys.c
          158   3431: ../fplib/fpinit.s
          159   3449: x$fpl$fpinit
          160   3462: ../clib/angel/sysapp.c
          161   3485: .ARM.Collect$$libshutdown$$00000000
          162   3521: ../clib/heapalloc.c
          163   3541: ../clib/signal.c
          164   3558: .ARM.Collect$$libshutdown$$00000002
          165   3594: .ARM.Collect$$libshutdown$$00000004
          166   3630: .ARM.Collect$$libshutdown$$00000007
          167   3666: .ARM.Collect$$libshutdown$$0000000A
          168   3702: .ARM.Collect$$libshutdown$$0000000C
          169   3738: .ARM.Collect$$libshutdown$$0000000F
          170   3774: .ARM.Collect$$libshutdown$$00000010
          171   3810: ../clib/angel/rt.s
          172   3829: ../clib/signal.s
          173   3846: ../clib/angel/scatter.s
          174   3870: !!!scatter
          175   3881: ../clib/angel/handlers.s
          176   3906: !!handler_copy
          177   3921: !!handler_zi
          178   3934: BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2
          179   4120: __ARM_use_no_argv
          180   4138: __Vectors
          181   4148: Reset_Handler
          182   4162: am_nmi_isr
          183   4173: am_memmanage_isr
          184   4190: am_adc_isr
          185   4201: am_brownout_isr
          186   4217: am_ctimer_isr
          187   4231: am_debugmon_isr
          188   4247: am_iomaster0_isr
          189   4264: am_iomaster1_isr
          190   4281: am_ioslave_acc_isr
          191   4300: am_ioslave_ios_isr
          192   4319: am_pendsv_isr
          193   4333: am_svcall_isr
          194   4347: am_systick_isr
          195   4362: am_uart_isr
          196   4374: am_vcomp_isr
          197   4387: am_watchdog_isr
          198   4403: __main
          199   4410: __scatterload
          200   4424: __scatterload_rt2
          201   4442: __scatterload_rt2_thumb_only
          202   4471: __scatterload_null
          203   4490: __scatterload_copy
          204   4509: __scatterload_zeroinit
          205   4532: __rt_lib_init
          206   4546: __rt_lib_init_fp_1
          207   4565: __rt_lib_init_alloca_1
          208   4588: __rt_lib_init_argv_1
          209   4609: __rt_lib_init_atexit_1
          210   4632: __rt_lib_init_clock_1
          211   4654: __rt_lib_init_cpp_1
          212   4674: __rt_lib_init_exceptions_1
          213   4701: __rt_lib_init_fp_trap_1
          214   4725: __rt_lib_init_getenv_1
          215   4748: __rt_lib_init_heap_1
          216   4769: __rt_lib_init_lc_collate_1
          217   4796: __rt_lib_init_lc_ctype_1
          218   4821: __rt_lib_init_lc_monetary_1
          219   4849: __rt_lib_init_lc_numeric_1
          220   4876: __rt_lib_init_lc_time_1
          221   4900: __rt_lib_init_preinit_1
          222   4924: __rt_lib_init_rand_1
          223   4945: __rt_lib_init_return
          224   4966: __rt_lib_init_signal_1
          225   4989: __rt_lib_init_stdio_1
          226   5011: __rt_lib_init_user_alloc_1
          227   5038: __rt_lib_shutdown
          228   5056: __rt_lib_shutdown_cpp_1
          229   5080: __rt_lib_shutdown_fp_trap_1
          230   5108: __rt_lib_shutdown_heap_1
          231   5133: __rt_lib_shutdown_return
          232   5158: __rt_lib_shutdown_signal_1
          233   5185: __rt_lib_shutdown_stdio_1
          234   5211: __rt_lib_shutdown_user_alloc_1
          235   5242: __rt_entry
          236   5253: __rt_entry_presh_1
          237   5272: __rt_entry_sh
          238   5286: __rt_entry_li
          239   5300: __rt_entry_postsh_1
          240   5320: __rt_entry_main
          241   5336: __rt_entry_postli_1
          242   5356: __rt_exit
          243   5366: __rt_exit_ls
          244   5379: __rt_exit_prels_1
          245   5397: __rt_exit_exit
          246   5412: am_fault_isr
          247   5425: getStackedReg
          248   5439: am_hal_flash_delay
          249   5458: am_hal_interrupt_master_enable
          250   5489: am_hal_interrupt_master_disable
          251   5521: am_hal_interrupt_master_set
          252   5549: __user_initial_stackheap
          253   5574: __aeabi_memclr4
          254   5590: __aeabi_memclr8
          255   5606: __rt_memclr_w
          256   5620: _memset_w
          257   5630: __use_two_region_memory
          258   5654: __rt_heap_escrow$2region
          259   5679: __rt_heap_expand$2region
          260   5704: __user_setup_stackheap
          261   5727: exit
          262   5732: __user_libspace
          263   5748: __user_perproc_libspace
          264   5772: __user_perthread_libspace
          265   5798: _sys_exit
          266   5808: __I$use$semihosting
          267   5828: __use_no_semihosting_swi
          268   5853: __semihosting_library_function
          269   5884: am_bsp_low_power_init
          270   5906: am_bsp_uart_string_print
          271   5931: am_clkgen_isr
          272   5945: am_devices_led_array_init
          273   5971: am_devices_led_init
          274   5991: am_devices_led_off
          275   6010: am_devices_led_toggle
          276   6032: am_gpio_isr
          277   6044: am_hal_clkgen_osc_start
          278   6068: am_hal_clkgen_osc_stop
          279   6091: am_hal_clkgen_sysclk_get
          280   6116: am_hal_clkgen_sysclk_select
          281   6144: am_hal_gpio_int_clear
          282   6166: am_hal_gpio_int_enable
          283   6189: am_hal_gpio_out_enable_bit_get
          284   6220: am_hal_interrupt_enable
          285   6244: am_hal_mcuctrl_bandgap_disable
          286   6275: am_hal_mcuctrl_bucks_enable
          287   6303: am_hal_mcuctrl_fault_status
          288   6331: am_hal_mcuctrl_sram_power_set
          289   6361: am_hal_rtc_alarm_interval_set
          290   6391: am_hal_rtc_int_clear
          291   6412: am_hal_rtc_int_enable
          292   6434: am_hal_rtc_osc_disable
          293   6457: am_hal_rtc_osc_enable
          294   6479: am_hal_rtc_osc_select
          295   6501: am_hal_sysctrl_sleep
          296   6522: am_hal_uart_clock_disable
          297   6548: am_hal_uart_clock_enable
          298   6573: am_hal_uart_config
          299   6592: am_hal_uart_disable
          300   6612: am_hal_uart_enable
          301   6631: am_hal_uart_fifo_config
          302   6655: am_hal_uart_string_transmit_polled
          303   6690: am_hal_vcomp_disable
          304   6711: am_util_delay_ms
          305   6728: am_util_faultisr_collect_data
          306   6758: am_util_stdio_printf
          307   6779: am_util_stdio_printf_init
          308   6805: am_util_stdio_terminal_clear
          309   6834: am_util_stdio_vsprintf
          310   6857: main
          311   6862: uart_disable
          312   6875: uart_init
          313   6885: __aeabi_d2f
          314   6897: _d2f
          315   6902: __fpl_dnaninf
          316   6916: _fp_init
          317   6925: __fplib_config_fpu_vfp
          318   6948: __fplib_config_pureend_doubles
          319   6979: __fpl_fretinf
          320   6993: __I$use$fp
          321   7004: Region$$Table$$Base
          322   7024: Region$$Table$$Limit
          323   7045: g_sUartConfig
          324   7059: g_pfnCharPrint
          325   7074: g_ui32HALflags
          326   7089: am_bsp_psLEDs
          327   7103: __libspace_start
          328   7120: __temporary_stack_top$libspace
          329   7151: 


** Section #13 '.note' (SHT_NOTE)
    Size   : 28 bytes (alignment 4)


** Section #14 '.comment' (SHT_PROGBITS)
    Size   : 14664 bytes


** Section #15 '.shstrtab' (SHT_STRTAB)
    Size   : 148 bytes

            #  Offset String
        ====================================

            1      1: FLASH
            2      7: SRAM
            3     12: .debug_abbrev
            4     26: .debug_frame
            5     39: .debug_info
            6     51: .debug_line
            7     63: .debug_loc
            8     74: .debug_macinfo
            9     89: .debug_pubnames
           10    105: .symtab
           11    113: .strtab
           12    121: .note
           13    127: .comment
           14    136: .shstrtab
           15    146: 
           16    147: 


